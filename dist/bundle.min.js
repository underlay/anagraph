/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.tsx");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack:///./node_modules/base64-js/index.js?");

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/buffer/index.js?");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack:///./node_modules/ieee754/index.js?");

/***/ }),

/***/ "./node_modules/immutable/dist/immutable.es.js":
/*!*****************************************************!*\
  !*** ./node_modules/immutable/dist/immutable.es.js ***!
  \*****************************************************/
/*! exports provided: default, version, Collection, Iterable, Seq, Map, OrderedMap, List, Stack, Set, OrderedSet, Record, Range, Repeat, is, fromJS, hash, isImmutable, isCollection, isKeyed, isIndexed, isAssociative, isOrdered, isValueObject, get, getIn, has, hasIn, merge, mergeDeep, mergeWith, mergeDeepWith, remove, removeIn, set, setIn, update, updateIn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"version\", function() { return version; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Collection\", function() { return Collection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Iterable\", function() { return Iterable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Seq\", function() { return Seq; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Map\", function() { return Map; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrderedMap\", function() { return OrderedMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"List\", function() { return List; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Stack\", function() { return Stack; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Set\", function() { return Set; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrderedSet\", function() { return OrderedSet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Record\", function() { return Record; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Range\", function() { return Range; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Repeat\", function() { return Repeat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"is\", function() { return is; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromJS\", function() { return fromJS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hash\", function() { return hash; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isImmutable\", function() { return isImmutable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isCollection\", function() { return isCollection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isKeyed\", function() { return isKeyed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isIndexed\", function() { return isIndexed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isAssociative\", function() { return isAssociative; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isOrdered\", function() { return isOrdered; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isValueObject\", function() { return isValueObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return get; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getIn\", function() { return getIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"has\", function() { return has; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasIn\", function() { return hasIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"merge\", function() { return merge$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mergeDeep\", function() { return mergeDeep; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mergeWith\", function() { return mergeWith$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mergeDeepWith\", function() { return mergeDeepWith; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"remove\", function() { return remove; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeIn\", function() { return removeIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return set; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setIn\", function() { return setIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"update\", function() { return update; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateIn\", function() { return updateIn; });\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// Used for setting prototype methods that IE8 chokes on.\nvar DELETE = 'delete';\n\n// Constants describing the size of trie nodes.\nvar SHIFT = 5; // Resulted in best performance after ______?\nvar SIZE = 1 << SHIFT;\nvar MASK = SIZE - 1;\n\n// A consistent shared value representing \"not set\" which equals nothing other\n// than itself, and nothing that could be provided externally.\nvar NOT_SET = {};\n\n// Boolean references, Rough equivalent of `bool &`.\nfunction MakeRef() {\n  return { value: false };\n}\n\nfunction SetRef(ref) {\n  if (ref) {\n    ref.value = true;\n  }\n}\n\n// A function which returns a value representing an \"owner\" for transient writes\n// to tries. The return value will only ever equal itself, and will not equal\n// the return of any subsequent call of this function.\nfunction OwnerID() {}\n\nfunction ensureSize(iter) {\n  if (iter.size === undefined) {\n    iter.size = iter.__iterate(returnTrue);\n  }\n  return iter.size;\n}\n\nfunction wrapIndex(iter, index) {\n  // This implements \"is array index\" which the ECMAString spec defines as:\n  //\n  //     A String property name P is an array index if and only if\n  //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n  //     to 2^32−1.\n  //\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n  if (typeof index !== 'number') {\n    var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n    if ('' + uint32Index !== index || uint32Index === 4294967295) {\n      return NaN;\n    }\n    index = uint32Index;\n  }\n  return index < 0 ? ensureSize(iter) + index : index;\n}\n\nfunction returnTrue() {\n  return true;\n}\n\nfunction wholeSlice(begin, end, size) {\n  return (\n    ((begin === 0 && !isNeg(begin)) ||\n      (size !== undefined && begin <= -size)) &&\n    (end === undefined || (size !== undefined && end >= size))\n  );\n}\n\nfunction resolveBegin(begin, size) {\n  return resolveIndex(begin, size, 0);\n}\n\nfunction resolveEnd(end, size) {\n  return resolveIndex(end, size, size);\n}\n\nfunction resolveIndex(index, size, defaultIndex) {\n  // Sanitize indices using this shorthand for ToInt32(argument)\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n  return index === undefined\n    ? defaultIndex\n    : isNeg(index)\n      ? size === Infinity\n        ? size\n        : Math.max(0, size + index) | 0\n      : size === undefined || size === index\n        ? index\n        : Math.min(size, index) | 0;\n}\n\nfunction isNeg(value) {\n  // Account for -0 which is negative, but not less than 0.\n  return value < 0 || (value === 0 && 1 / value === -Infinity);\n}\n\n// Note: value is unchanged to not break immutable-devtools.\nvar IS_COLLECTION_SYMBOL = '@@__IMMUTABLE_ITERABLE__@@';\n\nfunction isCollection(maybeCollection) {\n  return Boolean(maybeCollection && maybeCollection[IS_COLLECTION_SYMBOL]);\n}\n\nvar IS_KEYED_SYMBOL = '@@__IMMUTABLE_KEYED__@@';\n\nfunction isKeyed(maybeKeyed) {\n  return Boolean(maybeKeyed && maybeKeyed[IS_KEYED_SYMBOL]);\n}\n\nvar IS_INDEXED_SYMBOL = '@@__IMMUTABLE_INDEXED__@@';\n\nfunction isIndexed(maybeIndexed) {\n  return Boolean(maybeIndexed && maybeIndexed[IS_INDEXED_SYMBOL]);\n}\n\nfunction isAssociative(maybeAssociative) {\n  return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n}\n\nvar Collection = function Collection(value) {\n  return isCollection(value) ? value : Seq(value);\n};\n\nvar KeyedCollection = /*@__PURE__*/(function (Collection) {\n  function KeyedCollection(value) {\n    return isKeyed(value) ? value : KeyedSeq(value);\n  }\n\n  if ( Collection ) KeyedCollection.__proto__ = Collection;\n  KeyedCollection.prototype = Object.create( Collection && Collection.prototype );\n  KeyedCollection.prototype.constructor = KeyedCollection;\n\n  return KeyedCollection;\n}(Collection));\n\nvar IndexedCollection = /*@__PURE__*/(function (Collection) {\n  function IndexedCollection(value) {\n    return isIndexed(value) ? value : IndexedSeq(value);\n  }\n\n  if ( Collection ) IndexedCollection.__proto__ = Collection;\n  IndexedCollection.prototype = Object.create( Collection && Collection.prototype );\n  IndexedCollection.prototype.constructor = IndexedCollection;\n\n  return IndexedCollection;\n}(Collection));\n\nvar SetCollection = /*@__PURE__*/(function (Collection) {\n  function SetCollection(value) {\n    return isCollection(value) && !isAssociative(value) ? value : SetSeq(value);\n  }\n\n  if ( Collection ) SetCollection.__proto__ = Collection;\n  SetCollection.prototype = Object.create( Collection && Collection.prototype );\n  SetCollection.prototype.constructor = SetCollection;\n\n  return SetCollection;\n}(Collection));\n\nCollection.Keyed = KeyedCollection;\nCollection.Indexed = IndexedCollection;\nCollection.Set = SetCollection;\n\nvar IS_SEQ_SYMBOL = '@@__IMMUTABLE_SEQ__@@';\n\nfunction isSeq(maybeSeq) {\n  return Boolean(maybeSeq && maybeSeq[IS_SEQ_SYMBOL]);\n}\n\nvar IS_RECORD_SYMBOL = '@@__IMMUTABLE_RECORD__@@';\n\nfunction isRecord(maybeRecord) {\n  return Boolean(maybeRecord && maybeRecord[IS_RECORD_SYMBOL]);\n}\n\nfunction isImmutable(maybeImmutable) {\n  return isCollection(maybeImmutable) || isRecord(maybeImmutable);\n}\n\nvar IS_ORDERED_SYMBOL = '@@__IMMUTABLE_ORDERED__@@';\n\nfunction isOrdered(maybeOrdered) {\n  return Boolean(maybeOrdered && maybeOrdered[IS_ORDERED_SYMBOL]);\n}\n\nvar ITERATE_KEYS = 0;\nvar ITERATE_VALUES = 1;\nvar ITERATE_ENTRIES = 2;\n\nvar REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nvar ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\nvar Iterator = function Iterator(next) {\n  this.next = next;\n};\n\nIterator.prototype.toString = function toString () {\n  return '[Iterator]';\n};\n\nIterator.KEYS = ITERATE_KEYS;\nIterator.VALUES = ITERATE_VALUES;\nIterator.ENTRIES = ITERATE_ENTRIES;\n\nIterator.prototype.inspect = Iterator.prototype.toSource = function() {\n  return this.toString();\n};\nIterator.prototype[ITERATOR_SYMBOL] = function() {\n  return this;\n};\n\nfunction iteratorValue(type, k, v, iteratorResult) {\n  var value = type === 0 ? k : type === 1 ? v : [k, v];\n  iteratorResult\n    ? (iteratorResult.value = value)\n    : (iteratorResult = {\n        value: value,\n        done: false,\n      });\n  return iteratorResult;\n}\n\nfunction iteratorDone() {\n  return { value: undefined, done: true };\n}\n\nfunction hasIterator(maybeIterable) {\n  return !!getIteratorFn(maybeIterable);\n}\n\nfunction isIterator(maybeIterator) {\n  return maybeIterator && typeof maybeIterator.next === 'function';\n}\n\nfunction getIterator(iterable) {\n  var iteratorFn = getIteratorFn(iterable);\n  return iteratorFn && iteratorFn.call(iterable);\n}\n\nfunction getIteratorFn(iterable) {\n  var iteratorFn =\n    iterable &&\n    ((REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isArrayLike(value) {\n  if (Array.isArray(value) || typeof value === 'string') {\n    return true;\n  }\n\n  return (\n    value &&\n    typeof value === 'object' &&\n    Number.isInteger(value.length) &&\n    value.length >= 0 &&\n    (value.length === 0\n      ? // Only {length: 0} is considered Array-like.\n        Object.keys(value).length === 1\n      : // An object is only Array-like if it has a property where the last value\n        // in the array-like may be found (which could be undefined).\n        value.hasOwnProperty(value.length - 1))\n  );\n}\n\nvar Seq = /*@__PURE__*/(function (Collection$$1) {\n  function Seq(value) {\n    return value === null || value === undefined\n      ? emptySequence()\n      : isImmutable(value)\n        ? value.toSeq()\n        : seqFromValue(value);\n  }\n\n  if ( Collection$$1 ) Seq.__proto__ = Collection$$1;\n  Seq.prototype = Object.create( Collection$$1 && Collection$$1.prototype );\n  Seq.prototype.constructor = Seq;\n\n  Seq.prototype.toSeq = function toSeq () {\n    return this;\n  };\n\n  Seq.prototype.toString = function toString () {\n    return this.__toString('Seq {', '}');\n  };\n\n  Seq.prototype.cacheResult = function cacheResult () {\n    if (!this._cache && this.__iterateUncached) {\n      this._cache = this.entrySeq().toArray();\n      this.size = this._cache.length;\n    }\n    return this;\n  };\n\n  // abstract __iterateUncached(fn, reverse)\n\n  Seq.prototype.__iterate = function __iterate (fn, reverse) {\n    var cache = this._cache;\n    if (cache) {\n      var size = cache.length;\n      var i = 0;\n      while (i !== size) {\n        var entry = cache[reverse ? size - ++i : i++];\n        if (fn(entry[1], entry[0], this) === false) {\n          break;\n        }\n      }\n      return i;\n    }\n    return this.__iterateUncached(fn, reverse);\n  };\n\n  // abstract __iteratorUncached(type, reverse)\n\n  Seq.prototype.__iterator = function __iterator (type, reverse) {\n    var cache = this._cache;\n    if (cache) {\n      var size = cache.length;\n      var i = 0;\n      return new Iterator(function () {\n        if (i === size) {\n          return iteratorDone();\n        }\n        var entry = cache[reverse ? size - ++i : i++];\n        return iteratorValue(type, entry[0], entry[1]);\n      });\n    }\n    return this.__iteratorUncached(type, reverse);\n  };\n\n  return Seq;\n}(Collection));\n\nvar KeyedSeq = /*@__PURE__*/(function (Seq) {\n  function KeyedSeq(value) {\n    return value === null || value === undefined\n      ? emptySequence().toKeyedSeq()\n      : isCollection(value)\n        ? isKeyed(value)\n          ? value.toSeq()\n          : value.fromEntrySeq()\n        : isRecord(value)\n          ? value.toSeq()\n          : keyedSeqFromValue(value);\n  }\n\n  if ( Seq ) KeyedSeq.__proto__ = Seq;\n  KeyedSeq.prototype = Object.create( Seq && Seq.prototype );\n  KeyedSeq.prototype.constructor = KeyedSeq;\n\n  KeyedSeq.prototype.toKeyedSeq = function toKeyedSeq () {\n    return this;\n  };\n\n  return KeyedSeq;\n}(Seq));\n\nvar IndexedSeq = /*@__PURE__*/(function (Seq) {\n  function IndexedSeq(value) {\n    return value === null || value === undefined\n      ? emptySequence()\n      : isCollection(value)\n        ? isKeyed(value)\n          ? value.entrySeq()\n          : value.toIndexedSeq()\n        : isRecord(value)\n          ? value.toSeq().entrySeq()\n          : indexedSeqFromValue(value);\n  }\n\n  if ( Seq ) IndexedSeq.__proto__ = Seq;\n  IndexedSeq.prototype = Object.create( Seq && Seq.prototype );\n  IndexedSeq.prototype.constructor = IndexedSeq;\n\n  IndexedSeq.of = function of (/*...values*/) {\n    return IndexedSeq(arguments);\n  };\n\n  IndexedSeq.prototype.toIndexedSeq = function toIndexedSeq () {\n    return this;\n  };\n\n  IndexedSeq.prototype.toString = function toString () {\n    return this.__toString('Seq [', ']');\n  };\n\n  return IndexedSeq;\n}(Seq));\n\nvar SetSeq = /*@__PURE__*/(function (Seq) {\n  function SetSeq(value) {\n    return (isCollection(value) && !isAssociative(value)\n      ? value\n      : IndexedSeq(value)\n    ).toSetSeq();\n  }\n\n  if ( Seq ) SetSeq.__proto__ = Seq;\n  SetSeq.prototype = Object.create( Seq && Seq.prototype );\n  SetSeq.prototype.constructor = SetSeq;\n\n  SetSeq.of = function of (/*...values*/) {\n    return SetSeq(arguments);\n  };\n\n  SetSeq.prototype.toSetSeq = function toSetSeq () {\n    return this;\n  };\n\n  return SetSeq;\n}(Seq));\n\nSeq.isSeq = isSeq;\nSeq.Keyed = KeyedSeq;\nSeq.Set = SetSeq;\nSeq.Indexed = IndexedSeq;\n\nSeq.prototype[IS_SEQ_SYMBOL] = true;\n\n// #pragma Root Sequences\n\nvar ArraySeq = /*@__PURE__*/(function (IndexedSeq) {\n  function ArraySeq(array) {\n    this._array = array;\n    this.size = array.length;\n  }\n\n  if ( IndexedSeq ) ArraySeq.__proto__ = IndexedSeq;\n  ArraySeq.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );\n  ArraySeq.prototype.constructor = ArraySeq;\n\n  ArraySeq.prototype.get = function get (index, notSetValue) {\n    return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n  };\n\n  ArraySeq.prototype.__iterate = function __iterate (fn, reverse) {\n    var array = this._array;\n    var size = array.length;\n    var i = 0;\n    while (i !== size) {\n      var ii = reverse ? size - ++i : i++;\n      if (fn(array[ii], ii, this) === false) {\n        break;\n      }\n    }\n    return i;\n  };\n\n  ArraySeq.prototype.__iterator = function __iterator (type, reverse) {\n    var array = this._array;\n    var size = array.length;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n      var ii = reverse ? size - ++i : i++;\n      return iteratorValue(type, ii, array[ii]);\n    });\n  };\n\n  return ArraySeq;\n}(IndexedSeq));\n\nvar ObjectSeq = /*@__PURE__*/(function (KeyedSeq) {\n  function ObjectSeq(object) {\n    var keys = Object.keys(object);\n    this._object = object;\n    this._keys = keys;\n    this.size = keys.length;\n  }\n\n  if ( KeyedSeq ) ObjectSeq.__proto__ = KeyedSeq;\n  ObjectSeq.prototype = Object.create( KeyedSeq && KeyedSeq.prototype );\n  ObjectSeq.prototype.constructor = ObjectSeq;\n\n  ObjectSeq.prototype.get = function get (key, notSetValue) {\n    if (notSetValue !== undefined && !this.has(key)) {\n      return notSetValue;\n    }\n    return this._object[key];\n  };\n\n  ObjectSeq.prototype.has = function has (key) {\n    return hasOwnProperty.call(this._object, key);\n  };\n\n  ObjectSeq.prototype.__iterate = function __iterate (fn, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var size = keys.length;\n    var i = 0;\n    while (i !== size) {\n      var key = keys[reverse ? size - ++i : i++];\n      if (fn(object[key], key, this) === false) {\n        break;\n      }\n    }\n    return i;\n  };\n\n  ObjectSeq.prototype.__iterator = function __iterator (type, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var size = keys.length;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n      var key = keys[reverse ? size - ++i : i++];\n      return iteratorValue(type, key, object[key]);\n    });\n  };\n\n  return ObjectSeq;\n}(KeyedSeq));\nObjectSeq.prototype[IS_ORDERED_SYMBOL] = true;\n\nvar CollectionSeq = /*@__PURE__*/(function (IndexedSeq) {\n  function CollectionSeq(collection) {\n    this._collection = collection;\n    this.size = collection.length || collection.size;\n  }\n\n  if ( IndexedSeq ) CollectionSeq.__proto__ = IndexedSeq;\n  CollectionSeq.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );\n  CollectionSeq.prototype.constructor = CollectionSeq;\n\n  CollectionSeq.prototype.__iterateUncached = function __iterateUncached (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var collection = this._collection;\n    var iterator = getIterator(collection);\n    var iterations = 0;\n    if (isIterator(iterator)) {\n      var step;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n    }\n    return iterations;\n  };\n\n  CollectionSeq.prototype.__iteratorUncached = function __iteratorUncached (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var collection = this._collection;\n    var iterator = getIterator(collection);\n    if (!isIterator(iterator)) {\n      return new Iterator(iteratorDone);\n    }\n    var iterations = 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value);\n    });\n  };\n\n  return CollectionSeq;\n}(IndexedSeq));\n\n// # pragma Helper functions\n\nvar EMPTY_SEQ;\n\nfunction emptySequence() {\n  return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n}\n\nfunction keyedSeqFromValue(value) {\n  var seq = Array.isArray(value)\n    ? new ArraySeq(value)\n    : hasIterator(value)\n      ? new CollectionSeq(value)\n      : undefined;\n  if (seq) {\n    return seq.fromEntrySeq();\n  }\n  if (typeof value === 'object') {\n    return new ObjectSeq(value);\n  }\n  throw new TypeError(\n    'Expected Array or collection object of [k, v] entries, or keyed object: ' +\n      value\n  );\n}\n\nfunction indexedSeqFromValue(value) {\n  var seq = maybeIndexedSeqFromValue(value);\n  if (seq) {\n    return seq;\n  }\n  throw new TypeError(\n    'Expected Array or collection object of values: ' + value\n  );\n}\n\nfunction seqFromValue(value) {\n  var seq = maybeIndexedSeqFromValue(value);\n  if (seq) {\n    return seq;\n  }\n  if (typeof value === 'object') {\n    return new ObjectSeq(value);\n  }\n  throw new TypeError(\n    'Expected Array or collection object of values, or keyed object: ' + value\n  );\n}\n\nfunction maybeIndexedSeqFromValue(value) {\n  return isArrayLike(value)\n    ? new ArraySeq(value)\n    : hasIterator(value)\n      ? new CollectionSeq(value)\n      : undefined;\n}\n\nvar IS_MAP_SYMBOL = '@@__IMMUTABLE_MAP__@@';\n\nfunction isMap(maybeMap) {\n  return Boolean(maybeMap && maybeMap[IS_MAP_SYMBOL]);\n}\n\nfunction isOrderedMap(maybeOrderedMap) {\n  return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n}\n\nfunction isValueObject(maybeValue) {\n  return Boolean(\n    maybeValue &&\n      typeof maybeValue.equals === 'function' &&\n      typeof maybeValue.hashCode === 'function'\n  );\n}\n\n/**\n * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n *\n * NaN is considered the same as NaN, however -0 and 0 are considered the same\n * value, which is different from the algorithm described by\n * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n *\n * This is extended further to allow Objects to describe the values they\n * represent, by way of `valueOf` or `equals` (and `hashCode`).\n *\n * Note: because of this extension, the key equality of Immutable.Map and the\n * value equality of Immutable.Set will differ from ES6 Map and Set.\n *\n * ### Defining custom values\n *\n * The easiest way to describe the value an object represents is by implementing\n * `valueOf`. For example, `Date` represents a value by returning a unix\n * timestamp for `valueOf`:\n *\n *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n *     var date2 = new Date(1234567890000);\n *     date1.valueOf(); // 1234567890000\n *     assert( date1 !== date2 );\n *     assert( Immutable.is( date1, date2 ) );\n *\n * Note: overriding `valueOf` may have other implications if you use this object\n * where JavaScript expects a primitive, such as implicit string coercion.\n *\n * For more complex types, especially collections, implementing `valueOf` may\n * not be performant. An alternative is to implement `equals` and `hashCode`.\n *\n * `equals` takes another object, presumably of similar type, and returns true\n * if it is equal. Equality is symmetrical, so the same result should be\n * returned if this and the argument are flipped.\n *\n *     assert( a.equals(b) === b.equals(a) );\n *\n * `hashCode` returns a 32bit integer number representing the object which will\n * be used to determine how to store the value object in a Map or Set. You must\n * provide both or neither methods, one must not exist without the other.\n *\n * Also, an important relationship between these methods must be upheld: if two\n * values are equal, they *must* return the same hashCode. If the values are not\n * equal, they might have the same hashCode; this is called a hash collision,\n * and while undesirable for performance reasons, it is acceptable.\n *\n *     if (a.equals(b)) {\n *       assert( a.hashCode() === b.hashCode() );\n *     }\n *\n * All Immutable collections are Value Objects: they implement `equals()`\n * and `hashCode()`.\n */\nfunction is(valueA, valueB) {\n  if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n    return true;\n  }\n  if (!valueA || !valueB) {\n    return false;\n  }\n  if (\n    typeof valueA.valueOf === 'function' &&\n    typeof valueB.valueOf === 'function'\n  ) {\n    valueA = valueA.valueOf();\n    valueB = valueB.valueOf();\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n  }\n  return !!(\n    isValueObject(valueA) &&\n    isValueObject(valueB) &&\n    valueA.equals(valueB)\n  );\n}\n\nvar imul =\n  typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2\n    ? Math.imul\n    : function imul(a, b) {\n        a |= 0; // int\n        b |= 0; // int\n        var c = a & 0xffff;\n        var d = b & 0xffff;\n        // Shift by 0 fixes the sign on the high part.\n        return (c * d + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0)) | 0; // int\n      };\n\n// v8 has an optimization for storing 31-bit signed numbers.\n// Values which have either 00 or 11 as the high order bits qualify.\n// This function drops the highest order bit in a signed number, maintaining\n// the sign bit.\nfunction smi(i32) {\n  return ((i32 >>> 1) & 0x40000000) | (i32 & 0xbfffffff);\n}\n\nvar defaultValueOf = Object.prototype.valueOf;\n\nfunction hash(o) {\n  switch (typeof o) {\n    case 'boolean':\n      // The hash values for built-in constants are a 1 value for each 5-byte\n      // shift region expect for the first, which encodes the value. This\n      // reduces the odds of a hash collision for these common values.\n      return o ? 0x42108421 : 0x42108420;\n    case 'number':\n      return hashNumber(o);\n    case 'string':\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN\n        ? cachedHashString(o)\n        : hashString(o);\n    case 'object':\n    case 'function':\n      if (o === null) {\n        return 0x42108422;\n      }\n      if (typeof o.hashCode === 'function') {\n        // Drop any high bits from accidentally long hash codes.\n        return smi(o.hashCode(o));\n      }\n      if (o.valueOf !== defaultValueOf && typeof o.valueOf === 'function') {\n        o = o.valueOf(o);\n      }\n      return hashJSObj(o);\n    case 'undefined':\n      return 0x42108423;\n    default:\n      if (typeof o.toString === 'function') {\n        return hashString(o.toString());\n      }\n      throw new Error('Value type ' + typeof o + ' cannot be hashed.');\n  }\n}\n\n// Compress arbitrarily large numbers into smi hashes.\nfunction hashNumber(n) {\n  if (n !== n || n === Infinity) {\n    return 0;\n  }\n  var hash = n | 0;\n  if (hash !== n) {\n    hash ^= n * 0xffffffff;\n  }\n  while (n > 0xffffffff) {\n    n /= 0xffffffff;\n    hash ^= n;\n  }\n  return smi(hash);\n}\n\nfunction cachedHashString(string) {\n  var hashed = stringHashCache[string];\n  if (hashed === undefined) {\n    hashed = hashString(string);\n    if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n      STRING_HASH_CACHE_SIZE = 0;\n      stringHashCache = {};\n    }\n    STRING_HASH_CACHE_SIZE++;\n    stringHashCache[string] = hashed;\n  }\n  return hashed;\n}\n\n// http://jsperf.com/hashing-strings\nfunction hashString(string) {\n  // This is the hash from JVM\n  // The hash code for a string is computed as\n  // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n  // where s[i] is the ith character of the string and n is the length of\n  // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n  // (exclusive) by dropping high bits.\n  var hashed = 0;\n  for (var ii = 0; ii < string.length; ii++) {\n    hashed = (31 * hashed + string.charCodeAt(ii)) | 0;\n  }\n  return smi(hashed);\n}\n\nfunction hashJSObj(obj) {\n  var hashed;\n  if (usingWeakMap) {\n    hashed = weakMap.get(obj);\n    if (hashed !== undefined) {\n      return hashed;\n    }\n  }\n\n  hashed = obj[UID_HASH_KEY];\n  if (hashed !== undefined) {\n    return hashed;\n  }\n\n  if (!canDefineProperty) {\n    hashed = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n    if (hashed !== undefined) {\n      return hashed;\n    }\n\n    hashed = getIENodeHash(obj);\n    if (hashed !== undefined) {\n      return hashed;\n    }\n  }\n\n  hashed = ++objHashUID;\n  if (objHashUID & 0x40000000) {\n    objHashUID = 0;\n  }\n\n  if (usingWeakMap) {\n    weakMap.set(obj, hashed);\n  } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n    throw new Error('Non-extensible objects are not allowed as keys.');\n  } else if (canDefineProperty) {\n    Object.defineProperty(obj, UID_HASH_KEY, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: hashed,\n    });\n  } else if (\n    obj.propertyIsEnumerable !== undefined &&\n    obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable\n  ) {\n    // Since we can't define a non-enumerable property on the object\n    // we'll hijack one of the less-used non-enumerable properties to\n    // save our hash on it. Since this is a function it will not show up in\n    // `JSON.stringify` which is what we want.\n    obj.propertyIsEnumerable = function() {\n      return this.constructor.prototype.propertyIsEnumerable.apply(\n        this,\n        arguments\n      );\n    };\n    obj.propertyIsEnumerable[UID_HASH_KEY] = hashed;\n  } else if (obj.nodeType !== undefined) {\n    // At this point we couldn't get the IE `uniqueID` to use as a hash\n    // and we couldn't use a non-enumerable property to exploit the\n    // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n    // itself.\n    obj[UID_HASH_KEY] = hashed;\n  } else {\n    throw new Error('Unable to set a non-enumerable property on object.');\n  }\n\n  return hashed;\n}\n\n// Get references to ES5 object methods.\nvar isExtensible = Object.isExtensible;\n\n// True if Object.defineProperty works as expected. IE8 fails this test.\nvar canDefineProperty = (function() {\n  try {\n    Object.defineProperty({}, '@', {});\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n// IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n// and avoid memory leaks from the IE cloneNode bug.\nfunction getIENodeHash(node) {\n  if (node && node.nodeType > 0) {\n    switch (node.nodeType) {\n      case 1: // Element\n        return node.uniqueID;\n      case 9: // Document\n        return node.documentElement && node.documentElement.uniqueID;\n    }\n  }\n}\n\n// If possible, use a WeakMap.\nvar usingWeakMap = typeof WeakMap === 'function';\nvar weakMap;\nif (usingWeakMap) {\n  weakMap = new WeakMap();\n}\n\nvar objHashUID = 0;\n\nvar UID_HASH_KEY = '__immutablehash__';\nif (typeof Symbol === 'function') {\n  UID_HASH_KEY = Symbol(UID_HASH_KEY);\n}\n\nvar STRING_HASH_CACHE_MIN_STRLEN = 16;\nvar STRING_HASH_CACHE_MAX_SIZE = 255;\nvar STRING_HASH_CACHE_SIZE = 0;\nvar stringHashCache = {};\n\nvar ToKeyedSequence = /*@__PURE__*/(function (KeyedSeq$$1) {\n  function ToKeyedSequence(indexed, useKeys) {\n    this._iter = indexed;\n    this._useKeys = useKeys;\n    this.size = indexed.size;\n  }\n\n  if ( KeyedSeq$$1 ) ToKeyedSequence.__proto__ = KeyedSeq$$1;\n  ToKeyedSequence.prototype = Object.create( KeyedSeq$$1 && KeyedSeq$$1.prototype );\n  ToKeyedSequence.prototype.constructor = ToKeyedSequence;\n\n  ToKeyedSequence.prototype.get = function get (key, notSetValue) {\n    return this._iter.get(key, notSetValue);\n  };\n\n  ToKeyedSequence.prototype.has = function has (key) {\n    return this._iter.has(key);\n  };\n\n  ToKeyedSequence.prototype.valueSeq = function valueSeq () {\n    return this._iter.valueSeq();\n  };\n\n  ToKeyedSequence.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var reversedSequence = reverseFactory(this, true);\n    if (!this._useKeys) {\n      reversedSequence.valueSeq = function () { return this$1._iter.toSeq().reverse(); };\n    }\n    return reversedSequence;\n  };\n\n  ToKeyedSequence.prototype.map = function map (mapper, context) {\n    var this$1 = this;\n\n    var mappedSequence = mapFactory(this, mapper, context);\n    if (!this._useKeys) {\n      mappedSequence.valueSeq = function () { return this$1._iter.toSeq().map(mapper, context); };\n    }\n    return mappedSequence;\n  };\n\n  ToKeyedSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1 = this;\n\n    return this._iter.__iterate(function (v, k) { return fn(v, k, this$1); }, reverse);\n  };\n\n  ToKeyedSequence.prototype.__iterator = function __iterator (type, reverse) {\n    return this._iter.__iterator(type, reverse);\n  };\n\n  return ToKeyedSequence;\n}(KeyedSeq));\nToKeyedSequence.prototype[IS_ORDERED_SYMBOL] = true;\n\nvar ToIndexedSequence = /*@__PURE__*/(function (IndexedSeq$$1) {\n  function ToIndexedSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  if ( IndexedSeq$$1 ) ToIndexedSequence.__proto__ = IndexedSeq$$1;\n  ToIndexedSequence.prototype = Object.create( IndexedSeq$$1 && IndexedSeq$$1.prototype );\n  ToIndexedSequence.prototype.constructor = ToIndexedSequence;\n\n  ToIndexedSequence.prototype.includes = function includes (value) {\n    return this._iter.includes(value);\n  };\n\n  ToIndexedSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1 = this;\n\n    var i = 0;\n    reverse && ensureSize(this);\n    return this._iter.__iterate(\n      function (v) { return fn(v, reverse ? this$1.size - ++i : i++, this$1); },\n      reverse\n    );\n  };\n\n  ToIndexedSequence.prototype.__iterator = function __iterator (type, reverse) {\n    var this$1 = this;\n\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    var i = 0;\n    reverse && ensureSize(this);\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done\n        ? step\n        : iteratorValue(\n            type,\n            reverse ? this$1.size - ++i : i++,\n            step.value,\n            step\n          );\n    });\n  };\n\n  return ToIndexedSequence;\n}(IndexedSeq));\n\nvar ToSetSequence = /*@__PURE__*/(function (SetSeq$$1) {\n  function ToSetSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  if ( SetSeq$$1 ) ToSetSequence.__proto__ = SetSeq$$1;\n  ToSetSequence.prototype = Object.create( SetSeq$$1 && SetSeq$$1.prototype );\n  ToSetSequence.prototype.constructor = ToSetSequence;\n\n  ToSetSequence.prototype.has = function has (key) {\n    return this._iter.includes(key);\n  };\n\n  ToSetSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1 = this;\n\n    return this._iter.__iterate(function (v) { return fn(v, v, this$1); }, reverse);\n  };\n\n  ToSetSequence.prototype.__iterator = function __iterator (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done\n        ? step\n        : iteratorValue(type, step.value, step.value, step);\n    });\n  };\n\n  return ToSetSequence;\n}(SetSeq));\n\nvar FromEntriesSequence = /*@__PURE__*/(function (KeyedSeq$$1) {\n  function FromEntriesSequence(entries) {\n    this._iter = entries;\n    this.size = entries.size;\n  }\n\n  if ( KeyedSeq$$1 ) FromEntriesSequence.__proto__ = KeyedSeq$$1;\n  FromEntriesSequence.prototype = Object.create( KeyedSeq$$1 && KeyedSeq$$1.prototype );\n  FromEntriesSequence.prototype.constructor = FromEntriesSequence;\n\n  FromEntriesSequence.prototype.entrySeq = function entrySeq () {\n    return this._iter.toSeq();\n  };\n\n  FromEntriesSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1 = this;\n\n    return this._iter.__iterate(function (entry) {\n      // Check if entry exists first so array access doesn't throw for holes\n      // in the parent iteration.\n      if (entry) {\n        validateEntry(entry);\n        var indexedCollection = isCollection(entry);\n        return fn(\n          indexedCollection ? entry.get(1) : entry[1],\n          indexedCollection ? entry.get(0) : entry[0],\n          this$1\n        );\n      }\n    }, reverse);\n  };\n\n  FromEntriesSequence.prototype.__iterator = function __iterator (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedCollection = isCollection(entry);\n          return iteratorValue(\n            type,\n            indexedCollection ? entry.get(0) : entry[0],\n            indexedCollection ? entry.get(1) : entry[1],\n            step\n          );\n        }\n      }\n    });\n  };\n\n  return FromEntriesSequence;\n}(KeyedSeq));\n\nToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;\n\nfunction flipFactory(collection) {\n  var flipSequence = makeSequence(collection);\n  flipSequence._iter = collection;\n  flipSequence.size = collection.size;\n  flipSequence.flip = function () { return collection; };\n  flipSequence.reverse = function() {\n    var reversedSequence = collection.reverse.apply(this); // super.reverse()\n    reversedSequence.flip = function () { return collection.reverse(); };\n    return reversedSequence;\n  };\n  flipSequence.has = function (key) { return collection.includes(key); };\n  flipSequence.includes = function (key) { return collection.has(key); };\n  flipSequence.cacheResult = cacheResultThrough;\n  flipSequence.__iterateUncached = function(fn, reverse) {\n    var this$1 = this;\n\n    return collection.__iterate(function (v, k) { return fn(k, v, this$1) !== false; }, reverse);\n  };\n  flipSequence.__iteratorUncached = function(type, reverse) {\n    if (type === ITERATE_ENTRIES) {\n      var iterator = collection.__iterator(type, reverse);\n      return new Iterator(function () {\n        var step = iterator.next();\n        if (!step.done) {\n          var k = step.value[0];\n          step.value[0] = step.value[1];\n          step.value[1] = k;\n        }\n        return step;\n      });\n    }\n    return collection.__iterator(\n      type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n      reverse\n    );\n  };\n  return flipSequence;\n}\n\nfunction mapFactory(collection, mapper, context) {\n  var mappedSequence = makeSequence(collection);\n  mappedSequence.size = collection.size;\n  mappedSequence.has = function (key) { return collection.has(key); };\n  mappedSequence.get = function (key, notSetValue) {\n    var v = collection.get(key, NOT_SET);\n    return v === NOT_SET\n      ? notSetValue\n      : mapper.call(context, v, key, collection);\n  };\n  mappedSequence.__iterateUncached = function(fn, reverse) {\n    var this$1 = this;\n\n    return collection.__iterate(\n      function (v, k, c) { return fn(mapper.call(context, v, k, c), k, this$1) !== false; },\n      reverse\n    );\n  };\n  mappedSequence.__iteratorUncached = function(type, reverse) {\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      var key = entry[0];\n      return iteratorValue(\n        type,\n        key,\n        mapper.call(context, entry[1], key, collection),\n        step\n      );\n    });\n  };\n  return mappedSequence;\n}\n\nfunction reverseFactory(collection, useKeys) {\n  var this$1 = this;\n\n  var reversedSequence = makeSequence(collection);\n  reversedSequence._iter = collection;\n  reversedSequence.size = collection.size;\n  reversedSequence.reverse = function () { return collection; };\n  if (collection.flip) {\n    reversedSequence.flip = function() {\n      var flipSequence = flipFactory(collection);\n      flipSequence.reverse = function () { return collection.flip(); };\n      return flipSequence;\n    };\n  }\n  reversedSequence.get = function (key, notSetValue) { return collection.get(useKeys ? key : -1 - key, notSetValue); };\n  reversedSequence.has = function (key) { return collection.has(useKeys ? key : -1 - key); };\n  reversedSequence.includes = function (value) { return collection.includes(value); };\n  reversedSequence.cacheResult = cacheResultThrough;\n  reversedSequence.__iterate = function(fn, reverse) {\n    var this$1 = this;\n\n    var i = 0;\n    reverse && ensureSize(collection);\n    return collection.__iterate(\n      function (v, k) { return fn(v, useKeys ? k : reverse ? this$1.size - ++i : i++, this$1); },\n      !reverse\n    );\n  };\n  reversedSequence.__iterator = function (type, reverse) {\n    var i = 0;\n    reverse && ensureSize(collection);\n    var iterator = collection.__iterator(ITERATE_ENTRIES, !reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      return iteratorValue(\n        type,\n        useKeys ? entry[0] : reverse ? this$1.size - ++i : i++,\n        entry[1],\n        step\n      );\n    });\n  };\n  return reversedSequence;\n}\n\nfunction filterFactory(collection, predicate, context, useKeys) {\n  var filterSequence = makeSequence(collection);\n  if (useKeys) {\n    filterSequence.has = function (key) {\n      var v = collection.get(key, NOT_SET);\n      return v !== NOT_SET && !!predicate.call(context, v, key, collection);\n    };\n    filterSequence.get = function (key, notSetValue) {\n      var v = collection.get(key, NOT_SET);\n      return v !== NOT_SET && predicate.call(context, v, key, collection)\n        ? v\n        : notSetValue;\n    };\n  }\n  filterSequence.__iterateUncached = function(fn, reverse) {\n    var this$1 = this;\n\n    var iterations = 0;\n    collection.__iterate(function (v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1);\n      }\n    }, reverse);\n    return iterations;\n  };\n  filterSequence.__iteratorUncached = function(type, reverse) {\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var iterations = 0;\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        var value = entry[1];\n        if (predicate.call(context, value, key, collection)) {\n          return iteratorValue(type, useKeys ? key : iterations++, value, step);\n        }\n      }\n    });\n  };\n  return filterSequence;\n}\n\nfunction countByFactory(collection, grouper, context) {\n  var groups = Map().asMutable();\n  collection.__iterate(function (v, k) {\n    groups.update(grouper.call(context, v, k, collection), 0, function (a) { return a + 1; });\n  });\n  return groups.asImmutable();\n}\n\nfunction groupByFactory(collection, grouper, context) {\n  var isKeyedIter = isKeyed(collection);\n  var groups = (isOrdered(collection) ? OrderedMap() : Map()).asMutable();\n  collection.__iterate(function (v, k) {\n    groups.update(\n      grouper.call(context, v, k, collection),\n      function (a) { return ((a = a || []), a.push(isKeyedIter ? [k, v] : v), a); }\n    );\n  });\n  var coerce = collectionClass(collection);\n  return groups.map(function (arr) { return reify(collection, coerce(arr)); }).asImmutable();\n}\n\nfunction sliceFactory(collection, begin, end, useKeys) {\n  var originalSize = collection.size;\n\n  if (wholeSlice(begin, end, originalSize)) {\n    return collection;\n  }\n\n  var resolvedBegin = resolveBegin(begin, originalSize);\n  var resolvedEnd = resolveEnd(end, originalSize);\n\n  // begin or end will be NaN if they were provided as negative numbers and\n  // this collection's size is unknown. In that case, cache first so there is\n  // a known size and these do not resolve to NaN.\n  if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n    return sliceFactory(collection.toSeq().cacheResult(), begin, end, useKeys);\n  }\n\n  // Note: resolvedEnd is undefined when the original sequence's length is\n  // unknown and this slice did not supply an end and should contain all\n  // elements after resolvedBegin.\n  // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n  var resolvedSize = resolvedEnd - resolvedBegin;\n  var sliceSize;\n  if (resolvedSize === resolvedSize) {\n    sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n  }\n\n  var sliceSeq = makeSequence(collection);\n\n  // If collection.size is undefined, the size of the realized sliceSeq is\n  // unknown at this point unless the number of items to slice is 0\n  sliceSeq.size =\n    sliceSize === 0 ? sliceSize : (collection.size && sliceSize) || undefined;\n\n  if (!useKeys && isSeq(collection) && sliceSize >= 0) {\n    sliceSeq.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return index >= 0 && index < sliceSize\n        ? collection.get(index + resolvedBegin, notSetValue)\n        : notSetValue;\n    };\n  }\n\n  sliceSeq.__iterateUncached = function(fn, reverse) {\n    var this$1 = this;\n\n    if (sliceSize === 0) {\n      return 0;\n    }\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var skipped = 0;\n    var isSkipping = true;\n    var iterations = 0;\n    collection.__iterate(function (v, k) {\n      if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n        iterations++;\n        return (\n          fn(v, useKeys ? k : iterations - 1, this$1) !== false &&\n          iterations !== sliceSize\n        );\n      }\n    });\n    return iterations;\n  };\n\n  sliceSeq.__iteratorUncached = function(type, reverse) {\n    if (sliceSize !== 0 && reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    // Don't bother instantiating parent iterator if taking 0.\n    if (sliceSize === 0) {\n      return new Iterator(iteratorDone);\n    }\n    var iterator = collection.__iterator(type, reverse);\n    var skipped = 0;\n    var iterations = 0;\n    return new Iterator(function () {\n      while (skipped++ < resolvedBegin) {\n        iterator.next();\n      }\n      if (++iterations > sliceSize) {\n        return iteratorDone();\n      }\n      var step = iterator.next();\n      if (useKeys || type === ITERATE_VALUES || step.done) {\n        return step;\n      }\n      if (type === ITERATE_KEYS) {\n        return iteratorValue(type, iterations - 1, undefined, step);\n      }\n      return iteratorValue(type, iterations - 1, step.value[1], step);\n    });\n  };\n\n  return sliceSeq;\n}\n\nfunction takeWhileFactory(collection, predicate, context) {\n  var takeSequence = makeSequence(collection);\n  takeSequence.__iterateUncached = function(fn, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterations = 0;\n    collection.__iterate(\n      function (v, k, c) { return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$1); }\n    );\n    return iterations;\n  };\n  takeSequence.__iteratorUncached = function(type, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var iterating = true;\n    return new Iterator(function () {\n      if (!iterating) {\n        return iteratorDone();\n      }\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      var k = entry[0];\n      var v = entry[1];\n      if (!predicate.call(context, v, k, this$1)) {\n        iterating = false;\n        return iteratorDone();\n      }\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    });\n  };\n  return takeSequence;\n}\n\nfunction skipWhileFactory(collection, predicate, context, useKeys) {\n  var skipSequence = makeSequence(collection);\n  skipSequence.__iterateUncached = function(fn, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var isSkipping = true;\n    var iterations = 0;\n    collection.__iterate(function (v, k, c) {\n      if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1);\n      }\n    });\n    return iterations;\n  };\n  skipSequence.__iteratorUncached = function(type, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var skipping = true;\n    var iterations = 0;\n    return new Iterator(function () {\n      var step;\n      var k;\n      var v;\n      do {\n        step = iterator.next();\n        if (step.done) {\n          if (useKeys || type === ITERATE_VALUES) {\n            return step;\n          }\n          if (type === ITERATE_KEYS) {\n            return iteratorValue(type, iterations++, undefined, step);\n          }\n          return iteratorValue(type, iterations++, step.value[1], step);\n        }\n        var entry = step.value;\n        k = entry[0];\n        v = entry[1];\n        skipping && (skipping = predicate.call(context, v, k, this$1));\n      } while (skipping);\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    });\n  };\n  return skipSequence;\n}\n\nfunction concatFactory(collection, values) {\n  var isKeyedCollection = isKeyed(collection);\n  var iters = [collection]\n    .concat(values)\n    .map(function (v) {\n      if (!isCollection(v)) {\n        v = isKeyedCollection\n          ? keyedSeqFromValue(v)\n          : indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedCollection) {\n        v = KeyedCollection(v);\n      }\n      return v;\n    })\n    .filter(function (v) { return v.size !== 0; });\n\n  if (iters.length === 0) {\n    return collection;\n  }\n\n  if (iters.length === 1) {\n    var singleton = iters[0];\n    if (\n      singleton === collection ||\n      (isKeyedCollection && isKeyed(singleton)) ||\n      (isIndexed(collection) && isIndexed(singleton))\n    ) {\n      return singleton;\n    }\n  }\n\n  var concatSeq = new ArraySeq(iters);\n  if (isKeyedCollection) {\n    concatSeq = concatSeq.toKeyedSeq();\n  } else if (!isIndexed(collection)) {\n    concatSeq = concatSeq.toSetSeq();\n  }\n  concatSeq = concatSeq.flatten(true);\n  concatSeq.size = iters.reduce(function (sum, seq) {\n    if (sum !== undefined) {\n      var size = seq.size;\n      if (size !== undefined) {\n        return sum + size;\n      }\n    }\n  }, 0);\n  return concatSeq;\n}\n\nfunction flattenFactory(collection, depth, useKeys) {\n  var flatSequence = makeSequence(collection);\n  flatSequence.__iterateUncached = function(fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterations = 0;\n    var stopped = false;\n    function flatDeep(iter, currentDepth) {\n      iter.__iterate(function (v, k) {\n        if ((!depth || currentDepth < depth) && isCollection(v)) {\n          flatDeep(v, currentDepth + 1);\n        } else {\n          iterations++;\n          if (fn(v, useKeys ? k : iterations - 1, flatSequence) === false) {\n            stopped = true;\n          }\n        }\n        return !stopped;\n      }, reverse);\n    }\n    flatDeep(collection, 0);\n    return iterations;\n  };\n  flatSequence.__iteratorUncached = function(type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(type, reverse);\n    var stack = [];\n    var iterations = 0;\n    return new Iterator(function () {\n      while (iterator) {\n        var step = iterator.next();\n        if (step.done !== false) {\n          iterator = stack.pop();\n          continue;\n        }\n        var v = step.value;\n        if (type === ITERATE_ENTRIES) {\n          v = v[1];\n        }\n        if ((!depth || stack.length < depth) && isCollection(v)) {\n          stack.push(iterator);\n          iterator = v.__iterator(type, reverse);\n        } else {\n          return useKeys ? step : iteratorValue(type, iterations++, v, step);\n        }\n      }\n      return iteratorDone();\n    });\n  };\n  return flatSequence;\n}\n\nfunction flatMapFactory(collection, mapper, context) {\n  var coerce = collectionClass(collection);\n  return collection\n    .toSeq()\n    .map(function (v, k) { return coerce(mapper.call(context, v, k, collection)); })\n    .flatten(true);\n}\n\nfunction interposeFactory(collection, separator) {\n  var interposedSequence = makeSequence(collection);\n  interposedSequence.size = collection.size && collection.size * 2 - 1;\n  interposedSequence.__iterateUncached = function(fn, reverse) {\n    var this$1 = this;\n\n    var iterations = 0;\n    collection.__iterate(\n      function (v) { return (!iterations || fn(separator, iterations++, this$1) !== false) &&\n        fn(v, iterations++, this$1) !== false; },\n      reverse\n    );\n    return iterations;\n  };\n  interposedSequence.__iteratorUncached = function(type, reverse) {\n    var iterator = collection.__iterator(ITERATE_VALUES, reverse);\n    var iterations = 0;\n    var step;\n    return new Iterator(function () {\n      if (!step || iterations % 2) {\n        step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n      }\n      return iterations % 2\n        ? iteratorValue(type, iterations++, separator)\n        : iteratorValue(type, iterations++, step.value, step);\n    });\n  };\n  return interposedSequence;\n}\n\nfunction sortFactory(collection, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n  var isKeyedCollection = isKeyed(collection);\n  var index = 0;\n  var entries = collection\n    .toSeq()\n    .map(function (v, k) { return [k, v, index++, mapper ? mapper(v, k, collection) : v]; })\n    .valueSeq()\n    .toArray();\n  entries.sort(function (a, b) { return comparator(a[3], b[3]) || a[2] - b[2]; }).forEach(\n    isKeyedCollection\n      ? function (v, i) {\n          entries[i].length = 2;\n        }\n      : function (v, i) {\n          entries[i] = v[1];\n        }\n  );\n  return isKeyedCollection\n    ? KeyedSeq(entries)\n    : isIndexed(collection)\n      ? IndexedSeq(entries)\n      : SetSeq(entries);\n}\n\nfunction maxFactory(collection, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n  if (mapper) {\n    var entry = collection\n      .toSeq()\n      .map(function (v, k) { return [v, mapper(v, k, collection)]; })\n      .reduce(function (a, b) { return (maxCompare(comparator, a[1], b[1]) ? b : a); });\n    return entry && entry[0];\n  }\n  return collection.reduce(function (a, b) { return (maxCompare(comparator, a, b) ? b : a); });\n}\n\nfunction maxCompare(comparator, a, b) {\n  var comp = comparator(b, a);\n  // b is considered the new max if the comparator declares them equal, but\n  // they are not equal and b is in fact a nullish value.\n  return (\n    (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) ||\n    comp > 0\n  );\n}\n\nfunction zipWithFactory(keyIter, zipper, iters, zipAll) {\n  var zipSequence = makeSequence(keyIter);\n  var sizes = new ArraySeq(iters).map(function (i) { return i.size; });\n  zipSequence.size = zipAll ? sizes.max() : sizes.min();\n  // Note: this a generic base implementation of __iterate in terms of\n  // __iterator which may be more generically useful in the future.\n  zipSequence.__iterate = function(fn, reverse) {\n    /* generic:\n    var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n    var step;\n    var iterations = 0;\n    while (!(step = iterator.next()).done) {\n      iterations++;\n      if (fn(step.value[1], step.value[0], this) === false) {\n        break;\n      }\n    }\n    return iterations;\n    */\n    // indexed:\n    var iterator = this.__iterator(ITERATE_VALUES, reverse);\n    var step;\n    var iterations = 0;\n    while (!(step = iterator.next()).done) {\n      if (fn(step.value, iterations++, this) === false) {\n        break;\n      }\n    }\n    return iterations;\n  };\n  zipSequence.__iteratorUncached = function(type, reverse) {\n    var iterators = iters.map(\n      function (i) { return ((i = Collection(i)), getIterator(reverse ? i.reverse() : i)); }\n    );\n    var iterations = 0;\n    var isDone = false;\n    return new Iterator(function () {\n      var steps;\n      if (!isDone) {\n        steps = iterators.map(function (i) { return i.next(); });\n        isDone = zipAll ? steps.every(function (s) { return s.done; }) : steps.some(function (s) { return s.done; });\n      }\n      if (isDone) {\n        return iteratorDone();\n      }\n      return iteratorValue(\n        type,\n        iterations++,\n        zipper.apply(null, steps.map(function (s) { return s.value; }))\n      );\n    });\n  };\n  return zipSequence;\n}\n\n// #pragma Helper Functions\n\nfunction reify(iter, seq) {\n  return iter === seq ? iter : isSeq(iter) ? seq : iter.constructor(seq);\n}\n\nfunction validateEntry(entry) {\n  if (entry !== Object(entry)) {\n    throw new TypeError('Expected [K, V] tuple: ' + entry);\n  }\n}\n\nfunction collectionClass(collection) {\n  return isKeyed(collection)\n    ? KeyedCollection\n    : isIndexed(collection)\n      ? IndexedCollection\n      : SetCollection;\n}\n\nfunction makeSequence(collection) {\n  return Object.create(\n    (isKeyed(collection)\n      ? KeyedSeq\n      : isIndexed(collection)\n        ? IndexedSeq\n        : SetSeq\n    ).prototype\n  );\n}\n\nfunction cacheResultThrough() {\n  if (this._iter.cacheResult) {\n    this._iter.cacheResult();\n    this.size = this._iter.size;\n    return this;\n  }\n  return Seq.prototype.cacheResult.call(this);\n}\n\nfunction defaultComparator(a, b) {\n  if (a === undefined && b === undefined) {\n    return 0;\n  }\n\n  if (a === undefined) {\n    return 1;\n  }\n\n  if (b === undefined) {\n    return -1;\n  }\n\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n// http://jsperf.com/copy-array-inline\nfunction arrCopy(arr, offset) {\n  offset = offset || 0;\n  var len = Math.max(0, arr.length - offset);\n  var newArr = new Array(len);\n  for (var ii = 0; ii < len; ii++) {\n    newArr[ii] = arr[ii + offset];\n  }\n  return newArr;\n}\n\nfunction invariant(condition, error) {\n  if (!condition) { throw new Error(error); }\n}\n\nfunction assertNotInfinite(size) {\n  invariant(\n    size !== Infinity,\n    'Cannot perform this action with an infinite size.'\n  );\n}\n\nfunction coerceKeyPath(keyPath) {\n  if (isArrayLike(keyPath) && typeof keyPath !== 'string') {\n    return keyPath;\n  }\n  if (isOrdered(keyPath)) {\n    return keyPath.toArray();\n  }\n  throw new TypeError(\n    'Invalid keyPath: expected Ordered Collection or Array: ' + keyPath\n  );\n}\n\nfunction isPlainObj(value) {\n  return (\n    value &&\n    (typeof value.constructor !== 'function' ||\n      value.constructor.name === 'Object')\n  );\n}\n\n/**\n * Returns true if the value is a potentially-persistent data structure, either\n * provided by Immutable.js or a plain Array or Object.\n */\nfunction isDataStructure(value) {\n  return (\n    typeof value === 'object' &&\n    (isImmutable(value) || Array.isArray(value) || isPlainObj(value))\n  );\n}\n\n/**\n * Converts a value to a string, adding quotes if a string was provided.\n */\nfunction quoteString(value) {\n  try {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  } catch (_ignoreError) {\n    return JSON.stringify(value);\n  }\n}\n\nfunction has(collection, key) {\n  return isImmutable(collection)\n    ? collection.has(key)\n    : isDataStructure(collection) && hasOwnProperty.call(collection, key);\n}\n\nfunction get(collection, key, notSetValue) {\n  return isImmutable(collection)\n    ? collection.get(key, notSetValue)\n    : !has(collection, key)\n      ? notSetValue\n      : typeof collection.get === 'function'\n        ? collection.get(key)\n        : collection[key];\n}\n\nfunction shallowCopy(from) {\n  if (Array.isArray(from)) {\n    return arrCopy(from);\n  }\n  var to = {};\n  for (var key in from) {\n    if (hasOwnProperty.call(from, key)) {\n      to[key] = from[key];\n    }\n  }\n  return to;\n}\n\nfunction remove(collection, key) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError(\n      'Cannot update non-data-structure value: ' + collection\n    );\n  }\n  if (isImmutable(collection)) {\n    if (!collection.remove) {\n      throw new TypeError(\n        'Cannot update immutable value without .remove() method: ' + collection\n      );\n    }\n    return collection.remove(key);\n  }\n  if (!hasOwnProperty.call(collection, key)) {\n    return collection;\n  }\n  var collectionCopy = shallowCopy(collection);\n  if (Array.isArray(collectionCopy)) {\n    collectionCopy.splice(key, 1);\n  } else {\n    delete collectionCopy[key];\n  }\n  return collectionCopy;\n}\n\nfunction set(collection, key, value) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError(\n      'Cannot update non-data-structure value: ' + collection\n    );\n  }\n  if (isImmutable(collection)) {\n    if (!collection.set) {\n      throw new TypeError(\n        'Cannot update immutable value without .set() method: ' + collection\n      );\n    }\n    return collection.set(key, value);\n  }\n  if (hasOwnProperty.call(collection, key) && value === collection[key]) {\n    return collection;\n  }\n  var collectionCopy = shallowCopy(collection);\n  collectionCopy[key] = value;\n  return collectionCopy;\n}\n\nfunction updateIn(collection, keyPath, notSetValue, updater) {\n  if (!updater) {\n    updater = notSetValue;\n    notSetValue = undefined;\n  }\n  var updatedValue = updateInDeeply(\n    isImmutable(collection),\n    collection,\n    coerceKeyPath(keyPath),\n    0,\n    notSetValue,\n    updater\n  );\n  return updatedValue === NOT_SET ? notSetValue : updatedValue;\n}\n\nfunction updateInDeeply(\n  inImmutable,\n  existing,\n  keyPath,\n  i,\n  notSetValue,\n  updater\n) {\n  var wasNotSet = existing === NOT_SET;\n  if (i === keyPath.length) {\n    var existingValue = wasNotSet ? notSetValue : existing;\n    var newValue = updater(existingValue);\n    return newValue === existingValue ? existing : newValue;\n  }\n  if (!wasNotSet && !isDataStructure(existing)) {\n    throw new TypeError(\n      'Cannot update within non-data-structure value in path [' +\n        keyPath.slice(0, i).map(quoteString) +\n        ']: ' +\n        existing\n    );\n  }\n  var key = keyPath[i];\n  var nextExisting = wasNotSet ? NOT_SET : get(existing, key, NOT_SET);\n  var nextUpdated = updateInDeeply(\n    nextExisting === NOT_SET ? inImmutable : isImmutable(nextExisting),\n    nextExisting,\n    keyPath,\n    i + 1,\n    notSetValue,\n    updater\n  );\n  return nextUpdated === nextExisting\n    ? existing\n    : nextUpdated === NOT_SET\n      ? remove(existing, key)\n      : set(\n          wasNotSet ? (inImmutable ? emptyMap() : {}) : existing,\n          key,\n          nextUpdated\n        );\n}\n\nfunction setIn(collection, keyPath, value) {\n  return updateIn(collection, keyPath, NOT_SET, function () { return value; });\n}\n\nfunction setIn$1(keyPath, v) {\n  return setIn(this, keyPath, v);\n}\n\nfunction removeIn(collection, keyPath) {\n  return updateIn(collection, keyPath, function () { return NOT_SET; });\n}\n\nfunction deleteIn(keyPath) {\n  return removeIn(this, keyPath);\n}\n\nfunction update(collection, key, notSetValue, updater) {\n  return updateIn(collection, [key], notSetValue, updater);\n}\n\nfunction update$1(key, notSetValue, updater) {\n  return arguments.length === 1\n    ? key(this)\n    : update(this, key, notSetValue, updater);\n}\n\nfunction updateIn$1(keyPath, notSetValue, updater) {\n  return updateIn(this, keyPath, notSetValue, updater);\n}\n\nfunction merge() {\n  var iters = [], len = arguments.length;\n  while ( len-- ) iters[ len ] = arguments[ len ];\n\n  return mergeIntoKeyedWith(this, iters);\n}\n\nfunction mergeWith(merger) {\n  var iters = [], len = arguments.length - 1;\n  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];\n\n  if (typeof merger !== 'function') {\n    throw new TypeError('Invalid merger function: ' + merger);\n  }\n  return mergeIntoKeyedWith(this, iters, merger);\n}\n\nfunction mergeIntoKeyedWith(collection, collections, merger) {\n  var iters = [];\n  for (var ii = 0; ii < collections.length; ii++) {\n    var collection$1 = KeyedCollection(collections[ii]);\n    if (collection$1.size !== 0) {\n      iters.push(collection$1);\n    }\n  }\n  if (iters.length === 0) {\n    return collection;\n  }\n  if (\n    collection.toSeq().size === 0 &&\n    !collection.__ownerID &&\n    iters.length === 1\n  ) {\n    return collection.constructor(iters[0]);\n  }\n  return collection.withMutations(function (collection) {\n    var mergeIntoCollection = merger\n      ? function (value, key) {\n          update(\n            collection,\n            key,\n            NOT_SET,\n            function (oldVal) { return (oldVal === NOT_SET ? value : merger(oldVal, value, key)); }\n          );\n        }\n      : function (value, key) {\n          collection.set(key, value);\n        };\n    for (var ii = 0; ii < iters.length; ii++) {\n      iters[ii].forEach(mergeIntoCollection);\n    }\n  });\n}\n\nfunction merge$1(collection) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  return mergeWithSources(collection, sources);\n}\n\nfunction mergeWith$1(merger, collection) {\n  var sources = [], len = arguments.length - 2;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 2 ];\n\n  return mergeWithSources(collection, sources, merger);\n}\n\nfunction mergeDeep(collection) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  return mergeDeepWithSources(collection, sources);\n}\n\nfunction mergeDeepWith(merger, collection) {\n  var sources = [], len = arguments.length - 2;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 2 ];\n\n  return mergeDeepWithSources(collection, sources, merger);\n}\n\nfunction mergeDeepWithSources(collection, sources, merger) {\n  return mergeWithSources(collection, sources, deepMergerWith(merger));\n}\n\nfunction mergeWithSources(collection, sources, merger) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError(\n      'Cannot merge into non-data-structure value: ' + collection\n    );\n  }\n  if (isImmutable(collection)) {\n    return typeof merger === 'function' && collection.mergeWith\n      ? collection.mergeWith.apply(collection, [ merger ].concat( sources ))\n      : collection.merge\n        ? collection.merge.apply(collection, sources)\n        : collection.concat.apply(collection, sources);\n  }\n  var isArray = Array.isArray(collection);\n  var merged = collection;\n  var Collection$$1 = isArray ? IndexedCollection : KeyedCollection;\n  var mergeItem = isArray\n    ? function (value) {\n        // Copy on write\n        if (merged === collection) {\n          merged = shallowCopy(merged);\n        }\n        merged.push(value);\n      }\n    : function (value, key) {\n        var hasVal = hasOwnProperty.call(merged, key);\n        var nextVal =\n          hasVal && merger ? merger(merged[key], value, key) : value;\n        if (!hasVal || nextVal !== merged[key]) {\n          // Copy on write\n          if (merged === collection) {\n            merged = shallowCopy(merged);\n          }\n          merged[key] = nextVal;\n        }\n      };\n  for (var i = 0; i < sources.length; i++) {\n    Collection$$1(sources[i]).forEach(mergeItem);\n  }\n  return merged;\n}\n\nfunction deepMergerWith(merger) {\n  function deepMerger(oldValue, newValue, key) {\n    return isDataStructure(oldValue) && isDataStructure(newValue)\n      ? mergeWithSources(oldValue, [newValue], deepMerger)\n      : merger\n        ? merger(oldValue, newValue, key)\n        : newValue;\n  }\n  return deepMerger;\n}\n\nfunction mergeDeep$1() {\n  var iters = [], len = arguments.length;\n  while ( len-- ) iters[ len ] = arguments[ len ];\n\n  return mergeDeepWithSources(this, iters);\n}\n\nfunction mergeDeepWith$1(merger) {\n  var iters = [], len = arguments.length - 1;\n  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];\n\n  return mergeDeepWithSources(this, iters, merger);\n}\n\nfunction mergeIn(keyPath) {\n  var iters = [], len = arguments.length - 1;\n  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];\n\n  return updateIn(this, keyPath, emptyMap(), function (m) { return mergeWithSources(m, iters); });\n}\n\nfunction mergeDeepIn(keyPath) {\n  var iters = [], len = arguments.length - 1;\n  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];\n\n  return updateIn(this, keyPath, emptyMap(), function (m) { return mergeDeepWithSources(m, iters); }\n  );\n}\n\nfunction withMutations(fn) {\n  var mutable = this.asMutable();\n  fn(mutable);\n  return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n}\n\nfunction asMutable() {\n  return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n}\n\nfunction asImmutable() {\n  return this.__ensureOwner();\n}\n\nfunction wasAltered() {\n  return this.__altered;\n}\n\nvar Map = /*@__PURE__*/(function (KeyedCollection$$1) {\n  function Map(value) {\n    return value === null || value === undefined\n      ? emptyMap()\n      : isMap(value) && !isOrdered(value)\n        ? value\n        : emptyMap().withMutations(function (map) {\n            var iter = KeyedCollection$$1(value);\n            assertNotInfinite(iter.size);\n            iter.forEach(function (v, k) { return map.set(k, v); });\n          });\n  }\n\n  if ( KeyedCollection$$1 ) Map.__proto__ = KeyedCollection$$1;\n  Map.prototype = Object.create( KeyedCollection$$1 && KeyedCollection$$1.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.of = function of () {\n    var keyValues = [], len = arguments.length;\n    while ( len-- ) keyValues[ len ] = arguments[ len ];\n\n    return emptyMap().withMutations(function (map) {\n      for (var i = 0; i < keyValues.length; i += 2) {\n        if (i + 1 >= keyValues.length) {\n          throw new Error('Missing value for key: ' + keyValues[i]);\n        }\n        map.set(keyValues[i], keyValues[i + 1]);\n      }\n    });\n  };\n\n  Map.prototype.toString = function toString () {\n    return this.__toString('Map {', '}');\n  };\n\n  // @pragma Access\n\n  Map.prototype.get = function get (k, notSetValue) {\n    return this._root\n      ? this._root.get(0, undefined, k, notSetValue)\n      : notSetValue;\n  };\n\n  // @pragma Modification\n\n  Map.prototype.set = function set (k, v) {\n    return updateMap(this, k, v);\n  };\n\n  Map.prototype.remove = function remove (k) {\n    return updateMap(this, k, NOT_SET);\n  };\n\n  Map.prototype.deleteAll = function deleteAll (keys) {\n    var collection = Collection(keys);\n\n    if (collection.size === 0) {\n      return this;\n    }\n\n    return this.withMutations(function (map) {\n      collection.forEach(function (key) { return map.remove(key); });\n    });\n  };\n\n  Map.prototype.clear = function clear () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._root = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyMap();\n  };\n\n  // @pragma Composition\n\n  Map.prototype.sort = function sort (comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator));\n  };\n\n  Map.prototype.sortBy = function sortBy (mapper, comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator, mapper));\n  };\n\n  Map.prototype.map = function map (mapper, context) {\n    return this.withMutations(function (map) {\n      map.forEach(function (value, key) {\n        map.set(key, mapper.call(context, value, key, map));\n      });\n    });\n  };\n\n  // @pragma Mutability\n\n  Map.prototype.__iterator = function __iterator (type, reverse) {\n    return new MapIterator(this, type, reverse);\n  };\n\n  Map.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1 = this;\n\n    var iterations = 0;\n    this._root &&\n      this._root.iterate(function (entry) {\n        iterations++;\n        return fn(entry[1], entry[0], this$1);\n      }, reverse);\n    return iterations;\n  };\n\n  Map.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyMap();\n      }\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeMap(this.size, this._root, ownerID, this.__hash);\n  };\n\n  return Map;\n}(KeyedCollection));\n\nMap.isMap = isMap;\n\nvar MapPrototype = Map.prototype;\nMapPrototype[IS_MAP_SYMBOL] = true;\nMapPrototype[DELETE] = MapPrototype.remove;\nMapPrototype.removeAll = MapPrototype.deleteAll;\nMapPrototype.setIn = setIn$1;\nMapPrototype.removeIn = MapPrototype.deleteIn = deleteIn;\nMapPrototype.update = update$1;\nMapPrototype.updateIn = updateIn$1;\nMapPrototype.merge = MapPrototype.concat = merge;\nMapPrototype.mergeWith = mergeWith;\nMapPrototype.mergeDeep = mergeDeep$1;\nMapPrototype.mergeDeepWith = mergeDeepWith$1;\nMapPrototype.mergeIn = mergeIn;\nMapPrototype.mergeDeepIn = mergeDeepIn;\nMapPrototype.withMutations = withMutations;\nMapPrototype.wasAltered = wasAltered;\nMapPrototype.asImmutable = asImmutable;\nMapPrototype['@@transducer/init'] = MapPrototype.asMutable = asMutable;\nMapPrototype['@@transducer/step'] = function(result, arr) {\n  return result.set(arr[0], arr[1]);\n};\nMapPrototype['@@transducer/result'] = function(obj) {\n  return obj.asImmutable();\n};\n\n// #pragma Trie Nodes\n\nvar ArrayMapNode = function ArrayMapNode(ownerID, entries) {\n  this.ownerID = ownerID;\n  this.entries = entries;\n};\n\nArrayMapNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  var entries = this.entries;\n  for (var ii = 0, len = entries.length; ii < len; ii++) {\n    if (is(key, entries[ii][0])) {\n      return entries[ii][1];\n    }\n  }\n  return notSetValue;\n};\n\nArrayMapNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  var removed = value === NOT_SET;\n\n  var entries = this.entries;\n  var idx = 0;\n  var len = entries.length;\n  for (; idx < len; idx++) {\n    if (is(key, entries[idx][0])) {\n      break;\n    }\n  }\n  var exists = idx < len;\n\n  if (exists ? entries[idx][1] === value : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n  (removed || !exists) && SetRef(didChangeSize);\n\n  if (removed && entries.length === 1) {\n    return; // undefined\n  }\n\n  if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n    return createNodes(ownerID, entries, key, value);\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newEntries = isEditable ? entries : arrCopy(entries);\n\n  if (exists) {\n    if (removed) {\n      idx === len - 1\n        ? newEntries.pop()\n        : (newEntries[idx] = newEntries.pop());\n    } else {\n      newEntries[idx] = [key, value];\n    }\n  } else {\n    newEntries.push([key, value]);\n  }\n\n  if (isEditable) {\n    this.entries = newEntries;\n    return this;\n  }\n\n  return new ArrayMapNode(ownerID, newEntries);\n};\n\nvar BitmapIndexedNode = function BitmapIndexedNode(ownerID, bitmap, nodes) {\n  this.ownerID = ownerID;\n  this.bitmap = bitmap;\n  this.nodes = nodes;\n};\n\nBitmapIndexedNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n  var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);\n  var bitmap = this.bitmap;\n  return (bitmap & bit) === 0\n    ? notSetValue\n    : this.nodes[popCount(bitmap & (bit - 1))].get(\n        shift + SHIFT,\n        keyHash,\n        key,\n        notSetValue\n      );\n};\n\nBitmapIndexedNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n  var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var bit = 1 << keyHashFrag;\n  var bitmap = this.bitmap;\n  var exists = (bitmap & bit) !== 0;\n\n  if (!exists && value === NOT_SET) {\n    return this;\n  }\n\n  var idx = popCount(bitmap & (bit - 1));\n  var nodes = this.nodes;\n  var node = exists ? nodes[idx] : undefined;\n  var newNode = updateNode(\n    node,\n    ownerID,\n    shift + SHIFT,\n    keyHash,\n    key,\n    value,\n    didChangeSize,\n    didAlter\n  );\n\n  if (newNode === node) {\n    return this;\n  }\n\n  if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n    return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n  }\n\n  if (\n    exists &&\n    !newNode &&\n    nodes.length === 2 &&\n    isLeafNode(nodes[idx ^ 1])\n  ) {\n    return nodes[idx ^ 1];\n  }\n\n  if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n    return newNode;\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newBitmap = exists ? (newNode ? bitmap : bitmap ^ bit) : bitmap | bit;\n  var newNodes = exists\n    ? newNode\n      ? setAt(nodes, idx, newNode, isEditable)\n      : spliceOut(nodes, idx, isEditable)\n    : spliceIn(nodes, idx, newNode, isEditable);\n\n  if (isEditable) {\n    this.bitmap = newBitmap;\n    this.nodes = newNodes;\n    return this;\n  }\n\n  return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n};\n\nvar HashArrayMapNode = function HashArrayMapNode(ownerID, count, nodes) {\n  this.ownerID = ownerID;\n  this.count = count;\n  this.nodes = nodes;\n};\n\nHashArrayMapNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n  var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var node = this.nodes[idx];\n  return node\n    ? node.get(shift + SHIFT, keyHash, key, notSetValue)\n    : notSetValue;\n};\n\nHashArrayMapNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n  var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var removed = value === NOT_SET;\n  var nodes = this.nodes;\n  var node = nodes[idx];\n\n  if (removed && !node) {\n    return this;\n  }\n\n  var newNode = updateNode(\n    node,\n    ownerID,\n    shift + SHIFT,\n    keyHash,\n    key,\n    value,\n    didChangeSize,\n    didAlter\n  );\n  if (newNode === node) {\n    return this;\n  }\n\n  var newCount = this.count;\n  if (!node) {\n    newCount++;\n  } else if (!newNode) {\n    newCount--;\n    if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n      return packNodes(ownerID, nodes, newCount, idx);\n    }\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newNodes = setAt(nodes, idx, newNode, isEditable);\n\n  if (isEditable) {\n    this.count = newCount;\n    this.nodes = newNodes;\n    return this;\n  }\n\n  return new HashArrayMapNode(ownerID, newCount, newNodes);\n};\n\nvar HashCollisionNode = function HashCollisionNode(ownerID, keyHash, entries) {\n  this.ownerID = ownerID;\n  this.keyHash = keyHash;\n  this.entries = entries;\n};\n\nHashCollisionNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  var entries = this.entries;\n  for (var ii = 0, len = entries.length; ii < len; ii++) {\n    if (is(key, entries[ii][0])) {\n      return entries[ii][1];\n    }\n  }\n  return notSetValue;\n};\n\nHashCollisionNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n\n  var removed = value === NOT_SET;\n\n  if (keyHash !== this.keyHash) {\n    if (removed) {\n      return this;\n    }\n    SetRef(didAlter);\n    SetRef(didChangeSize);\n    return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n  }\n\n  var entries = this.entries;\n  var idx = 0;\n  var len = entries.length;\n  for (; idx < len; idx++) {\n    if (is(key, entries[idx][0])) {\n      break;\n    }\n  }\n  var exists = idx < len;\n\n  if (exists ? entries[idx][1] === value : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n  (removed || !exists) && SetRef(didChangeSize);\n\n  if (removed && len === 2) {\n    return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newEntries = isEditable ? entries : arrCopy(entries);\n\n  if (exists) {\n    if (removed) {\n      idx === len - 1\n        ? newEntries.pop()\n        : (newEntries[idx] = newEntries.pop());\n    } else {\n      newEntries[idx] = [key, value];\n    }\n  } else {\n    newEntries.push([key, value]);\n  }\n\n  if (isEditable) {\n    this.entries = newEntries;\n    return this;\n  }\n\n  return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n};\n\nvar ValueNode = function ValueNode(ownerID, keyHash, entry) {\n  this.ownerID = ownerID;\n  this.keyHash = keyHash;\n  this.entry = entry;\n};\n\nValueNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n};\n\nValueNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  var removed = value === NOT_SET;\n  var keyMatch = is(key, this.entry[0]);\n  if (keyMatch ? value === this.entry[1] : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n\n  if (removed) {\n    SetRef(didChangeSize);\n    return; // undefined\n  }\n\n  if (keyMatch) {\n    if (ownerID && ownerID === this.ownerID) {\n      this.entry[1] = value;\n      return this;\n    }\n    return new ValueNode(ownerID, this.keyHash, [key, value]);\n  }\n\n  SetRef(didChangeSize);\n  return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n};\n\n// #pragma Iterators\n\nArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function(\n  fn,\n  reverse\n) {\n  var entries = this.entries;\n  for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n    if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n      return false;\n    }\n  }\n};\n\nBitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function(\n  fn,\n  reverse\n) {\n  var nodes = this.nodes;\n  for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n    var node = nodes[reverse ? maxIndex - ii : ii];\n    if (node && node.iterate(fn, reverse) === false) {\n      return false;\n    }\n  }\n};\n\n// eslint-disable-next-line no-unused-vars\nValueNode.prototype.iterate = function(fn, reverse) {\n  return fn(this.entry);\n};\n\nvar MapIterator = /*@__PURE__*/(function (Iterator$$1) {\n  function MapIterator(map, type, reverse) {\n    this._type = type;\n    this._reverse = reverse;\n    this._stack = map._root && mapIteratorFrame(map._root);\n  }\n\n  if ( Iterator$$1 ) MapIterator.__proto__ = Iterator$$1;\n  MapIterator.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  MapIterator.prototype.constructor = MapIterator;\n\n  MapIterator.prototype.next = function next () {\n    var type = this._type;\n    var stack = this._stack;\n    while (stack) {\n      var node = stack.node;\n      var index = stack.index++;\n      var maxIndex = (void 0);\n      if (node.entry) {\n        if (index === 0) {\n          return mapIteratorValue(type, node.entry);\n        }\n      } else if (node.entries) {\n        maxIndex = node.entries.length - 1;\n        if (index <= maxIndex) {\n          return mapIteratorValue(\n            type,\n            node.entries[this._reverse ? maxIndex - index : index]\n          );\n        }\n      } else {\n        maxIndex = node.nodes.length - 1;\n        if (index <= maxIndex) {\n          var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n          if (subNode) {\n            if (subNode.entry) {\n              return mapIteratorValue(type, subNode.entry);\n            }\n            stack = this._stack = mapIteratorFrame(subNode, stack);\n          }\n          continue;\n        }\n      }\n      stack = this._stack = this._stack.__prev;\n    }\n    return iteratorDone();\n  };\n\n  return MapIterator;\n}(Iterator));\n\nfunction mapIteratorValue(type, entry) {\n  return iteratorValue(type, entry[0], entry[1]);\n}\n\nfunction mapIteratorFrame(node, prev) {\n  return {\n    node: node,\n    index: 0,\n    __prev: prev,\n  };\n}\n\nfunction makeMap(size, root, ownerID, hash$$1) {\n  var map = Object.create(MapPrototype);\n  map.size = size;\n  map._root = root;\n  map.__ownerID = ownerID;\n  map.__hash = hash$$1;\n  map.__altered = false;\n  return map;\n}\n\nvar EMPTY_MAP;\nfunction emptyMap() {\n  return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n}\n\nfunction updateMap(map, k, v) {\n  var newRoot;\n  var newSize;\n  if (!map._root) {\n    if (v === NOT_SET) {\n      return map;\n    }\n    newSize = 1;\n    newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n  } else {\n    var didChangeSize = MakeRef();\n    var didAlter = MakeRef();\n    newRoot = updateNode(\n      map._root,\n      map.__ownerID,\n      0,\n      undefined,\n      k,\n      v,\n      didChangeSize,\n      didAlter\n    );\n    if (!didAlter.value) {\n      return map;\n    }\n    newSize = map.size + (didChangeSize.value ? (v === NOT_SET ? -1 : 1) : 0);\n  }\n  if (map.__ownerID) {\n    map.size = newSize;\n    map._root = newRoot;\n    map.__hash = undefined;\n    map.__altered = true;\n    return map;\n  }\n  return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n}\n\nfunction updateNode(\n  node,\n  ownerID,\n  shift,\n  keyHash,\n  key,\n  value,\n  didChangeSize,\n  didAlter\n) {\n  if (!node) {\n    if (value === NOT_SET) {\n      return node;\n    }\n    SetRef(didAlter);\n    SetRef(didChangeSize);\n    return new ValueNode(ownerID, keyHash, [key, value]);\n  }\n  return node.update(\n    ownerID,\n    shift,\n    keyHash,\n    key,\n    value,\n    didChangeSize,\n    didAlter\n  );\n}\n\nfunction isLeafNode(node) {\n  return (\n    node.constructor === ValueNode || node.constructor === HashCollisionNode\n  );\n}\n\nfunction mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n  if (node.keyHash === keyHash) {\n    return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n  }\n\n  var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n  var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n  var newNode;\n  var nodes =\n    idx1 === idx2\n      ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)]\n      : ((newNode = new ValueNode(ownerID, keyHash, entry)),\n        idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n  return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n}\n\nfunction createNodes(ownerID, entries, key, value) {\n  if (!ownerID) {\n    ownerID = new OwnerID();\n  }\n  var node = new ValueNode(ownerID, hash(key), [key, value]);\n  for (var ii = 0; ii < entries.length; ii++) {\n    var entry = entries[ii];\n    node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n  }\n  return node;\n}\n\nfunction packNodes(ownerID, nodes, count, excluding) {\n  var bitmap = 0;\n  var packedII = 0;\n  var packedNodes = new Array(count);\n  for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n    var node = nodes[ii];\n    if (node !== undefined && ii !== excluding) {\n      bitmap |= bit;\n      packedNodes[packedII++] = node;\n    }\n  }\n  return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n}\n\nfunction expandNodes(ownerID, nodes, bitmap, including, node) {\n  var count = 0;\n  var expandedNodes = new Array(SIZE);\n  for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n    expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n  }\n  expandedNodes[including] = node;\n  return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n}\n\nfunction popCount(x) {\n  x -= (x >> 1) & 0x55555555;\n  x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n  x = (x + (x >> 4)) & 0x0f0f0f0f;\n  x += x >> 8;\n  x += x >> 16;\n  return x & 0x7f;\n}\n\nfunction setAt(array, idx, val, canEdit) {\n  var newArray = canEdit ? array : arrCopy(array);\n  newArray[idx] = val;\n  return newArray;\n}\n\nfunction spliceIn(array, idx, val, canEdit) {\n  var newLen = array.length + 1;\n  if (canEdit && idx + 1 === newLen) {\n    array[idx] = val;\n    return array;\n  }\n  var newArray = new Array(newLen);\n  var after = 0;\n  for (var ii = 0; ii < newLen; ii++) {\n    if (ii === idx) {\n      newArray[ii] = val;\n      after = -1;\n    } else {\n      newArray[ii] = array[ii + after];\n    }\n  }\n  return newArray;\n}\n\nfunction spliceOut(array, idx, canEdit) {\n  var newLen = array.length - 1;\n  if (canEdit && idx === newLen) {\n    array.pop();\n    return array;\n  }\n  var newArray = new Array(newLen);\n  var after = 0;\n  for (var ii = 0; ii < newLen; ii++) {\n    if (ii === idx) {\n      after = 1;\n    }\n    newArray[ii] = array[ii + after];\n  }\n  return newArray;\n}\n\nvar MAX_ARRAY_MAP_SIZE = SIZE / 4;\nvar MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\nvar MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\nvar IS_LIST_SYMBOL = '@@__IMMUTABLE_LIST__@@';\n\nfunction isList(maybeList) {\n  return Boolean(maybeList && maybeList[IS_LIST_SYMBOL]);\n}\n\nvar List = /*@__PURE__*/(function (IndexedCollection$$1) {\n  function List(value) {\n    var empty = emptyList();\n    if (value === null || value === undefined) {\n      return empty;\n    }\n    if (isList(value)) {\n      return value;\n    }\n    var iter = IndexedCollection$$1(value);\n    var size = iter.size;\n    if (size === 0) {\n      return empty;\n    }\n    assertNotInfinite(size);\n    if (size > 0 && size < SIZE) {\n      return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n    }\n    return empty.withMutations(function (list) {\n      list.setSize(size);\n      iter.forEach(function (v, i) { return list.set(i, v); });\n    });\n  }\n\n  if ( IndexedCollection$$1 ) List.__proto__ = IndexedCollection$$1;\n  List.prototype = Object.create( IndexedCollection$$1 && IndexedCollection$$1.prototype );\n  List.prototype.constructor = List;\n\n  List.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  List.prototype.toString = function toString () {\n    return this.__toString('List [', ']');\n  };\n\n  // @pragma Access\n\n  List.prototype.get = function get (index, notSetValue) {\n    index = wrapIndex(this, index);\n    if (index >= 0 && index < this.size) {\n      index += this._origin;\n      var node = listNodeFor(this, index);\n      return node && node.array[index & MASK];\n    }\n    return notSetValue;\n  };\n\n  // @pragma Modification\n\n  List.prototype.set = function set (index, value) {\n    return updateList(this, index, value);\n  };\n\n  List.prototype.remove = function remove (index) {\n    return !this.has(index)\n      ? this\n      : index === 0\n        ? this.shift()\n        : index === this.size - 1\n          ? this.pop()\n          : this.splice(index, 1);\n  };\n\n  List.prototype.insert = function insert (index, value) {\n    return this.splice(index, 0, value);\n  };\n\n  List.prototype.clear = function clear () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = this._origin = this._capacity = 0;\n      this._level = SHIFT;\n      this._root = this._tail = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyList();\n  };\n\n  List.prototype.push = function push (/*...values*/) {\n    var values = arguments;\n    var oldSize = this.size;\n    return this.withMutations(function (list) {\n      setListBounds(list, 0, oldSize + values.length);\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(oldSize + ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.pop = function pop () {\n    return setListBounds(this, 0, -1);\n  };\n\n  List.prototype.unshift = function unshift (/*...values*/) {\n    var values = arguments;\n    return this.withMutations(function (list) {\n      setListBounds(list, -values.length);\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.shift = function shift () {\n    return setListBounds(this, 1);\n  };\n\n  // @pragma Composition\n\n  List.prototype.concat = function concat (/*...collections*/) {\n    var arguments$1 = arguments;\n\n    var seqs = [];\n    for (var i = 0; i < arguments.length; i++) {\n      var argument = arguments$1[i];\n      var seq = IndexedCollection$$1(\n        typeof argument !== 'string' && hasIterator(argument)\n          ? argument\n          : [argument]\n      );\n      if (seq.size !== 0) {\n        seqs.push(seq);\n      }\n    }\n    if (seqs.length === 0) {\n      return this;\n    }\n    if (this.size === 0 && !this.__ownerID && seqs.length === 1) {\n      return this.constructor(seqs[0]);\n    }\n    return this.withMutations(function (list) {\n      seqs.forEach(function (seq) { return seq.forEach(function (value) { return list.push(value); }); });\n    });\n  };\n\n  List.prototype.setSize = function setSize (size) {\n    return setListBounds(this, 0, size);\n  };\n\n  List.prototype.map = function map (mapper, context) {\n    var this$1 = this;\n\n    return this.withMutations(function (list) {\n      for (var i = 0; i < this$1.size; i++) {\n        list.set(i, mapper.call(context, list.get(i), i, list));\n      }\n    });\n  };\n\n  // @pragma Iteration\n\n  List.prototype.slice = function slice (begin, end) {\n    var size = this.size;\n    if (wholeSlice(begin, end, size)) {\n      return this;\n    }\n    return setListBounds(\n      this,\n      resolveBegin(begin, size),\n      resolveEnd(end, size)\n    );\n  };\n\n  List.prototype.__iterator = function __iterator (type, reverse) {\n    var index = reverse ? this.size : 0;\n    var values = iterateList(this, reverse);\n    return new Iterator(function () {\n      var value = values();\n      return value === DONE\n        ? iteratorDone()\n        : iteratorValue(type, reverse ? --index : index++, value);\n    });\n  };\n\n  List.prototype.__iterate = function __iterate (fn, reverse) {\n    var index = reverse ? this.size : 0;\n    var values = iterateList(this, reverse);\n    var value;\n    while ((value = values()) !== DONE) {\n      if (fn(value, reverse ? --index : index++, this) === false) {\n        break;\n      }\n    }\n    return index;\n  };\n\n  List.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyList();\n      }\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeList(\n      this._origin,\n      this._capacity,\n      this._level,\n      this._root,\n      this._tail,\n      ownerID,\n      this.__hash\n    );\n  };\n\n  return List;\n}(IndexedCollection));\n\nList.isList = isList;\n\nvar ListPrototype = List.prototype;\nListPrototype[IS_LIST_SYMBOL] = true;\nListPrototype[DELETE] = ListPrototype.remove;\nListPrototype.merge = ListPrototype.concat;\nListPrototype.setIn = setIn$1;\nListPrototype.deleteIn = ListPrototype.removeIn = deleteIn;\nListPrototype.update = update$1;\nListPrototype.updateIn = updateIn$1;\nListPrototype.mergeIn = mergeIn;\nListPrototype.mergeDeepIn = mergeDeepIn;\nListPrototype.withMutations = withMutations;\nListPrototype.wasAltered = wasAltered;\nListPrototype.asImmutable = asImmutable;\nListPrototype['@@transducer/init'] = ListPrototype.asMutable = asMutable;\nListPrototype['@@transducer/step'] = function(result, arr) {\n  return result.push(arr);\n};\nListPrototype['@@transducer/result'] = function(obj) {\n  return obj.asImmutable();\n};\n\nvar VNode = function VNode(array, ownerID) {\n  this.array = array;\n  this.ownerID = ownerID;\n};\n\n// TODO: seems like these methods are very similar\n\nVNode.prototype.removeBefore = function removeBefore (ownerID, level, index) {\n  if (index === level ? 1 << level : this.array.length === 0) {\n    return this;\n  }\n  var originIndex = (index >>> level) & MASK;\n  if (originIndex >= this.array.length) {\n    return new VNode([], ownerID);\n  }\n  var removingFirst = originIndex === 0;\n  var newChild;\n  if (level > 0) {\n    var oldChild = this.array[originIndex];\n    newChild =\n      oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n    if (newChild === oldChild && removingFirst) {\n      return this;\n    }\n  }\n  if (removingFirst && !newChild) {\n    return this;\n  }\n  var editable = editableVNode(this, ownerID);\n  if (!removingFirst) {\n    for (var ii = 0; ii < originIndex; ii++) {\n      editable.array[ii] = undefined;\n    }\n  }\n  if (newChild) {\n    editable.array[originIndex] = newChild;\n  }\n  return editable;\n};\n\nVNode.prototype.removeAfter = function removeAfter (ownerID, level, index) {\n  if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n    return this;\n  }\n  var sizeIndex = ((index - 1) >>> level) & MASK;\n  if (sizeIndex >= this.array.length) {\n    return this;\n  }\n\n  var newChild;\n  if (level > 0) {\n    var oldChild = this.array[sizeIndex];\n    newChild =\n      oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n    if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n      return this;\n    }\n  }\n\n  var editable = editableVNode(this, ownerID);\n  editable.array.splice(sizeIndex + 1);\n  if (newChild) {\n    editable.array[sizeIndex] = newChild;\n  }\n  return editable;\n};\n\nvar DONE = {};\n\nfunction iterateList(list, reverse) {\n  var left = list._origin;\n  var right = list._capacity;\n  var tailPos = getTailOffset(right);\n  var tail = list._tail;\n\n  return iterateNodeOrLeaf(list._root, list._level, 0);\n\n  function iterateNodeOrLeaf(node, level, offset) {\n    return level === 0\n      ? iterateLeaf(node, offset)\n      : iterateNode(node, level, offset);\n  }\n\n  function iterateLeaf(node, offset) {\n    var array = offset === tailPos ? tail && tail.array : node && node.array;\n    var from = offset > left ? 0 : left - offset;\n    var to = right - offset;\n    if (to > SIZE) {\n      to = SIZE;\n    }\n    return function () {\n      if (from === to) {\n        return DONE;\n      }\n      var idx = reverse ? --to : from++;\n      return array && array[idx];\n    };\n  }\n\n  function iterateNode(node, level, offset) {\n    var values;\n    var array = node && node.array;\n    var from = offset > left ? 0 : (left - offset) >> level;\n    var to = ((right - offset) >> level) + 1;\n    if (to > SIZE) {\n      to = SIZE;\n    }\n    return function () {\n      while (true) {\n        if (values) {\n          var value = values();\n          if (value !== DONE) {\n            return value;\n          }\n          values = null;\n        }\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        values = iterateNodeOrLeaf(\n          array && array[idx],\n          level - SHIFT,\n          offset + (idx << level)\n        );\n      }\n    };\n  }\n}\n\nfunction makeList(origin, capacity, level, root, tail, ownerID, hash) {\n  var list = Object.create(ListPrototype);\n  list.size = capacity - origin;\n  list._origin = origin;\n  list._capacity = capacity;\n  list._level = level;\n  list._root = root;\n  list._tail = tail;\n  list.__ownerID = ownerID;\n  list.__hash = hash;\n  list.__altered = false;\n  return list;\n}\n\nvar EMPTY_LIST;\nfunction emptyList() {\n  return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n}\n\nfunction updateList(list, index, value) {\n  index = wrapIndex(list, index);\n\n  if (index !== index) {\n    return list;\n  }\n\n  if (index >= list.size || index < 0) {\n    return list.withMutations(function (list) {\n      index < 0\n        ? setListBounds(list, index).set(0, value)\n        : setListBounds(list, 0, index + 1).set(index, value);\n    });\n  }\n\n  index += list._origin;\n\n  var newTail = list._tail;\n  var newRoot = list._root;\n  var didAlter = MakeRef();\n  if (index >= getTailOffset(list._capacity)) {\n    newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n  } else {\n    newRoot = updateVNode(\n      newRoot,\n      list.__ownerID,\n      list._level,\n      index,\n      value,\n      didAlter\n    );\n  }\n\n  if (!didAlter.value) {\n    return list;\n  }\n\n  if (list.__ownerID) {\n    list._root = newRoot;\n    list._tail = newTail;\n    list.__hash = undefined;\n    list.__altered = true;\n    return list;\n  }\n  return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n}\n\nfunction updateVNode(node, ownerID, level, index, value, didAlter) {\n  var idx = (index >>> level) & MASK;\n  var nodeHas = node && idx < node.array.length;\n  if (!nodeHas && value === undefined) {\n    return node;\n  }\n\n  var newNode;\n\n  if (level > 0) {\n    var lowerNode = node && node.array[idx];\n    var newLowerNode = updateVNode(\n      lowerNode,\n      ownerID,\n      level - SHIFT,\n      index,\n      value,\n      didAlter\n    );\n    if (newLowerNode === lowerNode) {\n      return node;\n    }\n    newNode = editableVNode(node, ownerID);\n    newNode.array[idx] = newLowerNode;\n    return newNode;\n  }\n\n  if (nodeHas && node.array[idx] === value) {\n    return node;\n  }\n\n  if (didAlter) {\n    SetRef(didAlter);\n  }\n\n  newNode = editableVNode(node, ownerID);\n  if (value === undefined && idx === newNode.array.length - 1) {\n    newNode.array.pop();\n  } else {\n    newNode.array[idx] = value;\n  }\n  return newNode;\n}\n\nfunction editableVNode(node, ownerID) {\n  if (ownerID && node && ownerID === node.ownerID) {\n    return node;\n  }\n  return new VNode(node ? node.array.slice() : [], ownerID);\n}\n\nfunction listNodeFor(list, rawIndex) {\n  if (rawIndex >= getTailOffset(list._capacity)) {\n    return list._tail;\n  }\n  if (rawIndex < 1 << (list._level + SHIFT)) {\n    var node = list._root;\n    var level = list._level;\n    while (node && level > 0) {\n      node = node.array[(rawIndex >>> level) & MASK];\n      level -= SHIFT;\n    }\n    return node;\n  }\n}\n\nfunction setListBounds(list, begin, end) {\n  // Sanitize begin & end using this shorthand for ToInt32(argument)\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n  if (begin !== undefined) {\n    begin |= 0;\n  }\n  if (end !== undefined) {\n    end |= 0;\n  }\n  var owner = list.__ownerID || new OwnerID();\n  var oldOrigin = list._origin;\n  var oldCapacity = list._capacity;\n  var newOrigin = oldOrigin + begin;\n  var newCapacity =\n    end === undefined\n      ? oldCapacity\n      : end < 0\n        ? oldCapacity + end\n        : oldOrigin + end;\n  if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n    return list;\n  }\n\n  // If it's going to end after it starts, it's empty.\n  if (newOrigin >= newCapacity) {\n    return list.clear();\n  }\n\n  var newLevel = list._level;\n  var newRoot = list._root;\n\n  // New origin might need creating a higher root.\n  var offsetShift = 0;\n  while (newOrigin + offsetShift < 0) {\n    newRoot = new VNode(\n      newRoot && newRoot.array.length ? [undefined, newRoot] : [],\n      owner\n    );\n    newLevel += SHIFT;\n    offsetShift += 1 << newLevel;\n  }\n  if (offsetShift) {\n    newOrigin += offsetShift;\n    oldOrigin += offsetShift;\n    newCapacity += offsetShift;\n    oldCapacity += offsetShift;\n  }\n\n  var oldTailOffset = getTailOffset(oldCapacity);\n  var newTailOffset = getTailOffset(newCapacity);\n\n  // New size might need creating a higher root.\n  while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n    newRoot = new VNode(\n      newRoot && newRoot.array.length ? [newRoot] : [],\n      owner\n    );\n    newLevel += SHIFT;\n  }\n\n  // Locate or create the new tail.\n  var oldTail = list._tail;\n  var newTail =\n    newTailOffset < oldTailOffset\n      ? listNodeFor(list, newCapacity - 1)\n      : newTailOffset > oldTailOffset\n        ? new VNode([], owner)\n        : oldTail;\n\n  // Merge Tail into tree.\n  if (\n    oldTail &&\n    newTailOffset > oldTailOffset &&\n    newOrigin < oldCapacity &&\n    oldTail.array.length\n  ) {\n    newRoot = editableVNode(newRoot, owner);\n    var node = newRoot;\n    for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n      var idx = (oldTailOffset >>> level) & MASK;\n      node = node.array[idx] = editableVNode(node.array[idx], owner);\n    }\n    node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n  }\n\n  // If the size has been reduced, there's a chance the tail needs to be trimmed.\n  if (newCapacity < oldCapacity) {\n    newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n  }\n\n  // If the new origin is within the tail, then we do not need a root.\n  if (newOrigin >= newTailOffset) {\n    newOrigin -= newTailOffset;\n    newCapacity -= newTailOffset;\n    newLevel = SHIFT;\n    newRoot = null;\n    newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n  } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n    offsetShift = 0;\n\n    // Identify the new top root node of the subtree of the old root.\n    while (newRoot) {\n      var beginIndex = (newOrigin >>> newLevel) & MASK;\n      if ((beginIndex !== newTailOffset >>> newLevel) & MASK) {\n        break;\n      }\n      if (beginIndex) {\n        offsetShift += (1 << newLevel) * beginIndex;\n      }\n      newLevel -= SHIFT;\n      newRoot = newRoot.array[beginIndex];\n    }\n\n    // Trim the new sides of the new root.\n    if (newRoot && newOrigin > oldOrigin) {\n      newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n    }\n    if (newRoot && newTailOffset < oldTailOffset) {\n      newRoot = newRoot.removeAfter(\n        owner,\n        newLevel,\n        newTailOffset - offsetShift\n      );\n    }\n    if (offsetShift) {\n      newOrigin -= offsetShift;\n      newCapacity -= offsetShift;\n    }\n  }\n\n  if (list.__ownerID) {\n    list.size = newCapacity - newOrigin;\n    list._origin = newOrigin;\n    list._capacity = newCapacity;\n    list._level = newLevel;\n    list._root = newRoot;\n    list._tail = newTail;\n    list.__hash = undefined;\n    list.__altered = true;\n    return list;\n  }\n  return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n}\n\nfunction getTailOffset(size) {\n  return size < SIZE ? 0 : ((size - 1) >>> SHIFT) << SHIFT;\n}\n\nvar OrderedMap = /*@__PURE__*/(function (Map$$1) {\n  function OrderedMap(value) {\n    return value === null || value === undefined\n      ? emptyOrderedMap()\n      : isOrderedMap(value)\n        ? value\n        : emptyOrderedMap().withMutations(function (map) {\n            var iter = KeyedCollection(value);\n            assertNotInfinite(iter.size);\n            iter.forEach(function (v, k) { return map.set(k, v); });\n          });\n  }\n\n  if ( Map$$1 ) OrderedMap.__proto__ = Map$$1;\n  OrderedMap.prototype = Object.create( Map$$1 && Map$$1.prototype );\n  OrderedMap.prototype.constructor = OrderedMap;\n\n  OrderedMap.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  OrderedMap.prototype.toString = function toString () {\n    return this.__toString('OrderedMap {', '}');\n  };\n\n  // @pragma Access\n\n  OrderedMap.prototype.get = function get (k, notSetValue) {\n    var index = this._map.get(k);\n    return index !== undefined ? this._list.get(index)[1] : notSetValue;\n  };\n\n  // @pragma Modification\n\n  OrderedMap.prototype.clear = function clear () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._map.clear();\n      this._list.clear();\n      return this;\n    }\n    return emptyOrderedMap();\n  };\n\n  OrderedMap.prototype.set = function set (k, v) {\n    return updateOrderedMap(this, k, v);\n  };\n\n  OrderedMap.prototype.remove = function remove (k) {\n    return updateOrderedMap(this, k, NOT_SET);\n  };\n\n  OrderedMap.prototype.wasAltered = function wasAltered () {\n    return this._map.wasAltered() || this._list.wasAltered();\n  };\n\n  OrderedMap.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1 = this;\n\n    return this._list.__iterate(\n      function (entry) { return entry && fn(entry[1], entry[0], this$1); },\n      reverse\n    );\n  };\n\n  OrderedMap.prototype.__iterator = function __iterator (type, reverse) {\n    return this._list.fromEntrySeq().__iterator(type, reverse);\n  };\n\n  OrderedMap.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map.__ensureOwner(ownerID);\n    var newList = this._list.__ensureOwner(ownerID);\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyOrderedMap();\n      }\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      this._list = newList;\n      return this;\n    }\n    return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n  };\n\n  return OrderedMap;\n}(Map));\n\nOrderedMap.isOrderedMap = isOrderedMap;\n\nOrderedMap.prototype[IS_ORDERED_SYMBOL] = true;\nOrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\nfunction makeOrderedMap(map, list, ownerID, hash) {\n  var omap = Object.create(OrderedMap.prototype);\n  omap.size = map ? map.size : 0;\n  omap._map = map;\n  omap._list = list;\n  omap.__ownerID = ownerID;\n  omap.__hash = hash;\n  return omap;\n}\n\nvar EMPTY_ORDERED_MAP;\nfunction emptyOrderedMap() {\n  return (\n    EMPTY_ORDERED_MAP ||\n    (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()))\n  );\n}\n\nfunction updateOrderedMap(omap, k, v) {\n  var map = omap._map;\n  var list = omap._list;\n  var i = map.get(k);\n  var has = i !== undefined;\n  var newMap;\n  var newList;\n  if (v === NOT_SET) {\n    // removed\n    if (!has) {\n      return omap;\n    }\n    if (list.size >= SIZE && list.size >= map.size * 2) {\n      newList = list.filter(function (entry, idx) { return entry !== undefined && i !== idx; });\n      newMap = newList\n        .toKeyedSeq()\n        .map(function (entry) { return entry[0]; })\n        .flip()\n        .toMap();\n      if (omap.__ownerID) {\n        newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n      }\n    } else {\n      newMap = map.remove(k);\n      newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n    }\n  } else if (has) {\n    if (v === list.get(i)[1]) {\n      return omap;\n    }\n    newMap = map;\n    newList = list.set(i, [k, v]);\n  } else {\n    newMap = map.set(k, list.size);\n    newList = list.set(list.size, [k, v]);\n  }\n  if (omap.__ownerID) {\n    omap.size = newMap.size;\n    omap._map = newMap;\n    omap._list = newList;\n    omap.__hash = undefined;\n    return omap;\n  }\n  return makeOrderedMap(newMap, newList);\n}\n\nvar IS_STACK_SYMBOL = '@@__IMMUTABLE_STACK__@@';\n\nfunction isStack(maybeStack) {\n  return Boolean(maybeStack && maybeStack[IS_STACK_SYMBOL]);\n}\n\nvar Stack = /*@__PURE__*/(function (IndexedCollection$$1) {\n  function Stack(value) {\n    return value === null || value === undefined\n      ? emptyStack()\n      : isStack(value)\n        ? value\n        : emptyStack().pushAll(value);\n  }\n\n  if ( IndexedCollection$$1 ) Stack.__proto__ = IndexedCollection$$1;\n  Stack.prototype = Object.create( IndexedCollection$$1 && IndexedCollection$$1.prototype );\n  Stack.prototype.constructor = Stack;\n\n  Stack.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  Stack.prototype.toString = function toString () {\n    return this.__toString('Stack [', ']');\n  };\n\n  // @pragma Access\n\n  Stack.prototype.get = function get (index, notSetValue) {\n    var head = this._head;\n    index = wrapIndex(this, index);\n    while (head && index--) {\n      head = head.next;\n    }\n    return head ? head.value : notSetValue;\n  };\n\n  Stack.prototype.peek = function peek () {\n    return this._head && this._head.value;\n  };\n\n  // @pragma Modification\n\n  Stack.prototype.push = function push (/*...values*/) {\n    var arguments$1 = arguments;\n\n    if (arguments.length === 0) {\n      return this;\n    }\n    var newSize = this.size + arguments.length;\n    var head = this._head;\n    for (var ii = arguments.length - 1; ii >= 0; ii--) {\n      head = {\n        value: arguments$1[ii],\n        next: head,\n      };\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pushAll = function pushAll (iter) {\n    iter = IndexedCollection$$1(iter);\n    if (iter.size === 0) {\n      return this;\n    }\n    if (this.size === 0 && isStack(iter)) {\n      return iter;\n    }\n    assertNotInfinite(iter.size);\n    var newSize = this.size;\n    var head = this._head;\n    iter.__iterate(function (value) {\n      newSize++;\n      head = {\n        value: value,\n        next: head,\n      };\n    }, /* reverse */ true);\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pop = function pop () {\n    return this.slice(1);\n  };\n\n  Stack.prototype.clear = function clear () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._head = undefined;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyStack();\n  };\n\n  Stack.prototype.slice = function slice (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    var resolvedBegin = resolveBegin(begin, this.size);\n    var resolvedEnd = resolveEnd(end, this.size);\n    if (resolvedEnd !== this.size) {\n      // super.slice(begin, end);\n      return IndexedCollection$$1.prototype.slice.call(this, begin, end);\n    }\n    var newSize = this.size - resolvedBegin;\n    var head = this._head;\n    while (resolvedBegin--) {\n      head = head.next;\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  // @pragma Mutability\n\n  Stack.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyStack();\n      }\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeStack(this.size, this._head, ownerID, this.__hash);\n  };\n\n  // @pragma Iteration\n\n  Stack.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return new ArraySeq(this.toArray()).__iterate(\n        function (v, k) { return fn(v, k, this$1); },\n        reverse\n      );\n    }\n    var iterations = 0;\n    var node = this._head;\n    while (node) {\n      if (fn(node.value, iterations++, this) === false) {\n        break;\n      }\n      node = node.next;\n    }\n    return iterations;\n  };\n\n  Stack.prototype.__iterator = function __iterator (type, reverse) {\n    if (reverse) {\n      return new ArraySeq(this.toArray()).__iterator(type, reverse);\n    }\n    var iterations = 0;\n    var node = this._head;\n    return new Iterator(function () {\n      if (node) {\n        var value = node.value;\n        node = node.next;\n        return iteratorValue(type, iterations++, value);\n      }\n      return iteratorDone();\n    });\n  };\n\n  return Stack;\n}(IndexedCollection));\n\nStack.isStack = isStack;\n\nvar StackPrototype = Stack.prototype;\nStackPrototype[IS_STACK_SYMBOL] = true;\nStackPrototype.shift = StackPrototype.pop;\nStackPrototype.unshift = StackPrototype.push;\nStackPrototype.unshiftAll = StackPrototype.pushAll;\nStackPrototype.withMutations = withMutations;\nStackPrototype.wasAltered = wasAltered;\nStackPrototype.asImmutable = asImmutable;\nStackPrototype['@@transducer/init'] = StackPrototype.asMutable = asMutable;\nStackPrototype['@@transducer/step'] = function(result, arr) {\n  return result.unshift(arr);\n};\nStackPrototype['@@transducer/result'] = function(obj) {\n  return obj.asImmutable();\n};\n\nfunction makeStack(size, head, ownerID, hash) {\n  var map = Object.create(StackPrototype);\n  map.size = size;\n  map._head = head;\n  map.__ownerID = ownerID;\n  map.__hash = hash;\n  map.__altered = false;\n  return map;\n}\n\nvar EMPTY_STACK;\nfunction emptyStack() {\n  return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n}\n\nvar IS_SET_SYMBOL = '@@__IMMUTABLE_SET__@@';\n\nfunction isSet(maybeSet) {\n  return Boolean(maybeSet && maybeSet[IS_SET_SYMBOL]);\n}\n\nfunction isOrderedSet(maybeOrderedSet) {\n  return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n}\n\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (\n    !isCollection(b) ||\n    (a.size !== undefined && b.size !== undefined && a.size !== b.size) ||\n    (a.__hash !== undefined &&\n      b.__hash !== undefined &&\n      a.__hash !== b.__hash) ||\n    isKeyed(a) !== isKeyed(b) ||\n    isIndexed(a) !== isIndexed(b) ||\n    isOrdered(a) !== isOrdered(b)\n  ) {\n    return false;\n  }\n\n  if (a.size === 0 && b.size === 0) {\n    return true;\n  }\n\n  var notAssociative = !isAssociative(a);\n\n  if (isOrdered(a)) {\n    var entries = a.entries();\n    return (\n      b.every(function (v, k) {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done\n    );\n  }\n\n  var flipped = false;\n\n  if (a.size === undefined) {\n    if (b.size === undefined) {\n      if (typeof a.cacheResult === 'function') {\n        a.cacheResult();\n      }\n    } else {\n      flipped = true;\n      var _ = a;\n      a = b;\n      b = _;\n    }\n  }\n\n  var allEqual = true;\n  var bSize = b.__iterate(function (v, k) {\n    if (\n      notAssociative\n        ? !a.has(v)\n        : flipped\n          ? !is(v, a.get(k, NOT_SET))\n          : !is(a.get(k, NOT_SET), v)\n    ) {\n      allEqual = false;\n      return false;\n    }\n  });\n\n  return allEqual && a.size === bSize;\n}\n\n/**\n * Contributes additional methods to a constructor\n */\nfunction mixin(ctor, methods) {\n  var keyCopier = function (key) {\n    ctor.prototype[key] = methods[key];\n  };\n  Object.keys(methods).forEach(keyCopier);\n  Object.getOwnPropertySymbols &&\n    Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n  return ctor;\n}\n\nfunction toJS(value) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n  if (!isCollection(value)) {\n    if (!isDataStructure(value)) {\n      return value;\n    }\n    value = Seq(value);\n  }\n  if (isKeyed(value)) {\n    var result$1 = {};\n    value.__iterate(function (v, k) {\n      result$1[k] = toJS(v);\n    });\n    return result$1;\n  }\n  var result = [];\n  value.__iterate(function (v) {\n    result.push(toJS(v));\n  });\n  return result;\n}\n\nvar Set = /*@__PURE__*/(function (SetCollection$$1) {\n  function Set(value) {\n    return value === null || value === undefined\n      ? emptySet()\n      : isSet(value) && !isOrdered(value)\n        ? value\n        : emptySet().withMutations(function (set) {\n            var iter = SetCollection$$1(value);\n            assertNotInfinite(iter.size);\n            iter.forEach(function (v) { return set.add(v); });\n          });\n  }\n\n  if ( SetCollection$$1 ) Set.__proto__ = SetCollection$$1;\n  Set.prototype = Object.create( SetCollection$$1 && SetCollection$$1.prototype );\n  Set.prototype.constructor = Set;\n\n  Set.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  Set.fromKeys = function fromKeys (value) {\n    return this(KeyedCollection(value).keySeq());\n  };\n\n  Set.intersect = function intersect (sets) {\n    sets = Collection(sets).toArray();\n    return sets.length\n      ? SetPrototype.intersect.apply(Set(sets.pop()), sets)\n      : emptySet();\n  };\n\n  Set.union = function union (sets) {\n    sets = Collection(sets).toArray();\n    return sets.length\n      ? SetPrototype.union.apply(Set(sets.pop()), sets)\n      : emptySet();\n  };\n\n  Set.prototype.toString = function toString () {\n    return this.__toString('Set {', '}');\n  };\n\n  // @pragma Access\n\n  Set.prototype.has = function has (value) {\n    return this._map.has(value);\n  };\n\n  // @pragma Modification\n\n  Set.prototype.add = function add (value) {\n    return updateSet(this, this._map.set(value, value));\n  };\n\n  Set.prototype.remove = function remove (value) {\n    return updateSet(this, this._map.remove(value));\n  };\n\n  Set.prototype.clear = function clear () {\n    return updateSet(this, this._map.clear());\n  };\n\n  // @pragma Composition\n\n  Set.prototype.map = function map (mapper, context) {\n    var this$1 = this;\n\n    var removes = [];\n    var adds = [];\n    this.forEach(function (value) {\n      var mapped = mapper.call(context, value, value, this$1);\n      if (mapped !== value) {\n        removes.push(value);\n        adds.push(mapped);\n      }\n    });\n    return this.withMutations(function (set) {\n      removes.forEach(function (value) { return set.remove(value); });\n      adds.forEach(function (value) { return set.add(value); });\n    });\n  };\n\n  Set.prototype.union = function union () {\n    var iters = [], len = arguments.length;\n    while ( len-- ) iters[ len ] = arguments[ len ];\n\n    iters = iters.filter(function (x) { return x.size !== 0; });\n    if (iters.length === 0) {\n      return this;\n    }\n    if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n      return this.constructor(iters[0]);\n    }\n    return this.withMutations(function (set) {\n      for (var ii = 0; ii < iters.length; ii++) {\n        SetCollection$$1(iters[ii]).forEach(function (value) { return set.add(value); });\n      }\n    });\n  };\n\n  Set.prototype.intersect = function intersect () {\n    var iters = [], len = arguments.length;\n    while ( len-- ) iters[ len ] = arguments[ len ];\n\n    if (iters.length === 0) {\n      return this;\n    }\n    iters = iters.map(function (iter) { return SetCollection$$1(iter); });\n    var toRemove = [];\n    this.forEach(function (value) {\n      if (!iters.every(function (iter) { return iter.includes(value); })) {\n        toRemove.push(value);\n      }\n    });\n    return this.withMutations(function (set) {\n      toRemove.forEach(function (value) {\n        set.remove(value);\n      });\n    });\n  };\n\n  Set.prototype.subtract = function subtract () {\n    var iters = [], len = arguments.length;\n    while ( len-- ) iters[ len ] = arguments[ len ];\n\n    if (iters.length === 0) {\n      return this;\n    }\n    iters = iters.map(function (iter) { return SetCollection$$1(iter); });\n    var toRemove = [];\n    this.forEach(function (value) {\n      if (iters.some(function (iter) { return iter.includes(value); })) {\n        toRemove.push(value);\n      }\n    });\n    return this.withMutations(function (set) {\n      toRemove.forEach(function (value) {\n        set.remove(value);\n      });\n    });\n  };\n\n  Set.prototype.sort = function sort (comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator));\n  };\n\n  Set.prototype.sortBy = function sortBy (mapper, comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator, mapper));\n  };\n\n  Set.prototype.wasAltered = function wasAltered () {\n    return this._map.wasAltered();\n  };\n\n  Set.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1 = this;\n\n    return this._map.__iterate(function (k) { return fn(k, k, this$1); }, reverse);\n  };\n\n  Set.prototype.__iterator = function __iterator (type, reverse) {\n    return this._map.__iterator(type, reverse);\n  };\n\n  Set.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map.__ensureOwner(ownerID);\n    if (!ownerID) {\n      if (this.size === 0) {\n        return this.__empty();\n      }\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n    return this.__make(newMap, ownerID);\n  };\n\n  return Set;\n}(SetCollection));\n\nSet.isSet = isSet;\n\nvar SetPrototype = Set.prototype;\nSetPrototype[IS_SET_SYMBOL] = true;\nSetPrototype[DELETE] = SetPrototype.remove;\nSetPrototype.merge = SetPrototype.concat = SetPrototype.union;\nSetPrototype.withMutations = withMutations;\nSetPrototype.asImmutable = asImmutable;\nSetPrototype['@@transducer/init'] = SetPrototype.asMutable = asMutable;\nSetPrototype['@@transducer/step'] = function(result, arr) {\n  return result.add(arr);\n};\nSetPrototype['@@transducer/result'] = function(obj) {\n  return obj.asImmutable();\n};\n\nSetPrototype.__empty = emptySet;\nSetPrototype.__make = makeSet;\n\nfunction updateSet(set, newMap) {\n  if (set.__ownerID) {\n    set.size = newMap.size;\n    set._map = newMap;\n    return set;\n  }\n  return newMap === set._map\n    ? set\n    : newMap.size === 0\n      ? set.__empty()\n      : set.__make(newMap);\n}\n\nfunction makeSet(map, ownerID) {\n  var set = Object.create(SetPrototype);\n  set.size = map ? map.size : 0;\n  set._map = map;\n  set.__ownerID = ownerID;\n  return set;\n}\n\nvar EMPTY_SET;\nfunction emptySet() {\n  return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n}\n\n/**\n * Returns a lazy seq of nums from start (inclusive) to end\n * (exclusive), by step, where start defaults to 0, step to 1, and end to\n * infinity. When start is equal to end, returns empty list.\n */\nvar Range = /*@__PURE__*/(function (IndexedSeq$$1) {\n  function Range(start, end, step) {\n    if (!(this instanceof Range)) {\n      return new Range(start, end, step);\n    }\n    invariant(step !== 0, 'Cannot step a Range by 0');\n    start = start || 0;\n    if (end === undefined) {\n      end = Infinity;\n    }\n    step = step === undefined ? 1 : Math.abs(step);\n    if (end < start) {\n      step = -step;\n    }\n    this._start = start;\n    this._end = end;\n    this._step = step;\n    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n    if (this.size === 0) {\n      if (EMPTY_RANGE) {\n        return EMPTY_RANGE;\n      }\n      EMPTY_RANGE = this;\n    }\n  }\n\n  if ( IndexedSeq$$1 ) Range.__proto__ = IndexedSeq$$1;\n  Range.prototype = Object.create( IndexedSeq$$1 && IndexedSeq$$1.prototype );\n  Range.prototype.constructor = Range;\n\n  Range.prototype.toString = function toString () {\n    if (this.size === 0) {\n      return 'Range []';\n    }\n    return (\n      'Range [ ' +\n      this._start +\n      '...' +\n      this._end +\n      (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]'\n    );\n  };\n\n  Range.prototype.get = function get (index, notSetValue) {\n    return this.has(index)\n      ? this._start + wrapIndex(this, index) * this._step\n      : notSetValue;\n  };\n\n  Range.prototype.includes = function includes (searchValue) {\n    var possibleIndex = (searchValue - this._start) / this._step;\n    return (\n      possibleIndex >= 0 &&\n      possibleIndex < this.size &&\n      possibleIndex === Math.floor(possibleIndex)\n    );\n  };\n\n  Range.prototype.slice = function slice (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    begin = resolveBegin(begin, this.size);\n    end = resolveEnd(end, this.size);\n    if (end <= begin) {\n      return new Range(0, 0);\n    }\n    return new Range(\n      this.get(begin, this._end),\n      this.get(end, this._end),\n      this._step\n    );\n  };\n\n  Range.prototype.indexOf = function indexOf (searchValue) {\n    var offsetValue = searchValue - this._start;\n    if (offsetValue % this._step === 0) {\n      var index = offsetValue / this._step;\n      if (index >= 0 && index < this.size) {\n        return index;\n      }\n    }\n    return -1;\n  };\n\n  Range.prototype.lastIndexOf = function lastIndexOf (searchValue) {\n    return this.indexOf(searchValue);\n  };\n\n  Range.prototype.__iterate = function __iterate (fn, reverse) {\n    var size = this.size;\n    var step = this._step;\n    var value = reverse ? this._start + (size - 1) * step : this._start;\n    var i = 0;\n    while (i !== size) {\n      if (fn(value, reverse ? size - ++i : i++, this) === false) {\n        break;\n      }\n      value += reverse ? -step : step;\n    }\n    return i;\n  };\n\n  Range.prototype.__iterator = function __iterator (type, reverse) {\n    var size = this.size;\n    var step = this._step;\n    var value = reverse ? this._start + (size - 1) * step : this._start;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n      var v = value;\n      value += reverse ? -step : step;\n      return iteratorValue(type, reverse ? size - ++i : i++, v);\n    });\n  };\n\n  Range.prototype.equals = function equals (other) {\n    return other instanceof Range\n      ? this._start === other._start &&\n          this._end === other._end &&\n          this._step === other._step\n      : deepEqual(this, other);\n  };\n\n  return Range;\n}(IndexedSeq));\n\nvar EMPTY_RANGE;\n\nfunction getIn(collection, searchKeyPath, notSetValue) {\n  var keyPath = coerceKeyPath(searchKeyPath);\n  var i = 0;\n  while (i !== keyPath.length) {\n    collection = get(collection, keyPath[i++], NOT_SET);\n    if (collection === NOT_SET) {\n      return notSetValue;\n    }\n  }\n  return collection;\n}\n\nfunction getIn$1(searchKeyPath, notSetValue) {\n  return getIn(this, searchKeyPath, notSetValue);\n}\n\nfunction hasIn(collection, keyPath) {\n  return getIn(collection, keyPath, NOT_SET) !== NOT_SET;\n}\n\nfunction hasIn$1(searchKeyPath) {\n  return hasIn(this, searchKeyPath);\n}\n\nfunction toObject() {\n  assertNotInfinite(this.size);\n  var object = {};\n  this.__iterate(function (v, k) {\n    object[k] = v;\n  });\n  return object;\n}\n\n// Note: all of these methods are deprecated.\nCollection.isIterable = isCollection;\nCollection.isKeyed = isKeyed;\nCollection.isIndexed = isIndexed;\nCollection.isAssociative = isAssociative;\nCollection.isOrdered = isOrdered;\n\nCollection.Iterator = Iterator;\n\nmixin(Collection, {\n  // ### Conversion to other types\n\n  toArray: function toArray() {\n    assertNotInfinite(this.size);\n    var array = new Array(this.size || 0);\n    var useTuples = isKeyed(this);\n    var i = 0;\n    this.__iterate(function (v, k) {\n      // Keyed collections produce an array of tuples.\n      array[i++] = useTuples ? [k, v] : v;\n    });\n    return array;\n  },\n\n  toIndexedSeq: function toIndexedSeq() {\n    return new ToIndexedSequence(this);\n  },\n\n  toJS: function toJS$1() {\n    return toJS(this);\n  },\n\n  toKeyedSeq: function toKeyedSeq() {\n    return new ToKeyedSequence(this, true);\n  },\n\n  toMap: function toMap() {\n    // Use Late Binding here to solve the circular dependency.\n    return Map(this.toKeyedSeq());\n  },\n\n  toObject: toObject,\n\n  toOrderedMap: function toOrderedMap() {\n    // Use Late Binding here to solve the circular dependency.\n    return OrderedMap(this.toKeyedSeq());\n  },\n\n  toOrderedSet: function toOrderedSet() {\n    // Use Late Binding here to solve the circular dependency.\n    return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n  },\n\n  toSet: function toSet() {\n    // Use Late Binding here to solve the circular dependency.\n    return Set(isKeyed(this) ? this.valueSeq() : this);\n  },\n\n  toSetSeq: function toSetSeq() {\n    return new ToSetSequence(this);\n  },\n\n  toSeq: function toSeq() {\n    return isIndexed(this)\n      ? this.toIndexedSeq()\n      : isKeyed(this)\n        ? this.toKeyedSeq()\n        : this.toSetSeq();\n  },\n\n  toStack: function toStack() {\n    // Use Late Binding here to solve the circular dependency.\n    return Stack(isKeyed(this) ? this.valueSeq() : this);\n  },\n\n  toList: function toList() {\n    // Use Late Binding here to solve the circular dependency.\n    return List(isKeyed(this) ? this.valueSeq() : this);\n  },\n\n  // ### Common JavaScript methods and properties\n\n  toString: function toString() {\n    return '[Collection]';\n  },\n\n  __toString: function __toString(head, tail) {\n    if (this.size === 0) {\n      return head + tail;\n    }\n    return (\n      head +\n      ' ' +\n      this.toSeq()\n        .map(this.__toStringMapper)\n        .join(', ') +\n      ' ' +\n      tail\n    );\n  },\n\n  // ### ES6 Collection methods (ES6 Array and Map)\n\n  concat: function concat() {\n    var values = [], len = arguments.length;\n    while ( len-- ) values[ len ] = arguments[ len ];\n\n    return reify(this, concatFactory(this, values));\n  },\n\n  includes: function includes(searchValue) {\n    return this.some(function (value) { return is(value, searchValue); });\n  },\n\n  entries: function entries() {\n    return this.__iterator(ITERATE_ENTRIES);\n  },\n\n  every: function every(predicate, context) {\n    assertNotInfinite(this.size);\n    var returnValue = true;\n    this.__iterate(function (v, k, c) {\n      if (!predicate.call(context, v, k, c)) {\n        returnValue = false;\n        return false;\n      }\n    });\n    return returnValue;\n  },\n\n  filter: function filter(predicate, context) {\n    return reify(this, filterFactory(this, predicate, context, true));\n  },\n\n  find: function find(predicate, context, notSetValue) {\n    var entry = this.findEntry(predicate, context);\n    return entry ? entry[1] : notSetValue;\n  },\n\n  forEach: function forEach(sideEffect, context) {\n    assertNotInfinite(this.size);\n    return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n  },\n\n  join: function join(separator) {\n    assertNotInfinite(this.size);\n    separator = separator !== undefined ? '' + separator : ',';\n    var joined = '';\n    var isFirst = true;\n    this.__iterate(function (v) {\n      isFirst ? (isFirst = false) : (joined += separator);\n      joined += v !== null && v !== undefined ? v.toString() : '';\n    });\n    return joined;\n  },\n\n  keys: function keys() {\n    return this.__iterator(ITERATE_KEYS);\n  },\n\n  map: function map(mapper, context) {\n    return reify(this, mapFactory(this, mapper, context));\n  },\n\n  reduce: function reduce$1(reducer, initialReduction, context) {\n    return reduce(\n      this,\n      reducer,\n      initialReduction,\n      context,\n      arguments.length < 2,\n      false\n    );\n  },\n\n  reduceRight: function reduceRight(reducer, initialReduction, context) {\n    return reduce(\n      this,\n      reducer,\n      initialReduction,\n      context,\n      arguments.length < 2,\n      true\n    );\n  },\n\n  reverse: function reverse() {\n    return reify(this, reverseFactory(this, true));\n  },\n\n  slice: function slice(begin, end) {\n    return reify(this, sliceFactory(this, begin, end, true));\n  },\n\n  some: function some(predicate, context) {\n    return !this.every(not(predicate), context);\n  },\n\n  sort: function sort(comparator) {\n    return reify(this, sortFactory(this, comparator));\n  },\n\n  values: function values() {\n    return this.__iterator(ITERATE_VALUES);\n  },\n\n  // ### More sequential methods\n\n  butLast: function butLast() {\n    return this.slice(0, -1);\n  },\n\n  isEmpty: function isEmpty() {\n    return this.size !== undefined ? this.size === 0 : !this.some(function () { return true; });\n  },\n\n  count: function count(predicate, context) {\n    return ensureSize(\n      predicate ? this.toSeq().filter(predicate, context) : this\n    );\n  },\n\n  countBy: function countBy(grouper, context) {\n    return countByFactory(this, grouper, context);\n  },\n\n  equals: function equals(other) {\n    return deepEqual(this, other);\n  },\n\n  entrySeq: function entrySeq() {\n    var collection = this;\n    if (collection._cache) {\n      // We cache as an entries array, so we can just return the cache!\n      return new ArraySeq(collection._cache);\n    }\n    var entriesSequence = collection\n      .toSeq()\n      .map(entryMapper)\n      .toIndexedSeq();\n    entriesSequence.fromEntrySeq = function () { return collection.toSeq(); };\n    return entriesSequence;\n  },\n\n  filterNot: function filterNot(predicate, context) {\n    return this.filter(not(predicate), context);\n  },\n\n  findEntry: function findEntry(predicate, context, notSetValue) {\n    var found = notSetValue;\n    this.__iterate(function (v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        found = [k, v];\n        return false;\n      }\n    });\n    return found;\n  },\n\n  findKey: function findKey(predicate, context) {\n    var entry = this.findEntry(predicate, context);\n    return entry && entry[0];\n  },\n\n  findLast: function findLast(predicate, context, notSetValue) {\n    return this.toKeyedSeq()\n      .reverse()\n      .find(predicate, context, notSetValue);\n  },\n\n  findLastEntry: function findLastEntry(predicate, context, notSetValue) {\n    return this.toKeyedSeq()\n      .reverse()\n      .findEntry(predicate, context, notSetValue);\n  },\n\n  findLastKey: function findLastKey(predicate, context) {\n    return this.toKeyedSeq()\n      .reverse()\n      .findKey(predicate, context);\n  },\n\n  first: function first(notSetValue) {\n    return this.find(returnTrue, null, notSetValue);\n  },\n\n  flatMap: function flatMap(mapper, context) {\n    return reify(this, flatMapFactory(this, mapper, context));\n  },\n\n  flatten: function flatten(depth) {\n    return reify(this, flattenFactory(this, depth, true));\n  },\n\n  fromEntrySeq: function fromEntrySeq() {\n    return new FromEntriesSequence(this);\n  },\n\n  get: function get(searchKey, notSetValue) {\n    return this.find(function (_, key) { return is(key, searchKey); }, undefined, notSetValue);\n  },\n\n  getIn: getIn$1,\n\n  groupBy: function groupBy(grouper, context) {\n    return groupByFactory(this, grouper, context);\n  },\n\n  has: function has(searchKey) {\n    return this.get(searchKey, NOT_SET) !== NOT_SET;\n  },\n\n  hasIn: hasIn$1,\n\n  isSubset: function isSubset(iter) {\n    iter = typeof iter.includes === 'function' ? iter : Collection(iter);\n    return this.every(function (value) { return iter.includes(value); });\n  },\n\n  isSuperset: function isSuperset(iter) {\n    iter = typeof iter.isSubset === 'function' ? iter : Collection(iter);\n    return iter.isSubset(this);\n  },\n\n  keyOf: function keyOf(searchValue) {\n    return this.findKey(function (value) { return is(value, searchValue); });\n  },\n\n  keySeq: function keySeq() {\n    return this.toSeq()\n      .map(keyMapper)\n      .toIndexedSeq();\n  },\n\n  last: function last(notSetValue) {\n    return this.toSeq()\n      .reverse()\n      .first(notSetValue);\n  },\n\n  lastKeyOf: function lastKeyOf(searchValue) {\n    return this.toKeyedSeq()\n      .reverse()\n      .keyOf(searchValue);\n  },\n\n  max: function max(comparator) {\n    return maxFactory(this, comparator);\n  },\n\n  maxBy: function maxBy(mapper, comparator) {\n    return maxFactory(this, comparator, mapper);\n  },\n\n  min: function min(comparator) {\n    return maxFactory(\n      this,\n      comparator ? neg(comparator) : defaultNegComparator\n    );\n  },\n\n  minBy: function minBy(mapper, comparator) {\n    return maxFactory(\n      this,\n      comparator ? neg(comparator) : defaultNegComparator,\n      mapper\n    );\n  },\n\n  rest: function rest() {\n    return this.slice(1);\n  },\n\n  skip: function skip(amount) {\n    return amount === 0 ? this : this.slice(Math.max(0, amount));\n  },\n\n  skipLast: function skipLast(amount) {\n    return amount === 0 ? this : this.slice(0, -Math.max(0, amount));\n  },\n\n  skipWhile: function skipWhile(predicate, context) {\n    return reify(this, skipWhileFactory(this, predicate, context, true));\n  },\n\n  skipUntil: function skipUntil(predicate, context) {\n    return this.skipWhile(not(predicate), context);\n  },\n\n  sortBy: function sortBy(mapper, comparator) {\n    return reify(this, sortFactory(this, comparator, mapper));\n  },\n\n  take: function take(amount) {\n    return this.slice(0, Math.max(0, amount));\n  },\n\n  takeLast: function takeLast(amount) {\n    return this.slice(-Math.max(0, amount));\n  },\n\n  takeWhile: function takeWhile(predicate, context) {\n    return reify(this, takeWhileFactory(this, predicate, context));\n  },\n\n  takeUntil: function takeUntil(predicate, context) {\n    return this.takeWhile(not(predicate), context);\n  },\n\n  update: function update(fn) {\n    return fn(this);\n  },\n\n  valueSeq: function valueSeq() {\n    return this.toIndexedSeq();\n  },\n\n  // ### Hashable Object\n\n  hashCode: function hashCode() {\n    return this.__hash || (this.__hash = hashCollection(this));\n  },\n\n  // ### Internal\n\n  // abstract __iterate(fn, reverse)\n\n  // abstract __iterator(type, reverse)\n});\n\nvar CollectionPrototype = Collection.prototype;\nCollectionPrototype[IS_COLLECTION_SYMBOL] = true;\nCollectionPrototype[ITERATOR_SYMBOL] = CollectionPrototype.values;\nCollectionPrototype.toJSON = CollectionPrototype.toArray;\nCollectionPrototype.__toStringMapper = quoteString;\nCollectionPrototype.inspect = CollectionPrototype.toSource = function() {\n  return this.toString();\n};\nCollectionPrototype.chain = CollectionPrototype.flatMap;\nCollectionPrototype.contains = CollectionPrototype.includes;\n\nmixin(KeyedCollection, {\n  // ### More sequential methods\n\n  flip: function flip() {\n    return reify(this, flipFactory(this));\n  },\n\n  mapEntries: function mapEntries(mapper, context) {\n    var this$1 = this;\n\n    var iterations = 0;\n    return reify(\n      this,\n      this.toSeq()\n        .map(function (v, k) { return mapper.call(context, [k, v], iterations++, this$1); })\n        .fromEntrySeq()\n    );\n  },\n\n  mapKeys: function mapKeys(mapper, context) {\n    var this$1 = this;\n\n    return reify(\n      this,\n      this.toSeq()\n        .flip()\n        .map(function (k, v) { return mapper.call(context, k, v, this$1); })\n        .flip()\n    );\n  },\n});\n\nvar KeyedCollectionPrototype = KeyedCollection.prototype;\nKeyedCollectionPrototype[IS_KEYED_SYMBOL] = true;\nKeyedCollectionPrototype[ITERATOR_SYMBOL] = CollectionPrototype.entries;\nKeyedCollectionPrototype.toJSON = toObject;\nKeyedCollectionPrototype.__toStringMapper = function (v, k) { return quoteString(k) + ': ' + quoteString(v); };\n\nmixin(IndexedCollection, {\n  // ### Conversion to other types\n\n  toKeyedSeq: function toKeyedSeq() {\n    return new ToKeyedSequence(this, false);\n  },\n\n  // ### ES6 Collection methods (ES6 Array and Map)\n\n  filter: function filter(predicate, context) {\n    return reify(this, filterFactory(this, predicate, context, false));\n  },\n\n  findIndex: function findIndex(predicate, context) {\n    var entry = this.findEntry(predicate, context);\n    return entry ? entry[0] : -1;\n  },\n\n  indexOf: function indexOf(searchValue) {\n    var key = this.keyOf(searchValue);\n    return key === undefined ? -1 : key;\n  },\n\n  lastIndexOf: function lastIndexOf(searchValue) {\n    var key = this.lastKeyOf(searchValue);\n    return key === undefined ? -1 : key;\n  },\n\n  reverse: function reverse() {\n    return reify(this, reverseFactory(this, false));\n  },\n\n  slice: function slice(begin, end) {\n    return reify(this, sliceFactory(this, begin, end, false));\n  },\n\n  splice: function splice(index, removeNum /*, ...values*/) {\n    var numArgs = arguments.length;\n    removeNum = Math.max(removeNum || 0, 0);\n    if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n      return this;\n    }\n    // If index is negative, it should resolve relative to the size of the\n    // collection. However size may be expensive to compute if not cached, so\n    // only call count() if the number is in fact negative.\n    index = resolveBegin(index, index < 0 ? this.count() : this.size);\n    var spliced = this.slice(0, index);\n    return reify(\n      this,\n      numArgs === 1\n        ? spliced\n        : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n    );\n  },\n\n  // ### More collection methods\n\n  findLastIndex: function findLastIndex(predicate, context) {\n    var entry = this.findLastEntry(predicate, context);\n    return entry ? entry[0] : -1;\n  },\n\n  first: function first(notSetValue) {\n    return this.get(0, notSetValue);\n  },\n\n  flatten: function flatten(depth) {\n    return reify(this, flattenFactory(this, depth, false));\n  },\n\n  get: function get(index, notSetValue) {\n    index = wrapIndex(this, index);\n    return index < 0 ||\n      (this.size === Infinity || (this.size !== undefined && index > this.size))\n      ? notSetValue\n      : this.find(function (_, key) { return key === index; }, undefined, notSetValue);\n  },\n\n  has: function has(index) {\n    index = wrapIndex(this, index);\n    return (\n      index >= 0 &&\n      (this.size !== undefined\n        ? this.size === Infinity || index < this.size\n        : this.indexOf(index) !== -1)\n    );\n  },\n\n  interpose: function interpose(separator) {\n    return reify(this, interposeFactory(this, separator));\n  },\n\n  interleave: function interleave(/*...collections*/) {\n    var collections = [this].concat(arrCopy(arguments));\n    var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, collections);\n    var interleaved = zipped.flatten(true);\n    if (zipped.size) {\n      interleaved.size = zipped.size * collections.length;\n    }\n    return reify(this, interleaved);\n  },\n\n  keySeq: function keySeq() {\n    return Range(0, this.size);\n  },\n\n  last: function last(notSetValue) {\n    return this.get(-1, notSetValue);\n  },\n\n  skipWhile: function skipWhile(predicate, context) {\n    return reify(this, skipWhileFactory(this, predicate, context, false));\n  },\n\n  zip: function zip(/*, ...collections */) {\n    var collections = [this].concat(arrCopy(arguments));\n    return reify(this, zipWithFactory(this, defaultZipper, collections));\n  },\n\n  zipAll: function zipAll(/*, ...collections */) {\n    var collections = [this].concat(arrCopy(arguments));\n    return reify(this, zipWithFactory(this, defaultZipper, collections, true));\n  },\n\n  zipWith: function zipWith(zipper /*, ...collections */) {\n    var collections = arrCopy(arguments);\n    collections[0] = this;\n    return reify(this, zipWithFactory(this, zipper, collections));\n  },\n});\n\nvar IndexedCollectionPrototype = IndexedCollection.prototype;\nIndexedCollectionPrototype[IS_INDEXED_SYMBOL] = true;\nIndexedCollectionPrototype[IS_ORDERED_SYMBOL] = true;\n\nmixin(SetCollection, {\n  // ### ES6 Collection methods (ES6 Array and Map)\n\n  get: function get(value, notSetValue) {\n    return this.has(value) ? value : notSetValue;\n  },\n\n  includes: function includes(value) {\n    return this.has(value);\n  },\n\n  // ### More sequential methods\n\n  keySeq: function keySeq() {\n    return this.valueSeq();\n  },\n});\n\nSetCollection.prototype.has = CollectionPrototype.includes;\nSetCollection.prototype.contains = SetCollection.prototype.includes;\n\n// Mixin subclasses\n\nmixin(KeyedSeq, KeyedCollection.prototype);\nmixin(IndexedSeq, IndexedCollection.prototype);\nmixin(SetSeq, SetCollection.prototype);\n\n// #pragma Helper functions\n\nfunction reduce(collection, reducer, reduction, context, useFirst, reverse) {\n  assertNotInfinite(collection.size);\n  collection.__iterate(function (v, k, c) {\n    if (useFirst) {\n      useFirst = false;\n      reduction = v;\n    } else {\n      reduction = reducer.call(context, reduction, v, k, c);\n    }\n  }, reverse);\n  return reduction;\n}\n\nfunction keyMapper(v, k) {\n  return k;\n}\n\nfunction entryMapper(v, k) {\n  return [k, v];\n}\n\nfunction not(predicate) {\n  return function() {\n    return !predicate.apply(this, arguments);\n  };\n}\n\nfunction neg(predicate) {\n  return function() {\n    return -predicate.apply(this, arguments);\n  };\n}\n\nfunction defaultZipper() {\n  return arrCopy(arguments);\n}\n\nfunction defaultNegComparator(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\nfunction hashCollection(collection) {\n  if (collection.size === Infinity) {\n    return 0;\n  }\n  var ordered = isOrdered(collection);\n  var keyed = isKeyed(collection);\n  var h = ordered ? 1 : 0;\n  var size = collection.__iterate(\n    keyed\n      ? ordered\n        ? function (v, k) {\n            h = (31 * h + hashMerge(hash(v), hash(k))) | 0;\n          }\n        : function (v, k) {\n            h = (h + hashMerge(hash(v), hash(k))) | 0;\n          }\n      : ordered\n        ? function (v) {\n            h = (31 * h + hash(v)) | 0;\n          }\n        : function (v) {\n            h = (h + hash(v)) | 0;\n          }\n  );\n  return murmurHashOfSize(size, h);\n}\n\nfunction murmurHashOfSize(size, h) {\n  h = imul(h, 0xcc9e2d51);\n  h = imul((h << 15) | (h >>> -15), 0x1b873593);\n  h = imul((h << 13) | (h >>> -13), 5);\n  h = ((h + 0xe6546b64) | 0) ^ size;\n  h = imul(h ^ (h >>> 16), 0x85ebca6b);\n  h = imul(h ^ (h >>> 13), 0xc2b2ae35);\n  h = smi(h ^ (h >>> 16));\n  return h;\n}\n\nfunction hashMerge(a, b) {\n  return (a ^ (b + 0x9e3779b9 + (a << 6) + (a >> 2))) | 0; // int\n}\n\nvar OrderedSet = /*@__PURE__*/(function (Set$$1) {\n  function OrderedSet(value) {\n    return value === null || value === undefined\n      ? emptyOrderedSet()\n      : isOrderedSet(value)\n        ? value\n        : emptyOrderedSet().withMutations(function (set) {\n            var iter = SetCollection(value);\n            assertNotInfinite(iter.size);\n            iter.forEach(function (v) { return set.add(v); });\n          });\n  }\n\n  if ( Set$$1 ) OrderedSet.__proto__ = Set$$1;\n  OrderedSet.prototype = Object.create( Set$$1 && Set$$1.prototype );\n  OrderedSet.prototype.constructor = OrderedSet;\n\n  OrderedSet.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  OrderedSet.fromKeys = function fromKeys (value) {\n    return this(KeyedCollection(value).keySeq());\n  };\n\n  OrderedSet.prototype.toString = function toString () {\n    return this.__toString('OrderedSet {', '}');\n  };\n\n  return OrderedSet;\n}(Set));\n\nOrderedSet.isOrderedSet = isOrderedSet;\n\nvar OrderedSetPrototype = OrderedSet.prototype;\nOrderedSetPrototype[IS_ORDERED_SYMBOL] = true;\nOrderedSetPrototype.zip = IndexedCollectionPrototype.zip;\nOrderedSetPrototype.zipWith = IndexedCollectionPrototype.zipWith;\n\nOrderedSetPrototype.__empty = emptyOrderedSet;\nOrderedSetPrototype.__make = makeOrderedSet;\n\nfunction makeOrderedSet(map, ownerID) {\n  var set = Object.create(OrderedSetPrototype);\n  set.size = map ? map.size : 0;\n  set._map = map;\n  set.__ownerID = ownerID;\n  return set;\n}\n\nvar EMPTY_ORDERED_SET;\nfunction emptyOrderedSet() {\n  return (\n    EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()))\n  );\n}\n\nvar Record = function Record(defaultValues, name) {\n  var hasInitialized;\n\n  var RecordType = function Record(values) {\n    var this$1 = this;\n\n    if (values instanceof RecordType) {\n      return values;\n    }\n    if (!(this instanceof RecordType)) {\n      return new RecordType(values);\n    }\n    if (!hasInitialized) {\n      hasInitialized = true;\n      var keys = Object.keys(defaultValues);\n      var indices = (RecordTypePrototype._indices = {});\n      // Deprecated: left to attempt not to break any external code which\n      // relies on a ._name property existing on record instances.\n      // Use Record.getDescriptiveName() instead\n      RecordTypePrototype._name = name;\n      RecordTypePrototype._keys = keys;\n      RecordTypePrototype._defaultValues = defaultValues;\n      for (var i = 0; i < keys.length; i++) {\n        var propName = keys[i];\n        indices[propName] = i;\n        if (RecordTypePrototype[propName]) {\n          /* eslint-disable no-console */\n          typeof console === 'object' &&\n            console.warn &&\n            console.warn(\n              'Cannot define ' +\n                recordName(this) +\n                ' with property \"' +\n                propName +\n                '\" since that property name is part of the Record API.'\n            );\n          /* eslint-enable no-console */\n        } else {\n          setProp(RecordTypePrototype, propName);\n        }\n      }\n    }\n    this.__ownerID = undefined;\n    this._values = List().withMutations(function (l) {\n      l.setSize(this$1._keys.length);\n      KeyedCollection(values).forEach(function (v, k) {\n        l.set(this$1._indices[k], v === this$1._defaultValues[k] ? undefined : v);\n      });\n    });\n  };\n\n  var RecordTypePrototype = (RecordType.prototype = Object.create(\n    RecordPrototype\n  ));\n  RecordTypePrototype.constructor = RecordType;\n\n  if (name) {\n    RecordType.displayName = name;\n  }\n\n  return RecordType;\n};\n\nRecord.prototype.toString = function toString () {\n  var str = recordName(this) + ' { ';\n  var keys = this._keys;\n  var k;\n  for (var i = 0, l = keys.length; i !== l; i++) {\n    k = keys[i];\n    str += (i ? ', ' : '') + k + ': ' + quoteString(this.get(k));\n  }\n  return str + ' }';\n};\n\nRecord.prototype.equals = function equals (other) {\n  return (\n    this === other ||\n    (other &&\n      this._keys === other._keys &&\n      recordSeq(this).equals(recordSeq(other)))\n  );\n};\n\nRecord.prototype.hashCode = function hashCode () {\n  return recordSeq(this).hashCode();\n};\n\n// @pragma Access\n\nRecord.prototype.has = function has (k) {\n  return this._indices.hasOwnProperty(k);\n};\n\nRecord.prototype.get = function get (k, notSetValue) {\n  if (!this.has(k)) {\n    return notSetValue;\n  }\n  var index = this._indices[k];\n  var value = this._values.get(index);\n  return value === undefined ? this._defaultValues[k] : value;\n};\n\n// @pragma Modification\n\nRecord.prototype.set = function set (k, v) {\n  if (this.has(k)) {\n    var newValues = this._values.set(\n      this._indices[k],\n      v === this._defaultValues[k] ? undefined : v\n    );\n    if (newValues !== this._values && !this.__ownerID) {\n      return makeRecord(this, newValues);\n    }\n  }\n  return this;\n};\n\nRecord.prototype.remove = function remove (k) {\n  return this.set(k);\n};\n\nRecord.prototype.clear = function clear () {\n  var newValues = this._values.clear().setSize(this._keys.length);\n  return this.__ownerID ? this : makeRecord(this, newValues);\n};\n\nRecord.prototype.wasAltered = function wasAltered () {\n  return this._values.wasAltered();\n};\n\nRecord.prototype.toSeq = function toSeq () {\n  return recordSeq(this);\n};\n\nRecord.prototype.toJS = function toJS$1 () {\n  return toJS(this);\n};\n\nRecord.prototype.entries = function entries () {\n  return this.__iterator(ITERATE_ENTRIES);\n};\n\nRecord.prototype.__iterator = function __iterator (type, reverse) {\n  return recordSeq(this).__iterator(type, reverse);\n};\n\nRecord.prototype.__iterate = function __iterate (fn, reverse) {\n  return recordSeq(this).__iterate(fn, reverse);\n};\n\nRecord.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n  if (ownerID === this.__ownerID) {\n    return this;\n  }\n  var newValues = this._values.__ensureOwner(ownerID);\n  if (!ownerID) {\n    this.__ownerID = ownerID;\n    this._values = newValues;\n    return this;\n  }\n  return makeRecord(this, newValues, ownerID);\n};\n\nRecord.isRecord = isRecord;\nRecord.getDescriptiveName = recordName;\nvar RecordPrototype = Record.prototype;\nRecordPrototype[IS_RECORD_SYMBOL] = true;\nRecordPrototype[DELETE] = RecordPrototype.remove;\nRecordPrototype.deleteIn = RecordPrototype.removeIn = deleteIn;\nRecordPrototype.getIn = getIn$1;\nRecordPrototype.hasIn = CollectionPrototype.hasIn;\nRecordPrototype.merge = merge;\nRecordPrototype.mergeWith = mergeWith;\nRecordPrototype.mergeIn = mergeIn;\nRecordPrototype.mergeDeep = mergeDeep$1;\nRecordPrototype.mergeDeepWith = mergeDeepWith$1;\nRecordPrototype.mergeDeepIn = mergeDeepIn;\nRecordPrototype.setIn = setIn$1;\nRecordPrototype.update = update$1;\nRecordPrototype.updateIn = updateIn$1;\nRecordPrototype.withMutations = withMutations;\nRecordPrototype.asMutable = asMutable;\nRecordPrototype.asImmutable = asImmutable;\nRecordPrototype[ITERATOR_SYMBOL] = RecordPrototype.entries;\nRecordPrototype.toJSON = RecordPrototype.toObject =\n  CollectionPrototype.toObject;\nRecordPrototype.inspect = RecordPrototype.toSource = function() {\n  return this.toString();\n};\n\nfunction makeRecord(likeRecord, values, ownerID) {\n  var record = Object.create(Object.getPrototypeOf(likeRecord));\n  record._values = values;\n  record.__ownerID = ownerID;\n  return record;\n}\n\nfunction recordName(record) {\n  return record.constructor.displayName || record.constructor.name || 'Record';\n}\n\nfunction recordSeq(record) {\n  return keyedSeqFromValue(record._keys.map(function (k) { return [k, record.get(k)]; }));\n}\n\nfunction setProp(prototype, name) {\n  try {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      },\n    });\n  } catch (error) {\n    // Object.defineProperty failed. Probably IE8.\n  }\n}\n\n/**\n * Returns a lazy Seq of `value` repeated `times` times. When `times` is\n * undefined, returns an infinite sequence of `value`.\n */\nvar Repeat = /*@__PURE__*/(function (IndexedSeq$$1) {\n  function Repeat(value, times) {\n    if (!(this instanceof Repeat)) {\n      return new Repeat(value, times);\n    }\n    this._value = value;\n    this.size = times === undefined ? Infinity : Math.max(0, times);\n    if (this.size === 0) {\n      if (EMPTY_REPEAT) {\n        return EMPTY_REPEAT;\n      }\n      EMPTY_REPEAT = this;\n    }\n  }\n\n  if ( IndexedSeq$$1 ) Repeat.__proto__ = IndexedSeq$$1;\n  Repeat.prototype = Object.create( IndexedSeq$$1 && IndexedSeq$$1.prototype );\n  Repeat.prototype.constructor = Repeat;\n\n  Repeat.prototype.toString = function toString () {\n    if (this.size === 0) {\n      return 'Repeat []';\n    }\n    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n  };\n\n  Repeat.prototype.get = function get (index, notSetValue) {\n    return this.has(index) ? this._value : notSetValue;\n  };\n\n  Repeat.prototype.includes = function includes (searchValue) {\n    return is(this._value, searchValue);\n  };\n\n  Repeat.prototype.slice = function slice (begin, end) {\n    var size = this.size;\n    return wholeSlice(begin, end, size)\n      ? this\n      : new Repeat(\n          this._value,\n          resolveEnd(end, size) - resolveBegin(begin, size)\n        );\n  };\n\n  Repeat.prototype.reverse = function reverse () {\n    return this;\n  };\n\n  Repeat.prototype.indexOf = function indexOf (searchValue) {\n    if (is(this._value, searchValue)) {\n      return 0;\n    }\n    return -1;\n  };\n\n  Repeat.prototype.lastIndexOf = function lastIndexOf (searchValue) {\n    if (is(this._value, searchValue)) {\n      return this.size;\n    }\n    return -1;\n  };\n\n  Repeat.prototype.__iterate = function __iterate (fn, reverse) {\n    var size = this.size;\n    var i = 0;\n    while (i !== size) {\n      if (fn(this._value, reverse ? size - ++i : i++, this) === false) {\n        break;\n      }\n    }\n    return i;\n  };\n\n  Repeat.prototype.__iterator = function __iterator (type, reverse) {\n    var this$1 = this;\n\n    var size = this.size;\n    var i = 0;\n    return new Iterator(\n      function () { return i === size\n          ? iteratorDone()\n          : iteratorValue(type, reverse ? size - ++i : i++, this$1._value); }\n    );\n  };\n\n  Repeat.prototype.equals = function equals (other) {\n    return other instanceof Repeat\n      ? is(this._value, other._value)\n      : deepEqual(other);\n  };\n\n  return Repeat;\n}(IndexedSeq));\n\nvar EMPTY_REPEAT;\n\nfunction fromJS(value, converter) {\n  return fromJSWith(\n    [],\n    converter || defaultConverter,\n    value,\n    '',\n    converter && converter.length > 2 ? [] : undefined,\n    { '': value }\n  );\n}\n\nfunction fromJSWith(stack, converter, value, key, keyPath, parentValue) {\n  var toSeq = Array.isArray(value)\n    ? IndexedSeq\n    : isPlainObj(value)\n      ? KeyedSeq\n      : null;\n  if (toSeq) {\n    if (~stack.indexOf(value)) {\n      throw new TypeError('Cannot convert circular structure to Immutable');\n    }\n    stack.push(value);\n    keyPath && key !== '' && keyPath.push(key);\n    var converted = converter.call(\n      parentValue,\n      key,\n      toSeq(value).map(function (v, k) { return fromJSWith(stack, converter, v, k, keyPath, value); }\n      ),\n      keyPath && keyPath.slice()\n    );\n    stack.pop();\n    keyPath && keyPath.pop();\n    return converted;\n  }\n  return value;\n}\n\nfunction defaultConverter(k, v) {\n  return isKeyed(v) ? v.toMap() : v.toList();\n}\n\nvar version = \"4.0.0-rc.11\";\n\nvar Immutable = {\n  version: version,\n\n  Collection: Collection,\n  // Note: Iterable is deprecated\n  Iterable: Collection,\n\n  Seq: Seq,\n  Map: Map,\n  OrderedMap: OrderedMap,\n  List: List,\n  Stack: Stack,\n  Set: Set,\n  OrderedSet: OrderedSet,\n\n  Record: Record,\n  Range: Range,\n  Repeat: Repeat,\n\n  is: is,\n  fromJS: fromJS,\n  hash: hash,\n\n  isImmutable: isImmutable,\n  isCollection: isCollection,\n  isKeyed: isKeyed,\n  isIndexed: isIndexed,\n  isAssociative: isAssociative,\n  isOrdered: isOrdered,\n  isValueObject: isValueObject,\n  isSeq: isSeq,\n  isList: isList,\n  isMap: isMap,\n  isOrderedMap: isOrderedMap,\n  isStack: isStack,\n  isSet: isSet,\n  isOrderedSet: isOrderedSet,\n  isRecord: isRecord,\n\n  get: get,\n  getIn: getIn,\n  has: has,\n  hasIn: hasIn,\n  merge: merge$1,\n  mergeDeep: mergeDeep,\n  mergeWith: mergeWith$1,\n  mergeDeepWith: mergeDeepWith,\n  remove: remove,\n  removeIn: removeIn,\n  set: set,\n  setIn: setIn,\n  update: update,\n  updateIn: updateIn,\n};\n\n// Note: Iterable is deprecated\nvar Iterable = Collection;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Immutable);\n\n\n\n//# sourceURL=webpack:///./node_modules/immutable/dist/immutable.es.js?");

/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack:///./node_modules/isarray/index.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/ActiveContextCache.js":
/*!*******************************************************!*\
  !*** ./node_modules/jsonld/lib/ActiveContextCache.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017-2018 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst {clone} = __webpack_require__(/*! ./util */ \"./node_modules/jsonld/lib/util.js\");\n\nmodule.exports = class ActiveContextCache {\n  /**\n   * Creates an active context cache.\n   *\n   * @param size the maximum size of the cache.\n   */\n  constructor(size = 100) {\n    this.order = [];\n    this.cache = new Map();\n    this.size = size;\n  }\n\n  get(activeCtx, localCtx) {\n    const level1 = this.cache.get(activeCtx);\n    if(level1) {\n      const key = JSON.stringify(localCtx);\n      const result = level1.get(key);\n      return result || null;\n    }\n    return null;\n  }\n\n  set(activeCtx, localCtx, result) {\n    if(this.order.length === this.size) {\n      const entry = this.order.shift();\n      this.cache.get(entry.activeCtx).delete(entry.localCtx);\n    }\n    const key = JSON.stringify(localCtx);\n    this.order.push({activeCtx, localCtx: key});\n    let level1 = this.cache.get(activeCtx);\n    if(!level1) {\n      level1 = new Map();\n      this.cache.set(activeCtx, level1);\n    }\n    level1.set(key, clone(result));\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/ActiveContextCache.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/JsonLdError.js":
/*!************************************************!*\
  !*** ./node_modules/jsonld/lib/JsonLdError.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nmodule.exports = class JsonLdError extends Error {\n  /**\n   * Creates a JSON-LD Error.\n   *\n   * @param msg the error message.\n   * @param type the error type.\n   * @param details the error details.\n   */\n  constructor(\n    message = 'An unspecified JSON-LD error occurred.',\n    name = 'jsonld.Error',\n    details = {}) {\n    super(message);\n    this.name = name;\n    this.message = message;\n    this.details = details;\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/JsonLdError.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/JsonLdProcessor.js":
/*!****************************************************!*\
  !*** ./node_modules/jsonld/lib/JsonLdProcessor.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nmodule.exports = jsonld => {\n  class JsonLdProcessor {\n    toString() {\n      return '[object JsonLdProcessor]';\n    }\n  }\n  Object.defineProperty(JsonLdProcessor, 'prototype', {\n    writable: false,\n    enumerable: false\n  });\n  Object.defineProperty(JsonLdProcessor.prototype, 'constructor', {\n    writable: true,\n    enumerable: false,\n    configurable: true,\n    value: JsonLdProcessor\n  });\n\n  // The Web IDL test harness will check the number of parameters defined in\n  // the functions below. The number of parameters must exactly match the\n  // required (non-optional) parameters of the JsonLdProcessor interface as\n  // defined here:\n  // https://www.w3.org/TR/json-ld-api/#the-jsonldprocessor-interface\n\n  JsonLdProcessor.compact = function(input, ctx) {\n    if(arguments.length < 2) {\n      return Promise.reject(\n        new TypeError('Could not compact, too few arguments.'));\n    }\n    return jsonld.compact(input, ctx);\n  };\n  JsonLdProcessor.expand = function(input) {\n    if(arguments.length < 1) {\n      return Promise.reject(\n        new TypeError('Could not expand, too few arguments.'));\n    }\n    return jsonld.expand(input);\n  };\n  JsonLdProcessor.flatten = function(input) {\n    if(arguments.length < 1) {\n      return Promise.reject(\n        new TypeError('Could not flatten, too few arguments.'));\n    }\n    return jsonld.flatten(input);\n  };\n\n  return JsonLdProcessor;\n};\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/JsonLdProcessor.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/NQuads.js":
/*!*******************************************!*\
  !*** ./node_modules/jsonld/lib/NQuads.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\n// TODO: move `NQuads` to its own package\nmodule.exports = __webpack_require__(/*! rdf-canonize */ \"./node_modules/rdf-canonize/lib/index.js\").NQuads;\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/NQuads.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/Rdfa.js":
/*!*****************************************!*\
  !*** ./node_modules/jsonld/lib/Rdfa.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n/* global Node, XMLSerializer */\n\n\nconst {\n  RDF_LANGSTRING,\n  RDF_PLAIN_LITERAL,\n  RDF_OBJECT,\n  RDF_XML_LITERAL,\n  XSD_STRING,\n} = __webpack_require__(/*! ./constants */ \"./node_modules/jsonld/lib/constants.js\");\n\nlet _Node;\nif(typeof Node !== 'undefined') {\n  _Node = Node;\n} else {\n  _Node = {\n    ELEMENT_NODE: 1,\n    ATTRIBUTE_NODE: 2,\n    TEXT_NODE: 3,\n    CDATA_SECTION_NODE: 4,\n    ENTITY_REFERENCE_NODE: 5,\n    ENTITY_NODE: 6,\n    PROCESSING_INSTRUCTION_NODE: 7,\n    COMMENT_NODE: 8,\n    DOCUMENT_NODE: 9,\n    DOCUMENT_TYPE_NODE: 10,\n    DOCUMENT_FRAGMENT_NODE: 11,\n    NOTATION_NODE: 12\n  };\n}\n\nmodule.exports = class Rdfa {\n  /**\n   * Parses the RDF dataset found via the data object from the RDFa API.\n   *\n   * @param data the RDFa API data object.\n   *\n   * @return the RDF dataset.\n   */\n  parse(data) {\n    const dataset = {};\n    dataset['@default'] = [];\n\n    const subjects = data.getSubjects();\n    for(let si = 0; si < subjects.length; ++si) {\n      const subject = subjects[si];\n      if(subject === null) {\n        continue;\n      }\n\n      // get all related triples\n      const triples = data.getSubjectTriples(subject);\n      if(triples === null) {\n        continue;\n      }\n      const predicates = triples.predicates;\n      for(const predicate in predicates) {\n        // iterate over objects\n        const objects = predicates[predicate].objects;\n        for(let oi = 0; oi < objects.length; ++oi) {\n          const object = objects[oi];\n\n          // create RDF triple\n          const triple = {};\n\n          // add subject\n          if(subject.indexOf('_:') === 0) {\n            triple.subject = {type: 'blank node', value: subject};\n          } else {\n            triple.subject = {type: 'IRI', value: subject};\n          }\n\n          // add predicate\n          if(predicate.indexOf('_:') === 0) {\n            triple.predicate = {type: 'blank node', value: predicate};\n          } else {\n            triple.predicate = {type: 'IRI', value: predicate};\n          }\n\n          // serialize XML literal\n          let value = object.value;\n          if(object.type === RDF_XML_LITERAL) {\n            // initialize XMLSerializer\n            const XMLSerializer = getXMLSerializerClass();\n            const serializer = new XMLSerializer();\n            value = '';\n            for(let x = 0; x < object.value.length; x++) {\n              if(object.value[x].nodeType === _Node.ELEMENT_NODE) {\n                value += serializer.serializeToString(object.value[x]);\n              } else if(object.value[x].nodeType === _Node.TEXT_NODE) {\n                value += object.value[x].nodeValue;\n              }\n            }\n          }\n\n          // add object\n          triple.object = {};\n\n          // object is an IRI\n          if(object.type === RDF_OBJECT) {\n            if(object.value.indexOf('_:') === 0) {\n              triple.object.type = 'blank node';\n            } else {\n              triple.object.type = 'IRI';\n            }\n          } else {\n            // object is a literal\n            triple.object.type = 'literal';\n            if(object.type === RDF_PLAIN_LITERAL) {\n              if(object.language) {\n                triple.object.datatype = RDF_LANGSTRING;\n                triple.object.language = object.language;\n              } else {\n                triple.object.datatype = XSD_STRING;\n              }\n            } else {\n              triple.object.datatype = object.type;\n            }\n          }\n          triple.object.value = value;\n\n          // add triple to dataset in default graph\n          dataset['@default'].push(triple);\n        }\n      }\n    }\n\n    return dataset;\n  }\n};\n\nfunction getXMLSerializerClass() {\n  if(typeof XMLSerializer === 'undefined') {\n    return __webpack_require__(/*! xmldom */ 1).XMLSerializer;\n  }\n  return XMLSerializer;\n}\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/Rdfa.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/RequestQueue.js":
/*!*************************************************!*\
  !*** ./node_modules/jsonld/lib/RequestQueue.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst {callbackify, normalizeDocumentLoader} = __webpack_require__(/*! ./util */ \"./node_modules/jsonld/lib/util.js\");\n\nmodule.exports = class RequestQueue {\n  /**\n   * Creates a simple queue for requesting documents.\n   */\n  constructor() {\n    this._requests = {};\n    this.add = callbackify(this.add.bind(this));\n  }\n\n  wrapLoader(loader) {\n    const self = this;\n    self._loader = normalizeDocumentLoader(loader);\n    return function(/* url */) {\n      return self.add.apply(self, arguments);\n    };\n  }\n\n  async add(url) {\n    const self = this;\n\n    let promise = self._requests[url];\n    if(promise) {\n      // URL already queued, wait for it to load\n      return Promise.resolve(promise);\n    }\n\n    // queue URL and load it\n    promise = self._requests[url] = self._loader(url);\n\n    try {\n      return await promise;\n    } finally {\n      delete self._requests[url];\n    }\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/RequestQueue.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/compact.js":
/*!********************************************!*\
  !*** ./node_modules/jsonld/lib/compact.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst JsonLdError = __webpack_require__(/*! ./JsonLdError */ \"./node_modules/jsonld/lib/JsonLdError.js\");\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString\n} = __webpack_require__(/*! ./types */ \"./node_modules/jsonld/lib/types.js\");\n\nconst {\n  isList: _isList,\n  isValue: _isValue,\n  isGraph: _isGraph,\n  isSimpleGraph: _isSimpleGraph,\n  isSubjectReference: _isSubjectReference\n} = __webpack_require__(/*! ./graphTypes */ \"./node_modules/jsonld/lib/graphTypes.js\");\n\nconst {\n  expandIri: _expandIri,\n  getContextValue: _getContextValue,\n  isKeyword: _isKeyword,\n  process: _processContext\n} = __webpack_require__(/*! ./context */ \"./node_modules/jsonld/lib/context.js\");\n\nconst {\n  removeBase: _removeBase\n} = __webpack_require__(/*! ./url */ \"./node_modules/jsonld/lib/url.js\");\n\nconst {\n  addValue: _addValue,\n  asArray: _asArray,\n  compareShortestLeast: _compareShortestLeast\n} = __webpack_require__(/*! ./util */ \"./node_modules/jsonld/lib/util.js\");\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Recursively compacts an element using the given active context. All values\n * must be in expanded form before this method is called.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the compacted property associated with the element\n *          to compact, null for none.\n * @param element the element to compact.\n * @param options the compaction options.\n * @param compactionMap the compaction map to use.\n *\n * @return the compacted value.\n */\napi.compact = ({\n  activeCtx,\n  activeProperty = null,\n  element,\n  options = {},\n  compactionMap = () => undefined\n}) => {\n  // recursively compact array\n  if(_isArray(element)) {\n    let rval = [];\n    for(let i = 0; i < element.length; ++i) {\n      // compact, dropping any null values unless custom mapped\n      let compacted = api.compact({\n        activeCtx,\n        activeProperty,\n        element: element[i],\n        options,\n        compactionMap\n      });\n      if(compacted === null) {\n        // TODO: use `await` to support async\n        compacted = compactionMap({\n          unmappedValue: element[i],\n          activeCtx,\n          activeProperty,\n          parent: element,\n          index: i,\n          options\n        });\n        if(compacted === undefined) {\n          continue;\n        }\n      }\n      rval.push(compacted);\n    }\n    if(options.compactArrays && rval.length === 1) {\n      // use single element if no container is specified\n      const container = _getContextValue(\n        activeCtx, activeProperty, '@container') || [];\n      if(container.length === 0) {\n        rval = rval[0];\n      }\n    }\n    return rval;\n  }\n\n  // use any scoped context on activeProperty\n  const ctx = _getContextValue(activeCtx, activeProperty, '@context');\n  if(ctx) {\n    activeCtx = _processContext({activeCtx, localCtx: ctx, options});\n  }\n\n  // recursively compact object\n  if(_isObject(element)) {\n    if(options.link && '@id' in element && element['@id'] in options.link) {\n      // check for a linked element to reuse\n      const linked = options.link[element['@id']];\n      for(let i = 0; i < linked.length; ++i) {\n        if(linked[i].expanded === element) {\n          return linked[i].compacted;\n        }\n      }\n    }\n\n    // do value compaction on @values and subject references\n    if(_isValue(element) || _isSubjectReference(element)) {\n      const rval =\n        api.compactValue({activeCtx, activeProperty, value: element});\n      if(options.link && _isSubjectReference(element)) {\n        // store linked element\n        if(!(element['@id'] in options.link)) {\n          options.link[element['@id']] = [];\n        }\n        options.link[element['@id']].push({expanded: element, compacted: rval});\n      }\n      return rval;\n    }\n\n    // FIXME: avoid misuse of active property as an expanded property?\n    const insideReverse = (activeProperty === '@reverse');\n\n    const rval = {};\n\n    if(options.link && '@id' in element) {\n      // store linked element\n      if(!(element['@id'] in options.link)) {\n        options.link[element['@id']] = [];\n      }\n      options.link[element['@id']].push({expanded: element, compacted: rval});\n    }\n\n    // apply any context defined on an alias of @type\n    // if key is @type and any compacted value is a term having a local\n    // context, overlay that context\n    let types = element['@type'] || [];\n    if(types.length > 1) {\n      types = Array.from(types).sort();\n    }\n    for(const type of types) {\n      const compactedType = api.compactIri(\n        {activeCtx, iri: type, relativeTo: {vocab: true}});\n\n      // Use any scoped context defined on this value\n      const ctx = _getContextValue(activeCtx, compactedType, '@context');\n      if(ctx) {\n        activeCtx = _processContext({activeCtx, localCtx: ctx, options});\n      }\n    }\n\n    // process element keys in order\n    const keys = Object.keys(element).sort();\n    for(const expandedProperty of keys) {\n      const expandedValue = element[expandedProperty];\n\n      // compact @id and @type(s)\n      if(expandedProperty === '@id' || expandedProperty === '@type') {\n        let compactedValue = _asArray(expandedValue).map(\n          expandedIri => api.compactIri({\n            activeCtx,\n            iri: expandedIri,\n            relativeTo: {\n              vocab: expandedProperty === '@type'\n            }\n          }));\n        if(compactedValue.length === 1) {\n          compactedValue = compactedValue[0];\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri(\n          {activeCtx, iri: expandedProperty, relativeTo: {vocab: true}});\n        const isArray = _isArray(compactedValue) && expandedValue.length === 0;\n        _addValue(rval, alias, compactedValue, {propertyIsArray: isArray});\n        continue;\n      }\n\n      // handle @reverse\n      if(expandedProperty === '@reverse') {\n        // recursively compact expanded value\n        const compactedValue = api.compact({\n          activeCtx,\n          activeProperty: '@reverse',\n          element: expandedValue,\n          options,\n          compactionMap\n        });\n\n        // handle double-reversed properties\n        for(const compactedProperty in compactedValue) {\n          if(activeCtx.mappings[compactedProperty] &&\n            activeCtx.mappings[compactedProperty].reverse) {\n            const value = compactedValue[compactedProperty];\n            const container = _getContextValue(\n              activeCtx, compactedProperty, '@container') || [];\n            const useArray = (\n              container.includes('@set') || !options.compactArrays);\n            _addValue(\n              rval, compactedProperty, value, {propertyIsArray: useArray});\n            delete compactedValue[compactedProperty];\n          }\n        }\n\n        if(Object.keys(compactedValue).length > 0) {\n          // use keyword alias and add value\n          const alias = api.compactIri({\n            activeCtx,\n            iri: expandedProperty,\n            relativeTo: {vocab: true}\n          });\n          _addValue(rval, alias, compactedValue);\n        }\n\n        continue;\n      }\n\n      if(expandedProperty === '@preserve') {\n        // compact using activeProperty\n        const compactedValue = api.compact({\n          activeCtx,\n          activeProperty,\n          element: expandedValue,\n          options,\n          compactionMap});\n\n        if(!(_isArray(compactedValue) && compactedValue.length === 0)) {\n          _addValue(rval, expandedProperty, compactedValue);\n        }\n        continue;\n      }\n\n      // handle @index property\n      if(expandedProperty === '@index') {\n        // drop @index if inside an @index container\n        const container = _getContextValue(\n          activeCtx, activeProperty, '@container') || [];\n        if(container.includes('@index')) {\n          continue;\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          relativeTo: {vocab: true}\n        });\n        _addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // skip array processing for keywords that aren't @graph or @list\n      if(expandedProperty !== '@graph' && expandedProperty !== '@list' &&\n        _isKeyword(expandedProperty)) {\n        // use keyword alias and add value as is\n        const alias = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          relativeTo: {vocab: true}\n        });\n        _addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // Note: expanded value must be an array due to expansion algorithm.\n      if(!_isArray(expandedValue)) {\n        throw new JsonLdError(\n          'JSON-LD expansion error; expanded value must be an array.',\n          'jsonld.SyntaxError');\n      }\n\n      // preserve empty arrays\n      if(expandedValue.length === 0) {\n        const itemActiveProperty = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          value: expandedValue,\n          relativeTo: {vocab: true},\n          reverse: insideReverse\n        });\n        const nestProperty = (itemActiveProperty in activeCtx.mappings) ?\n          activeCtx.mappings[itemActiveProperty]['@nest'] : null;\n        let nestResult = rval;\n        if(nestProperty) {\n          _checkNestProperty(activeCtx, nestProperty);\n          if(!_isObject(rval[nestProperty])) {\n            rval[nestProperty] = {};\n          }\n          nestResult = rval[nestProperty];\n        }\n        _addValue(\n          nestResult, itemActiveProperty, expandedValue, {\n            propertyIsArray: true\n          });\n      }\n\n      // recusively process array values\n      for(const expandedItem of expandedValue) {\n        // compact property and get container type\n        const itemActiveProperty = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          value: expandedItem,\n          relativeTo: {vocab: true},\n          reverse: insideReverse\n        });\n\n        // if itemActiveProperty is a @nest property, add values to nestResult,\n        // otherwise rval\n        const nestProperty = (itemActiveProperty in activeCtx.mappings) ?\n          activeCtx.mappings[itemActiveProperty]['@nest'] : null;\n        let nestResult = rval;\n        if(nestProperty) {\n          _checkNestProperty(activeCtx, nestProperty);\n          if(!_isObject(rval[nestProperty])) {\n            rval[nestProperty] = {};\n          }\n          nestResult = rval[nestProperty];\n        }\n\n        const container = _getContextValue(\n          activeCtx, itemActiveProperty, '@container') || [];\n\n        // get simple @graph or @list value if appropriate\n        const isGraph = _isGraph(expandedItem);\n        const isList = _isList(expandedItem);\n        let inner;\n        if(isList) {\n          inner = expandedItem['@list'];\n        } else if(isGraph) {\n          inner = expandedItem['@graph'];\n        }\n\n        // recursively compact expanded item\n        let compactedItem = api.compact({\n          activeCtx,\n          activeProperty: itemActiveProperty,\n          element: (isList || isGraph) ? inner : expandedItem,\n          options,\n          compactionMap\n        });\n\n        // handle @list\n        if(isList) {\n          // ensure @list value is an array\n          if(!_isArray(compactedItem)) {\n            compactedItem = [compactedItem];\n          }\n\n          if(!container.includes('@list')) {\n            // wrap using @list alias\n            compactedItem = {\n              [api.compactIri({\n                activeCtx,\n                iri: '@list',\n                relativeTo: {vocab: true}\n              })]: compactedItem\n            };\n\n            // include @index from expanded @list, if any\n            if('@index' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@index',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@index'];\n            }\n          } else if(itemActiveProperty in nestResult) {\n            // can't use @list container for more than 1 list\n            throw new JsonLdError(\n              'JSON-LD compact error; property has a \"@list\" @container ' +\n              'rule but there is more than a single @list that matches ' +\n              'the compacted term in the document. Compaction might mix ' +\n              'unwanted items into the list.',\n              'jsonld.SyntaxError', {code: 'compaction to list of lists'});\n          }\n        }\n\n        // Graph object compaction cases\n        if(isGraph) {\n          if(container.includes('@graph') && (container.includes('@id') ||\n            container.includes('@index') && _isSimpleGraph(expandedItem))) {\n            // get or create the map object\n            let mapObject;\n            if(itemActiveProperty in nestResult) {\n              mapObject = nestResult[itemActiveProperty];\n            } else {\n              nestResult[itemActiveProperty] = mapObject = {};\n            }\n\n            // index on @id or @index or alias of @none\n            const key = (container.includes('@id') ?\n              expandedItem['@id'] : expandedItem['@index']) ||\n              api.compactIri({activeCtx, iri: '@none', vocab: true});\n            // add compactedItem to map, using value of `@id` or a new blank\n            // node identifier\n\n            _addValue(\n              mapObject, key, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          } else if(container.includes('@graph') &&\n            _isSimpleGraph(expandedItem)) {\n            // container includes @graph but not @id or @index and value is a\n            // simple graph object add compact value\n            _addValue(\n              nestResult, itemActiveProperty, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          } else {\n            // wrap using @graph alias, remove array if only one item and\n            // compactArrays not set\n            if(_isArray(compactedItem) && compactedItem.length === 1 &&\n              options.compactArrays) {\n              compactedItem = compactedItem[0];\n            }\n            compactedItem = {\n              [api.compactIri({\n                activeCtx,\n                iri: '@graph',\n                relativeTo: {vocab: true}\n              })]: compactedItem\n            };\n\n            // include @id from expanded graph, if any\n            if('@id' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@id',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@id'];\n            }\n\n            // include @index from expanded graph, if any\n            if('@index' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@index',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@index'];\n            }\n            _addValue(\n              nestResult, itemActiveProperty, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          }\n        } else if(container.includes('@language') ||\n          container.includes('@index') || container.includes('@id') ||\n          container.includes('@type')) {\n          // handle language and index maps\n          // get or create the map object\n          let mapObject;\n          if(itemActiveProperty in nestResult) {\n            mapObject = nestResult[itemActiveProperty];\n          } else {\n            nestResult[itemActiveProperty] = mapObject = {};\n          }\n\n          let key;\n          if(container.includes('@language')) {\n          // if container is a language map, simplify compacted value to\n          // a simple string\n            if(_isValue(compactedItem)) {\n              compactedItem = compactedItem['@value'];\n            }\n            key = expandedItem['@language'];\n          } else if(container.includes('@index')) {\n            key = expandedItem['@index'];\n          } else if(container.includes('@id')) {\n            const idKey = api.compactIri({activeCtx, iri: '@id', vocab: true});\n            key = compactedItem[idKey];\n            delete compactedItem[idKey];\n          } else if(container.includes('@type')) {\n            const typeKey = api.compactIri({\n              activeCtx,\n              iri: '@type',\n              vocab: true\n            });\n            let types;\n            [key, ...types] = _asArray(compactedItem[typeKey] || []);\n            switch(types.length) {\n              case 0:\n                delete compactedItem[typeKey];\n                break;\n              case 1:\n                compactedItem[typeKey] = types[0];\n                break;\n              default:\n                compactedItem[typeKey] = types;\n                break;\n            }\n          }\n\n          // if compacting this value which has no key, index on @none\n          if(!key) {\n            key = api.compactIri({activeCtx, iri: '@none', vocab: true});\n          }\n          // add compact value to map object using key from expanded value\n          // based on the container type\n          _addValue(\n            mapObject, key, compactedItem, {\n              propertyIsArray: container.includes('@set')\n            });\n        } else {\n          // use an array if: compactArrays flag is false,\n          // @container is @set or @list , value is an empty\n          // array, or key is @graph\n          const isArray = (!options.compactArrays ||\n            container.includes('@set') || container.includes('@list') ||\n            (_isArray(compactedItem) && compactedItem.length === 0) ||\n            expandedProperty === '@list' || expandedProperty === '@graph');\n\n          // add compact value\n          _addValue(\n            nestResult, itemActiveProperty, compactedItem,\n            {propertyIsArray: isArray});\n        }\n      }\n    }\n\n    return rval;\n  }\n\n  // only primitives remain which are already compact\n  return element;\n};\n\n/**\n * Compacts an IRI or keyword into a term or prefix if it can be. If the\n * IRI has an associated value it may be passed.\n *\n * @param activeCtx the active context to use.\n * @param iri the IRI to compact.\n * @param value the value to check or null.\n * @param relativeTo options for how to compact IRIs:\n *          vocab: true to split after @vocab, false not to.\n * @param reverse true if a reverse property is being compacted, false if not.\n *\n * @return the compacted term, prefix, keyword alias, or the original IRI.\n */\napi.compactIri = ({\n  activeCtx,\n  iri,\n  value = null,\n  relativeTo = {vocab: false},\n  reverse = false\n}) => {\n  // can't compact null\n  if(iri === null) {\n    return iri;\n  }\n\n  const inverseCtx = activeCtx.getInverse();\n\n  // if term is a keyword, it may be compacted to a simple alias\n  if(_isKeyword(iri) &&\n    iri in inverseCtx &&\n    '@none' in inverseCtx[iri] &&\n    '@type' in inverseCtx[iri]['@none'] &&\n    '@none' in inverseCtx[iri]['@none']['@type']) {\n    return inverseCtx[iri]['@none']['@type']['@none'];\n  }\n\n  // use inverse context to pick a term if iri is relative to vocab\n  if(relativeTo.vocab && iri in inverseCtx) {\n    const defaultLanguage = activeCtx['@language'] || '@none';\n\n    // prefer @index if available in value\n    const containers = [];\n    if(_isObject(value) && '@index' in value && !('@graph' in value)) {\n      containers.push('@index', '@index@set');\n    }\n\n    // if value is a preserve object, use its value\n    if(_isObject(value) && '@preserve' in value) {\n      value = value['@preserve'][0];\n    }\n\n    // prefer most specific container including @graph, prefering @set\n    // variations\n    if(_isGraph(value)) {\n      // favor indexmap if the graph is indexed\n      if('@index' in value) {\n        containers.push(\n          '@graph@index', '@graph@index@set', '@index', '@index@set');\n      }\n      // favor idmap if the graph is has an @id\n      if('@id' in value) {\n        containers.push(\n          '@graph@id', '@graph@id@set');\n      }\n      containers.push('@graph', '@graph@set', '@set');\n      // allow indexmap if the graph is not indexed\n      if(!('@index' in value)) {\n        containers.push(\n          '@graph@index', '@graph@index@set', '@index', '@index@set');\n      }\n      // allow idmap if the graph does not have an @id\n      if(!('@id' in value)) {\n        containers.push('@graph@id', '@graph@id@set');\n      }\n    } else if(_isObject(value) && !_isValue(value)) {\n      containers.push('@id', '@id@set', '@type', '@set@type');\n    }\n\n    // defaults for term selection based on type/language\n    let typeOrLanguage = '@language';\n    let typeOrLanguageValue = '@null';\n\n    if(reverse) {\n      typeOrLanguage = '@type';\n      typeOrLanguageValue = '@reverse';\n      containers.push('@set');\n    } else if(_isList(value)) {\n      // choose the most specific term that works for all elements in @list\n      // only select @list containers if @index is NOT in value\n      if(!('@index' in value)) {\n        containers.push('@list');\n      }\n      const list = value['@list'];\n      if(list.length === 0) {\n        // any empty list can be matched against any term that uses the\n        // @list container regardless of @type or @language\n        typeOrLanguage = '@any';\n        typeOrLanguageValue = '@none';\n      } else {\n        let commonLanguage = (list.length === 0) ? defaultLanguage : null;\n        let commonType = null;\n        for(let i = 0; i < list.length; ++i) {\n          const item = list[i];\n          let itemLanguage = '@none';\n          let itemType = '@none';\n          if(_isValue(item)) {\n            if('@language' in item) {\n              itemLanguage = item['@language'];\n            } else if('@type' in item) {\n              itemType = item['@type'];\n            } else {\n              // plain literal\n              itemLanguage = '@null';\n            }\n          } else {\n            itemType = '@id';\n          }\n          if(commonLanguage === null) {\n            commonLanguage = itemLanguage;\n          } else if(itemLanguage !== commonLanguage && _isValue(item)) {\n            commonLanguage = '@none';\n          }\n          if(commonType === null) {\n            commonType = itemType;\n          } else if(itemType !== commonType) {\n            commonType = '@none';\n          }\n          // there are different languages and types in the list, so choose\n          // the most generic term, no need to keep iterating the list\n          if(commonLanguage === '@none' && commonType === '@none') {\n            break;\n          }\n        }\n        commonLanguage = commonLanguage || '@none';\n        commonType = commonType || '@none';\n        if(commonType !== '@none') {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = commonType;\n        } else {\n          typeOrLanguageValue = commonLanguage;\n        }\n      }\n    } else {\n      if(_isValue(value)) {\n        if('@language' in value && !('@index' in value)) {\n          containers.push('@language', '@language@set');\n          typeOrLanguageValue = value['@language'];\n        } else if('@type' in value) {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = value['@type'];\n        }\n      } else {\n        typeOrLanguage = '@type';\n        typeOrLanguageValue = '@id';\n      }\n      containers.push('@set');\n    }\n\n    // do term selection\n    containers.push('@none');\n\n    // an index map can be used to index values using @none, so add as a low\n    // priority\n    if(_isObject(value) && !('@index' in value)) {\n      // allow indexing even if no @index present\n      containers.push('@index', '@index@set');\n    }\n\n    // values without type or language can use @language map\n    if(_isValue(value) && Object.keys(value).length === 1) {\n      // allow indexing even if no @index present\n      containers.push('@language', '@language@set');\n    }\n\n    const term = _selectTerm(\n      activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue);\n    if(term !== null) {\n      return term;\n    }\n  }\n\n  // no term match, use @vocab if available\n  if(relativeTo.vocab) {\n    if('@vocab' in activeCtx) {\n      // determine if vocab is a prefix of the iri\n      const vocab = activeCtx['@vocab'];\n      if(iri.indexOf(vocab) === 0 && iri !== vocab) {\n        // use suffix as relative iri if it is not a term in the active context\n        const suffix = iri.substr(vocab.length);\n        if(!(suffix in activeCtx.mappings)) {\n          return suffix;\n        }\n      }\n    }\n  }\n\n  // no term or @vocab match, check for possible CURIEs\n  let choice = null;\n  // TODO: make FastCurieMap a class with a method to do this lookup\n  const partialMatches = [];\n  let iriMap = activeCtx.fastCurieMap;\n  // check for partial matches of against `iri`, which means look until\n  // iri.length - 1, not full length\n  const maxPartialLength = iri.length - 1;\n  for(let i = 0; i < maxPartialLength && iri[i] in iriMap; ++i) {\n    iriMap = iriMap[iri[i]];\n    if('' in iriMap) {\n      partialMatches.push(iriMap[''][0]);\n    }\n  }\n  // check partial matches in reverse order to prefer longest ones first\n  for(let i = partialMatches.length - 1; i >= 0; --i) {\n    const entry = partialMatches[i];\n    const terms = entry.terms;\n    for(const term of terms) {\n      // a CURIE is usable if:\n      // 1. it has no mapping, OR\n      // 2. value is null, which means we're not compacting an @value, AND\n      //   the mapping matches the IRI\n      const curie = term + ':' + iri.substr(entry.iri.length);\n      const isUsableCurie = (activeCtx.mappings[term]._prefix &&\n        (!(curie in activeCtx.mappings) ||\n        (value === null && activeCtx.mappings[curie]['@id'] === iri)));\n\n      // select curie if it is shorter or the same length but lexicographically\n      // less than the current choice\n      if(isUsableCurie && (choice === null ||\n        _compareShortestLeast(curie, choice) < 0)) {\n        choice = curie;\n      }\n    }\n  }\n\n  // return chosen curie\n  if(choice !== null) {\n    return choice;\n  }\n\n  // compact IRI relative to base\n  if(!relativeTo.vocab) {\n    return _removeBase(activeCtx['@base'], iri);\n  }\n\n  // return IRI as is\n  return iri;\n};\n\n/**\n * Performs value compaction on an object with '@value' or '@id' as the only\n * property.\n *\n * @param activeCtx the active context.\n * @param activeProperty the active property that points to the value.\n * @param value the value to compact.\n *\n * @return the compaction result.\n */\napi.compactValue = ({activeCtx, activeProperty, value}) => {\n  // value is a @value\n  if(_isValue(value)) {\n    // get context rules\n    const type = _getContextValue(activeCtx, activeProperty, '@type');\n    const language = _getContextValue(activeCtx, activeProperty, '@language');\n    const container =\n      _getContextValue(activeCtx, activeProperty, '@container') || [];\n\n    // whether or not the value has an @index that must be preserved\n    const preserveIndex = '@index' in value && !container.includes('@index');\n\n    // if there's no @index to preserve ...\n    if(!preserveIndex) {\n      // matching @type or @language specified in context, compact value\n      if(value['@type'] === type || value['@language'] === language) {\n        return value['@value'];\n      }\n    }\n\n    // return just the value of @value if all are true:\n    // 1. @value is the only key or @index isn't being preserved\n    // 2. there is no default language or @value is not a string or\n    //   the key has a mapping with a null @language\n    const keyCount = Object.keys(value).length;\n    const isValueOnlyKey = (keyCount === 1 ||\n      (keyCount === 2 && '@index' in value && !preserveIndex));\n    const hasDefaultLanguage = ('@language' in activeCtx);\n    const isValueString = _isString(value['@value']);\n    const hasNullMapping = (activeCtx.mappings[activeProperty] &&\n      activeCtx.mappings[activeProperty]['@language'] === null);\n    if(isValueOnlyKey &&\n      (!hasDefaultLanguage || !isValueString || hasNullMapping)) {\n      return value['@value'];\n    }\n\n    const rval = {};\n\n    // preserve @index\n    if(preserveIndex) {\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@index',\n        relativeTo: {vocab: true}\n      })] = value['@index'];\n    }\n\n    if('@type' in value) {\n      // compact @type IRI\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@type',\n        relativeTo: {vocab: true}\n      })] = api.compactIri(\n        {activeCtx, iri: value['@type'], relativeTo: {vocab: true}});\n    } else if('@language' in value) {\n      // alias @language\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@language',\n        relativeTo: {vocab: true}\n      })] = value['@language'];\n    }\n\n    // alias @value\n    rval[api.compactIri({\n      activeCtx,\n      iri: '@value',\n      relativeTo: {vocab: true}\n    })] = value['@value'];\n\n    return rval;\n  }\n\n  // value is a subject reference\n  const expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true});\n  const type = _getContextValue(activeCtx, activeProperty, '@type');\n  const compacted = api.compactIri(\n    {activeCtx, iri: value['@id'], relativeTo: {vocab: type === '@vocab'}});\n\n  // compact to scalar\n  if(type === '@id' || type === '@vocab' || expandedProperty === '@graph') {\n    return compacted;\n  }\n\n  return {\n    [api.compactIri({\n      activeCtx,\n      iri: '@id',\n      relativeTo: {vocab: true}\n    })]: compacted\n  };\n};\n\n/**\n * Removes the @preserve keywords as the last step of the compaction\n * algorithm when it is running on framed output.\n *\n * @param ctx the active context used to compact the input.\n * @param input the framed, compacted output.\n * @param options the compaction options used.\n *\n * @return the resulting output.\n */\napi.removePreserve = (ctx, input, options) => {\n  // recurse through arrays\n  if(_isArray(input)) {\n    const output = [];\n    for(let i = 0; i < input.length; ++i) {\n      const result = api.removePreserve(ctx, input[i], options);\n      // drop nulls from arrays\n      if(result !== null) {\n        output.push(result);\n      }\n    }\n    input = output;\n  } else if(_isObject(input)) {\n    // remove @preserve\n    if('@preserve' in input) {\n      if(input['@preserve'] === '@null') {\n        return null;\n      }\n      return input['@preserve'];\n    }\n\n    // skip @values\n    if(_isValue(input)) {\n      return input;\n    }\n\n    // recurse through @lists\n    if(_isList(input)) {\n      input['@list'] = api.removePreserve(ctx, input['@list'], options);\n      return input;\n    }\n\n    // handle in-memory linked nodes\n    const idAlias = api.compactIri({\n      activeCtx: ctx,\n      iri: '@id',\n      relativeTo: {vocab: true}\n    });\n    if(idAlias in input) {\n      const id = input[idAlias];\n      if(id in options.link) {\n        const idx = options.link[id].indexOf(input);\n        if(idx !== -1) {\n          // already visited\n          return options.link[id][idx];\n        }\n        // prevent circular visitation\n        options.link[id].push(input);\n      } else {\n        // prevent circular visitation\n        options.link[id] = [input];\n      }\n    }\n\n    // recurse through properties\n    const graphAlias = api.compactIri({\n      activeCtx: ctx,\n      iri: '@graph',\n      relativeTo: {vocab: true}\n    });\n    for(const prop in input) {\n      // potentially remove the id, if it is an unreference bnode\n      if(prop === idAlias && options.bnodesToClear.includes(input[prop])) {\n        delete input[idAlias];\n        continue;\n      }\n\n      let result = api.removePreserve(ctx, input[prop], options);\n      const container = _getContextValue(ctx, prop, '@container') || [];\n      if(options.compactArrays && _isArray(result) && result.length === 1 &&\n        container.length === 0 && prop !== graphAlias) {\n        result = result[0];\n      }\n      input[prop] = result;\n    }\n  }\n  return input;\n};\n\n/**\n * Picks the preferred compaction term from the given inverse context entry.\n *\n * @param activeCtx the active context.\n * @param iri the IRI to pick the term for.\n * @param value the value to pick the term for.\n * @param containers the preferred containers.\n * @param typeOrLanguage either '@type' or '@language'.\n * @param typeOrLanguageValue the preferred value for '@type' or '@language'.\n *\n * @return the preferred term.\n */\nfunction _selectTerm(\n  activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue) {\n  if(typeOrLanguageValue === null) {\n    typeOrLanguageValue = '@null';\n  }\n\n  // preferences for the value of @type or @language\n  const prefs = [];\n\n  // determine prefs for @id based on whether or not value compacts to a term\n  if((typeOrLanguageValue === '@id' || typeOrLanguageValue === '@reverse') &&\n    _isSubjectReference(value)) {\n    // prefer @reverse first\n    if(typeOrLanguageValue === '@reverse') {\n      prefs.push('@reverse');\n    }\n    // try to compact value to a term\n    const term = api.compactIri(\n      {activeCtx, iri: value['@id'], relativeTo: {vocab: true}});\n    if(term in activeCtx.mappings &&\n      activeCtx.mappings[term] &&\n      activeCtx.mappings[term]['@id'] === value['@id']) {\n      // prefer @vocab\n      prefs.push.apply(prefs, ['@vocab', '@id']);\n    } else {\n      // prefer @id\n      prefs.push.apply(prefs, ['@id', '@vocab']);\n    }\n  } else {\n    prefs.push(typeOrLanguageValue);\n  }\n  prefs.push('@none');\n\n  const containerMap = activeCtx.inverse[iri];\n  for(let ci = 0; ci < containers.length; ++ci) {\n    // if container not available in the map, continue\n    const container = containers[ci];\n    if(!(container in containerMap)) {\n      continue;\n    }\n\n    const typeOrLanguageValueMap = containerMap[container][typeOrLanguage];\n    for(let pi = 0; pi < prefs.length; ++pi) {\n      // if type/language option not available in the map, continue\n      const pref = prefs[pi];\n      if(!(pref in typeOrLanguageValueMap)) {\n        continue;\n      }\n\n      // select term\n      return typeOrLanguageValueMap[pref];\n    }\n  }\n\n  return null;\n}\n\n/**\n * The value of `@nest` in the term definition must either be `@nest`, or a term\n * which resolves to `@nest`.\n *\n * @param activeCtx the active context.\n * @param nestProperty a term in the active context or `@nest`.\n */\nfunction _checkNestProperty(activeCtx, nestProperty) {\n  if(_expandIri(activeCtx, nestProperty, {vocab: true}) !== '@nest') {\n    throw new JsonLdError(\n      'JSON-LD compact error; nested property must have an @nest value ' +\n      'resolving to @nest.',\n      'jsonld.SyntaxError', {code: 'invalid @nest value'});\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/compact.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/constants.js":
/*!**********************************************!*\
  !*** ./node_modules/jsonld/lib/constants.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nconst XSD = 'http://www.w3.org/2001/XMLSchema#';\n\nmodule.exports = {\n  LINK_HEADER_REL: 'http://www.w3.org/ns/json-ld#context',\n\n  RDF,\n  RDF_LIST: RDF + 'List',\n  RDF_FIRST: RDF + 'first',\n  RDF_REST: RDF + 'rest',\n  RDF_NIL: RDF + 'nil',\n  RDF_TYPE: RDF + 'type',\n  RDF_PLAIN_LITERAL: RDF + 'PlainLiteral',\n  RDF_XML_LITERAL: RDF + 'XMLLiteral',\n  RDF_OBJECT: RDF + 'object',\n  RDF_LANGSTRING: RDF + 'langString',\n\n  XSD,\n  XSD_BOOLEAN: XSD + 'boolean',\n  XSD_DOUBLE: XSD + 'double',\n  XSD_INTEGER: XSD + 'integer',\n  XSD_STRING: XSD + 'string',\n};\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/constants.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/context.js":
/*!********************************************!*\
  !*** ./node_modules/jsonld/lib/context.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst util = __webpack_require__(/*! ./util */ \"./node_modules/jsonld/lib/util.js\");\nconst ActiveContextCache = __webpack_require__(/*! ./ActiveContextCache */ \"./node_modules/jsonld/lib/ActiveContextCache.js\");\nconst JsonLdError = __webpack_require__(/*! ./JsonLdError */ \"./node_modules/jsonld/lib/JsonLdError.js\");\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = __webpack_require__(/*! ./types */ \"./node_modules/jsonld/lib/types.js\");\n\nconst {\n  isAbsolute: _isAbsoluteIri,\n  isRelative: _isRelativeIri,\n  prependBase,\n  parse: parseUrl\n} = __webpack_require__(/*! ./url */ \"./node_modules/jsonld/lib/url.js\");\n\nconst {\n  asArray: _asArray,\n  compareShortestLeast: _compareShortestLeast\n} = __webpack_require__(/*! ./util */ \"./node_modules/jsonld/lib/util.js\");\n\nconst MAX_CONTEXT_URLS = 10;\n\nconst INITIAL_CONTEXT_CACHE = new Map();\nconst INITIAL_CONTEXT_CACHE_MAX_SIZE = 10000;\n\nconst api = {};\nmodule.exports = api;\n\napi.cache = new ActiveContextCache();\n\n/**\n * Processes a local context and returns a new active context.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param options the context processing options.\n *\n * @return the new active context.\n */\napi.process = ({activeCtx, localCtx, options}) => {\n  // normalize local context to an array of @context objects\n  if(_isObject(localCtx) && '@context' in localCtx &&\n    _isArray(localCtx['@context'])) {\n    localCtx = localCtx['@context'];\n  }\n  const ctxs = _isArray(localCtx) ? localCtx : [localCtx];\n\n  // no contexts in array, return current active context w/o changes\n  if(ctxs.length === 0) {\n    return activeCtx;\n  }\n\n  // process each context in order, update active context\n  // on each iteration to ensure proper caching\n  let rval = activeCtx;\n  for(let i = 0; i < ctxs.length; ++i) {\n    let ctx = ctxs[i];\n\n    // reset to initial context\n    if(ctx === null) {\n      rval = activeCtx = api.getInitialContext(options);\n      continue;\n    }\n\n    // dereference @context key if present\n    if(_isObject(ctx) && '@context' in ctx) {\n      ctx = ctx['@context'];\n    }\n\n    // context must be an object by now, all URLs retrieved before this call\n    if(!_isObject(ctx)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context must be an object.',\n        'jsonld.SyntaxError', {code: 'invalid local context', context: ctx});\n    }\n\n    // get context from cache if available\n    if(api.cache) {\n      const cached = api.cache.get(activeCtx, ctx);\n      if(cached) {\n        rval = activeCtx = cached;\n        continue;\n      }\n    }\n\n    // update active context and clone new one before updating\n    activeCtx = rval;\n    rval = rval.clone();\n\n    // define context mappings for keys in local context\n    const defined = {};\n\n    // handle @version\n    if('@version' in ctx) {\n      if(ctx['@version'] !== 1.1) {\n        throw new JsonLdError(\n          'Unsupported JSON-LD version: ' + ctx['@version'],\n          'jsonld.UnsupportedVersion',\n          {code: 'invalid @version value', context: ctx});\n      }\n      if(activeCtx.processingMode &&\n        activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          '@version: ' + ctx['@version'] + ' not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.ProcessingModeConflict',\n          {code: 'processing mode conflict', context: ctx});\n      }\n      rval.processingMode = 'json-ld-1.1';\n      rval['@version'] = ctx['@version'];\n      defined['@version'] = true;\n    }\n\n    // if not set explicitly, set processingMode to \"json-ld-1.0\"\n    rval.processingMode =\n      rval.processingMode || activeCtx.processingMode || 'json-ld-1.0';\n\n    // handle @base\n    if('@base' in ctx) {\n      let base = ctx['@base'];\n\n      if(base === null) {\n        // no action\n      } else if(_isAbsoluteIri(base)) {\n        base = parseUrl(base);\n      } else if(_isRelativeIri(base)) {\n        base = parseUrl(prependBase(activeCtx['@base'].href, base));\n      } else {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +\n          '@context must be an absolute IRI, a relative IRI, or null.',\n          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});\n      }\n\n      rval['@base'] = base;\n      defined['@base'] = true;\n    }\n\n    // handle @vocab\n    if('@vocab' in ctx) {\n      const value = ctx['@vocab'];\n      if(value === null) {\n        delete rval['@vocab'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else if(!_isAbsoluteIri(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be an absolute IRI.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else {\n        rval['@vocab'] = value;\n      }\n      defined['@vocab'] = true;\n    }\n\n    // handle @language\n    if('@language' in ctx) {\n      const value = ctx['@language'];\n      if(value === null) {\n        delete rval['@language'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@language\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError',\n          {code: 'invalid default language', context: ctx});\n      } else {\n        rval['@language'] = value.toLowerCase();\n      }\n      defined['@language'] = true;\n    }\n\n    // process all other keys\n    for(const key in ctx) {\n      api.createTermDefinition(rval, ctx, key, defined);\n    }\n\n    // cache result\n    if(api.cache) {\n      api.cache.set(activeCtx, ctx, rval);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Creates a term definition during context processing.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context being processed.\n * @param term the term in the local context to define the mapping for.\n * @param defined a map of defining/defined keys to detect cycles and prevent\n *          double definitions.\n */\napi.createTermDefinition = (activeCtx, localCtx, term, defined) => {\n  if(term in defined) {\n    // term already defined\n    if(defined[term]) {\n      return;\n    }\n    // cycle detected\n    throw new JsonLdError(\n      'Cyclical context definition detected.',\n      'jsonld.CyclicalContext',\n      {code: 'cyclic IRI mapping', context: localCtx, term});\n  }\n\n  // now defining term\n  defined[term] = false;\n\n  if(api.isKeyword(term)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; keywords cannot be overridden.',\n      'jsonld.SyntaxError',\n      {code: 'keyword redefinition', context: localCtx, term});\n  }\n\n  if(term === '') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a term cannot be an empty string.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // remove old mapping\n  if(activeCtx.mappings[term]) {\n    delete activeCtx.mappings[term];\n  }\n\n  // get context term value\n  let value = localCtx[term];\n\n  // clear context entry\n  if(value === null || (_isObject(value) && value['@id'] === null)) {\n    activeCtx.mappings[term] = null;\n    defined[term] = true;\n    return;\n  }\n\n  // convert short-hand value to object w/@id\n  let simpleTerm = false;\n  if(_isString(value)) {\n    simpleTerm = true;\n    value = {'@id': value};\n  }\n\n  if(!_isObject(value)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context term values must be ' +\n      'strings or objects.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // create new mapping\n  const mapping = activeCtx.mappings[term] = {};\n  mapping.reverse = false;\n\n  // make sure term definition only has expected keywords\n  const validKeys = ['@container', '@id', '@language', '@reverse', '@type'];\n\n  // JSON-LD 1.1 support\n  if(api.processingMode(activeCtx, 1.1)) {\n    validKeys.push('@context', '@nest', '@prefix');\n  }\n\n  for(const kw in value) {\n    if(!validKeys.includes(kw)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a term definition must not contain ' + kw,\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n  }\n\n  // always compute whether term has a colon as an optimization for\n  // _compactIri\n  const colon = term.indexOf(':');\n  mapping._termHasColon = (colon !== -1);\n\n  if('@reverse' in value) {\n    if('@id' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @id.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    if('@nest' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @nest.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    const reverse = value['@reverse'];\n    if(!_isString(reverse)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n\n    // expand and add @id mapping\n    const id = api.expandIri(\n      activeCtx, reverse, {vocab: true, base: false}, localCtx, defined);\n    if(!_isAbsoluteIri(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be an ' +\n        'absolute IRI or a blank node identifier.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n    mapping['@id'] = id;\n    mapping.reverse = true;\n  } else if('@id' in value) {\n    let id = value['@id'];\n    if(!_isString(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @id value must be an array ' +\n        'of strings or a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n    if(id !== term) {\n      // expand and add @id mapping\n      id = api.expandIri(\n        activeCtx, id, {vocab: true, base: false}, localCtx, defined);\n      if(!_isAbsoluteIri(id) && !api.isKeyword(id)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a @context @id value must be an ' +\n          'absolute IRI, a blank node identifier, or a keyword.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx});\n      }\n      mapping['@id'] = id;\n      // indicate if this term may be used as a compact IRI prefix\n      mapping._prefix = (!mapping._termHasColon &&\n        id.match(/[:\\/\\?#\\[\\]@]$/) &&\n        (simpleTerm || api.processingMode(activeCtx, 1.0)));\n    }\n  }\n\n  if(!('@id' in mapping)) {\n    // see if the term has a prefix\n    if(mapping._termHasColon) {\n      const prefix = term.substr(0, colon);\n      if(prefix in localCtx) {\n        // define parent prefix\n        api.createTermDefinition(activeCtx, localCtx, prefix, defined);\n      }\n\n      if(activeCtx.mappings[prefix]) {\n        // set @id based on prefix parent\n        const suffix = term.substr(colon + 1);\n        mapping['@id'] = activeCtx.mappings[prefix]['@id'] + suffix;\n      } else {\n        // term is an absolute IRI\n        mapping['@id'] = term;\n      }\n    } else {\n      // non-IRIs *must* define @ids if @vocab is not available\n      if(!('@vocab' in activeCtx)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @context terms must define an @id.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx, term});\n      }\n      // prepend vocab to term\n      mapping['@id'] = activeCtx['@vocab'] + term;\n    }\n  }\n\n  // IRI mapping now defined\n  defined[term] = true;\n\n  if('@type' in value) {\n    let type = value['@type'];\n    if(!_isString(type)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an @context @type values must be a string.',\n        'jsonld.SyntaxError',\n        {code: 'invalid type mapping', context: localCtx});\n    }\n\n    if(type !== '@id' && type !== '@vocab') {\n      // expand @type to full IRI\n      type = api.expandIri(\n        activeCtx, type, {vocab: true, base: false}, localCtx, defined);\n      if(!_isAbsoluteIri(type)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must be an ' +\n          'absolute IRI.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n      if(type.indexOf('_:') === 0) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type values must be an IRI, ' +\n          'not a blank node identifier.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n    }\n\n    // add @type to mapping\n    mapping['@type'] = type;\n  }\n\n  if('@container' in value) {\n    // normalize container to an array form\n    const container = _isString(value['@container']) ?\n      [value['@container']] : (value['@container'] || []);\n    const validContainers = ['@list', '@set', '@index', '@language'];\n    let isValid = true;\n    const hasSet = container.includes('@set');\n\n    // JSON-LD 1.1 support\n    if(api.processingMode(activeCtx, 1.1)) {\n      validContainers.push('@graph', '@id', '@type');\n\n      // check container length\n      if(container.includes('@list')) {\n        if(container.length !== 1) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; @context @container with @list must ' +\n            'have no other values',\n            'jsonld.SyntaxError',\n            {code: 'invalid container mapping', context: localCtx});\n        }\n      } else if(container.includes('@graph')) {\n        if(container.some(key =>\n          key !== '@graph' && key !== '@id' && key !== '@index' &&\n          key !== '@set')) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; @context @container with @graph must ' +\n            'have no other values other than @id, @index, and @set',\n            'jsonld.SyntaxError',\n            {code: 'invalid container mapping', context: localCtx});\n        }\n      } else {\n        // otherwise, container may also include @set\n        isValid &= container.length <= (hasSet ? 2 : 1);\n      }\n    } else {\n      // in JSON-LD 1.0, container must not be an array (it must be a string,\n      // which is one of the validContainers)\n      isValid &= !_isArray(value['@container']);\n\n      // check container length\n      isValid &= container.length <= 1;\n    }\n\n    // check against valid containers\n    isValid &= container.every(c => validContainers.includes(c));\n\n    // @set not allowed with @list\n    isValid &= !(hasSet && container.includes('@list'));\n\n    if(!isValid) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value must be ' +\n        'one of the following: ' + validContainers.join(', '),\n        'jsonld.SyntaxError',\n        {code: 'invalid container mapping', context: localCtx});\n    }\n\n    if(mapping.reverse &&\n      !container.every(c => ['@index', '@set'].includes(c))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value for a @reverse ' +\n        'type definition must be @index or @set.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n\n    // add @container to mapping\n    mapping['@container'] = container;\n  }\n\n  // scoped contexts\n  if('@context' in value) {\n    mapping['@context'] = value['@context'];\n  }\n\n  if('@language' in value && !('@type' in value)) {\n    let language = value['@language'];\n    if(language !== null && !_isString(language)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @language value must be ' +\n        'a string or null.', 'jsonld.SyntaxError',\n        {code: 'invalid language mapping', context: localCtx});\n    }\n\n    // add @language to mapping\n    if(language !== null) {\n      language = language.toLowerCase();\n    }\n    mapping['@language'] = language;\n  }\n\n  // term may be used as a prefix\n  if('@prefix' in value) {\n    if(mapping._termHasColon) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @prefix used on a compact IRI term',\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(typeof value['@prefix'] === 'boolean') {\n      mapping._prefix = value['@prefix'] === true;\n    } else {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context value for @prefix must be boolean',\n        'jsonld.SyntaxError',\n        {code: 'invalid @prefix value', context: localCtx});\n    }\n  }\n\n  if('@nest' in value) {\n    const nest = value['@nest'];\n    if(!_isString(nest) || (nest !== '@nest' && nest.indexOf('@') === 0)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @nest value must be ' +\n        'a string which is not a keyword other than @nest.',\n        'jsonld.SyntaxError',\n        {code: 'invalid @nest value', context: localCtx});\n    }\n    mapping['@nest'] = nest;\n  }\n\n  // disallow aliasing @context and @preserve\n  const id = mapping['@id'];\n  if(id === '@context' || id === '@preserve') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context and @preserve cannot be aliased.',\n      'jsonld.SyntaxError', {code: 'invalid keyword alias', context: localCtx});\n  }\n};\n\n/**\n * Expands a string to a full IRI. The string may be a term, a prefix, a\n * relative IRI, or an absolute IRI. The associated absolute IRI will be\n * returned.\n *\n * @param activeCtx the current active context.\n * @param value the string to expand.\n * @param relativeTo options for how to resolve relative IRIs:\n *          base: true to resolve against the base IRI, false not to.\n *          vocab: true to concatenate after @vocab, false not to.\n * @param localCtx the local context being processed (only given if called\n *          during context processing).\n * @param defined a map for tracking cycles in context definitions (only given\n *          if called during context processing).\n *\n * @return the expanded value.\n */\napi.expandIri = (activeCtx, value, relativeTo, localCtx, defined) => {\n  // already expanded\n  if(value === null || !_isString(value) || api.isKeyword(value)) {\n    return value;\n  }\n\n  // define term dependency if not defined\n  if(localCtx && value in localCtx && defined[value] !== true) {\n    api.createTermDefinition(activeCtx, localCtx, value, defined);\n  }\n\n  relativeTo = relativeTo || {};\n  if(relativeTo.vocab) {\n    const mapping = activeCtx.mappings[value];\n\n    // value is explicitly ignored with a null mapping\n    if(mapping === null) {\n      return null;\n    }\n\n    if(mapping) {\n      // value is a term\n      return mapping['@id'];\n    }\n  }\n\n  // split value into prefix:suffix\n  const colon = value.indexOf(':');\n  if(colon !== -1) {\n    const prefix = value.substr(0, colon);\n    const suffix = value.substr(colon + 1);\n\n    // do not expand blank nodes (prefix of '_') or already-absolute\n    // IRIs (suffix of '//')\n    if(prefix === '_' || suffix.indexOf('//') === 0) {\n      return value;\n    }\n\n    // prefix dependency not defined, define it\n    if(localCtx && prefix in localCtx) {\n      api.createTermDefinition(activeCtx, localCtx, prefix, defined);\n    }\n\n    // use mapping if prefix is defined\n    const mapping = activeCtx.mappings[prefix];\n    if(mapping) {\n      return mapping['@id'] + suffix;\n    }\n\n    // already absolute IRI\n    return value;\n  }\n\n  // prepend vocab\n  if(relativeTo.vocab && '@vocab' in activeCtx) {\n    return activeCtx['@vocab'] + value;\n  }\n\n  // prepend base\n  if(relativeTo.base) {\n    return prependBase(activeCtx['@base'], value);\n  }\n\n  return value;\n};\n\n/**\n * Gets the initial context.\n *\n * @param options the options to use:\n *          [base] the document base IRI.\n *\n * @return the initial context.\n */\napi.getInitialContext = options => {\n  const base = parseUrl(options.base || '');\n  const key = JSON.stringify({base, processingMode: options.processingMode});\n  const cached = INITIAL_CONTEXT_CACHE.get(key);\n  if(cached) {\n    return cached;\n  }\n\n  const initialContext = {\n    '@base': base,\n    processingMode: options.processingMode,\n    mappings: {},\n    inverse: null,\n    getInverse: _createInverseContext,\n    clone: _cloneActiveContext\n  };\n  // TODO: consider using LRU cache instead\n  if(INITIAL_CONTEXT_CACHE.size === INITIAL_CONTEXT_CACHE_MAX_SIZE) {\n    // clear whole cache -- assumes scenario where the cache fills means\n    // the cache isn't being used very efficiently anyway\n    INITIAL_CONTEXT_CACHE.clear();\n  }\n  INITIAL_CONTEXT_CACHE.set(key, initialContext);\n  return initialContext;\n\n  /**\n   * Generates an inverse context for use in the compaction algorithm, if\n   * not already generated for the given active context.\n   *\n   * @return the inverse context.\n   */\n  function _createInverseContext() {\n    const activeCtx = this;\n\n    // lazily create inverse\n    if(activeCtx.inverse) {\n      return activeCtx.inverse;\n    }\n    const inverse = activeCtx.inverse = {};\n\n    // variables for building fast CURIE map\n    const fastCurieMap = activeCtx.fastCurieMap = {};\n    const irisToTerms = {};\n\n    // handle default language\n    const defaultLanguage = activeCtx['@language'] || '@none';\n\n    // create term selections for each mapping in the context, ordered by\n    // shortest and then lexicographically least\n    const mappings = activeCtx.mappings;\n    const terms = Object.keys(mappings).sort(_compareShortestLeast);\n    for(let i = 0; i < terms.length; ++i) {\n      const term = terms[i];\n      const mapping = mappings[term];\n      if(mapping === null) {\n        continue;\n      }\n\n      let container = mapping['@container'] || '@none';\n      container = [].concat(container).sort().join('');\n\n      // iterate over every IRI in the mapping\n      const ids = _asArray(mapping['@id']);\n      for(let ii = 0; ii < ids.length; ++ii) {\n        const iri = ids[ii];\n        let entry = inverse[iri];\n        const isKeyword = api.isKeyword(iri);\n\n        if(!entry) {\n          // initialize entry\n          inverse[iri] = entry = {};\n\n          if(!isKeyword && !mapping._termHasColon) {\n            // init IRI to term map and fast CURIE prefixes\n            irisToTerms[iri] = [term];\n            const fastCurieEntry = {iri, terms: irisToTerms[iri]};\n            if(iri[0] in fastCurieMap) {\n              fastCurieMap[iri[0]].push(fastCurieEntry);\n            } else {\n              fastCurieMap[iri[0]] = [fastCurieEntry];\n            }\n          }\n        } else if(!isKeyword && !mapping._termHasColon) {\n          // add IRI to term match\n          irisToTerms[iri].push(term);\n        }\n\n        // add new entry\n        if(!entry[container]) {\n          entry[container] = {\n            '@language': {},\n            '@type': {},\n            '@any': {}\n          };\n        }\n        entry = entry[container];\n        _addPreferredTerm(term, entry['@any'], '@none');\n\n        if(mapping.reverse) {\n          // term is preferred for values using @reverse\n          _addPreferredTerm(term, entry['@type'], '@reverse');\n        } else if('@type' in mapping) {\n          // term is preferred for values using specific type\n          _addPreferredTerm(term, entry['@type'], mapping['@type']);\n        } else if('@language' in mapping) {\n          // term is preferred for values using specific language\n          const language = mapping['@language'] || '@null';\n          _addPreferredTerm(term, entry['@language'], language);\n        } else {\n          // term is preferred for values w/default language or no type and\n          // no language\n          // add an entry for the default language\n          _addPreferredTerm(term, entry['@language'], defaultLanguage);\n\n          // add entries for no type and no language\n          _addPreferredTerm(term, entry['@type'], '@none');\n          _addPreferredTerm(term, entry['@language'], '@none');\n        }\n      }\n    }\n\n    // build fast CURIE map\n    for(const key in fastCurieMap) {\n      _buildIriMap(fastCurieMap, key, 1);\n    }\n\n    return inverse;\n  }\n\n  /**\n   * Runs a recursive algorithm to build a lookup map for quickly finding\n   * potential CURIEs.\n   *\n   * @param iriMap the map to build.\n   * @param key the current key in the map to work on.\n   * @param idx the index into the IRI to compare.\n   */\n  function _buildIriMap(iriMap, key, idx) {\n    const entries = iriMap[key];\n    const next = iriMap[key] = {};\n\n    let iri;\n    let letter;\n    for(let i = 0; i < entries.length; ++i) {\n      iri = entries[i].iri;\n      if(idx >= iri.length) {\n        letter = '';\n      } else {\n        letter = iri[idx];\n      }\n      if(letter in next) {\n        next[letter].push(entries[i]);\n      } else {\n        next[letter] = [entries[i]];\n      }\n    }\n\n    for(const key in next) {\n      if(key === '') {\n        continue;\n      }\n      _buildIriMap(next, key, idx + 1);\n    }\n  }\n\n  /**\n   * Adds the term for the given entry if not already added.\n   *\n   * @param term the term to add.\n   * @param entry the inverse context typeOrLanguage entry to add to.\n   * @param typeOrLanguageValue the key in the entry to add to.\n   */\n  function _addPreferredTerm(term, entry, typeOrLanguageValue) {\n    if(!(typeOrLanguageValue in entry)) {\n      entry[typeOrLanguageValue] = term;\n    }\n  }\n\n  /**\n   * Clones an active context, creating a child active context.\n   *\n   * @return a clone (child) of the active context.\n   */\n  function _cloneActiveContext() {\n    const child = {};\n    child['@base'] = this['@base'];\n    child.mappings = util.clone(this.mappings);\n    child.clone = this.clone;\n    child.inverse = null;\n    child.getInverse = this.getInverse;\n    if('@language' in this) {\n      child['@language'] = this['@language'];\n    }\n    if('@vocab' in this) {\n      child['@vocab'] = this['@vocab'];\n    }\n    return child;\n  }\n};\n\n/**\n * Gets the value for the given active context key and type, null if none is\n * set.\n *\n * @param ctx the active context.\n * @param key the context key.\n * @param [type] the type of value to get (eg: '@id', '@type'), if not\n *          specified gets the entire entry for a key, null if not found.\n *\n * @return the value.\n */\napi.getContextValue = (ctx, key, type) => {\n  // return null for invalid key\n  if(key === null) {\n    return null;\n  }\n\n  // get specific entry information\n  if(ctx.mappings[key]) {\n    const entry = ctx.mappings[key];\n\n    if(_isUndefined(type)) {\n      // return whole entry\n      return entry;\n    }\n    if(type in entry) {\n      // return entry value for type\n      return entry[type];\n    }\n  }\n\n  // get default language\n  if(type === '@language' && (type in ctx)) {\n    return ctx[type];\n  }\n\n  return null;\n};\n\n/**\n * Retrieves external @context URLs using the given document loader. Every\n * instance of @context in the input that refers to a URL will be replaced\n * with the JSON @context found at that URL.\n *\n * @param input the JSON-LD input with possible contexts.\n * @param options the options to use:\n *          documentLoader(url, [callback(err, remoteDoc)]) the document loader.\n * @param callback(err, input) called once the operation completes.\n */\napi.getAllContexts = async (input, options) => {\n  return _retrieveContextUrls(input, options);\n};\n\n/**\n * Processing Mode check.\n *\n * @param activeCtx the current active context.\n * @param version the string or numeric version to check.\n *\n * @return boolean.\n */\napi.processingMode = (activeCtx, version) => {\n  if(version.toString() >= '1.1') {\n    return activeCtx.processingMode &&\n      activeCtx.processingMode >= 'json-ld-' + version.toString();\n  } else {\n    return !activeCtx.processingMode ||\n      activeCtx.processingMode === 'json-ld-1.0';\n  }\n};\n\n/**\n * Returns whether or not the given value is a keyword.\n *\n * @param v the value to check.\n *\n * @return true if the value is a keyword, false if not.\n */\napi.isKeyword = v => {\n  if(!_isString(v)) {\n    return false;\n  }\n  switch(v) {\n    case '@base':\n    case '@container':\n    case '@context':\n    case '@default':\n    case '@embed':\n    case '@explicit':\n    case '@graph':\n    case '@id':\n    case '@index':\n    case '@language':\n    case '@list':\n    case '@nest':\n    case '@none':\n    case '@omitDefault':\n    case '@prefix':\n    case '@preserve':\n    case '@requireAll':\n    case '@reverse':\n    case '@set':\n    case '@type':\n    case '@value':\n    case '@version':\n    case '@vocab':\n      return true;\n  }\n  return false;\n};\n\nasync function _retrieveContextUrls(input, options) {\n  const documentLoader = util.normalizeDocumentLoader(options.documentLoader);\n\n  // retrieve all @context URLs in input\n  await retrieve(input, new Set(), documentLoader);\n\n  return input;\n\n  // recursive function that will retrieve all @context URLs in documents\n  async function retrieve(doc, cycles, documentLoader) {\n    if(cycles.size > MAX_CONTEXT_URLS) {\n      throw new JsonLdError(\n        'Maximum number of @context URLs exceeded.',\n        'jsonld.ContextUrlError',\n        {code: 'loading remote context failed', max: MAX_CONTEXT_URLS});\n    }\n\n    // find all URLs in the given document\n    const urls = new Map();\n    _findContextUrls(doc, urls, false, options.base);\n    if(urls.size === 0) {\n      return;\n    }\n\n    // queue all unretrieved URLs\n    const queue = [...urls.keys()].filter(u => urls.get(u) === false);\n\n    // retrieve URLs in queue\n    return Promise.all(queue.map(async url => {\n      // check for context URL cycle\n      if(cycles.has(url)) {\n        throw new JsonLdError(\n          'Cyclical @context URLs detected.',\n          'jsonld.ContextUrlError',\n          {code: 'recursive context inclusion', url});\n      }\n\n      const _cycles = new Set(cycles);\n      _cycles.add(url);\n      let remoteDoc;\n      let ctx;\n\n      try {\n        remoteDoc = await documentLoader(url);\n        ctx = remoteDoc.document || null;\n        // parse string context as JSON\n        if(_isString(ctx)) {\n          ctx = JSON.parse(ctx);\n        }\n      } catch(e) {\n        throw new JsonLdError(\n          'Dereferencing a URL did not result in a valid JSON-LD object. ' +\n          'Possible causes are an inaccessible URL perhaps due to ' +\n          'a same-origin policy (ensure the server uses CORS if you are ' +\n          'using client-side JavaScript), too many redirects, a ' +\n          'non-JSON response, or more than one HTTP Link Header was ' +\n          'provided for a remote context.',\n          'jsonld.InvalidUrl',\n          {code: 'loading remote context failed', url, cause: e});\n      }\n\n      // ensure ctx is an object\n      if(!_isObject(ctx)) {\n        throw new JsonLdError(\n          'Dereferencing a URL did not result in a JSON object. The ' +\n          'response was valid JSON, but it was not a JSON object.',\n          'jsonld.InvalidUrl',\n          {code: 'invalid remote context', url});\n      }\n\n      // use empty context if no @context key is present\n      if(!('@context' in ctx)) {\n        ctx = {'@context': {}};\n      } else {\n        ctx = {'@context': ctx['@context']};\n      }\n\n      // append @context URL to context if given\n      if(remoteDoc.contextUrl) {\n        if(!_isArray(ctx['@context'])) {\n          ctx['@context'] = [ctx['@context']];\n        }\n        ctx['@context'].push(remoteDoc.contextUrl);\n      }\n\n      // recurse\n      await retrieve(ctx, _cycles, documentLoader);\n\n      // store retrieved context w/replaced @context URLs\n      urls.set(url, ctx['@context']);\n\n      // replace all @context URLs in the document\n      _findContextUrls(doc, urls, true, options.base);\n    }));\n  }\n}\n\n/**\n * Finds all @context URLs in the given JSON-LD input.\n *\n * @param input the JSON-LD input.\n * @param urls a map of URLs (url => false/@contexts).\n * @param replace true to replace the URLs in the given input with the\n *           @contexts from the urls map, false not to.\n * @param base the base IRI to use to resolve relative IRIs.\n *\n * @return true if new URLs to retrieve were found, false if not.\n */\nfunction _findContextUrls(input, urls, replace, base) {\n  if(_isArray(input)) {\n    for(const element of input) {\n      _findContextUrls(element, urls, replace, base);\n    }\n    return;\n  }\n\n  if(!_isObject(input)) {\n    // no @context URLs can be found in non-object input\n    return;\n  }\n\n  // input is an object\n  for(const key in input) {\n    if(key !== '@context') {\n      _findContextUrls(input[key], urls, replace, base);\n      continue;\n    }\n\n    // get @context\n    const ctx = input[key];\n\n    if(_isArray(ctx)) {\n      // array @context\n      let length = ctx.length;\n      for(let i = 0; i < length; ++i) {\n        const _ctx = ctx[i];\n        if(_isString(_ctx)) {\n          const prepended = prependBase(base, _ctx);\n          const resolved = urls.get(prepended);\n          // replace w/@context if requested\n          if(replace) {\n            if(_isArray(resolved)) {\n              // add flattened context\n              Array.prototype.splice.apply(ctx, [i, 1].concat(resolved));\n              i += resolved.length - 1;\n              length = ctx.length;\n            } else if(resolved !== false) {\n              ctx[i] = resolved;\n            }\n          } else if(resolved === undefined) {\n            // @context URL found\n            urls.set(prepended, false);\n          }\n        } else {\n          // look for scoped context\n          for(const key in _ctx) {\n            if(_isObject(_ctx[key])) {\n              _findContextUrls(_ctx[key], urls, replace, base);\n            }\n          }\n        }\n      }\n    } else if(_isString(ctx)) {\n      // string @context\n      const prepended = prependBase(base, ctx);\n      const resolved = urls.get(prepended);\n      // replace w/@context if requested\n      if(replace) {\n        if(resolved !== false) {\n          input[key] = resolved;\n        }\n      } else if(resolved === undefined) {\n        // @context URL found\n        urls.set(prepended, false);\n      }\n    } else {\n      // look for scoped context\n      for(const key in ctx) {\n        if(_isObject(ctx[key])) {\n          _findContextUrls(ctx[key], urls, replace, base);\n        }\n      }\n    }\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/context.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/documentLoaders/node.js":
/*!*********************************************************!*\
  !*** ./node_modules/jsonld/lib/documentLoaders/node.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst {parseLinkHeader, buildHeaders} = __webpack_require__(/*! ../util */ \"./node_modules/jsonld/lib/util.js\");\nconst {LINK_HEADER_REL} = __webpack_require__(/*! ../constants */ \"./node_modules/jsonld/lib/constants.js\");\nconst JsonLdError = __webpack_require__(/*! ../JsonLdError */ \"./node_modules/jsonld/lib/JsonLdError.js\");\nconst RequestQueue = __webpack_require__(/*! ../RequestQueue */ \"./node_modules/jsonld/lib/RequestQueue.js\");\n\n/**\n * Creates a built-in node document loader.\n *\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          strictSSL: true to require SSL certificates to be valid,\n *            false not to (default: true).\n *          maxRedirects: the maximum number of redirects to permit, none by\n *            default.\n *          request: the object which will make the request, default is\n *            provided by `https://www.npmjs.com/package/request`.\n *          headers: an object (map) of headers which will be passed as request\n *            headers for the requested document. Accept is not allowed.\n *\n * @return the node document loader.\n */\nmodule.exports = ({\n  secure,\n  strictSSL = true,\n  maxRedirects = -1,\n  request,\n  headers = {}\n} = {strictSSL: true, maxRedirects: -1, headers: {}}) => {\n  headers = buildHeaders(headers);\n  // TODO: use `r2`\n  request = request || __webpack_require__(/*! request */ 2);\n  const http = __webpack_require__(/*! http */ 3);\n  // TODO: disable cache until HTTP caching implemented\n  //const cache = new DocumentCache();\n\n  const queue = new RequestQueue();\n  return queue.wrapLoader(function(url) {\n    return loadDocument(url, []);\n  });\n\n  async function loadDocument(url, redirects) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      throw new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url});\n    }\n    if(secure && url.indexOf('https') !== 0) {\n      throw new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url});\n    }\n    // TODO: disable cache until HTTP caching implemented\n    let doc = null;//cache.get(url);\n    if(doc !== null) {\n      return doc;\n    }\n\n    let result;\n    try {\n      result = await _request(request, {\n        url,\n        headers,\n        strictSSL,\n        followRedirect: false\n      });\n    } catch(e) {\n      throw new JsonLdError(\n        'URL could not be dereferenced, an error occurred.',\n        'jsonld.LoadDocumentError',\n        {code: 'loading document failed', url, cause: e});\n    }\n\n    const {res, body} = result;\n\n    doc = {contextUrl: null, documentUrl: url, document: body || null};\n\n    // handle error\n    const statusText = http.STATUS_CODES[res.statusCode];\n    if(res.statusCode >= 400) {\n      throw new JsonLdError(\n        'URL could not be dereferenced: ' + statusText,\n        'jsonld.InvalidUrl', {\n          code: 'loading document failed',\n          url,\n          httpStatusCode: res.statusCode\n        });\n    }\n\n    // handle Link Header\n    if(res.headers.link &&\n      res.headers['content-type'] !== 'application/ld+json') {\n      // only 1 related link header permitted\n      const linkHeader = parseLinkHeader(res.headers.link)[LINK_HEADER_REL];\n      if(Array.isArray(linkHeader)) {\n        throw new JsonLdError(\n          'URL could not be dereferenced, it has more than one associated ' +\n          'HTTP Link Header.',\n          'jsonld.InvalidUrl',\n          {code: 'multiple context link headers', url});\n      }\n      if(linkHeader) {\n        doc.contextUrl = linkHeader.target;\n      }\n    }\n\n    // handle redirect\n    if(res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      if(redirects.length === maxRedirects) {\n        throw new JsonLdError(\n          'URL could not be dereferenced; there were too many redirects.',\n          'jsonld.TooManyRedirects', {\n            code: 'loading document failed',\n            url,\n            httpStatusCode: res.statusCode,\n            redirects\n          });\n      }\n      if(redirects.indexOf(url) !== -1) {\n        throw new JsonLdError(\n          'URL could not be dereferenced; infinite redirection was detected.',\n          'jsonld.InfiniteRedirectDetected', {\n            code: 'recursive context inclusion',\n            url,\n            httpStatusCode: res.statusCode,\n            redirects\n          });\n      }\n      redirects.push(url);\n      return loadDocument(res.headers.location, redirects);\n    }\n\n    // cache for each redirected URL\n    redirects.push(url);\n    // TODO: disable cache until HTTP caching implemented\n    /*\n    for(let i = 0; i < redirects.length; ++i) {\n      cache.set(\n        redirects[i],\n        {contextUrl: null, documentUrl: redirects[i], document: body});\n    }\n    */\n\n    return doc;\n  }\n};\n\nfunction _request(request, options) {\n  return new Promise((resolve, reject) => {\n    request(options, (err, res, body) => {\n      if(err) {\n        reject(err);\n      } else {\n        resolve({res, body});\n      }\n    });\n  });\n}\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/documentLoaders/node.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/documentLoaders/xhr.js":
/*!********************************************************!*\
  !*** ./node_modules/jsonld/lib/documentLoaders/xhr.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst {parseLinkHeader, buildHeaders} = __webpack_require__(/*! ../util */ \"./node_modules/jsonld/lib/util.js\");\nconst {LINK_HEADER_REL} = __webpack_require__(/*! ../constants */ \"./node_modules/jsonld/lib/constants.js\");\nconst JsonLdError = __webpack_require__(/*! ../JsonLdError */ \"./node_modules/jsonld/lib/JsonLdError.js\");\nconst RequestQueue = __webpack_require__(/*! ../RequestQueue */ \"./node_modules/jsonld/lib/RequestQueue.js\");\n\nconst REGEX_LINK_HEADER = /(^|(\\r\\n))link:/i;\n\n/**\n * Creates a built-in XMLHttpRequest document loader.\n *\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          headers: an object (map) of headers which will be passed as request\n *            headers for the requested document. Accept is not allowed.\n *          [xhr]: the XMLHttpRequest API to use.\n *\n * @return the XMLHttpRequest document loader.\n */\nmodule.exports = ({\n  secure,\n  headers = {},\n  xhr\n} = {headers: {}}) => {\n  headers = buildHeaders(headers);\n  const queue = new RequestQueue();\n  return queue.wrapLoader(loader);\n\n  async function loader(url) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      throw new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url});\n    }\n    if(secure && url.indexOf('https') !== 0) {\n      throw new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url});\n    }\n\n    let req;\n    try {\n      req = await _get(xhr, url, headers);\n    } catch(e) {\n      throw new JsonLdError(\n        'URL could not be dereferenced, an error occurred.',\n        'jsonld.LoadDocumentError',\n        {code: 'loading document failed', url, cause: e});\n    }\n\n    if(req.status >= 400) {\n      throw new JsonLdError(\n        'URL could not be dereferenced: ' + req.statusText,\n        'jsonld.LoadDocumentError', {\n          code: 'loading document failed',\n          url,\n          httpStatusCode: req.status\n        });\n    }\n\n    const doc = {contextUrl: null, documentUrl: url, document: req.response};\n\n    // handle Link Header (avoid unsafe header warning by existence testing)\n    const contentType = req.getResponseHeader('Content-Type');\n    let linkHeader;\n    if(REGEX_LINK_HEADER.test(req.getAllResponseHeaders())) {\n      linkHeader = req.getResponseHeader('Link');\n    }\n    if(linkHeader && contentType !== 'application/ld+json') {\n      // only 1 related link header permitted\n      linkHeader = parseLinkHeader(linkHeader)[LINK_HEADER_REL];\n      if(Array.isArray(linkHeader)) {\n        throw new JsonLdError(\n          'URL could not be dereferenced, it has more than one ' +\n          'associated HTTP Link Header.',\n          'jsonld.InvalidUrl',\n          {code: 'multiple context link headers', url});\n      }\n      if(linkHeader) {\n        doc.contextUrl = linkHeader.target;\n      }\n    }\n\n    return doc;\n  }\n};\n\nfunction _get(xhr, url, headers) {\n  xhr = xhr || XMLHttpRequest;\n  const req = new xhr();\n  return new Promise((resolve, reject) => {\n    req.onload = () => resolve(req);\n    req.onerror = err => reject(err);\n    req.open('GET', url, true);\n    for(const k in headers) {\n      req.setRequestHeader(k, headers[k]);\n    }\n    req.send();\n  });\n}\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/documentLoaders/xhr.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/expand.js":
/*!*******************************************!*\
  !*** ./node_modules/jsonld/lib/expand.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst JsonLdError = __webpack_require__(/*! ./JsonLdError */ \"./node_modules/jsonld/lib/JsonLdError.js\");\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isEmptyObject: _isEmptyObject,\n  isString: _isString\n} = __webpack_require__(/*! ./types */ \"./node_modules/jsonld/lib/types.js\");\n\nconst {\n  isList: _isList,\n  isValue: _isValue,\n  isGraph: _isGraph\n} = __webpack_require__(/*! ./graphTypes */ \"./node_modules/jsonld/lib/graphTypes.js\");\n\nconst {\n  expandIri: _expandIri,\n  getContextValue: _getContextValue,\n  isKeyword: _isKeyword,\n  process: _processContext\n} = __webpack_require__(/*! ./context */ \"./node_modules/jsonld/lib/context.js\");\n\nconst {\n  isAbsolute: _isAbsoluteIri\n} = __webpack_require__(/*! ./url */ \"./node_modules/jsonld/lib/url.js\");\n\nconst {\n  addValue: _addValue,\n  asArray: _asArray,\n  getValues: _getValues,\n  validateTypeValue: _validateTypeValue\n} = __webpack_require__(/*! ./util */ \"./node_modules/jsonld/lib/util.js\");\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Recursively expands an element using the given context. Any context in\n * the element will be removed. All context URLs must have been retrieved\n * before calling this method.\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element, null for none.\n * @param element the element to expand.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n * @param expansionMap(info) a function that can be used to custom map\n *          unmappable values (or to throw an error when they are detected);\n *          if this function returns `undefined` then the default behavior\n *          will be used.\n *\n * @return a Promise that resolves to the expanded value.\n */\napi.expand = ({\n  activeCtx,\n  activeProperty = null,\n  element,\n  options = {},\n  insideList = false,\n  expansionMap = () => undefined\n}) => {\n  // nothing to expand\n  if(element === null || element === undefined) {\n    return null;\n  }\n\n  // disable framing if activeProperty is @default\n  if(activeProperty === '@default') {\n    options = Object.assign({}, options, {isFrame: false});\n  }\n\n  if(!_isArray(element) && !_isObject(element)) {\n    // drop free-floating scalars that are not in lists unless custom mapped\n    if(!insideList && (activeProperty === null ||\n      _expandIri(activeCtx, activeProperty, {vocab: true}) === '@graph')) {\n      // TODO: use `await` to support async\n      const mapped = expansionMap({\n        unmappedValue: element,\n        activeCtx,\n        activeProperty,\n        options,\n        insideList\n      });\n      if(mapped === undefined) {\n        return null;\n      }\n      return mapped;\n    }\n\n    // expand element according to value expansion rules\n    return _expandValue({activeCtx, activeProperty, value: element});\n  }\n\n  // recursively expand array\n  if(_isArray(element)) {\n    let rval = [];\n    const container = _getContextValue(\n      activeCtx, activeProperty, '@container') || [];\n    insideList = insideList || container.includes('@list');\n    for(let i = 0; i < element.length; ++i) {\n      // expand element\n      let e = api.expand({\n        activeCtx,\n        activeProperty,\n        element: element[i],\n        options,\n        expansionMap\n      });\n      if(insideList && (_isArray(e) || _isList(e))) {\n        // lists of lists are illegal\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; lists of lists are not permitted.',\n          'jsonld.SyntaxError', {code: 'list of lists'});\n      }\n\n      if(e === null) {\n        // TODO: add `await` for async support\n        e = expansionMap({\n          unmappedValue: element[i],\n          activeCtx,\n          activeProperty,\n          parent: element,\n          index: i,\n          options,\n          expandedParent: rval,\n          insideList\n        });\n        if(e === undefined) {\n          continue;\n        }\n      }\n\n      if(_isArray(e)) {\n        rval = rval.concat(e);\n      } else {\n        rval.push(e);\n      }\n    }\n    return rval;\n  }\n\n  // recursively expand object:\n\n  // if element has a context, process it\n  if('@context' in element) {\n    activeCtx = _processContext(\n      {activeCtx, localCtx: element['@context'], options});\n  }\n\n  // look for scoped context on @type\n  let keys = Object.keys(element).sort();\n  for(const key of keys) {\n    const expandedProperty = _expandIri(activeCtx, key, {vocab: true});\n    if(expandedProperty === '@type') {\n      // set scopped contexts from @type\n      // avoid sorting if possible\n      const value = element[key];\n      const types =\n        Array.isArray(value) ?\n          (value.length > 1 ? value.slice().sort() : value) : [value];\n      for(const type of types) {\n        const ctx = _getContextValue(activeCtx, type, '@context');\n        if(ctx) {\n          activeCtx = _processContext({activeCtx, localCtx: ctx, options});\n        }\n      }\n    }\n  }\n\n  // expand the active property\n  const expandedActiveProperty = _expandIri(\n    activeCtx, activeProperty, {vocab: true});\n\n  // process each key and value in element, ignoring @nest content\n  let rval = {};\n  _expandObject({\n    activeCtx,\n    activeProperty,\n    expandedActiveProperty,\n    element,\n    expandedParent: rval,\n    options,\n    insideList,\n    expansionMap});\n\n  // get property count on expanded output\n  keys = Object.keys(rval);\n  let count = keys.length;\n\n  if('@value' in rval) {\n    // @value must only have @language or @type\n    if('@type' in rval && '@language' in rval) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may not ' +\n        'contain both \"@type\" and \"@language\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    let validCount = count - 1;\n    if('@type' in rval) {\n      validCount -= 1;\n    }\n    if('@index' in rval) {\n      validCount -= 1;\n    }\n    if('@language' in rval) {\n      validCount -= 1;\n    }\n    if(validCount !== 0) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may only ' +\n        'have an \"@index\" property and at most one other property ' +\n        'which can be \"@type\" or \"@language\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    const values = rval['@value'] === null ? [] : _asArray(rval['@value']);\n    const types = _getValues(rval, '@type');\n\n    // drop null @values unless custom mapped\n    if(values.length === 0) {\n      // TODO: use `await` to support async\n      const mapped = expansionMap({\n        unmappedValue: rval,\n        activeCtx,\n        activeProperty,\n        element,\n        options,\n        insideList\n      });\n      if(mapped !== undefined) {\n        rval = mapped;\n      } else {\n        rval = null;\n      }\n    } else if(!values.every(v => (_isString(v) || _isEmptyObject(v))) &&\n      '@language' in rval) {\n      // if @language is present, @value must be a string\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; only strings may be language-tagged.',\n        'jsonld.SyntaxError',\n        {code: 'invalid language-tagged value', element: rval});\n    } else if(!types.every(t =>\n      (_isAbsoluteIri(t) && !(_isString(t) && t.indexOf('_:') === 0) ||\n      _isEmptyObject(t)))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" and \"@type\" ' +\n        'must have an absolute IRI for the value of \"@type\".',\n        'jsonld.SyntaxError', {code: 'invalid typed value', element: rval});\n    }\n  } else if('@type' in rval && !_isArray(rval['@type'])) {\n    // convert @type to an array\n    rval['@type'] = [rval['@type']];\n  } else if('@set' in rval || '@list' in rval) {\n    // handle @set and @list\n    if(count > 1 && !(count === 2 && '@index' in rval)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; if an element has the property \"@set\" ' +\n        'or \"@list\", then it can have at most one other property that is ' +\n        '\"@index\".', 'jsonld.SyntaxError',\n        {code: 'invalid set or list object', element: rval});\n    }\n    // optimize away @set\n    if('@set' in rval) {\n      rval = rval['@set'];\n      keys = Object.keys(rval);\n      count = keys.length;\n    }\n  } else if(count === 1 && '@language' in rval) {\n    // drop objects with only @language unless custom mapped\n    // TODO: use `await` to support async\n    const mapped = expansionMap(rval, {\n      unmappedValue: rval,\n      activeCtx,\n      activeProperty,\n      element,\n      options,\n      insideList\n    });\n    if(mapped !== undefined) {\n      rval = mapped;\n    } else {\n      rval = null;\n    }\n  }\n\n  // drop certain top-level objects that do not occur in lists, unless custom\n  // mapped\n  if(_isObject(rval) &&\n    !options.keepFreeFloatingNodes && !insideList &&\n    (activeProperty === null || expandedActiveProperty === '@graph')) {\n    // drop empty object, top-level @value/@list, or object with only @id\n    if(count === 0 || '@value' in rval || '@list' in rval ||\n      (count === 1 && '@id' in rval)) {\n      // TODO: use `await` to support async\n      const mapped = expansionMap({\n        unmappedValue: rval,\n        activeCtx,\n        activeProperty,\n        element,\n        options,\n        insideList\n      });\n      if(mapped !== undefined) {\n        rval = mapped;\n      } else {\n        rval = null;\n      }\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Expand each key and value of element adding to result\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element.\n * @param expandedActiveProperty the expansion of activeProperty\n * @param element the element to expand.\n * @param expandedParent the expanded result into which to add values.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n * @param expansionMap(info) a function that can be used to custom map\n *          unmappable values (or to throw an error when they are detected);\n *          if this function returns `undefined` then the default behavior\n *          will be used.\n */\nfunction _expandObject({\n  activeCtx,\n  activeProperty,\n  expandedActiveProperty,\n  element,\n  expandedParent,\n  options = {},\n  insideList,\n  expansionMap\n}) {\n  const keys = Object.keys(element).sort();\n  const nests = [];\n  for(const key of keys) {\n    let value = element[key];\n    let expandedValue;\n\n    // skip @context\n    if(key === '@context') {\n      continue;\n    }\n\n    // expand property\n    let expandedProperty = _expandIri(activeCtx, key, {vocab: true});\n\n    // drop non-absolute IRI keys that aren't keywords unless custom mapped\n    if(expandedProperty === null ||\n      !(_isAbsoluteIri(expandedProperty) || _isKeyword(expandedProperty))) {\n      // TODO: use `await` to support async\n      expandedProperty = expansionMap({\n        unmappedProperty: key,\n        activeCtx,\n        activeProperty,\n        parent: element,\n        options,\n        insideList,\n        value,\n        expandedParent\n      });\n      if(expandedProperty === undefined) {\n        continue;\n      }\n    }\n\n    if(_isKeyword(expandedProperty)) {\n      if(expandedActiveProperty === '@reverse') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a keyword cannot be used as a @reverse ' +\n          'property.', 'jsonld.SyntaxError',\n          {code: 'invalid reverse property map', value});\n      }\n      if(expandedProperty in expandedParent) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; colliding keywords detected.',\n          'jsonld.SyntaxError',\n          {code: 'colliding keywords', keyword: expandedProperty});\n      }\n    }\n\n    // syntax error if @id is not a string\n    if(expandedProperty === '@id') {\n      if(!_isString(value)) {\n        if(!options.isFrame) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@id\" value must a string.',\n            'jsonld.SyntaxError', {code: 'invalid @id value', value});\n        }\n        if(_isObject(value)) {\n          // empty object is a wildcard\n          if(!_isEmptyObject(value)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n              'of strings, if framing',\n              'jsonld.SyntaxError', {code: 'invalid @id value', value});\n          }\n        } else if(_isArray(value)) {\n          if(!value.every(v => _isString(v))) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n              'of strings, if framing',\n              'jsonld.SyntaxError', {code: 'invalid @id value', value});\n          }\n        } else {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n            'of strings, if framing',\n            'jsonld.SyntaxError', {code: 'invalid @id value', value});\n        }\n      }\n\n      _addValue(\n        expandedParent, '@id',\n        _asArray(value).map(v =>\n          _isString(v) ? _expandIri(activeCtx, v, {base: true}) : v),\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    if(expandedProperty === '@type') {\n      _validateTypeValue(value);\n      _addValue(\n        expandedParent, '@type',\n        _asArray(value).map(v =>\n          _isString(v) ?\n            _expandIri(activeCtx, v, {base: true, vocab: true}) : v),\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // @graph must be an array or an object\n    if(expandedProperty === '@graph' &&\n      !(_isObject(value) || _isArray(value))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@graph\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError', {code: 'invalid @graph value', value});\n    }\n\n    // @value must not be an object or an array (unless framing)\n    if(expandedProperty === '@value') {\n      if((_isObject(value) || _isArray(value)) && !options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@value\" value must not be an ' +\n          'object or an array.',\n          'jsonld.SyntaxError',\n          {code: 'invalid value object value', value});\n      }\n\n      _addValue(\n        expandedParent, '@value', value, {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // @language must be a string\n    if(expandedProperty === '@language') {\n      if(value === null) {\n        // drop null @language values, they expand as if they didn't exist\n        continue;\n      }\n      if(!_isString(value) && !options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@language\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language-tagged string', value});\n      }\n      // ensure language value is lowercase\n      value = _asArray(value).map(v => _isString(v) ? v.toLowerCase() : v);\n\n      _addValue(\n        expandedParent, '@language', value, {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // @index must be a string\n    if(expandedProperty === '@index') {\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@index\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @index value', value});\n      }\n      _addValue(expandedParent, '@index', value);\n      continue;\n    }\n\n    // @reverse must be an object\n    if(expandedProperty === '@reverse') {\n      if(!_isObject(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@reverse\" value must be an object.',\n          'jsonld.SyntaxError', {code: 'invalid @reverse value', value});\n      }\n\n      expandedValue = api.expand({\n        activeCtx,\n        activeProperty:\n        '@reverse',\n        element: value,\n        options,\n        expansionMap\n      });\n      // properties double-reversed\n      if('@reverse' in expandedValue) {\n        for(const property in expandedValue['@reverse']) {\n          _addValue(\n            expandedParent, property, expandedValue['@reverse'][property],\n            {propertyIsArray: true});\n        }\n      }\n\n      // FIXME: can this be merged with code below to simplify?\n      // merge in all reversed properties\n      let reverseMap = expandedParent['@reverse'] || null;\n      for(const property in expandedValue) {\n        if(property === '@reverse') {\n          continue;\n        }\n        if(reverseMap === null) {\n          reverseMap = expandedParent['@reverse'] = {};\n        }\n        _addValue(reverseMap, property, [], {propertyIsArray: true});\n        const items = expandedValue[property];\n        for(let ii = 0; ii < items.length; ++ii) {\n          const item = items[ii];\n          if(_isValue(item) || _isList(item)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n              '@value or an @list.', 'jsonld.SyntaxError',\n              {code: 'invalid reverse property value', value: expandedValue});\n          }\n          _addValue(reverseMap, property, item, {propertyIsArray: true});\n        }\n      }\n\n      continue;\n    }\n\n    // nested keys\n    if(expandedProperty === '@nest') {\n      nests.push(key);\n      continue;\n    }\n\n    // use potential scoped context for key\n    let termCtx = activeCtx;\n    const ctx = _getContextValue(activeCtx, key, '@context');\n    if(ctx) {\n      termCtx = _processContext({activeCtx, localCtx: ctx, options});\n    }\n\n    const container = _getContextValue(termCtx, key, '@container') || [];\n\n    if(container.includes('@language') && _isObject(value)) {\n      // handle language map container (skip if value is not an object)\n      expandedValue = _expandLanguageMap(termCtx, value);\n    } else if(container.includes('@index') && _isObject(value)) {\n      // handle index container (skip if value is not an object)\n      const asGraph = container.includes('@graph');\n      expandedValue = _expandIndexMap({\n        activeCtx: termCtx,\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph,\n        indexKey: '@index'\n      });\n    } else if(container.includes('@id') && _isObject(value)) {\n      // handle id container (skip if value is not an object)\n      const asGraph = container.includes('@graph');\n      expandedValue = _expandIndexMap({\n        activeCtx: termCtx,\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph,\n        indexKey: '@id'\n      });\n    } else if(container.includes('@type') && _isObject(value)) {\n      // handle type container (skip if value is not an object)\n      expandedValue = _expandIndexMap({\n        activeCtx: termCtx,\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph: false,\n        indexKey: '@type'\n      });\n    } else {\n      // recurse into @list or @set\n      const isList = (expandedProperty === '@list');\n      if(isList || expandedProperty === '@set') {\n        let nextActiveProperty = activeProperty;\n        if(isList && expandedActiveProperty === '@graph') {\n          nextActiveProperty = null;\n        }\n        expandedValue = api.expand({\n          activeCtx: termCtx,\n          activeProperty: nextActiveProperty,\n          element: value,\n          options,\n          insideList: isList,\n          expansionMap\n        });\n        if(isList && _isList(expandedValue)) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; lists of lists are not permitted.',\n            'jsonld.SyntaxError', {code: 'list of lists'});\n        }\n      } else {\n        // recursively expand value with key as new active property\n        expandedValue = api.expand({\n          activeCtx: termCtx,\n          activeProperty: key,\n          element: value,\n          options,\n          insideList: false,\n          expansionMap\n        });\n      }\n    }\n\n    // drop null values if property is not @value\n    if(expandedValue === null && expandedProperty !== '@value') {\n      // TODO: use `await` to support async\n      expandedValue = expansionMap({\n        unmappedValue: value,\n        expandedProperty,\n        activeCtx: termCtx,\n        activeProperty,\n        parent: element,\n        options,\n        insideList,\n        key,\n        expandedParent\n      });\n      if(expandedValue === undefined) {\n        continue;\n      }\n    }\n\n    // convert expanded value to @list if container specifies it\n    if(expandedProperty !== '@list' && !_isList(expandedValue) &&\n      container.includes('@list')) {\n      // ensure expanded value in @list is an array\n      expandedValue = {'@list': _asArray(expandedValue)};\n    }\n\n    // convert expanded value to @graph if container specifies it\n    // and value is not, itself, a graph\n    // index cases handled above\n    if(container.includes('@graph') &&\n      !container.some(key => key === '@id' || key === '@index')) {\n      // ensure expanded values are arrays\n      expandedValue = _asArray(expandedValue)\n        .map(v => _isGraph(v) ? v : {'@graph': _asArray(v)});\n    }\n\n    // FIXME: can this be merged with code above to simplify?\n    // merge in reverse properties\n    if(termCtx.mappings[key] && termCtx.mappings[key].reverse) {\n      const reverseMap =\n        expandedParent['@reverse'] = expandedParent['@reverse'] || {};\n      expandedValue = _asArray(expandedValue);\n      for(let ii = 0; ii < expandedValue.length; ++ii) {\n        const item = expandedValue[ii];\n        if(_isValue(item) || _isList(item)) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n            '@value or an @list.', 'jsonld.SyntaxError',\n            {code: 'invalid reverse property value', value: expandedValue});\n        }\n        _addValue(reverseMap, expandedProperty, item, {propertyIsArray: true});\n      }\n      continue;\n    }\n\n    // add value for property\n    // use an array except for certain keywords\n    const useArray =\n      !['@index', '@id', '@type', '@value', '@language']\n        .includes(expandedProperty);\n    _addValue(expandedParent, expandedProperty, expandedValue, {\n      propertyIsArray: useArray\n    });\n  }\n\n  // expand each nested key\n  for(const key of nests) {\n    const nestedValues = _isArray(element[key]) ? element[key] : [element[key]];\n    for(const nv of nestedValues) {\n      if(!_isObject(nv) || Object.keys(nv).some(k =>\n        _expandIri(activeCtx, k, {vocab: true}) === '@value')) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; nested value must be a node object.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @nest value', value: nv});\n      }\n      _expandObject({\n        activeCtx,\n        activeProperty,\n        expandedActiveProperty,\n        element: nv,\n        expandedParent,\n        options,\n        insideList,\n        expansionMap});\n    }\n  }\n}\n\n/**\n * Expands the given value by using the coercion and keyword rules in the\n * given context.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the active property the value is associated with.\n * @param value the value to expand.\n *\n * @return the expanded value.\n */\nfunction _expandValue({activeCtx, activeProperty, value}) {\n  // nothing to expand\n  if(value === null || value === undefined) {\n    return null;\n  }\n\n  // special-case expand @id and @type (skips '@id' expansion)\n  const expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true});\n  if(expandedProperty === '@id') {\n    return _expandIri(activeCtx, value, {base: true});\n  } else if(expandedProperty === '@type') {\n    return _expandIri(activeCtx, value, {vocab: true, base: true});\n  }\n\n  // get type definition from context\n  const type = _getContextValue(activeCtx, activeProperty, '@type');\n\n  // do @id expansion (automatic for @graph)\n  if((type === '@id' || expandedProperty === '@graph') && _isString(value)) {\n    return {'@id': _expandIri(activeCtx, value, {base: true})};\n  }\n  // do @id expansion w/vocab\n  if(type === '@vocab' && _isString(value)) {\n    return {'@id': _expandIri(activeCtx, value, {vocab: true, base: true})};\n  }\n\n  // do not expand keyword values\n  if(_isKeyword(expandedProperty)) {\n    return value;\n  }\n\n  const rval = {};\n\n  if(type && !['@id', '@vocab'].includes(type)) {\n    // other type\n    rval['@type'] = type;\n  } else if(_isString(value)) {\n    // check for language tagging for strings\n    const language = _getContextValue(activeCtx, activeProperty, '@language');\n    if(language !== null) {\n      rval['@language'] = language;\n    }\n  }\n  // do conversion of values that aren't basic JSON types to strings\n  if(!['boolean', 'number', 'string'].includes(typeof value)) {\n    value = value.toString();\n  }\n  rval['@value'] = value;\n\n  return rval;\n}\n\n/**\n * Expands a language map.\n *\n * @param activeCtx the active context to use.\n * @param languageMap the language map to expand.\n *\n * @return the expanded language map.\n */\nfunction _expandLanguageMap(activeCtx, languageMap) {\n  const rval = [];\n  const keys = Object.keys(languageMap).sort();\n  for(const key of keys) {\n    const expandedKey = _expandIri(activeCtx, key, {vocab: true});\n    let val = languageMap[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n    for(const item of val) {\n      if(item === null) {\n        // null values are allowed (8.5) but ignored (3.1)\n        continue;\n      }\n      if(!_isString(item)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; language map values must be strings.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language map value', languageMap});\n      }\n      const val = {'@value': item};\n      if(expandedKey !== '@none') {\n        val['@language'] = key.toLowerCase();\n      }\n      rval.push(val);\n    }\n  }\n  return rval;\n}\n\nfunction _expandIndexMap(\n  {activeCtx, options, activeProperty, value, expansionMap, asGraph,\n    indexKey}) {\n  const rval = [];\n  const keys = Object.keys(value).sort();\n  for(let key of keys) {\n    // if indexKey is @type, there may be a context defined for it\n    const ctx = _getContextValue(activeCtx, key, '@context');\n    if(ctx) {\n      activeCtx = _processContext({activeCtx, localCtx: ctx, options});\n    }\n\n    let val = value[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n\n    // expand for @type, but also for @none\n    const expandedKey = _expandIri(activeCtx, key, {vocab: true});\n    if(indexKey === '@id') {\n      // expand document relative\n      key = _expandIri(activeCtx, key, {base: true});\n    } else if(indexKey === '@type') {\n      key = expandedKey;\n    }\n\n    val = api.expand({\n      activeCtx,\n      activeProperty,\n      element: val,\n      options,\n      insideList: false,\n      expansionMap\n    });\n    for(let item of val) {\n      // If this is also a @graph container, turn items into graphs\n      if(asGraph && !_isGraph(item)) {\n        item = {'@graph': [item]};\n      }\n      if(indexKey === '@type') {\n        if(expandedKey === '@none') {\n          // ignore @none\n        } else if(item['@type']) {\n          item['@type'] = [key].concat(item['@type']);\n        } else {\n          item['@type'] = [key];\n        }\n      } else if(expandedKey !== '@none' && !(indexKey in item)) {\n        item[indexKey] = key;\n      }\n      rval.push(item);\n    }\n  }\n  return rval;\n}\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/expand.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/flatten.js":
/*!********************************************!*\
  !*** ./node_modules/jsonld/lib/flatten.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst {\n  isSubjectReference: _isSubjectReference\n} = __webpack_require__(/*! ./graphTypes */ \"./node_modules/jsonld/lib/graphTypes.js\");\n\nconst {\n  createMergedNodeMap: _createMergedNodeMap\n} = __webpack_require__(/*! ./nodeMap */ \"./node_modules/jsonld/lib/nodeMap.js\");\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the expanded JSON-LD to flatten.\n *\n * @return the flattened output.\n */\napi.flatten = input => {\n  const defaultGraph = _createMergedNodeMap(input);\n\n  // produce flattened output\n  const flattened = [];\n  const keys = Object.keys(defaultGraph).sort();\n  for(let ki = 0; ki < keys.length; ++ki) {\n    const node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n  return flattened;\n};\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/flatten.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/frame.js":
/*!******************************************!*\
  !*** ./node_modules/jsonld/lib/frame.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst {isKeyword} = __webpack_require__(/*! ./context */ \"./node_modules/jsonld/lib/context.js\");\nconst graphTypes = __webpack_require__(/*! ./graphTypes */ \"./node_modules/jsonld/lib/graphTypes.js\");\nconst types = __webpack_require__(/*! ./types */ \"./node_modules/jsonld/lib/types.js\");\nconst util = __webpack_require__(/*! ./util */ \"./node_modules/jsonld/lib/util.js\");\nconst JsonLdError = __webpack_require__(/*! ./JsonLdError */ \"./node_modules/jsonld/lib/JsonLdError.js\");\nconst {\n  createNodeMap: _createNodeMap,\n  mergeNodeMapGraphs: _mergeNodeMapGraphs\n} = __webpack_require__(/*! ./nodeMap */ \"./node_modules/jsonld/lib/nodeMap.js\");\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Performs JSON-LD `merged` framing.\n *\n * @param input the expanded JSON-LD to frame.\n * @param frame the expanded JSON-LD frame to use.\n * @param options the framing options.\n *\n * @return the framed output.\n */\napi.frameMergedOrDefault = (input, frame, options) => {\n  // create framing state\n  const state = {\n    options,\n    graph: '@default',\n    graphMap: {'@default': {}},\n    graphStack: [],\n    subjectStack: [],\n    link: {},\n    bnodeMap: {}\n  };\n\n  // produce a map of all graphs and name each bnode\n  // FIXME: currently uses subjects from @merged graph only\n  const issuer = new util.IdentifierIssuer('_:b');\n  _createNodeMap(input, state.graphMap, '@default', issuer);\n  if(options.merged) {\n    state.graphMap['@merged'] = _mergeNodeMapGraphs(state.graphMap);\n    state.graph = '@merged';\n  }\n  state.subjects = state.graphMap[state.graph];\n\n  // frame the subjects\n  const framed = [];\n  api.frame(state, Object.keys(state.subjects).sort(), frame, framed);\n\n  // If pruning blank nodes, find those to prune\n  if(options.pruneBlankNodeIdentifiers) {\n    // remove all blank nodes appearing only once, done in compaction\n    options.bnodesToClear =\n      Object.keys(state.bnodeMap).filter(id => state.bnodeMap[id].length === 1);\n  }\n\n  return framed;\n};\n\n/**\n * Frames subjects according to the given frame.\n *\n * @param state the current framing state.\n * @param subjects the subjects to filter.\n * @param frame the frame.\n * @param parent the parent subject or top-level array.\n * @param property the parent property, initialized to null.\n */\napi.frame = (state, subjects, frame, parent, property = null) => {\n  // validate the frame\n  _validateFrame(frame);\n  frame = frame[0];\n\n  // get flags for current frame\n  const options = state.options;\n  const flags = {\n    embed: _getFrameFlag(frame, options, 'embed'),\n    explicit: _getFrameFlag(frame, options, 'explicit'),\n    requireAll: _getFrameFlag(frame, options, 'requireAll')\n  };\n\n  // filter out subjects that match the frame\n  const matches = _filterSubjects(state, subjects, frame, flags);\n\n  // add matches to output\n  const ids = Object.keys(matches).sort();\n  for(const id of ids) {\n    const subject = matches[id];\n\n    if(flags.embed === '@link' && id in state.link) {\n      // TODO: may want to also match an existing linked subject against\n      // the current frame ... so different frames could produce different\n      // subjects that are only shared in-memory when the frames are the same\n\n      // add existing linked subject\n      _addFrameOutput(parent, property, state.link[id]);\n      continue;\n    }\n\n    /* Note: In order to treat each top-level match as a compartmentalized\n    result, clear the unique embedded subjects map when the property is null,\n    which only occurs at the top-level. */\n    if(property === null) {\n      state.uniqueEmbeds = {[state.graph]: {}};\n    } else {\n      state.uniqueEmbeds[state.graph] = state.uniqueEmbeds[state.graph] || {};\n    }\n\n    // start output for subject\n    const output = {};\n    output['@id'] = id;\n    if(id.indexOf('_:') === 0) {\n      util.addValue(state.bnodeMap, id, output, {propertyIsArray: true});\n    }\n    state.link[id] = output;\n\n    // if embed is @never or if a circular reference would be created by an\n    // embed, the subject cannot be embedded, just add the reference;\n    // note that a circular reference won't occur when the embed flag is\n    // `@link` as the above check will short-circuit before reaching this point\n    if(flags.embed === '@never' ||\n      _createsCircularReference(subject, state.graph, state.subjectStack)) {\n      _addFrameOutput(parent, property, output);\n      continue;\n    }\n\n    // if only the last match should be embedded\n    if(flags.embed === '@last') {\n      // remove any existing embed\n      if(id in state.uniqueEmbeds[state.graph]) {\n        _removeEmbed(state, id);\n      }\n      state.uniqueEmbeds[state.graph][id] =\n        {parent, property};\n    }\n\n    // push matching subject onto stack to enable circular embed checks\n    state.subjectStack.push({subject, graph: state.graph});\n\n    // subject is also the name of a graph\n    if(id in state.graphMap) {\n      let recurse = false;\n      let subframe = null;\n      if(!('@graph' in frame)) {\n        recurse = state.graph !== '@merged';\n        subframe = {};\n      } else {\n        subframe = frame['@graph'][0];\n        if(!types.isObject(subframe)) {\n          subframe = {};\n        }\n        recurse = !(id === '@merged' || id === '@default');\n      }\n\n      if(recurse) {\n        state.graphStack.push(state.graph);\n        state.graph = id;\n        // recurse into graph\n        api.frame(\n          state,\n          Object.keys(state.graphMap[id]).sort(), [subframe], output, '@graph');\n        state.graph = state.graphStack.pop;\n      }\n    }\n\n    // iterate over subject properties\n    for(const prop of Object.keys(subject).sort()) {\n      // copy keywords to output\n      if(isKeyword(prop)) {\n        output[prop] = util.clone(subject[prop]);\n\n        if(prop === '@type') {\n          // count bnode values of @type\n          for(const type of subject['@type']) {\n            if(type.indexOf('_:') === 0) {\n              util.addValue(\n                state.bnodeMap, type, output, {propertyIsArray: true});\n            }\n          }\n        }\n        continue;\n      }\n\n      // explicit is on and property isn't in the frame, skip processing\n      if(flags.explicit && !(prop in frame)) {\n        continue;\n      }\n\n      // add objects\n      for(let o of subject[prop]) {\n        const subframe = (prop in frame ?\n          frame[prop] : _createImplicitFrame(flags));\n\n        // recurse into list\n        if(graphTypes.isList(o)) {\n          // add empty list\n          const list = {'@list': []};\n          _addFrameOutput(output, prop, list);\n\n          // add list objects\n          const src = o['@list'];\n          for(const n in src) {\n            o = src[n];\n            if(graphTypes.isSubjectReference(o)) {\n              const subframe = (prop in frame ?\n                frame[prop][0]['@list'] : _createImplicitFrame(flags));\n              // recurse into subject reference\n              api.frame(state, [o['@id']], subframe, list, '@list');\n            } else {\n              // include other values automatically\n              _addFrameOutput(list, '@list', util.clone(o));\n            }\n          }\n          continue;\n        }\n\n        if(graphTypes.isSubjectReference(o)) {\n          // recurse into subject reference\n          api.frame(state, [o['@id']], subframe, output, prop);\n        } else if(_valueMatch(subframe[0], o)) {\n          // include other values, if they match\n          _addFrameOutput(output, prop, util.clone(o));\n        }\n      }\n    }\n\n    // handle defaults\n    for(const prop of Object.keys(frame).sort()) {\n      // skip keywords\n      if(isKeyword(prop)) {\n        continue;\n      }\n\n      // if omit default is off, then include default values for properties\n      // that appear in the next frame but are not in the matching subject\n      const next = frame[prop][0] || {};\n      const omitDefaultOn = _getFrameFlag(next, options, 'omitDefault');\n      if(!omitDefaultOn && !(prop in output)) {\n        let preserve = '@null';\n        if('@default' in next) {\n          preserve = util.clone(next['@default']);\n        }\n        if(!types.isArray(preserve)) {\n          preserve = [preserve];\n        }\n        output[prop] = [{'@preserve': preserve}];\n      }\n    }\n\n    // if embed reverse values by finding nodes having this subject as a value\n    // of the associated property\n    if('@reverse' in frame) {\n      for(const reverseProp of Object.keys(frame['@reverse']).sort()) {\n        const subframe = frame['@reverse'][reverseProp];\n        for(const subject of Object.keys(state.subjects)) {\n          const nodeValues =\n            util.getValues(state.subjects[subject], reverseProp);\n          if(nodeValues.some(v => v['@id'] === id)) {\n            // node has property referencing this subject, recurse\n            output['@reverse'] = output['@reverse'] || {};\n            util.addValue(\n              output['@reverse'], reverseProp, [], {propertyIsArray: true});\n            api.frame(\n              state, [subject], subframe, output['@reverse'][reverseProp],\n              property);\n          }\n        }\n      }\n    }\n\n    // add output to parent\n    _addFrameOutput(parent, property, output);\n\n    // pop matching subject from circular ref-checking stack\n    state.subjectStack.pop();\n  }\n};\n\n/**\n * Creates an implicit frame when recursing through subject matches. If\n * a frame doesn't have an explicit frame for a particular property, then\n * a wildcard child frame will be created that uses the same flags that the\n * parent frame used.\n *\n * @param flags the current framing flags.\n *\n * @return the implicit frame.\n */\nfunction _createImplicitFrame(flags) {\n  const frame = {};\n  for(const key in flags) {\n    if(flags[key] !== undefined) {\n      frame['@' + key] = [flags[key]];\n    }\n  }\n  return [frame];\n}\n\n/**\n * Checks the current subject stack to see if embedding the given subject\n * would cause a circular reference.\n *\n * @param subjectToEmbed the subject to embed.\n * @param graph the graph the subject to embed is in.\n * @param subjectStack the current stack of subjects.\n *\n * @return true if a circular reference would be created, false if not.\n */\nfunction _createsCircularReference(subjectToEmbed, graph, subjectStack) {\n  for(let i = subjectStack.length - 1; i >= 0; --i) {\n    const subject = subjectStack[i];\n    if(subject.graph === graph &&\n      subject.subject['@id'] === subjectToEmbed['@id']) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Gets the frame flag value for the given flag name.\n *\n * @param frame the frame.\n * @param options the framing options.\n * @param name the flag name.\n *\n * @return the flag value.\n */\nfunction _getFrameFlag(frame, options, name) {\n  const flag = '@' + name;\n  let rval = (flag in frame ? frame[flag][0] : options[name]);\n  if(name === 'embed') {\n    // default is \"@last\"\n    // backwards-compatibility support for \"embed\" maps:\n    // true => \"@last\"\n    // false => \"@never\"\n    if(rval === true) {\n      rval = '@last';\n    } else if(rval === false) {\n      rval = '@never';\n    } else if(rval !== '@always' && rval !== '@never' && rval !== '@link') {\n      rval = '@last';\n    }\n  }\n  return rval;\n}\n\n/**\n * Validates a JSON-LD frame, throwing an exception if the frame is invalid.\n *\n * @param frame the frame to validate.\n */\nfunction _validateFrame(frame) {\n  if(!types.isArray(frame) || frame.length !== 1 || !types.isObject(frame[0])) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a JSON-LD frame must be a single object.',\n      'jsonld.SyntaxError', {frame});\n  }\n}\n\n/**\n * Returns a map of all of the subjects that match a parsed frame.\n *\n * @param state the current framing state.\n * @param subjects the set of subjects to filter.\n * @param frame the parsed frame.\n * @param flags the frame flags.\n *\n * @return all of the matched subjects.\n */\nfunction _filterSubjects(state, subjects, frame, flags) {\n  // filter subjects in @id order\n  const rval = {};\n  for(const id of subjects) {\n    const subject = state.graphMap[state.graph][id];\n    if(_filterSubject(state, subject, frame, flags)) {\n      rval[id] = subject;\n    }\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given subject matches the given frame.\n *\n * Matches either based on explicit type inclusion where the node has any\n * type listed in the frame. If the frame has empty types defined matches\n * nodes not having a @type. If the frame has a type of {} defined matches\n * nodes having any type defined.\n *\n * Otherwise, does duck typing, where the node must have all of the\n * properties defined in the frame.\n *\n * @param state the current framing state.\n * @param subject the subject to check.\n * @param frame the frame to check.\n * @param flags the frame flags.\n *\n * @return true if the subject matches, false if not.\n */\nfunction _filterSubject(state, subject, frame, flags) {\n  // check ducktype\n  let wildcard = true;\n  let matchesSome = false;\n\n  for(const key in frame) {\n    let matchThis = false;\n    const nodeValues = util.getValues(subject, key);\n    const isEmpty = util.getValues(frame, key).length === 0;\n\n    if(isKeyword(key)) {\n      // skip non-@id and non-@type\n      if(key !== '@id' && key !== '@type') {\n        continue;\n      }\n      wildcard = false;\n\n      // check @id for a specific @id value\n      if(key === '@id') {\n        // if @id is not a wildcard and is not empty, then match or not on\n        // specific value\n        if(frame['@id'].length >= 0 && !types.isEmptyObject(frame['@id'][0])) {\n          return frame['@id'].includes(nodeValues[0]);\n        }\n        matchThis = true;\n        continue;\n      }\n\n      // check @type (object value means 'any' type, fall through to ducktyping)\n      if('@type' in frame) {\n        if(isEmpty) {\n          if(nodeValues.length > 0) {\n            // don't match on no @type\n            return false;\n          }\n          matchThis = true;\n        } else if(frame['@type'].length === 1 &&\n          types.isEmptyObject(frame['@type'][0])) {\n          // match on wildcard @type\n          matchThis = nodeValues.length > 0;\n        } else {\n          // match on a specific @type\n          for(const type of frame['@type']) {\n            if(nodeValues.some(tt => tt === type)) {\n              return true;\n            }\n          }\n          return false;\n        }\n      }\n    }\n\n    // Forc a copy of this frame entry so it can be manipulated\n    const thisFrame = util.getValues(frame, key)[0];\n    let hasDefault = false;\n    if(thisFrame) {\n      _validateFrame([thisFrame]);\n      hasDefault = '@default' in thisFrame;\n    }\n\n    // no longer a wildcard pattern if frame has any non-keyword properties\n    wildcard = false;\n\n    // skip, but allow match if node has no value for property, and frame has a\n    // default value\n    if(nodeValues.length === 0 && hasDefault) {\n      continue;\n    }\n\n    // if frame value is empty, don't match if subject has any value\n    if(nodeValues.length > 0 && isEmpty) {\n      return false;\n    }\n\n    if(thisFrame === undefined) {\n      // node does not match if values is not empty and the value of property\n      // in frame is match none.\n      if(nodeValues.length > 0) {\n        return false;\n      }\n      matchThis = true;\n    } else if(types.isObject(thisFrame)) {\n      // node matches if values is not empty and the value of property in frame\n      // is wildcard\n      matchThis = nodeValues.length > 0;\n    } else {\n      if(graphTypes.isValue(thisFrame)) {\n        // match on any matching value\n        matchThis = nodeValues.some(nv => _valueMatch(thisFrame, nv));\n      } else if(graphTypes.isSubject(thisFrame) ||\n        graphTypes.isSubjectReference(thisFrame)) {\n        matchThis =\n          nodeValues.some(nv => _nodeMatch(state, thisFrame, nv, flags));\n      } else if(graphTypes.isList(thisFrame)) {\n        const listValue = thisFrame['@list'][0];\n        if(graphTypes.isList(nodeValues[0])) {\n          const nodeListValues = nodeValues[0]['@list'];\n\n          if(graphTypes.isValue(listValue)) {\n            // match on any matching value\n            matchThis = nodeListValues.some(lv => _valueMatch(listValue, lv));\n          } else if(graphTypes.isSubject(listValue) ||\n            graphTypes.isSubjectReference(listValue)) {\n            matchThis = nodeListValues.some(lv => _nodeMatch(\n              state, listValue, lv, flags));\n          }\n        } else {\n          // value must be a list to match\n          matchThis = false;\n        }\n      }\n    }\n\n    // all non-defaulted values must match if requireAll is set\n    if(!matchThis && flags.requireAll) {\n      return false;\n    }\n\n    matchesSome = matchesSome || matchThis;\n  }\n\n  // return true if wildcard or subject matches some properties\n  return wildcard || matchesSome;\n}\n\n/**\n * Removes an existing embed.\n *\n * @param state the current framing state.\n * @param id the @id of the embed to remove.\n */\nfunction _removeEmbed(state, id) {\n  // get existing embed\n  const embeds = state.uniqueEmbeds[state.graph];\n  const embed = embeds[id];\n  const parent = embed.parent;\n  const property = embed.property;\n\n  // create reference to replace embed\n  const subject = {'@id': id};\n\n  // remove existing embed\n  if(types.isArray(parent)) {\n    // replace subject with reference\n    for(let i = 0; i < parent.length; ++i) {\n      if(util.compareValues(parent[i], subject)) {\n        parent[i] = subject;\n        break;\n      }\n    }\n  } else {\n    // replace subject with reference\n    const useArray = types.isArray(parent[property]);\n    util.removeValue(parent, property, subject, {propertyIsArray: useArray});\n    util.addValue(parent, property, subject, {propertyIsArray: useArray});\n  }\n\n  // recursively remove dependent dangling embeds\n  const removeDependents = id => {\n    // get embed keys as a separate array to enable deleting keys in map\n    const ids = Object.keys(embeds);\n    for(const next of ids) {\n      if(next in embeds && types.isObject(embeds[next].parent) &&\n        embeds[next].parent['@id'] === id) {\n        delete embeds[next];\n        removeDependents(next);\n      }\n    }\n  };\n  removeDependents(id);\n}\n\n/**\n * Adds framing output to the given parent.\n *\n * @param parent the parent to add to.\n * @param property the parent property.\n * @param output the output to add.\n */\nfunction _addFrameOutput(parent, property, output) {\n  if(types.isObject(parent)) {\n    util.addValue(parent, property, output, {propertyIsArray: true});\n  } else {\n    parent.push(output);\n  }\n}\n\n/**\n * Node matches if it is a node, and matches the pattern as a frame.\n *\n * @param state the current framing state.\n * @param pattern used to match value\n * @param value to check\n * @param flags the frame flags.\n */\nfunction _nodeMatch(state, pattern, value, flags) {\n  if(!('@id' in value)) {\n    return false;\n  }\n  const nodeObject = state.subjects[value['@id']];\n  return nodeObject && _filterSubject(state, nodeObject, pattern, flags);\n}\n\n/**\n * Value matches if it is a value and matches the value pattern\n *\n * * `pattern` is empty\n * * @values are the same, or `pattern[@value]` is a wildcard, and\n * * @types are the same or `value[@type]` is not null\n *   and `pattern[@type]` is `{}`, or `value[@type]` is null\n *   and `pattern[@type]` is null or `[]`, and\n * * @languages are the same or `value[@language]` is not null\n *   and `pattern[@language]` is `{}`, or `value[@language]` is null\n *   and `pattern[@language]` is null or `[]`.\n *\n * @param pattern used to match value\n * @param value to check\n */\nfunction _valueMatch(pattern, value) {\n  const v1 = value['@value'];\n  const t1 = value['@type'];\n  const l1 = value['@language'];\n  const v2 = pattern['@value'] ?\n    (types.isArray(pattern['@value']) ?\n      pattern['@value'] : [pattern['@value']]) :\n    [];\n  const t2 = pattern['@type'] ?\n    (types.isArray(pattern['@type']) ?\n      pattern['@type'] : [pattern['@type']]) :\n    [];\n  const l2 = pattern['@language'] ?\n    (types.isArray(pattern['@language']) ?\n      pattern['@language'] : [pattern['@language']]) :\n    [];\n\n  if(v2.length === 0 && t2.length === 0 && l2.length === 0) {\n    return true;\n  }\n  if(!(v2.includes(v1) || types.isEmptyObject(v2[0]))) {\n    return false;\n  }\n  if(!(!t1 && t2.length === 0 || t2.includes(t1) || t1 &&\n    types.isEmptyObject(t2[0]))) {\n    return false;\n  }\n  if(!(!l1 && l2.length === 0 || l2.includes(l1) || l1 &&\n    types.isEmptyObject(l2[0]))) {\n    return false;\n  }\n  return true;\n}\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/frame.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/fromRdf.js":
/*!********************************************!*\
  !*** ./node_modules/jsonld/lib/fromRdf.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst graphTypes = __webpack_require__(/*! ./graphTypes */ \"./node_modules/jsonld/lib/graphTypes.js\");\nconst types = __webpack_require__(/*! ./types */ \"./node_modules/jsonld/lib/types.js\");\nconst util = __webpack_require__(/*! ./util */ \"./node_modules/jsonld/lib/util.js\");\n\n// constants\nconst {\n  // RDF,\n  RDF_LIST,\n  RDF_FIRST,\n  RDF_REST,\n  RDF_NIL,\n  RDF_TYPE,\n  // RDF_PLAIN_LITERAL,\n  // RDF_XML_LITERAL,\n  // RDF_OBJECT,\n  // RDF_LANGSTRING,\n\n  // XSD,\n  XSD_BOOLEAN,\n  XSD_DOUBLE,\n  XSD_INTEGER,\n  XSD_STRING,\n} = __webpack_require__(/*! ./constants */ \"./node_modules/jsonld/lib/constants.js\");\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset the RDF dataset.\n * @param options the RDF serialization options.\n *\n * @return a Promise that resolves to the JSON-LD output.\n */\napi.fromRDF = async (\n  dataset, {useRdfType = false, useNativeTypes = false}) => {\n  const defaultGraph = {};\n  const graphMap = {'@default': defaultGraph};\n  const referencedOnce = {};\n\n  for(const quad of dataset) {\n    // TODO: change 'name' to 'graph'\n    const name = (quad.graph.termType === 'DefaultGraph') ?\n      '@default' : quad.graph.value;\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n\n    const nodeMap = graphMap[name];\n\n    // get subject, predicate, object\n    const s = quad.subject.value;\n    const p = quad.predicate.value;\n    const o = quad.object;\n\n    if(!(s in nodeMap)) {\n      nodeMap[s] = {'@id': s};\n    }\n    const node = nodeMap[s];\n\n    const objectIsNode = o.termType.endsWith('Node');\n    if(objectIsNode && !(o.value in nodeMap)) {\n      nodeMap[o.value] = {'@id': o.value};\n    }\n\n    if(p === RDF_TYPE && !useRdfType && objectIsNode) {\n      util.addValue(node, '@type', o.value, {propertyIsArray: true});\n      continue;\n    }\n\n    const value = _RDFToObject(o, useNativeTypes);\n    util.addValue(node, p, value, {propertyIsArray: true});\n\n    // object may be an RDF list/partial list node but we can't know easily\n    // until all triples are read\n    if(objectIsNode) {\n      if(o.value === RDF_NIL) {\n        // track rdf:nil uniquely per graph\n        const object = nodeMap[o.value];\n        if(!('usages' in object)) {\n          object.usages = [];\n        }\n        object.usages.push({\n          node,\n          property: p,\n          value\n        });\n      } else if(o.value in referencedOnce) {\n        // object referenced more than once\n        referencedOnce[o.value] = false;\n      } else {\n        // keep track of single reference\n        referencedOnce[o.value] = {\n          node,\n          property: p,\n          value\n        };\n      }\n    }\n  }\n\n  /*\n  for(let name in dataset) {\n    const graph = dataset[name];\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n    const nodeMap = graphMap[name];\n    for(let ti = 0; ti < graph.length; ++ti) {\n      const triple = graph[ti];\n\n      // get subject, predicate, object\n      const s = triple.subject.value;\n      const p = triple.predicate.value;\n      const o = triple.object;\n\n      if(!(s in nodeMap)) {\n        nodeMap[s] = {'@id': s};\n      }\n      const node = nodeMap[s];\n\n      const objectIsId = (o.type === 'IRI' || o.type === 'blank node');\n      if(objectIsId && !(o.value in nodeMap)) {\n        nodeMap[o.value] = {'@id': o.value};\n      }\n\n      if(p === RDF_TYPE && !useRdfType && objectIsId) {\n        util.addValue(node, '@type', o.value, {propertyIsArray: true});\n        continue;\n      }\n\n      const value = _RDFToObject(o, useNativeTypes);\n      util.addValue(node, p, value, {propertyIsArray: true});\n\n      // object may be an RDF list/partial list node but we can't know easily\n      // until all triples are read\n      if(objectIsId) {\n        if(o.value === RDF_NIL) {\n          // track rdf:nil uniquely per graph\n          const object = nodeMap[o.value];\n          if(!('usages' in object)) {\n            object.usages = [];\n          }\n          object.usages.push({\n            node: node,\n            property: p,\n            value: value\n          });\n        } else if(o.value in referencedOnce) {\n          // object referenced more than once\n          referencedOnce[o.value] = false;\n        } else {\n          // keep track of single reference\n          referencedOnce[o.value] = {\n            node: node,\n            property: p,\n            value: value\n          };\n        }\n      }\n    }\n  }*/\n\n  // convert linked lists to @list arrays\n  for(const name in graphMap) {\n    const graphObject = graphMap[name];\n\n    // no @lists to be converted, continue\n    if(!(RDF_NIL in graphObject)) {\n      continue;\n    }\n\n    // iterate backwards through each RDF list\n    const nil = graphObject[RDF_NIL];\n    if(!nil.usages) {\n      continue;\n    }\n    for(let usage of nil.usages) {\n      let node = usage.node;\n      let property = usage.property;\n      let head = usage.value;\n      const list = [];\n      const listNodes = [];\n\n      // ensure node is a well-formed list node; it must:\n      // 1. Be referenced only once.\n      // 2. Have an array for rdf:first that has 1 item.\n      // 3. Have an array for rdf:rest that has 1 item.\n      // 4. Have no keys other than: @id, rdf:first, rdf:rest, and,\n      //   optionally, @type where the value is rdf:List.\n      let nodeKeyCount = Object.keys(node).length;\n      while(property === RDF_REST &&\n        types.isObject(referencedOnce[node['@id']]) &&\n        types.isArray(node[RDF_FIRST]) && node[RDF_FIRST].length === 1 &&\n        types.isArray(node[RDF_REST]) && node[RDF_REST].length === 1 &&\n        (nodeKeyCount === 3 ||\n          (nodeKeyCount === 4 && types.isArray(node['@type']) &&\n          node['@type'].length === 1 && node['@type'][0] === RDF_LIST))) {\n        list.push(node[RDF_FIRST][0]);\n        listNodes.push(node['@id']);\n\n        // get next node, moving backwards through list\n        usage = referencedOnce[node['@id']];\n        node = usage.node;\n        property = usage.property;\n        head = usage.value;\n        nodeKeyCount = Object.keys(node).length;\n\n        // if node is not a blank node, then list head found\n        if(!graphTypes.isBlankNode(node)) {\n          break;\n        }\n      }\n\n      // the list is nested in another list\n      if(property === RDF_FIRST) {\n        // empty list\n        if(node['@id'] === RDF_NIL) {\n          // can't convert rdf:nil to a @list object because it would\n          // result in a list of lists which isn't supported\n          continue;\n        }\n\n        // preserve list head\n        if(RDF_REST in graphObject[head['@id']]) {\n          head = graphObject[head['@id']][RDF_REST][0];\n        }\n\n        list.pop();\n        listNodes.pop();\n      }\n\n      // transform list into @list object\n      delete head['@id'];\n      head['@list'] = list.reverse();\n      for(const listNode of listNodes) {\n        delete graphObject[listNode];\n      }\n    }\n\n    delete nil.usages;\n  }\n\n  const result = [];\n  const subjects = Object.keys(defaultGraph).sort();\n  for(const subject of subjects) {\n    const node = defaultGraph[subject];\n    if(subject in graphMap) {\n      const graph = node['@graph'] = [];\n      const graphObject = graphMap[subject];\n      const graphSubjects = Object.keys(graphObject).sort();\n      for(const graphSubject of graphSubjects) {\n        const node = graphObject[graphSubject];\n        // only add full subjects to top-level\n        if(!graphTypes.isSubjectReference(node)) {\n          graph.push(node);\n        }\n      }\n    }\n    // only add full subjects to top-level\n    if(!graphTypes.isSubjectReference(node)) {\n      result.push(node);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Converts an RDF triple object to a JSON-LD object.\n *\n * @param o the RDF triple object to convert.\n * @param useNativeTypes true to output native types, false not to.\n *\n * @return the JSON-LD object.\n */\nfunction _RDFToObject(o, useNativeTypes) {\n  // convert NamedNode/BlankNode object to JSON-LD\n  if(o.termType.endsWith('Node')) {\n    return {'@id': o.value};\n  }\n\n  // convert literal to JSON-LD\n  const rval = {'@value': o.value};\n\n  // add language\n  if(o.language) {\n    rval['@language'] = o.language;\n  } else {\n    let type = o.datatype.value;\n    if(!type) {\n      type = XSD_STRING;\n    }\n    // use native types for certain xsd types\n    if(useNativeTypes) {\n      if(type === XSD_BOOLEAN) {\n        if(rval['@value'] === 'true') {\n          rval['@value'] = true;\n        } else if(rval['@value'] === 'false') {\n          rval['@value'] = false;\n        }\n      } else if(types.isNumeric(rval['@value'])) {\n        if(type === XSD_INTEGER) {\n          const i = parseInt(rval['@value'], 10);\n          if(i.toFixed(0) === rval['@value']) {\n            rval['@value'] = i;\n          }\n        } else if(type === XSD_DOUBLE) {\n          rval['@value'] = parseFloat(rval['@value']);\n        }\n      }\n      // do not add native type\n      if(![XSD_BOOLEAN, XSD_INTEGER, XSD_DOUBLE, XSD_STRING].includes(type)) {\n        rval['@type'] = type;\n      }\n    } else if(type !== XSD_STRING) {\n      rval['@type'] = type;\n    }\n  }\n\n  return rval;\n}\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/fromRdf.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/graphTypes.js":
/*!***********************************************!*\
  !*** ./node_modules/jsonld/lib/graphTypes.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst types = __webpack_require__(/*! ./types */ \"./node_modules/jsonld/lib/types.js\");\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Returns true if the given value is a subject with properties.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject with properties, false if not.\n */\napi.isSubject = v => {\n  // Note: A value is a subject if all of these hold true:\n  // 1. It is an Object.\n  // 2. It is not a @value, @set, or @list.\n  // 3. It has more than 1 key OR any existing key is not @id.\n  if(types.isObject(v) &&\n    !(('@value' in v) || ('@set' in v) || ('@list' in v))) {\n    const keyCount = Object.keys(v).length;\n    return (keyCount > 1 || !('@id' in v));\n  }\n  return false;\n};\n\n/**\n * Returns true if the given value is a subject reference.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject reference, false if not.\n */\napi.isSubjectReference = v =>\n  // Note: A value is a subject reference if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has a single key: @id.\n  (types.isObject(v) && Object.keys(v).length === 1 && ('@id' in v));\n\n/**\n * Returns true if the given value is a @value.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @value, false if not.\n */\napi.isValue = v =>\n  // Note: A value is a @value if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @value property.\n  types.isObject(v) && ('@value' in v);\n\n/**\n * Returns true if the given value is a @list.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @list, false if not.\n */\napi.isList = v =>\n  // Note: A value is a @list if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @list property.\n  types.isObject(v) && ('@list' in v);\n\n/**\n * Returns true if the given value is a @graph.\n *\n * @return true if the value is a @graph, false if not.\n */\napi.isGraph = v => {\n  // Note: A value is a graph if all of these hold true:\n  // 1. It is an object.\n  // 2. It has an `@graph` key.\n  // 3. It may have '@id' or '@index'\n  return types.isObject(v) &&\n    '@graph' in v &&\n    Object.keys(v)\n      .filter(key => key !== '@id' && key !== '@index').length === 1;\n};\n\n/**\n * Returns true if the given value is a simple @graph.\n *\n * @return true if the value is a simple @graph, false if not.\n */\napi.isSimpleGraph = v => {\n  // Note: A value is a simple graph if all of these hold true:\n  // 1. It is an object.\n  // 2. It has an `@graph` key.\n  // 3. It has only 1 key or 2 keys where one of them is `@index`.\n  return api.isGraph(v) && !('@id' in v);\n};\n\n/**\n * Returns true if the given value is a blank node.\n *\n * @param v the value to check.\n *\n * @return true if the value is a blank node, false if not.\n */\napi.isBlankNode = v => {\n  // Note: A value is a blank node if all of these hold true:\n  // 1. It is an Object.\n  // 2. If it has an @id key its value begins with '_:'.\n  // 3. It has no keys OR is not a @value, @set, or @list.\n  if(types.isObject(v)) {\n    if('@id' in v) {\n      return (v['@id'].indexOf('_:') === 0);\n    }\n    return (Object.keys(v).length === 0 ||\n      !(('@value' in v) || ('@set' in v) || ('@list' in v)));\n  }\n  return false;\n};\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/graphTypes.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/jsonld.js":
/*!*******************************************!*\
  !*** ./node_modules/jsonld/lib/jsonld.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process, global) {/**\n * A JavaScript implementation of the JSON-LD API.\n *\n * @author Dave Longley\n *\n * @license BSD 3-Clause License\n * Copyright (c) 2011-2017 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nconst canonize = __webpack_require__(/*! rdf-canonize */ \"./node_modules/rdf-canonize/lib/index.js\");\nconst util = __webpack_require__(/*! ./util */ \"./node_modules/jsonld/lib/util.js\");\nconst IdentifierIssuer = util.IdentifierIssuer;\nconst JsonLdError = __webpack_require__(/*! ./JsonLdError */ \"./node_modules/jsonld/lib/JsonLdError.js\");\nconst NQuads = __webpack_require__(/*! ./NQuads */ \"./node_modules/jsonld/lib/NQuads.js\");\nconst Rdfa = __webpack_require__(/*! ./Rdfa */ \"./node_modules/jsonld/lib/Rdfa.js\");\n\nconst {expand: _expand} = __webpack_require__(/*! ./expand */ \"./node_modules/jsonld/lib/expand.js\");\nconst {flatten: _flatten} = __webpack_require__(/*! ./flatten */ \"./node_modules/jsonld/lib/flatten.js\");\nconst {fromRDF: _fromRDF} = __webpack_require__(/*! ./fromRdf */ \"./node_modules/jsonld/lib/fromRdf.js\");\nconst {toRDF: _toRDF} = __webpack_require__(/*! ./toRdf */ \"./node_modules/jsonld/lib/toRdf.js\");\n\nconst {\n  frameMergedOrDefault: _frameMergedOrDefault\n} = __webpack_require__(/*! ./frame */ \"./node_modules/jsonld/lib/frame.js\");\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString\n} = __webpack_require__(/*! ./types */ \"./node_modules/jsonld/lib/types.js\");\n\nconst {\n  isSubjectReference: _isSubjectReference,\n} = __webpack_require__(/*! ./graphTypes */ \"./node_modules/jsonld/lib/graphTypes.js\");\n\nconst {\n  getInitialContext: _getInitialContext,\n  process: _processContext,\n  getAllContexts: _getAllContexts,\n  expandIri: _expandIri\n} = __webpack_require__(/*! ./context */ \"./node_modules/jsonld/lib/context.js\");\n\nconst {\n  compact: _compact,\n  compactIri: _compactIri,\n  removePreserve: _removePreserve\n} = __webpack_require__(/*! ./compact */ \"./node_modules/jsonld/lib/compact.js\");\n\nconst {\n  createNodeMap: _createNodeMap,\n  createMergedNodeMap: _createMergedNodeMap,\n  mergeNodeMaps: _mergeNodeMaps\n} = __webpack_require__(/*! ./nodeMap */ \"./node_modules/jsonld/lib/nodeMap.js\");\n\n// determine if in-browser or using node.js\nconst _nodejs = (\n  typeof process !== 'undefined' && process.versions && process.versions.node);\nconst _browser = !_nodejs &&\n  (typeof window !== 'undefined' || typeof self !== 'undefined');\n\n/* eslint-disable indent */\n// attaches jsonld API to the given object\nconst wrapper = function(jsonld) {\n\n/* Core API */\n\n/**\n * Performs JSON-LD compaction.\n *\n * @param input the JSON-LD input to compact.\n * @param ctx the context to compact with.\n * @param [options] options to use:\n *          [base] the base IRI to use.\n *          [compactArrays] true to compact arrays to single values when\n *            appropriate, false not to (default: true).\n *          [compactToRelative] true to compact IRIs to be relative to document\n *            base, false to keep absolute (default: true)\n *          [graph] true to always output a top-level graph (default: false).\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n *          [expansionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n *          [framing] true if compaction is occuring during a framing operation.\n *          [compactionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n * @param [callback(err, compacted)] called once the operation completes.\n *\n * @return a Promise that resolves to the compacted output.\n */\njsonld.compact = util.callbackify(async function(input, ctx, options) {\n  if(arguments.length < 2) {\n    throw new TypeError('Could not compact, too few arguments.');\n  }\n\n  if(ctx === null) {\n    throw new JsonLdError(\n      'The compaction context must not be null.',\n      'jsonld.CompactError', {code: 'invalid local context'});\n  }\n\n  // nothing to compact\n  if(input === null) {\n    return null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    compactArrays: true,\n    compactToRelative: true,\n    graph: false,\n    skipExpansion: false,\n    link: false,\n    issuer: new IdentifierIssuer('_:b')\n  });\n  if(options.link) {\n    // force skip expansion when linking, \"link\" is not part of the public\n    // API, it should only be called from framing\n    options.skipExpansion = true;\n  }\n  if(!options.compactToRelative) {\n    delete options.base;\n  }\n\n  // expand input\n  let expanded;\n  if(options.skipExpansion) {\n    expanded = input;\n  } else {\n    expanded = await jsonld.expand(input, options);\n  }\n\n  // process context\n  const activeCtx = await jsonld.processContext(\n    _getInitialContext(options), ctx, options);\n\n  // do compaction\n  let compacted = _compact({\n    activeCtx,\n    element: expanded,\n    options,\n    compactionMap: options.compactionMap\n  });\n\n  // perform clean up\n  if(options.compactArrays && !options.graph && _isArray(compacted)) {\n    if(compacted.length === 1) {\n      // simplify to a single item\n      compacted = compacted[0];\n    } else if(compacted.length === 0) {\n      // simplify to an empty object\n      compacted = {};\n    }\n  } else if(options.graph && _isObject(compacted)) {\n    // always use array if graph option is on\n    compacted = [compacted];\n  }\n\n  // follow @context key\n  if(_isObject(ctx) && '@context' in ctx) {\n    ctx = ctx['@context'];\n  }\n\n  // build output context\n  ctx = util.clone(ctx);\n  if(!_isArray(ctx)) {\n    ctx = [ctx];\n  }\n  // remove empty contexts\n  const tmp = ctx;\n  ctx = [];\n  for(let i = 0; i < tmp.length; ++i) {\n    if(!_isObject(tmp[i]) || Object.keys(tmp[i]).length > 0) {\n      ctx.push(tmp[i]);\n    }\n  }\n\n  // remove array if only one context\n  const hasContext = (ctx.length > 0);\n  if(ctx.length === 1) {\n    ctx = ctx[0];\n  }\n\n  // add context and/or @graph\n  if(_isArray(compacted)) {\n    // use '@graph' keyword\n    const graphAlias = _compactIri({\n      activeCtx, iri: '@graph', relativeTo: {vocab: true}\n    });\n    const graph = compacted;\n    compacted = {};\n    if(hasContext) {\n      compacted['@context'] = ctx;\n    }\n    compacted[graphAlias] = graph;\n  } else if(_isObject(compacted) && hasContext) {\n    // reorder keys so @context is first\n    const graph = compacted;\n    compacted = {'@context': ctx};\n    for(const key in graph) {\n      compacted[key] = graph[key];\n    }\n  }\n\n  if(options.framing) {\n    // get graph alias\n    const graph = _compactIri({\n      activeCtx, iri: '@graph', relativeTo: {vocab: true}\n    });\n    // remove @preserve from results\n    options.link = {};\n    compacted[graph] = _removePreserve(activeCtx, compacted[graph], options);\n  }\n\n  return compacted;\n});\n\n/**\n * Performs JSON-LD expansion.\n *\n * @param input the JSON-LD input to expand.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [keepFreeFloatingNodes] true to keep free-floating nodes,\n *            false not to, defaults to false.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n *          [expansionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n * @param [callback(err, expanded)] called once the operation completes.\n *\n * @return a Promise that resolves to the expanded output.\n */\njsonld.expand = util.callbackify(async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not expand, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    keepFreeFloatingNodes: false\n  });\n  if(options.expansionMap === false) {\n    options.expansionMap = undefined;\n  }\n\n  // build set of objects that may have @contexts to resolve\n  const toResolve = {};\n\n  // build set of contexts to process prior to expansion\n  const contextsToProcess = [];\n\n  // if an `expandContext` has been given ensure it gets resolved\n  if('expandContext' in options) {\n    const expandContext = util.clone(options.expandContext);\n    if(_isObject(expandContext) && '@context' in expandContext) {\n      toResolve.expandContext = expandContext;\n    } else {\n      toResolve.expandContext = {'@context': expandContext};\n    }\n    contextsToProcess.push(toResolve.expandContext);\n  }\n\n  // if input is a string, attempt to dereference remote document\n  let defaultBase;\n  if(!_isString(input)) {\n    // input is not a URL, do not need to retrieve it first\n    toResolve.input = util.clone(input);\n  } else {\n    // load remote doc\n    const remoteDoc = await jsonld.get(input, options);\n    defaultBase = remoteDoc.documentUrl;\n    toResolve.input = remoteDoc.document;\n    if(remoteDoc.contextUrl) {\n      // context included in HTTP link header and must be resolved\n      toResolve.remoteContext = {'@context': remoteDoc.contextUrl};\n      contextsToProcess.push(toResolve.remoteContext);\n    }\n  }\n\n  // set default base\n  if(!('base' in options)) {\n    options.base = defaultBase || '';\n  }\n\n  // get all contexts in `toResolve`\n  await _getAllContexts(toResolve, options);\n\n  // process any additional contexts\n  let activeCtx = _getInitialContext(options);\n  contextsToProcess.forEach(localCtx => {\n    activeCtx = _processContext({activeCtx, localCtx, options});\n  });\n\n  // expand resolved input\n  let expanded = _expand({\n    activeCtx,\n    element: toResolve.input,\n    options,\n    expansionMap: options.expansionMap\n  });\n\n  // optimize away @graph with no other properties\n  if(_isObject(expanded) && ('@graph' in expanded) &&\n    Object.keys(expanded).length === 1) {\n    expanded = expanded['@graph'];\n  } else if(expanded === null) {\n    expanded = [];\n  }\n\n  // normalize to an array\n  if(!_isArray(expanded)) {\n    expanded = [expanded];\n  }\n\n  return expanded;\n});\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the JSON-LD to flatten.\n * @param ctx the context to use to compact the flattened output, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param [callback(err, flattened)] called once the operation completes.\n *\n * @return a Promise that resolves to the flattened output.\n */\njsonld.flatten = util.callbackify(async function(input, ctx, options) {\n  if(arguments.length < 1) {\n    return new TypeError('Could not flatten, too few arguments.');\n  }\n\n  if(typeof ctx === 'function') {\n    ctx = null;\n  } else {\n    ctx = ctx || null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : ''\n  });\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  // do flattening\n  const flattened = _flatten(expanded);\n\n  if(ctx === null) {\n    // no compaction required\n    return flattened;\n  }\n\n  // compact result (force @graph option to true, skip expansion)\n  options.graph = true;\n  options.skipExpansion = true;\n  const compacted = await jsonld.compact(flattened, ctx, options);\n\n  return compacted;\n});\n\n/**\n * Performs JSON-LD framing.\n *\n * @param input the JSON-LD input to frame.\n * @param frame the JSON-LD frame to use.\n * @param [options] the framing options.\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [embed] default @embed flag: '@last', '@always', '@never', '@link'\n *            (default: '@last').\n *          [explicit] default @explicit flag (default: false).\n *          [requireAll] default @requireAll flag (default: true).\n *          [omitDefault] default @omitDefault flag (default: false).\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param [callback(err, framed)] called once the operation completes.\n *\n * @return a Promise that resolves to the framed output.\n */\njsonld.frame = util.callbackify(async function(input, frame, options) {\n  if(arguments.length < 2) {\n    throw new TypeError('Could not frame, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    embed: '@last',\n    explicit: false,\n    requireAll: true,\n    omitDefault: false,\n    pruneBlankNodeIdentifiers: true,\n    bnodesToClear: []\n  });\n\n  // if frame is a string, attempt to dereference remote document\n  if(_isString(frame)) {\n    // load remote doc\n    const remoteDoc = await jsonld.get(frame, options);\n    frame = remoteDoc.document;\n\n    if(remoteDoc.contextUrl) {\n      // inject link header @context into frame\n      let ctx = frame['@context'];\n      if(!ctx) {\n        ctx = remoteDoc.contextUrl;\n      } else if(_isArray(ctx)) {\n        ctx.push(remoteDoc.contextUrl);\n      } else {\n        ctx = [ctx, remoteDoc.contextUrl];\n      }\n      frame['@context'] = ctx;\n    }\n  }\n\n  const frameContext = frame ? frame['@context'] || {} : {};\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  // expand frame\n  const opts = util.clone(options);\n  opts.isFrame = true;\n  opts.keepFreeFloatingNodes = true;\n  const expandedFrame = await jsonld.expand(frame, opts);\n\n  // if the unexpanded frame includes a key expanding to @graph, frame the\n  // default graph, otherwise, the merged graph\n  let framed;\n  // FIXME should look for aliases of @graph\n  opts.merged = !('@graph' in frame);\n  // do framing\n  framed = _frameMergedOrDefault(expanded, expandedFrame, opts);\n\n  // compact result (force @graph option to true, skip expansion,\n  // check for linked embeds)\n  opts.graph = true;\n  opts.skipExpansion = true;\n  opts.link = {};\n  opts.framing = true;\n  const compacted = await jsonld.compact(framed, frameContext, opts);\n\n  return compacted;\n});\n\n/**\n * **Experimental**\n *\n * Links a JSON-LD document's nodes in memory.\n *\n * @param input the JSON-LD document to link.\n * @param [ctx] the JSON-LD context to apply.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param [callback(err, linked)] called once the operation completes.\n *\n * @return a Promise that resolves to the linked output.\n */\njsonld.link = util.callbackify(async function(input, ctx, options) {\n  // API matches running frame with a wildcard frame and embed: '@link'\n  // get arguments\n  const frame = {};\n  if(ctx) {\n    frame['@context'] = ctx;\n  }\n  frame['@embed'] = '@link';\n  return jsonld.frame(input, frame, options);\n});\n\n/**\n * Performs RDF dataset normalization on the given input. The input is JSON-LD\n * unless the 'inputFormat' option is used. The output is an RDF dataset\n * unless the 'format' option is used.\n *\n * @param input the input to normalize as JSON-LD or as a format specified by\n *          the 'inputFormat' option.\n * @param [options] the options to use:\n *          [algorithm] the normalization algorithm to use, `URDNA2015` or\n *            `URGNA2012` (default: `URDNA2015`).\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [inputFormat] the format if input is not JSON-LD:\n *            'application/n-quads' for N-Quads.\n *          [format] the format if output is a string:\n *            'application/n-quads' for N-Quads.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n *          [useNative] true to use a native canonize algorithm\n * @param [callback(err, normalized)] called once the operation completes.\n *\n * @return a Promise that resolves to the normalized output.\n */\njsonld.normalize = jsonld.canonize = util.callbackify(async function(\n  input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not canonize, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    algorithm: 'URDNA2015',\n    skipExpansion: false\n  });\n  if('inputFormat' in options) {\n    if(options.inputFormat !== 'application/n-quads' &&\n      options.inputFormat !== 'application/nquads') {\n      throw new JsonLdError(\n        'Unknown canonicalization input format.',\n        'jsonld.CanonizeError');\n    }\n    // TODO: `await` for async parsers\n    const parsedInput = NQuads.parse(input);\n\n    // do canonicalization\n    return canonize.canonize(parsedInput, options);\n  }\n\n  // convert to RDF dataset then do normalization\n  const opts = util.clone(options);\n  delete opts.format;\n  opts.produceGeneralizedRdf = false;\n  const dataset = await jsonld.toRDF(input, opts);\n\n  // do canonicalization\n  return canonize.canonize(dataset, options);\n});\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset a serialized string of RDF in a format specified by the\n *          format option or an RDF dataset to convert.\n * @param [options] the options to use:\n *          [format] the format if dataset param must first be parsed:\n *            'application/n-quads' for N-Quads (default).\n *          [rdfParser] a custom RDF-parser to use to parse the dataset.\n *          [useRdfType] true to use rdf:type, false to use @type\n *            (default: false).\n *          [useNativeTypes] true to convert XSD types into native types\n *            (boolean, integer, double), false not to (default: false).\n * @param [callback(err, output)] called once the operation completes.\n *\n * @return a Promise that resolves to the JSON-LD document.\n */\njsonld.fromRDF = util.callbackify(async function(dataset, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not convert from RDF, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    format: _isString(dataset) ? 'application/n-quads' : undefined\n  });\n\n  let {format, rdfParser} = options;\n\n  // handle special format\n  if(format) {\n    // check supported formats\n    rdfParser = rdfParser || _rdfParsers[format];\n    if(!rdfParser) {\n      throw new JsonLdError(\n        'Unknown input format.',\n        'jsonld.UnknownFormat', {format});\n    }\n  } else {\n    // no-op parser, assume dataset already parsed\n    rdfParser = () => dataset;\n  }\n\n  // TODO: call `normalizeAsyncFn` on parser fn\n\n  // rdfParser can be callback, promise-based, or synchronous\n  let parsedDataset;\n  if(rdfParser.length > 1) {\n    // convert callback-based rdf parser to promise-based\n    parsedDataset = new Promise((resolve, reject) => {\n      rdfParser(dataset, (err, dataset) => {\n        if(err) {\n          reject(err);\n        } else {\n          resolve(dataset);\n        }\n      });\n    });\n  } else {\n    parsedDataset = Promise.resolve(rdfParser(dataset));\n  }\n\n  parsedDataset = await parsedDataset;\n\n  // back-compat with old parsers that produced legacy dataset format\n  if(!Array.isArray(parsedDataset)) {\n    parsedDataset = NQuads.legacyDatasetToQuads(parsedDataset);\n  }\n\n  return _fromRDF(parsedDataset, options);\n});\n\n/**\n * Outputs the RDF dataset found in the given JSON-LD object.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [format] the format to use to output a string:\n *            'application/n-quads' for N-Quads.\n *          [produceGeneralizedRdf] true to output generalized RDF, false\n *            to produce only standard RDF (default: false).\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param [callback(err, dataset)] called once the operation completes.\n *\n * @return a Promise that resolves to the RDF dataset.\n */\njsonld.toRDF = util.callbackify(async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not convert to RDF, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    skipExpansion: false\n  });\n\n  // TODO: support toRDF custom map?\n  let expanded;\n  if(options.skipExpansion) {\n    expanded = input;\n  } else {\n    // expand input\n    expanded = await jsonld.expand(input, options);\n  }\n\n  // output RDF dataset\n  const dataset = _toRDF(expanded, options);\n  if(options.format) {\n    if(options.format === 'application/n-quads' ||\n      options.format === 'application/nquads') {\n      return await NQuads.serialize(dataset);\n    }\n    throw new JsonLdError(\n      'Unknown output format.',\n      'jsonld.UnknownFormat', {format: options.format});\n  }\n\n  return dataset;\n});\n\n/**\n * **Experimental**\n *\n * Recursively flattens the nodes in the given JSON-LD input into a merged\n * map of node ID => node. All graphs will be merged into the default graph.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param [callback(err, nodeMap)] called once the operation completes.\n *\n * @return a Promise that resolves to the merged node map.\n */\njsonld.createNodeMap = util.callbackify(async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not create node map, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : ''\n  });\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  return _createMergedNodeMap(expanded, options);\n});\n\n/**\n * **Experimental**\n *\n * Merges two or more JSON-LD documents into a single flattened document.\n *\n * @param docs the JSON-LD documents to merge together.\n * @param ctx the context to use to compact the merged result, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [mergeNodes] true to merge properties for nodes with the same ID,\n *            false to ignore new properties for nodes with the same ID once\n *            the ID has been defined; note that this may not prevent merging\n *            new properties where a node is in the `object` position\n *            (default: true).\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param [callback(err, merged)] called once the operation completes.\n *\n * @return a Promise that resolves to the merged output.\n */\njsonld.merge = util.callbackify(async function(docs, ctx, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not merge, too few arguments.');\n  }\n  if(!_isArray(docs)) {\n    throw new TypeError('Could not merge, \"docs\" must be an array.');\n  }\n\n  if(typeof ctx === 'function') {\n    ctx = null;\n  } else {\n    ctx = ctx || null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {});\n\n  // expand all documents\n  const expanded = await Promise.all(docs.map(doc => {\n    const opts = Object.assign({}, options);\n    return jsonld.expand(doc, opts);\n  }));\n\n  let mergeNodes = true;\n  if('mergeNodes' in options) {\n    mergeNodes = options.mergeNodes;\n  }\n\n  const issuer = options.issuer || new IdentifierIssuer('_:b');\n  const graphs = {'@default': {}};\n\n  for(let i = 0; i < expanded.length; ++i) {\n    // uniquely relabel blank nodes\n    const doc = util.relabelBlankNodes(expanded[i], {\n      issuer: new IdentifierIssuer('_:b' + i + '-')\n    });\n\n    // add nodes to the shared node map graphs if merging nodes, to a\n    // separate graph set if not\n    const _graphs = (mergeNodes || i === 0) ? graphs : {'@default': {}};\n    _createNodeMap(doc, _graphs, '@default', issuer);\n\n    if(_graphs !== graphs) {\n      // merge document graphs but don't merge existing nodes\n      for(const graphName in _graphs) {\n        const _nodeMap = _graphs[graphName];\n        if(!(graphName in graphs)) {\n          graphs[graphName] = _nodeMap;\n          continue;\n        }\n        const nodeMap = graphs[graphName];\n        for(const key in _nodeMap) {\n          if(!(key in nodeMap)) {\n            nodeMap[key] = _nodeMap[key];\n          }\n        }\n      }\n    }\n  }\n\n  // add all non-default graphs to default graph\n  const defaultGraph = _mergeNodeMaps(graphs);\n\n  // produce flattened output\n  const flattened = [];\n  const keys = Object.keys(defaultGraph).sort();\n  for(let ki = 0; ki < keys.length; ++ki) {\n    const node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n\n  if(ctx === null) {\n    return flattened;\n  }\n\n  // compact result (force @graph option to true, skip expansion)\n  options.graph = true;\n  options.skipExpansion = true;\n  const compacted = await jsonld.compact(flattened, ctx, options);\n\n  return compacted;\n});\n\n/**\n * The default document loader for external documents. If the environment\n * is node.js, a callback-continuation-style document loader is used; otherwise,\n * a promises-style document loader is used.\n *\n * @param url the URL to load.\n * @param callback(err, remoteDoc) called once the operation completes,\n *          if using a non-promises API.\n *\n * @return a promise, if using a promises API.\n */\nObject.defineProperty(jsonld, 'documentLoader', {\n  get: () => jsonld._documentLoader,\n  set: v => jsonld._documentLoader = util.normalizeDocumentLoader(v)\n});\n// default document loader not implemented\njsonld.documentLoader = async url => {\n  throw new JsonLdError(\n    'Could not retrieve a JSON-LD document from the URL. URL ' +\n    'dereferencing not implemented.', 'jsonld.LoadDocumentError',\n    {code: 'loading document failed', url});\n};\n\n/**\n * Deprecated default document loader. Do not use or override.\n */\njsonld.loadDocument = util.callbackify(async function() {\n  return jsonld.documentLoader.apply(null, arguments);\n});\n\n/**\n * Gets a remote JSON-LD document using the default document loader or\n * one given in the passed options.\n *\n * @param url the URL to fetch.\n * @param [options] the options to use:\n *          [documentLoader] the document loader to use.\n * @param [callback(err, remoteDoc)] called once the operation completes.\n *\n * @return a Promise that resolves to the retrieved remote document.\n */\njsonld.get = util.callbackify(async function(url, options) {\n  let load;\n  if(typeof options.documentLoader === 'function') {\n    load = util.normalizeDocumentLoader(options.documentLoader);\n  } else {\n    load = jsonld.documentLoader;\n  }\n\n  const remoteDoc = await load(url);\n\n  // TODO: can this be moved into `normalizeDocumentLoader`?\n  try {\n    if(!remoteDoc.document) {\n      throw new JsonLdError(\n        'No remote document found at the given URL.',\n        'jsonld.NullRemoteDocument');\n    }\n    if(_isString(remoteDoc.document)) {\n      remoteDoc.document = JSON.parse(remoteDoc.document);\n    }\n  } catch(e) {\n    throw new JsonLdError(\n      'Could not retrieve a JSON-LD document from the URL.',\n      'jsonld.LoadDocumentError', {\n        code: 'loading document failed',\n        cause: e,\n        remoteDoc\n      });\n  }\n\n  return remoteDoc;\n});\n\n/**\n * Processes a local context, resolving any URLs as necessary, and returns a\n * new active context in its callback.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param [options] the options to use:\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param [callback(err, activeCtx)] called once the operation completes.\n *\n * @return a Promise that resolves to the new active context.\n */\njsonld.processContext = util.callbackify(async function(\n  activeCtx, localCtx, options) {\n  // set default options\n  options = _setDefaults(options, {\n    base: ''\n  });\n\n  // return initial context early for null context\n  if(localCtx === null) {\n    return _getInitialContext(options);\n  }\n\n  // get URLs in localCtx\n  localCtx = util.clone(localCtx);\n  if(!(_isObject(localCtx) && '@context' in localCtx)) {\n    localCtx = {'@context': localCtx};\n  }\n  const ctx = await _getAllContexts(localCtx, options);\n\n  return _processContext({activeCtx, localCtx: ctx, options});\n});\n\n// backwards compatibility\njsonld.getContextValue = __webpack_require__(/*! ./context */ \"./node_modules/jsonld/lib/context.js\").getContextValue;\n\n/**\n * Document loaders.\n */\njsonld.documentLoaders = {};\njsonld.documentLoaders.node = __webpack_require__(/*! ./documentLoaders/node */ \"./node_modules/jsonld/lib/documentLoaders/node.js\");\njsonld.documentLoaders.xhr = __webpack_require__(/*! ./documentLoaders/xhr */ \"./node_modules/jsonld/lib/documentLoaders/xhr.js\");\n\n/**\n * Assigns the default document loader for external document URLs to a built-in\n * default. Supported types currently include: 'xhr' and 'node'.\n *\n * @param type the type to set.\n * @param [params] the parameters required to use the document loader.\n */\njsonld.useDocumentLoader = function(type) {\n  if(!(type in jsonld.documentLoaders)) {\n    throw new JsonLdError(\n      'Unknown document loader type: \"' + type + '\"',\n      'jsonld.UnknownDocumentLoader',\n      {type});\n  }\n\n  // set document loader\n  jsonld.documentLoader = jsonld.documentLoaders[type].apply(\n    jsonld, Array.prototype.slice.call(arguments, 1));\n};\n\n/** Registered RDF dataset parsers hashed by content-type. */\nconst _rdfParsers = {};\n\n/**\n * Registers an RDF dataset parser by content-type, for use with\n * jsonld.fromRDF. An RDF dataset parser will always be given two parameters,\n * a string of input and a callback. An RDF dataset parser can be synchronous\n * or asynchronous.\n *\n * If the parser function returns undefined or null then it will be assumed to\n * be asynchronous w/a continuation-passing style and the callback parameter\n * given to the parser MUST be invoked.\n *\n * If it returns a Promise, then it will be assumed to be asynchronous, but the\n * callback parameter MUST NOT be invoked. It should instead be ignored.\n *\n * If it returns an RDF dataset, it will be assumed to be synchronous and the\n * callback parameter MUST NOT be invoked. It should instead be ignored.\n *\n * @param contentType the content-type for the parser.\n * @param parser(input, callback(err, dataset)) the parser function (takes a\n *          string as a parameter and either returns null/undefined and uses\n *          the given callback, returns a Promise, or returns an RDF dataset).\n */\njsonld.registerRDFParser = function(contentType, parser) {\n  _rdfParsers[contentType] = parser;\n};\n\n/**\n * Unregisters an RDF dataset parser by content-type.\n *\n * @param contentType the content-type for the parser.\n */\njsonld.unregisterRDFParser = function(contentType) {\n  delete _rdfParsers[contentType];\n};\n\n// register the N-Quads RDF parser\njsonld.registerRDFParser('application/n-quads', NQuads.parse);\njsonld.registerRDFParser('application/nquads', NQuads.parse);\n\n// register the RDFa API RDF parser\njsonld.registerRDFParser('rdfa-api', Rdfa.parse);\n\n/* URL API */\njsonld.url = __webpack_require__(/*! ./url */ \"./node_modules/jsonld/lib/url.js\");\n\n/* Utility API */\njsonld.util = util;\n// backwards compatibility\nObject.assign(jsonld, util);\n\n// reexpose API as jsonld.promises for backwards compatability\njsonld.promises = jsonld;\n\n// backwards compatibility\njsonld.RequestQueue = __webpack_require__(/*! ./RequestQueue */ \"./node_modules/jsonld/lib/RequestQueue.js\");\n\n/* WebIDL API */\njsonld.JsonLdProcessor = __webpack_require__(/*! ./JsonLdProcessor */ \"./node_modules/jsonld/lib/JsonLdProcessor.js\")(jsonld);\n\n// setup browser global JsonLdProcessor\nif(_browser && typeof global.JsonLdProcessor === 'undefined') {\n  Object.defineProperty(global, 'JsonLdProcessor', {\n    writable: true,\n    enumerable: false,\n    configurable: true,\n    value: jsonld.JsonLdProcessor\n  });\n}\n\n// set platform-specific defaults/APIs\nif(_nodejs) {\n  // use node document loader by default\n  jsonld.useDocumentLoader('node');\n} else if(typeof XMLHttpRequest !== 'undefined') {\n  // use xhr document loader by default\n  jsonld.useDocumentLoader('xhr');\n}\n\nfunction _setDefaults(options, {\n  documentLoader = jsonld.documentLoader,\n  ...defaults\n}) {\n  return Object.assign({}, {documentLoader}, defaults, options);\n}\n\n// end of jsonld API `wrapper` factory\nreturn jsonld;\n};\n\n// external APIs:\n\n// used to generate a new jsonld API instance\nconst factory = function() {\n  return wrapper(function() {\n    return factory();\n  });\n};\n\n// wrap the main jsonld API instance\nwrapper(factory);\n// export API\nmodule.exports = factory;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/jsonld.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/nodeMap.js":
/*!********************************************!*\
  !*** ./node_modules/jsonld/lib/nodeMap.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst {isKeyword} = __webpack_require__(/*! ./context */ \"./node_modules/jsonld/lib/context.js\");\nconst graphTypes = __webpack_require__(/*! ./graphTypes */ \"./node_modules/jsonld/lib/graphTypes.js\");\nconst types = __webpack_require__(/*! ./types */ \"./node_modules/jsonld/lib/types.js\");\nconst util = __webpack_require__(/*! ./util */ \"./node_modules/jsonld/lib/util.js\");\nconst JsonLdError = __webpack_require__(/*! ./JsonLdError */ \"./node_modules/jsonld/lib/JsonLdError.js\");\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Creates a merged JSON-LD node map (node ID => node).\n *\n * @param input the expanded JSON-LD to create a node map of.\n * @param [options] the options to use:\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *\n * @return the node map.\n */\napi.createMergedNodeMap = (input, options) => {\n  options = options || {};\n\n  // produce a map of all subjects and name each bnode\n  const issuer = options.issuer || new util.IdentifierIssuer('_:b');\n  const graphs = {'@default': {}};\n  api.createNodeMap(input, graphs, '@default', issuer);\n\n  // add all non-default graphs to default graph\n  return api.mergeNodeMaps(graphs);\n};\n\n/**\n * Recursively flattens the subjects in the given JSON-LD expanded input\n * into a node map.\n *\n * @param input the JSON-LD expanded input.\n * @param graphs a map of graph name to subject map.\n * @param graph the name of the current graph.\n * @param issuer the blank node identifier issuer.\n * @param name the name assigned to the current input if it is a bnode.\n * @param list the list to append to, null for none.\n */\napi.createNodeMap = (input, graphs, graph, issuer, name, list) => {\n  // recurse through array\n  if(types.isArray(input)) {\n    for(let i = 0; i < input.length; ++i) {\n      api.createNodeMap(input[i], graphs, graph, issuer, undefined, list);\n    }\n    return;\n  }\n\n  // add non-object to list\n  if(!types.isObject(input)) {\n    if(list) {\n      list.push(input);\n    }\n    return;\n  }\n\n  // add values to list\n  if(graphTypes.isValue(input)) {\n    if('@type' in input) {\n      let type = input['@type'];\n      // rename @type blank node\n      if(type.indexOf('_:') === 0) {\n        input['@type'] = type = issuer.getId(type);\n      }\n    }\n    if(list) {\n      list.push(input);\n    }\n    return;\n  }\n\n  // Note: At this point, input must be a subject.\n\n  // spec requires @type to be named first, so assign names early\n  if('@type' in input) {\n    const types = input['@type'];\n    for(let i = 0; i < types.length; ++i) {\n      const type = types[i];\n      if(type.indexOf('_:') === 0) {\n        issuer.getId(type);\n      }\n    }\n  }\n\n  // get name for subject\n  if(types.isUndefined(name)) {\n    name = graphTypes.isBlankNode(input) ?\n      issuer.getId(input['@id']) : input['@id'];\n  }\n\n  // add subject reference to list\n  if(list) {\n    list.push({'@id': name});\n  }\n\n  // create new subject or merge into existing one\n  const subjects = graphs[graph];\n  const subject = subjects[name] = subjects[name] || {};\n  subject['@id'] = name;\n  const properties = Object.keys(input).sort();\n  for(let pi = 0; pi < properties.length; ++pi) {\n    let property = properties[pi];\n\n    // skip @id\n    if(property === '@id') {\n      continue;\n    }\n\n    // handle reverse properties\n    if(property === '@reverse') {\n      const referencedNode = {'@id': name};\n      const reverseMap = input['@reverse'];\n      for(const reverseProperty in reverseMap) {\n        const items = reverseMap[reverseProperty];\n        for(let ii = 0; ii < items.length; ++ii) {\n          const item = items[ii];\n          let itemName = item['@id'];\n          if(graphTypes.isBlankNode(item)) {\n            itemName = issuer.getId(itemName);\n          }\n          api.createNodeMap(item, graphs, graph, issuer, itemName);\n          util.addValue(\n            subjects[itemName], reverseProperty, referencedNode,\n            {propertyIsArray: true, allowDuplicate: false});\n        }\n      }\n      continue;\n    }\n\n    // recurse into graph\n    if(property === '@graph') {\n      // add graph subjects map entry\n      if(!(name in graphs)) {\n        graphs[name] = {};\n      }\n      api.createNodeMap(input[property], graphs, name, issuer);\n      continue;\n    }\n\n    // copy non-@type keywords\n    if(property !== '@type' && isKeyword(property)) {\n      if(property === '@index' && property in subject &&\n        (input[property] !== subject[property] ||\n        input[property]['@id'] !== subject[property]['@id'])) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; conflicting @index property detected.',\n          'jsonld.SyntaxError',\n          {code: 'conflicting indexes', subject});\n      }\n      subject[property] = input[property];\n      continue;\n    }\n\n    // iterate over objects\n    const objects = input[property];\n\n    // if property is a bnode, assign it a new id\n    if(property.indexOf('_:') === 0) {\n      property = issuer.getId(property);\n    }\n\n    // ensure property is added for empty arrays\n    if(objects.length === 0) {\n      util.addValue(subject, property, [], {propertyIsArray: true});\n      continue;\n    }\n    for(let oi = 0; oi < objects.length; ++oi) {\n      let o = objects[oi];\n\n      if(property === '@type') {\n        // rename @type blank nodes\n        o = (o.indexOf('_:') === 0) ? issuer.getId(o) : o;\n      }\n\n      // handle embedded subject or subject reference\n      if(graphTypes.isSubject(o) || graphTypes.isSubjectReference(o)) {\n        // relabel blank node @id\n        const id = graphTypes.isBlankNode(o) ?\n          issuer.getId(o['@id']) : o['@id'];\n\n        // add reference and recurse\n        util.addValue(\n          subject, property, {'@id': id},\n          {propertyIsArray: true, allowDuplicate: false});\n        api.createNodeMap(o, graphs, graph, issuer, id);\n      } else if(graphTypes.isList(o)) {\n        // handle @list\n        const _list = [];\n        api.createNodeMap(o['@list'], graphs, graph, issuer, name, _list);\n        o = {'@list': _list};\n        util.addValue(\n          subject, property, o,\n          {propertyIsArray: true, allowDuplicate: false});\n      } else {\n        // handle @value\n        api.createNodeMap(o, graphs, graph, issuer, name);\n        util.addValue(\n          subject, property, o, {propertyIsArray: true, allowDuplicate: false});\n      }\n    }\n  }\n};\n\n/**\n * Merge separate named graphs into a single merged graph including\n * all nodes from the default graph and named graphs.\n *\n * @param graphs a map of graph name to subject map.\n *\n * @return the merged graph map.\n */\napi.mergeNodeMapGraphs = graphs => {\n  const merged = {};\n  for(const name of Object.keys(graphs).sort()) {\n    for(const id of Object.keys(graphs[name]).sort()) {\n      const node = graphs[name][id];\n      if(!(id in merged)) {\n        merged[id] = {'@id': id};\n      }\n      const mergedNode = merged[id];\n\n      for(const property of Object.keys(node).sort()) {\n        if(isKeyword(property)) {\n          // copy keywords\n          mergedNode[property] = util.clone(node[property]);\n        } else {\n          // merge objects\n          for(const value of node[property]) {\n            util.addValue(\n              mergedNode, property, util.clone(value),\n              {propertyIsArray: true, allowDuplicate: false});\n          }\n        }\n      }\n    }\n  }\n\n  return merged;\n};\n\napi.mergeNodeMaps = graphs => {\n  // add all non-default graphs to default graph\n  const defaultGraph = graphs['@default'];\n  const graphNames = Object.keys(graphs).sort();\n  for(let i = 0; i < graphNames.length; ++i) {\n    const graphName = graphNames[i];\n    if(graphName === '@default') {\n      continue;\n    }\n    const nodeMap = graphs[graphName];\n    let subject = defaultGraph[graphName];\n    if(!subject) {\n      defaultGraph[graphName] = subject = {\n        '@id': graphName,\n        '@graph': []\n      };\n    } else if(!('@graph' in subject)) {\n      subject['@graph'] = [];\n    }\n    const graph = subject['@graph'];\n    const ids = Object.keys(nodeMap).sort();\n    for(let ii = 0; ii < ids.length; ++ii) {\n      const node = nodeMap[ids[ii]];\n      // only add full subjects\n      if(!graphTypes.isSubjectReference(node)) {\n        graph.push(node);\n      }\n    }\n  }\n  return defaultGraph;\n};\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/nodeMap.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/toRdf.js":
/*!******************************************!*\
  !*** ./node_modules/jsonld/lib/toRdf.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst {createNodeMap} = __webpack_require__(/*! ./nodeMap */ \"./node_modules/jsonld/lib/nodeMap.js\");\nconst {isKeyword} = __webpack_require__(/*! ./context */ \"./node_modules/jsonld/lib/context.js\");\nconst graphTypes = __webpack_require__(/*! ./graphTypes */ \"./node_modules/jsonld/lib/graphTypes.js\");\nconst types = __webpack_require__(/*! ./types */ \"./node_modules/jsonld/lib/types.js\");\nconst util = __webpack_require__(/*! ./util */ \"./node_modules/jsonld/lib/util.js\");\n\nconst {\n  // RDF,\n  // RDF_LIST,\n  RDF_FIRST,\n  RDF_REST,\n  RDF_NIL,\n  RDF_TYPE,\n  // RDF_PLAIN_LITERAL,\n  // RDF_XML_LITERAL,\n  // RDF_OBJECT,\n  RDF_LANGSTRING,\n\n  // XSD,\n  XSD_BOOLEAN,\n  XSD_DOUBLE,\n  XSD_INTEGER,\n  XSD_STRING,\n} = __webpack_require__(/*! ./constants */ \"./node_modules/jsonld/lib/constants.js\");\n\nconst {\n  isAbsolute: _isAbsoluteIri\n} = __webpack_require__(/*! ./url */ \"./node_modules/jsonld/lib/url.js\");\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Outputs an RDF dataset for the expanded JSON-LD input.\n *\n * @param input the expanded JSON-LD input.\n * @param options the RDF serialization options.\n *\n * @return the RDF dataset.\n */\napi.toRDF = (input, options) => {\n  // create node map for default graph (and any named graphs)\n  const issuer = new util.IdentifierIssuer('_:b');\n  const nodeMap = {'@default': {}};\n  createNodeMap(input, nodeMap, '@default', issuer);\n\n  const dataset = [];\n  const graphNames = Object.keys(nodeMap).sort();\n  for(const graphName of graphNames) {\n    let graphTerm;\n    if(graphName === '@default') {\n      graphTerm = {termType: 'DefaultGraph', value: ''};\n    } else if(_isAbsoluteIri(graphName)) {\n      if(graphName.startsWith('_:')) {\n        graphTerm = {termType: 'BlankNode'};\n      } else {\n        graphTerm = {termType: 'NamedNode'};\n      }\n      graphTerm.value = graphName;\n    } else {\n      // skip relative IRIs (not valid RDF)\n      continue;\n    }\n    _graphToRDF(dataset, nodeMap[graphName], graphTerm, issuer, options);\n  }\n\n  return dataset;\n};\n\n/**\n * Adds RDF quads for a particular graph to the given dataset.\n *\n * @param dataset the dataset to append RDF quads to.\n * @param graph the graph to create RDF quads for.\n * @param graphTerm the graph term for each quad.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param options the RDF serialization options.\n *\n * @return the array of RDF triples for the given graph.\n */\nfunction _graphToRDF(dataset, graph, graphTerm, issuer, options) {\n  const ids = Object.keys(graph).sort();\n  for(let i = 0; i < ids.length; ++i) {\n    const id = ids[i];\n    const node = graph[id];\n    const properties = Object.keys(node).sort();\n    for(let property of properties) {\n      const items = node[property];\n      if(property === '@type') {\n        property = RDF_TYPE;\n      } else if(isKeyword(property)) {\n        continue;\n      }\n\n      for(const item of items) {\n        // RDF subject\n        const subject = {\n          termType: id.startsWith('_:') ? 'BlankNode' : 'NamedNode',\n          value: id\n        };\n\n        // skip relative IRI subjects (not valid RDF)\n        if(!_isAbsoluteIri(id)) {\n          continue;\n        }\n\n        // RDF predicate\n        const predicate = {\n          termType: property.startsWith('_:') ? 'BlankNode' : 'NamedNode',\n          value: property\n        };\n\n        // skip relative IRI predicates (not valid RDF)\n        if(!_isAbsoluteIri(property)) {\n          continue;\n        }\n\n        // skip blank node predicates unless producing generalized RDF\n        if(predicate.termType === 'BlankNode' &&\n          !options.produceGeneralizedRdf) {\n          continue;\n        }\n\n        // convert @list to triples\n        if(graphTypes.isList(item)) {\n          _listToRDF(\n            item['@list'], issuer, subject, predicate, dataset, graphTerm);\n        } else {\n          // convert value or node object to triple\n          const object = _objectToRDF(item);\n          // skip null objects (they are relative IRIs)\n          if(object) {\n            dataset.push({\n              subject,\n              predicate,\n              object,\n              graph: graphTerm\n            });\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Converts a @list value into linked list of blank node RDF quads\n * (an RDF collection).\n *\n * @param list the @list value.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param subject the subject for the head of the list.\n * @param predicate the predicate for the head of the list.\n * @param dataset the array of quads to append to.\n * @param graphTerm the graph term for each quad.\n */\nfunction _listToRDF(list, issuer, subject, predicate, dataset, graphTerm) {\n  const first = {termType: 'NamedNode', value: RDF_FIRST};\n  const rest = {termType: 'NamedNode', value: RDF_REST};\n  const nil = {termType: 'NamedNode', value: RDF_NIL};\n\n  for(const item of list) {\n    const blankNode = {termType: 'BlankNode', value: issuer.getId()};\n    dataset.push({\n      subject,\n      predicate,\n      object: blankNode,\n      graph: graphTerm\n    });\n\n    subject = blankNode;\n    predicate = first;\n    const object = _objectToRDF(item);\n\n    // skip null objects (they are relative IRIs)\n    if(object) {\n      dataset.push({\n        subject,\n        predicate,\n        object,\n        graph: graphTerm\n      });\n    }\n\n    predicate = rest;\n  }\n\n  dataset.push({\n    subject,\n    predicate,\n    object: nil,\n    graph: graphTerm\n  });\n}\n\n/**\n * Converts a JSON-LD value object to an RDF literal or a JSON-LD string or\n * node object to an RDF resource.\n *\n * @param item the JSON-LD value or node object.\n *\n * @return the RDF literal or RDF resource.\n */\nfunction _objectToRDF(item) {\n  const object = {};\n\n  // convert value object to RDF\n  if(graphTypes.isValue(item)) {\n    object.termType = 'Literal';\n    object.value = undefined;\n    object.datatype = {\n      termType: 'NamedNode'\n    };\n    let value = item['@value'];\n    const datatype = item['@type'] || null;\n\n    // convert to XSD datatypes as appropriate\n    if(types.isBoolean(value)) {\n      object.value = value.toString();\n      object.datatype.value = datatype || XSD_BOOLEAN;\n    } else if(types.isDouble(value) || datatype === XSD_DOUBLE) {\n      if(!types.isDouble(value)) {\n        value = parseFloat(value);\n      }\n      // canonical double representation\n      object.value = value.toExponential(15).replace(/(\\d)0*e\\+?/, '$1E');\n      object.datatype.value = datatype || XSD_DOUBLE;\n    } else if(types.isNumber(value)) {\n      object.value = value.toFixed(0);\n      object.datatype.value = datatype || XSD_INTEGER;\n    } else if('@language' in item) {\n      object.value = value;\n      object.datatype.value = datatype || RDF_LANGSTRING;\n      object.language = item['@language'];\n    } else {\n      object.value = value;\n      object.datatype.value = datatype || XSD_STRING;\n    }\n  } else {\n    // convert string/node object to RDF\n    const id = types.isObject(item) ? item['@id'] : item;\n    object.termType = id.startsWith('_:') ? 'BlankNode' : 'NamedNode';\n    object.value = id;\n  }\n\n  // skip relative IRIs, not valid RDF\n  if(object.termType === 'NamedNode' && !_isAbsoluteIri(object.value)) {\n    return null;\n  }\n\n  return object;\n}\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/toRdf.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/types.js":
/*!******************************************!*\
  !*** ./node_modules/jsonld/lib/types.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Returns true if the given value is an Array.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Array, false if not.\n */\napi.isArray = Array.isArray;\n\n/**\n * Returns true if the given value is a Boolean.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Boolean, false if not.\n */\napi.isBoolean = v => (typeof v === 'boolean' ||\n  Object.prototype.toString.call(v) === '[object Boolean]');\n\n/**\n * Returns true if the given value is a double.\n *\n * @param v the value to check.\n *\n * @return true if the value is a double, false if not.\n */\napi.isDouble = v => api.isNumber(v) && String(v).indexOf('.') !== -1;\n\n/**\n * Returns true if the given value is an empty Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an empty Object, false if not.\n */\napi.isEmptyObject = v => api.isObject(v) && Object.keys(v).length === 0;\n\n/**\n * Returns true if the given value is a Number.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Number, false if not.\n */\napi.isNumber = v => (typeof v === 'number' ||\n  Object.prototype.toString.call(v) === '[object Number]');\n\n/**\n * Returns true if the given value is numeric.\n *\n * @param v the value to check.\n *\n * @return true if the value is numeric, false if not.\n */\napi.isNumeric = v => !isNaN(parseFloat(v)) && isFinite(v);\n\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\napi.isObject = v => Object.prototype.toString.call(v) === '[object Object]';\n\n/**\n * Returns true if the given value is a String.\n *\n * @param v the value to check.\n *\n * @return true if the value is a String, false if not.\n */\napi.isString = v => (typeof v === 'string' ||\n  Object.prototype.toString.call(v) === '[object String]');\n\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\napi.isUndefined = v => typeof v === 'undefined';\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/types.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/url.js":
/*!****************************************!*\
  !*** ./node_modules/jsonld/lib/url.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst types = __webpack_require__(/*! ./types */ \"./node_modules/jsonld/lib/types.js\");\n\nconst api = {};\nmodule.exports = api;\n\n// define URL parser\n// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\n// with local jsonld.js modifications\napi.parsers = {\n  simple: {\n    // RFC 3986 basic parts\n    keys: [\n      'href', 'scheme', 'authority', 'path', 'query', 'fragment'\n    ],\n    regex: /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/\n  },\n  full: {\n    keys: [\n      'href', 'protocol', 'scheme', 'authority', 'auth', 'user', 'password',\n      'hostname', 'port', 'path', 'directory', 'file', 'query', 'fragment'\n    ],\n    regex: /^(([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?(?:(((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\napi.parse = (str, parser) => {\n  const parsed = {};\n  const o = api.parsers[parser || 'full'];\n  const m = o.regex.exec(str);\n  let i = o.keys.length;\n  while(i--) {\n    parsed[o.keys[i]] = (m[i] === undefined) ? null : m[i];\n  }\n\n  // remove default ports in found in URLs\n  if((parsed.scheme === 'https' && parsed.port === '443') ||\n    (parsed.scheme === 'http' && parsed.port === '80')) {\n    parsed.href = parsed.href.replace(':' + parsed.port, '');\n    parsed.authority = parsed.authority.replace(':' + parsed.port, '');\n    parsed.port = null;\n  }\n\n  parsed.normalizedPath = api.removeDotSegments(parsed.path);\n  return parsed;\n};\n\n/**\n * Prepends a base IRI to the given relative IRI.\n *\n * @param base the base IRI.\n * @param iri the relative IRI.\n *\n * @return the absolute IRI.\n */\napi.prependBase = (base, iri) => {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n  // already an absolute IRI\n  if(iri.indexOf(':') !== -1) {\n    return iri;\n  }\n\n  // parse base if it is a string\n  if(types.isString(base)) {\n    base = api.parse(base || '');\n  }\n\n  // parse given IRI\n  const rel = api.parse(iri);\n\n  // per RFC3986 5.2.2\n  const transform = {\n    protocol: base.protocol || ''\n  };\n\n  if(rel.authority !== null) {\n    transform.authority = rel.authority;\n    transform.path = rel.path;\n    transform.query = rel.query;\n  } else {\n    transform.authority = base.authority;\n\n    if(rel.path === '') {\n      transform.path = base.path;\n      if(rel.query !== null) {\n        transform.query = rel.query;\n      } else {\n        transform.query = base.query;\n      }\n    } else {\n      if(rel.path.indexOf('/') === 0) {\n        // IRI represents an absolute path\n        transform.path = rel.path;\n      } else {\n        // merge paths\n        let path = base.path;\n\n        // append relative path to the end of the last directory from base\n        path = path.substr(0, path.lastIndexOf('/') + 1);\n        if(path.length > 0 && path.substr(-1) !== '/') {\n          path += '/';\n        }\n        path += rel.path;\n\n        transform.path = path;\n      }\n      transform.query = rel.query;\n    }\n  }\n\n  if(rel.path !== '') {\n    // remove slashes and dots in path\n    transform.path = api.removeDotSegments(transform.path);\n  }\n\n  // construct URL\n  let rval = transform.protocol;\n  if(transform.authority !== null) {\n    rval += '//' + transform.authority;\n  }\n  rval += transform.path;\n  if(transform.query !== null) {\n    rval += '?' + transform.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n};\n\n/**\n * Removes a base IRI from the given absolute IRI.\n *\n * @param base the base IRI.\n * @param iri the absolute IRI.\n *\n * @return the relative IRI if relative to base, otherwise the absolute IRI.\n */\napi.removeBase = (base, iri) => {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n\n  if(types.isString(base)) {\n    base = api.parse(base || '');\n  }\n\n  // establish base root\n  let root = '';\n  if(base.href !== '') {\n    root += (base.protocol || '') + '//' + (base.authority || '');\n  } else if(iri.indexOf('//')) {\n    // support network-path reference with empty base\n    root += '//';\n  }\n\n  // IRI not relative to base\n  if(iri.indexOf(root) !== 0) {\n    return iri;\n  }\n\n  // remove root from IRI and parse remainder\n  const rel = api.parse(iri.substr(root.length));\n\n  // remove path segments that match (do not remove last segment unless there\n  // is a hash or query)\n  const baseSegments = base.normalizedPath.split('/');\n  const iriSegments = rel.normalizedPath.split('/');\n  const last = (rel.fragment || rel.query) ? 0 : 1;\n  while(baseSegments.length > 0 && iriSegments.length > last) {\n    if(baseSegments[0] !== iriSegments[0]) {\n      break;\n    }\n    baseSegments.shift();\n    iriSegments.shift();\n  }\n\n  // use '../' for each non-matching base segment\n  let rval = '';\n  if(baseSegments.length > 0) {\n    // don't count the last segment (if it ends with '/' last path doesn't\n    // count and if it doesn't end with '/' it isn't a path)\n    baseSegments.pop();\n    for(let i = 0; i < baseSegments.length; ++i) {\n      rval += '../';\n    }\n  }\n\n  // prepend remaining segments\n  rval += iriSegments.join('/');\n\n  // add query and hash\n  if(rel.query !== null) {\n    rval += '?' + rel.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n};\n\n/**\n * Removes dot segments from a URL path.\n *\n * @param path the path to remove dot segments from.\n */\napi.removeDotSegments = path => {\n  // RFC 3986 5.2.4 (reworked)\n\n  // empty path shortcut\n  if(path.length === 0) {\n    return '';\n  }\n\n  const input = path.split('/');\n  const output = [];\n\n  while(input.length > 0) {\n    const next = input.shift();\n    const done = input.length === 0;\n\n    if(next === '.') {\n      if(done) {\n        // ensure output has trailing /\n        output.push('');\n      }\n      continue;\n    }\n\n    if(next === '..') {\n      output.pop();\n      if(done) {\n        // ensure output has trailing /\n        output.push('');\n      }\n      continue;\n    }\n\n    output.push(next);\n  }\n\n  // ensure output has leading /\n  if(output.length > 0 && output[0] !== '') {\n    output.unshift('');\n  }\n  if(output.length === 1 && output[0] === '') {\n    return '/';\n  }\n\n  return output.join('/');\n};\n\n// TODO: time better isAbsolute/isRelative checks using full regexes:\n// http://jmrware.com/articles/2009/uri_regexp/URI_regex.html\n\n// regex to check for absolute IRI (starting scheme and ':') or blank node IRI\nconst isAbsoluteRegex = /^([A-Za-z][A-Za-z0-9+-.]*|_):/;\n\n/**\n * Returns true if the given value is an absolute IRI or blank node IRI, false\n * if not.\n * Note: This weak check only checks for a correct starting scheme.\n *\n * @param v the value to check.\n *\n * @return true if the value is an absolute IRI, false if not.\n */\napi.isAbsolute = v => types.isString(v) && isAbsoluteRegex.test(v);\n\n/**\n * Returns true if the given value is a relative IRI, false if not.\n * Note: this is a weak check.\n *\n * @param v the value to check.\n *\n * @return true if the value is a relative IRI, false if not.\n */\napi.isRelative = v => types.isString(v);\n\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/url.js?");

/***/ }),

/***/ "./node_modules/jsonld/lib/util.js":
/*!*****************************************!*\
  !*** ./node_modules/jsonld/lib/util.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(setImmediate, process) {/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst graphTypes = __webpack_require__(/*! ./graphTypes */ \"./node_modules/jsonld/lib/graphTypes.js\");\nconst types = __webpack_require__(/*! ./types */ \"./node_modules/jsonld/lib/types.js\");\n// TODO: move `IdentifierIssuer` to its own package\nconst IdentifierIssuer = __webpack_require__(/*! rdf-canonize */ \"./node_modules/rdf-canonize/lib/index.js\").IdentifierIssuer;\nconst JsonLdError = __webpack_require__(/*! ./JsonLdError */ \"./node_modules/jsonld/lib/JsonLdError.js\");\n\n// constants\nconst REGEX_LINK_HEADERS = /(?:<[^>]*?>|\"[^\"]*?\"|[^,])+/g;\nconst REGEX_LINK_HEADER = /\\s*<([^>]*?)>\\s*(?:;\\s*(.*))?/;\nconst REGEX_LINK_HEADER_PARAMS =\n  /(.*?)=(?:(?:\"([^\"]*?)\")|([^\"]*?))\\s*(?:(?:;\\s*)|$)/g;\n\nconst DEFAULTS = {\n  headers: {\n    accept: 'application/ld+json, application/json'\n  }\n};\n\nconst api = {};\nmodule.exports = api;\napi.IdentifierIssuer = IdentifierIssuer;\n\n// define setImmediate and nextTick\n// // nextTick implementation with browser-compatible fallback // //\n// from https://github.com/caolan/async/blob/master/lib/async.js\n\n// capture the global reference to guard against fakeTimer mocks\nconst _setImmediate = typeof setImmediate === 'function' && setImmediate;\n\nconst _delay = _setImmediate ?\n  // not a direct alias (for IE10 compatibility)\n  fn => _setImmediate(fn) :\n  fn => setTimeout(fn, 0);\n\nif(typeof process === 'object' && typeof process.nextTick === 'function') {\n  api.nextTick = process.nextTick;\n} else {\n  api.nextTick = _delay;\n}\napi.setImmediate = _setImmediate ? _delay : api.nextTick;\n\n/**\n * Clones an object, array, or string/number. If a typed JavaScript object\n * is given, such as a Date, it will be converted to a string.\n *\n * @param value the value to clone.\n *\n * @return the cloned value.\n */\napi.clone = function(value) {\n  if(value && typeof value === 'object') {\n    let rval;\n    if(types.isArray(value)) {\n      rval = [];\n      for(let i = 0; i < value.length; ++i) {\n        rval[i] = api.clone(value[i]);\n      }\n    } else if(types.isObject(value)) {\n      rval = {};\n      for(const key in value) {\n        rval[key] = api.clone(value[key]);\n      }\n    } else {\n      rval = value.toString();\n    }\n    return rval;\n  }\n  return value;\n};\n\n/**\n * Ensure a value is an array. If the value is an array, it is returned.\n * Otherwise, it is wrapped in an array.\n *\n * @param value the value to return as an array.\n *\n * @return the value as an array.\n */\napi.asArray = function(value) {\n  return Array.isArray(value) ? value : [value];\n};\n\n/**\n * Builds an HTTP headers object for making a JSON-LD request from custom\n * headers and asserts the `accept` header isn't overridden.\n *\n * @param headers an object of headers with keys as header names and values\n *          as header values.\n *\n * @return an object of headers with a valid `accept` header.\n */\napi.buildHeaders = (headers = {}) => {\n  const hasAccept = Object.keys(headers).some(\n    h => h.toLowerCase() === 'accept');\n\n  if(hasAccept) {\n    throw new RangeError(\n      'Accept header may not be specified; only \"' +\n      DEFAULTS.headers.accept + '\" is supported.');\n  }\n\n  return Object.assign({Accept: DEFAULTS.headers.accept}, headers);\n};\n\n/**\n * Parses a link header. The results will be key'd by the value of \"rel\".\n *\n * Link: <http://json-ld.org/contexts/person.jsonld>;\n * rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"\n *\n * Parses as: {\n *   'http://www.w3.org/ns/json-ld#context': {\n *     target: http://json-ld.org/contexts/person.jsonld,\n *     type: 'application/ld+json'\n *   }\n * }\n *\n * If there is more than one \"rel\" with the same IRI, then entries in the\n * resulting map for that \"rel\" will be arrays.\n *\n * @param header the link header to parse.\n */\napi.parseLinkHeader = header => {\n  const rval = {};\n  // split on unbracketed/unquoted commas\n  const entries = header.match(REGEX_LINK_HEADERS);\n  for(let i = 0; i < entries.length; ++i) {\n    let match = entries[i].match(REGEX_LINK_HEADER);\n    if(!match) {\n      continue;\n    }\n    const result = {target: match[1]};\n    const params = match[2];\n    while((match = REGEX_LINK_HEADER_PARAMS.exec(params))) {\n      result[match[1]] = (match[2] === undefined) ? match[3] : match[2];\n    }\n    const rel = result['rel'] || '';\n    if(Array.isArray(rval[rel])) {\n      rval[rel].push(result);\n    } else if(rel in rval) {\n      rval[rel] = [rval[rel], result];\n    } else {\n      rval[rel] = result;\n    }\n  }\n  return rval;\n};\n\n/**\n * Throws an exception if the given value is not a valid @type value.\n *\n * @param v the value to check.\n */\napi.validateTypeValue = v => {\n  // can be a string or an empty object\n  if(types.isString(v) || types.isEmptyObject(v)) {\n    return;\n  }\n\n  // must be an array\n  let isValid = false;\n  if(types.isArray(v)) {\n    // must contain only strings\n    isValid = true;\n    for(let i = 0; i < v.length; ++i) {\n      if(!(types.isString(v[i]))) {\n        isValid = false;\n        break;\n      }\n    }\n  }\n\n  if(!isValid) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; \"@type\" value must a string, an array of ' +\n      'strings, or an empty object.', 'jsonld.SyntaxError',\n      {code: 'invalid type value', value: v});\n  }\n};\n\n/**\n * Returns true if the given subject has the given property.\n *\n * @param subject the subject to check.\n * @param property the property to look for.\n *\n * @return true if the subject has the given property, false if not.\n */\napi.hasProperty = (subject, property) => {\n  if(property in subject) {\n    const value = subject[property];\n    return (!types.isArray(value) || value.length > 0);\n  }\n  return false;\n};\n\n/**\n * Determines if the given value is a property of the given subject.\n *\n * @param subject the subject to check.\n * @param property the property to check.\n * @param value the value to check.\n *\n * @return true if the value exists, false if not.\n */\napi.hasValue = (subject, property, value) => {\n  if(api.hasProperty(subject, property)) {\n    let val = subject[property];\n    const isList = graphTypes.isList(val);\n    if(types.isArray(val) || isList) {\n      if(isList) {\n        val = val['@list'];\n      }\n      for(let i = 0; i < val.length; ++i) {\n        if(api.compareValues(value, val[i])) {\n          return true;\n        }\n      }\n    } else if(!types.isArray(value)) {\n      // avoid matching the set of values with an array value parameter\n      return api.compareValues(value, val);\n    }\n  }\n  return false;\n};\n\n/**\n * Adds a value to a subject. If the value is an array, all values in the\n * array will be added.\n *\n * @param subject the subject to add the value to.\n * @param property the property that relates the value to the subject.\n * @param value the value to add.\n * @param [options] the options to use:\n *        [propertyIsArray] true if the property is always an array, false\n *          if not (default: false).\n *        [allowDuplicate] true to allow duplicates, false not to (uses a\n *          simple shallow comparison of subject ID or value) (default: true).\n */\napi.addValue = (subject, property, value, options) => {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n  if(!('allowDuplicate' in options)) {\n    options.allowDuplicate = true;\n  }\n\n  if(types.isArray(value)) {\n    if(value.length === 0 && options.propertyIsArray &&\n      !(property in subject)) {\n      subject[property] = [];\n    }\n    for(let i = 0; i < value.length; ++i) {\n      api.addValue(subject, property, value[i], options);\n    }\n  } else if(property in subject) {\n    // check if subject already has value if duplicates not allowed\n    const hasValue = (!options.allowDuplicate &&\n      api.hasValue(subject, property, value));\n\n    // make property an array if value not present or always an array\n    if(!types.isArray(subject[property]) &&\n      (!hasValue || options.propertyIsArray)) {\n      subject[property] = [subject[property]];\n    }\n\n    // add new value\n    if(!hasValue) {\n      subject[property].push(value);\n    }\n  } else {\n    // add new value as set or single value\n    subject[property] = options.propertyIsArray ? [value] : value;\n  }\n};\n\n/**\n * Gets all of the values for a subject's property as an array.\n *\n * @param subject the subject.\n * @param property the property.\n *\n * @return all of the values for a subject's property as an array.\n */\napi.getValues = (subject, property) => [].concat(subject[property] || []);\n\n/**\n * Removes a property from a subject.\n *\n * @param subject the subject.\n * @param property the property.\n */\napi.removeProperty = (subject, property) => {\n  delete subject[property];\n};\n\n/**\n * Removes a value from a subject.\n *\n * @param subject the subject.\n * @param property the property that relates the value to the subject.\n * @param value the value to remove.\n * @param [options] the options to use:\n *          [propertyIsArray] true if the property is always an array, false\n *            if not (default: false).\n */\napi.removeValue = (subject, property, value, options) => {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n\n  // filter out value\n  const values = api.getValues(subject, property).filter(\n    e => !api.compareValues(e, value));\n\n  if(values.length === 0) {\n    api.removeProperty(subject, property);\n  } else if(values.length === 1 && !options.propertyIsArray) {\n    subject[property] = values[0];\n  } else {\n    subject[property] = values;\n  }\n};\n\n/**\n * Relabels all blank nodes in the given JSON-LD input.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [issuer] an IdentifierIssuer to use to label blank nodes.\n */\napi.relabelBlankNodes = (input, options) => {\n  options = options || {};\n  const issuer = options.issuer || new IdentifierIssuer('_:b');\n  return _labelBlankNodes(issuer, input);\n};\n\n/**\n * Compares two JSON-LD values for equality. Two JSON-LD values will be\n * considered equal if:\n *\n * 1. They are both primitives of the same type and value.\n * 2. They are both @values with the same @value, @type, @language,\n *   and @index, OR\n * 3. They both have @ids they are the same.\n *\n * @param v1 the first value.\n * @param v2 the second value.\n *\n * @return true if v1 and v2 are considered equal, false if not.\n */\napi.compareValues = (v1, v2) => {\n  // 1. equal primitives\n  if(v1 === v2) {\n    return true;\n  }\n\n  // 2. equal @values\n  if(graphTypes.isValue(v1) && graphTypes.isValue(v2) &&\n    v1['@value'] === v2['@value'] &&\n    v1['@type'] === v2['@type'] &&\n    v1['@language'] === v2['@language'] &&\n    v1['@index'] === v2['@index']) {\n    return true;\n  }\n\n  // 3. equal @ids\n  if(types.isObject(v1) &&\n    ('@id' in v1) &&\n    types.isObject(v2) &&\n    ('@id' in v2)) {\n    return v1['@id'] === v2['@id'];\n  }\n\n  return false;\n};\n\n/**\n * Compares two strings first based on length and then lexicographically.\n *\n * @param a the first string.\n * @param b the second string.\n *\n * @return -1 if a < b, 1 if a > b, 0 if a === b.\n */\napi.compareShortestLeast = (a, b) => {\n  if(a.length < b.length) {\n    return -1;\n  }\n  if(b.length < a.length) {\n    return 1;\n  }\n  if(a === b) {\n    return 0;\n  }\n  return (a < b) ? -1 : 1;\n};\n\napi.normalizeDocumentLoader = fn => {\n  if(fn.length < 2) {\n    return api.callbackify(fn);\n  }\n\n  return async function(url) {\n    const callback = arguments[1];\n    return new Promise((resolve, reject) => {\n      try {\n        fn(url, (err, remoteDoc) => {\n          if(typeof callback === 'function') {\n            return _invokeCallback(callback, err, remoteDoc);\n          } else if(err) {\n            reject(err);\n          } else {\n            resolve(remoteDoc);\n          }\n        });\n      } catch(e) {\n        if(typeof callback === 'function') {\n          return _invokeCallback(callback, e);\n        }\n        reject(e);\n      }\n    });\n  };\n};\n\napi.callbackify = fn => {\n  return async function(...args) {\n    const callback = args[args.length - 1];\n    if(typeof callback === 'function') {\n      args.pop();\n    }\n\n    let result;\n    try {\n      result = await fn.apply(null, args);\n    } catch(e) {\n      if(typeof callback === 'function') {\n        return _invokeCallback(callback, e);\n      }\n      throw e;\n    }\n\n    if(typeof callback === 'function') {\n      return _invokeCallback(callback, null, result);\n    }\n\n    return result;\n  };\n};\n\nfunction _invokeCallback(callback, err, result) {\n  // execute on next tick to prevent \"unhandled rejected promise\"\n  // and simulate what would have happened in a promiseless API\n  api.nextTick(() => callback(err, result));\n}\n\n/**\n * Labels the blank nodes in the given value using the given IdentifierIssuer.\n *\n * @param issuer the IdentifierIssuer to use.\n * @param element the element with blank nodes to rename.\n *\n * @return the element.\n */\nfunction _labelBlankNodes(issuer, element) {\n  if(types.isArray(element)) {\n    for(let i = 0; i < element.length; ++i) {\n      element[i] = _labelBlankNodes(issuer, element[i]);\n    }\n  } else if(graphTypes.isList(element)) {\n    element['@list'] = _labelBlankNodes(issuer, element['@list']);\n  } else if(types.isObject(element)) {\n    // relabel blank node\n    if(graphTypes.isBlankNode(element)) {\n      element['@id'] = issuer.getId(element['@id']);\n    }\n\n    // recursively apply to all keys\n    const keys = Object.keys(element).sort();\n    for(let ki = 0; ki < keys.length; ++ki) {\n      const key = keys[ki];\n      if(key !== '@id') {\n        element[key] = _labelBlankNodes(issuer, element[key]);\n      }\n    }\n  }\n\n  return element;\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/jsonld/lib/util.js?");

/***/ }),

/***/ "./node_modules/node-forge/lib/baseN.js":
/*!**********************************************!*\
  !*** ./node_modules/node-forge/lib/baseN.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {/**\n * Base-N/Base-X encoding/decoding functions.\n *\n * Original implementation from base-x:\n * https://github.com/cryptocoinjs/base-x\n *\n * Which is MIT licensed:\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nvar api = {};\nmodule.exports = api;\n\n// baseN alphabet indexes\nvar _reverseAlphabets = {};\n\n/**\n * BaseN-encodes a Uint8Array using the given alphabet.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the baseN-encoded output string.\n */\napi.encode = function(input, alphabet, maxline) {\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n  if(maxline !== undefined && typeof maxline !== 'number') {\n    throw new TypeError('\"maxline\" must be a number.');\n  }\n\n  var output = '';\n\n  if(!(input instanceof Uint8Array)) {\n    // assume forge byte buffer\n    output = _encodeWithByteBuffer(input, alphabet);\n  } else {\n    var i = 0;\n    var base = alphabet.length;\n    var first = alphabet.charAt(0);\n    var digits = [0];\n    for(i = 0; i < input.length; ++i) {\n      for(var j = 0, carry = input[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8;\n        digits[j] = carry % base;\n        carry = (carry / base) | 0;\n      }\n\n      while(carry > 0) {\n        digits.push(carry % base);\n        carry = (carry / base) | 0;\n      }\n    }\n\n    // deal with leading zeros\n    for(i = 0; input[i] === 0 && i < input.length - 1; ++i) {\n      output += first;\n    }\n    // convert digits to a string\n    for(i = digits.length - 1; i >= 0; --i) {\n      output += alphabet[digits[i]];\n    }\n  }\n\n  if(maxline) {\n    var regex = new RegExp('.{1,' + maxline + '}', 'g');\n    output = output.match(regex).join('\\r\\n');\n  }\n\n  return output;\n};\n\n/**\n * Decodes a baseN-encoded (using the given alphabet) string to a\n * Uint8Array.\n *\n * @param input the baseN-encoded input string.\n *\n * @return the Uint8Array.\n */\napi.decode = function(input, alphabet) {\n  if(typeof input !== 'string') {\n    throw new TypeError('\"input\" must be a string.');\n  }\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n\n  var table = _reverseAlphabets[alphabet];\n  if(!table) {\n    // compute reverse alphabet\n    table = _reverseAlphabets[alphabet] = [];\n    for(var i = 0; i < alphabet.length; ++i) {\n      table[alphabet.charCodeAt(i)] = i;\n    }\n  }\n\n  // remove whitespace characters\n  input = input.replace(/\\s/g, '');\n\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var bytes = [0];\n  for(var i = 0; i < input.length; i++) {\n    var value = table[input.charCodeAt(i)];\n    if(value === undefined) {\n      return;\n    }\n\n    for(var j = 0, carry = value; j < bytes.length; ++j) {\n      carry += bytes[j] * base;\n      bytes[j] = carry & 0xff;\n      carry >>= 8;\n    }\n\n    while(carry > 0) {\n      bytes.push(carry & 0xff);\n      carry >>= 8;\n    }\n  }\n\n  // deal with leading zeros\n  for(var k = 0; input[k] === first && k < input.length - 1; ++k) {\n    bytes.push(0);\n  }\n\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(bytes.reverse());\n  }\n\n  return new Uint8Array(bytes.reverse());\n};\n\nfunction _encodeWithByteBuffer(input, alphabet) {\n  var i = 0;\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var digits = [0];\n  for(i = 0; i < input.length(); ++i) {\n    for(var j = 0, carry = input.at(i); j < digits.length; ++j) {\n      carry += digits[j] << 8;\n      digits[j] = carry % base;\n      carry = (carry / base) | 0;\n    }\n\n    while(carry > 0) {\n      digits.push(carry % base);\n      carry = (carry / base) | 0;\n    }\n  }\n\n  var output = '';\n\n  // deal with leading zeros\n  for(i = 0; input.at(i) === 0 && i < input.length() - 1; ++i) {\n    output += first;\n  }\n  // convert digits to a string\n  for(i = digits.length - 1; i >= 0; --i) {\n    output += alphabet[digits[i]];\n  }\n\n  return output;\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/node-forge/lib/baseN.js?");

/***/ }),

/***/ "./node_modules/node-forge/lib/forge.js":
/*!**********************************************!*\
  !*** ./node_modules/node-forge/lib/forge.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2016 Digital Bazaar, Inc.\n */\nmodule.exports = {\n  // default options\n  options: {\n    usePureJavaScript: false\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/node-forge/lib/forge.js?");

/***/ }),

/***/ "./node_modules/node-forge/lib/md.js":
/*!*******************************************!*\
  !*** ./node_modules/node-forge/lib/md.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Node.js module for Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2017 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"./node_modules/node-forge/lib/forge.js\");\n\nmodule.exports = forge.md = forge.md || {};\nforge.md.algorithms = forge.md.algorithms || {};\n\n\n//# sourceURL=webpack:///./node_modules/node-forge/lib/md.js?");

/***/ }),

/***/ "./node_modules/node-forge/lib/sha1.js":
/*!*********************************************!*\
  !*** ./node_modules/node-forge/lib/sha1.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Secure Hash Algorithm with 160-bit digest (SHA-1) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"./node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./md */ \"./node_modules/node-forge/lib/md.js\");\n__webpack_require__(/*! ./util */ \"./node_modules/node-forge/lib/util.js\");\n\nvar sha1 = module.exports = forge.sha1 = forge.sha1 || {};\nforge.md.sha1 = forge.md.algorithms.sha1 = sha1;\n\n/**\n * Creates a SHA-1 message digest object.\n *\n * @return a message digest object.\n */\nsha1.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-1 state contains five 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(80);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha1',\n    blockLength: 64,\n    digestLength: 20,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476,\n      h4: 0xC3D2E1F0\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-1 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-1 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-1 state with the given byte buffer.\n *\n * @param s the SHA-1 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, e, f, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 80 32-bit words according to SHA-1 algorithm\n    // and for 32-79 using Max Locktyukhin's optimization\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      t = bytes.getInt32();\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 20; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 40; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 3\n    for(; i < 60; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = (b & c) | (d & (b ^ c));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 4\n    for(; i < 80; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n\n    len -= 64;\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/node-forge/lib/sha1.js?");

/***/ }),

/***/ "./node_modules/node-forge/lib/sha256.js":
/*!***********************************************!*\
  !*** ./node_modules/node-forge/lib/sha256.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Secure Hash Algorithm with 256-bit digest (SHA-256) implementation.\n *\n * See FIPS 180-2 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"./node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! ./md */ \"./node_modules/node-forge/lib/md.js\");\n__webpack_require__(/*! ./util */ \"./node_modules/node-forge/lib/util.js\");\n\nvar sha256 = module.exports = forge.sha256 = forge.sha256 || {};\nforge.md.sha256 = forge.md.algorithms.sha256 = sha256;\n\n/**\n * Creates a SHA-256 message digest object.\n *\n * @return a message digest object.\n */\nsha256.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-256 state contains eight 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(64);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha256',\n    blockLength: 64,\n    digestLength: 32,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x6A09E667,\n      h1: 0xBB67AE85,\n      h2: 0x3C6EF372,\n      h3: 0xA54FF53A,\n      h4: 0x510E527F,\n      h5: 0x9B05688C,\n      h6: 0x1F83D9AB,\n      h7: 0x5BE0CD19\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-256 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4,\n      h5: _state.h5,\n      h6: _state.h6,\n      h7: _state.h7\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    rval.putInt32(s2.h5);\n    rval.putInt32(s2.h6);\n    rval.putInt32(s2.h7);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-256 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // create K table for SHA-256\n  _k = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-256 state with the given byte buffer.\n *\n * @param s the SHA-256 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 64 32-bit words according to SHA-256\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32();\n    }\n    for(; i < 64; ++i) {\n      // XOR word 2 words ago rot right 17, rot right 19, shft right 10\n      t1 = w[i - 2];\n      t1 =\n        ((t1 >>> 17) | (t1 << 15)) ^\n        ((t1 >>> 19) | (t1 << 13)) ^\n        (t1 >>> 10);\n      // XOR word 15 words ago rot right 7, rot right 18, shft right 3\n      t2 = w[i - 15];\n      t2 =\n        ((t2 >>> 7) | (t2 << 25)) ^\n        ((t2 >>> 18) | (t2 << 14)) ^\n        (t2 >>> 3);\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32\n      w[i] = (t1 + w[i - 7] + t2 + w[i - 16]) | 0;\n    }\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n    f = s.h5;\n    g = s.h6;\n    h = s.h7;\n\n    // round function\n    for(i = 0; i < 64; ++i) {\n      // Sum1(e)\n      s1 =\n        ((e >>> 6) | (e << 26)) ^\n        ((e >>> 11) | (e << 21)) ^\n        ((e >>> 25) | (e << 7));\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch = g ^ (e & (f ^ g));\n      // Sum0(a)\n      s0 =\n        ((a >>> 2) | (a << 30)) ^\n        ((a >>> 13) | (a << 19)) ^\n        ((a >>> 22) | (a << 10));\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj = (a & b) | (c & (a ^ b));\n\n      // main algorithm\n      t1 = h + s1 + ch + _k[i] + w[i];\n      t2 = s0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      e = (d + t1) >>> 0;\n      d = c;\n      c = b;\n      b = a;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      a = (t1 + t2) >>> 0;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n    s.h5 = (s.h5 + f) | 0;\n    s.h6 = (s.h6 + g) | 0;\n    s.h7 = (s.h7 + h) | 0;\n    len -= 64;\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/node-forge/lib/sha256.js?");

/***/ }),

/***/ "./node_modules/node-forge/lib/util.js":
/*!*********************************************!*\
  !*** ./node_modules/node-forge/lib/util.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process, setImmediate, global, Buffer) {/**\n * Utility functions for web applications.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2018 Digital Bazaar, Inc.\n */\nvar forge = __webpack_require__(/*! ./forge */ \"./node_modules/node-forge/lib/forge.js\");\nvar baseN = __webpack_require__(/*! ./baseN */ \"./node_modules/node-forge/lib/baseN.js\");\n\n/* Utilities API */\nvar util = module.exports = forge.util = forge.util || {};\n\n// define setImmediate and nextTick\n(function() {\n  // use native nextTick (unless we're in webpack)\n  // webpack (or better node-libs-browser polyfill) sets process.browser.\n  // this way we can detect webpack properly\n  if(typeof process !== 'undefined' && process.nextTick && !process.browser) {\n    util.nextTick = process.nextTick;\n    if(typeof setImmediate === 'function') {\n      util.setImmediate = setImmediate;\n    } else {\n      // polyfill setImmediate with nextTick, older versions of node\n      // (those w/o setImmediate) won't totally starve IO\n      util.setImmediate = util.nextTick;\n    }\n    return;\n  }\n\n  // polyfill nextTick with native setImmediate\n  if(typeof setImmediate === 'function') {\n    util.setImmediate = function() { return setImmediate.apply(undefined, arguments); };\n    util.nextTick = function(callback) {\n      return setImmediate(callback);\n    };\n    return;\n  }\n\n  /* Note: A polyfill upgrade pattern is used here to allow combining\n  polyfills. For example, MutationObserver is fast, but blocks UI updates,\n  so it needs to allow UI updates periodically, so it falls back on\n  postMessage or setTimeout. */\n\n  // polyfill with setTimeout\n  util.setImmediate = function(callback) {\n    setTimeout(callback, 0);\n  };\n\n  // upgrade polyfill to use postMessage\n  if(typeof window !== 'undefined' &&\n    typeof window.postMessage === 'function') {\n    var msg = 'forge.setImmediate';\n    var callbacks = [];\n    util.setImmediate = function(callback) {\n      callbacks.push(callback);\n      // only send message when one hasn't been sent in\n      // the current turn of the event loop\n      if(callbacks.length === 1) {\n        window.postMessage(msg, '*');\n      }\n    };\n    function handler(event) {\n      if(event.source === window && event.data === msg) {\n        event.stopPropagation();\n        var copy = callbacks.slice();\n        callbacks.length = 0;\n        copy.forEach(function(callback) {\n          callback();\n        });\n      }\n    }\n    window.addEventListener('message', handler, true);\n  }\n\n  // upgrade polyfill to use MutationObserver\n  if(typeof MutationObserver !== 'undefined') {\n    // polyfill with MutationObserver\n    var now = Date.now();\n    var attr = true;\n    var div = document.createElement('div');\n    var callbacks = [];\n    new MutationObserver(function() {\n      var copy = callbacks.slice();\n      callbacks.length = 0;\n      copy.forEach(function(callback) {\n        callback();\n      });\n    }).observe(div, {attributes: true});\n    var oldSetImmediate = util.setImmediate;\n    util.setImmediate = function(callback) {\n      if(Date.now() - now > 15) {\n        now = Date.now();\n        oldSetImmediate(callback);\n      } else {\n        callbacks.push(callback);\n        // only trigger observer when it hasn't been triggered in\n        // the current turn of the event loop\n        if(callbacks.length === 1) {\n          div.setAttribute('a', attr = !attr);\n        }\n      }\n    };\n  }\n\n  util.nextTick = util.setImmediate;\n})();\n\n// check if running under Node.js\nutil.isNodejs =\n  typeof process !== 'undefined' && process.versions && process.versions.node;\n\n\n// 'self' will also work in Web Workers (instance of WorkerGlobalScope) while\n// it will point to `window` in the main thread.\n// To remain compatible with older browsers, we fall back to 'window' if 'self'\n// is not available.\nutil.globalScope = (function() {\n  if(util.isNodejs) {\n    return global;\n  }\n\n  return typeof self === 'undefined' ? window : self;\n})();\n\n// define isArray\nutil.isArray = Array.isArray || function(x) {\n  return Object.prototype.toString.call(x) === '[object Array]';\n};\n\n// define isArrayBuffer\nutil.isArrayBuffer = function(x) {\n  return typeof ArrayBuffer !== 'undefined' && x instanceof ArrayBuffer;\n};\n\n// define isArrayBufferView\nutil.isArrayBufferView = function(x) {\n  return x && util.isArrayBuffer(x.buffer) && x.byteLength !== undefined;\n};\n\n/**\n * Ensure a bits param is 8, 16, 24, or 32. Used to validate input for\n * algorithms where bit manipulation, JavaScript limitations, and/or algorithm\n * design only allow for byte operations of a limited size.\n *\n * @param n number of bits.\n *\n * Throw Error if n invalid.\n */\nfunction _checkBitsParam(n) {\n  if(!(n === 8 || n === 16 || n === 24 || n === 32)) {\n    throw new Error('Only 8, 16, 24, or 32 bits supported: ' + n);\n  }\n}\n\n// TODO: set ByteBuffer to best available backing\nutil.ByteBuffer = ByteStringBuffer;\n\n/** Buffer w/BinaryString backing */\n\n/**\n * Constructor for a binary string backed byte buffer.\n *\n * @param [b] the bytes to wrap (either encoded as string, one byte per\n *          character, or as an ArrayBuffer or Typed Array).\n */\nfunction ByteStringBuffer(b) {\n  // TODO: update to match DataBuffer API\n\n  // the data in this buffer\n  this.data = '';\n  // the pointer for reading from this buffer\n  this.read = 0;\n\n  if(typeof b === 'string') {\n    this.data = b;\n  } else if(util.isArrayBuffer(b) || util.isArrayBufferView(b)) {\n    if(typeof Buffer !== 'undefined' && b instanceof Buffer) {\n      this.data = b.toString('binary');\n    } else {\n      // convert native buffer to forge buffer\n      // FIXME: support native buffers internally instead\n      var arr = new Uint8Array(b);\n      try {\n        this.data = String.fromCharCode.apply(null, arr);\n      } catch(e) {\n        for(var i = 0; i < arr.length; ++i) {\n          this.putByte(arr[i]);\n        }\n      }\n    }\n  } else if(b instanceof ByteStringBuffer ||\n    (typeof b === 'object' && typeof b.data === 'string' &&\n    typeof b.read === 'number')) {\n    // copy existing buffer\n    this.data = b.data;\n    this.read = b.read;\n  }\n\n  // used for v8 optimization\n  this._constructedStringLength = 0;\n}\nutil.ByteStringBuffer = ByteStringBuffer;\n\n/* Note: This is an optimization for V8-based browsers. When V8 concatenates\n  a string, the strings are only joined logically using a \"cons string\" or\n  \"constructed/concatenated string\". These containers keep references to one\n  another and can result in very large memory usage. For example, if a 2MB\n  string is constructed by concatenating 4 bytes together at a time, the\n  memory usage will be ~44MB; so ~22x increase. The strings are only joined\n  together when an operation requiring their joining takes place, such as\n  substr(). This function is called when adding data to this buffer to ensure\n  these types of strings are periodically joined to reduce the memory\n  footprint. */\nvar _MAX_CONSTRUCTED_STRING_LENGTH = 4096;\nutil.ByteStringBuffer.prototype._optimizeConstructedString = function(x) {\n  this._constructedStringLength += x;\n  if(this._constructedStringLength > _MAX_CONSTRUCTED_STRING_LENGTH) {\n    // this substr() should cause the constructed string to join\n    this.data.substr(0, 1);\n    this._constructedStringLength = 0;\n  }\n};\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.ByteStringBuffer.prototype.length = function() {\n  return this.data.length - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.ByteStringBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putByte = function(b) {\n  return this.putBytes(String.fromCharCode(b));\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.fillWithByte = function(b, n) {\n  b = String.fromCharCode(b);\n  var d = this.data;\n  while(n > 0) {\n    if(n & 1) {\n      d += b;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      b += b;\n    }\n  }\n  this.data = d;\n  this._optimizeConstructedString(n);\n  return this;\n};\n\n/**\n * Puts bytes in this buffer.\n *\n * @param bytes the bytes (as a UTF-8 encoded string) to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBytes = function(bytes) {\n  this.data += bytes;\n  this._optimizeConstructedString(bytes.length);\n  return this;\n};\n\n/**\n * Puts a UTF-16 encoded string into this buffer.\n *\n * @param str the string to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putString = function(str) {\n  return this.putBytes(util.encodeUtf8(str));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 24 & 0xFF));\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  var bytes = '';\n  do {\n    n -= 8;\n    bytes += String.fromCharCode((i >> n) & 0xFF);\n  } while(n > 0);\n  return this.putBytes(bytes);\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putSignedInt = function(i, n) {\n  // putInt checks n\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBuffer = function(buffer) {\n  return this.putBytes(buffer.getBytes());\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.getByte = function() {\n  return this.data.charCodeAt(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 8 ^\n    this.data.charCodeAt(this.read + 1));\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 16 ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 24 ^\n    this.data.charCodeAt(this.read + 1) << 16 ^\n    this.data.charCodeAt(this.read + 2) << 8 ^\n    this.data.charCodeAt(this.read + 3));\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16 ^\n    this.data.charCodeAt(this.read + 3) << 24);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by ceil(n/8).\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.charCodeAt(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out into a UTF-8 string and clears them from the buffer.\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a UTF-8 string of bytes.\n */\nutil.ByteStringBuffer.prototype.getBytes = function(count) {\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a UTF-8 encoded string of the bytes from this buffer without modifying\n * the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of UTF-8 encoded characters.\n */\nutil.ByteStringBuffer.prototype.bytes = function(count) {\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.at = function(i) {\n  return this.data.charCodeAt(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.setAt = function(i, b) {\n  this.data = this.data.substr(0, this.read + i) +\n    String.fromCharCode(b) +\n    this.data.substr(this.read + i + 1);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.ByteStringBuffer.prototype.last = function() {\n  return this.data.charCodeAt(this.data.length - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.ByteStringBuffer.prototype.copy = function() {\n  var c = util.createBuffer(this.data);\n  c.read = this.read;\n  return c;\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    this.data = this.data.slice(this.read);\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.clear = function() {\n  this.data = '';\n  this.read = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.truncate = function(count) {\n  var len = Math.max(0, this.length() - count);\n  this.data = this.data.substr(this.read, len);\n  this.read = 0;\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.ByteStringBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.length; ++i) {\n    var b = this.data.charCodeAt(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a UTF-16 string (standard JavaScript string).\n *\n * @return a UTF-16 string.\n */\nutil.ByteStringBuffer.prototype.toString = function() {\n  return util.decodeUtf8(this.bytes());\n};\n\n/** End Buffer w/BinaryString backing */\n\n/** Buffer w/UInt8Array backing */\n\n/**\n * FIXME: Experimental. Do not use yet.\n *\n * Constructor for an ArrayBuffer-backed byte buffer.\n *\n * The buffer may be constructed from a string, an ArrayBuffer, DataView, or a\n * TypedArray.\n *\n * If a string is given, its encoding should be provided as an option,\n * otherwise it will default to 'binary'. A 'binary' string is encoded such\n * that each character is one byte in length and size.\n *\n * If an ArrayBuffer, DataView, or TypedArray is given, it will be used\n * *directly* without any copying. Note that, if a write to the buffer requires\n * more space, the buffer will allocate a new backing ArrayBuffer to\n * accommodate. The starting read and write offsets for the buffer may be\n * given as options.\n *\n * @param [b] the initial bytes for this buffer.\n * @param options the options to use:\n *          [readOffset] the starting read offset to use (default: 0).\n *          [writeOffset] the starting write offset to use (default: the\n *            length of the first parameter).\n *          [growSize] the minimum amount, in bytes, to grow the buffer by to\n *            accommodate writes (default: 1024).\n *          [encoding] the encoding ('binary', 'utf8', 'utf16', 'hex') for the\n *            first parameter, if it is a string (default: 'binary').\n */\nfunction DataBuffer(b, options) {\n  // default options\n  options = options || {};\n\n  // pointers for read from/write to buffer\n  this.read = options.readOffset || 0;\n  this.growSize = options.growSize || 1024;\n\n  var isArrayBuffer = util.isArrayBuffer(b);\n  var isArrayBufferView = util.isArrayBufferView(b);\n  if(isArrayBuffer || isArrayBufferView) {\n    // use ArrayBuffer directly\n    if(isArrayBuffer) {\n      this.data = new DataView(b);\n    } else {\n      // TODO: adjust read/write offset based on the type of view\n      // or specify that this must be done in the options ... that the\n      // offsets are byte-based\n      this.data = new DataView(b.buffer, b.byteOffset, b.byteLength);\n    }\n    this.write = ('writeOffset' in options ?\n      options.writeOffset : this.data.byteLength);\n    return;\n  }\n\n  // initialize to empty array buffer and add any given bytes using putBytes\n  this.data = new DataView(new ArrayBuffer(0));\n  this.write = 0;\n\n  if(b !== null && b !== undefined) {\n    this.putBytes(b);\n  }\n\n  if('writeOffset' in options) {\n    this.write = options.writeOffset;\n  }\n}\nutil.DataBuffer = DataBuffer;\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.DataBuffer.prototype.length = function() {\n  return this.write - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.DataBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Ensures this buffer has enough empty space to accommodate the given number\n * of bytes. An optional parameter may be given that indicates a minimum\n * amount to grow the buffer if necessary. If the parameter is not given,\n * the buffer will be grown by some previously-specified default amount\n * or heuristic.\n *\n * @param amount the number of bytes to accommodate.\n * @param [growSize] the minimum amount, in bytes, to grow the buffer by if\n *          necessary.\n */\nutil.DataBuffer.prototype.accommodate = function(amount, growSize) {\n  if(this.length() >= amount) {\n    return this;\n  }\n  growSize = Math.max(growSize || this.growSize, amount);\n\n  // grow buffer\n  var src = new Uint8Array(\n    this.data.buffer, this.data.byteOffset, this.data.byteLength);\n  var dst = new Uint8Array(this.length() + growSize);\n  dst.set(src);\n  this.data = new DataView(dst.buffer);\n\n  return this;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putByte = function(b) {\n  this.accommodate(1);\n  this.data.setUint8(this.write++, b);\n  return this;\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.fillWithByte = function(b, n) {\n  this.accommodate(n);\n  for(var i = 0; i < n; ++i) {\n    this.data.setUint8(b);\n  }\n  return this;\n};\n\n/**\n * Puts bytes in this buffer. The bytes may be given as a string, an\n * ArrayBuffer, a DataView, or a TypedArray.\n *\n * @param bytes the bytes to put.\n * @param [encoding] the encoding for the first parameter ('binary', 'utf8',\n *          'utf16', 'hex'), if it is a string (default: 'binary').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBytes = function(bytes, encoding) {\n  if(util.isArrayBufferView(bytes)) {\n    var src = new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    var len = src.byteLength - src.byteOffset;\n    this.accommodate(len);\n    var dst = new Uint8Array(this.data.buffer, this.write);\n    dst.set(src);\n    this.write += len;\n    return this;\n  }\n\n  if(util.isArrayBuffer(bytes)) {\n    var src = new Uint8Array(bytes);\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(this.data.buffer);\n    dst.set(src, this.write);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  // bytes is a util.DataBuffer or equivalent\n  if(bytes instanceof util.DataBuffer ||\n    (typeof bytes === 'object' &&\n    typeof bytes.read === 'number' && typeof bytes.write === 'number' &&\n    util.isArrayBufferView(bytes.data))) {\n    var src = new Uint8Array(bytes.data.byteLength, bytes.read, bytes.length());\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(bytes.data.byteLength, this.write);\n    dst.set(src);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  if(bytes instanceof util.ByteStringBuffer) {\n    // copy binary string and process as the same as a string parameter below\n    bytes = bytes.data;\n    encoding = 'binary';\n  }\n\n  // string conversion\n  encoding = encoding || 'binary';\n  if(typeof bytes === 'string') {\n    var view;\n\n    // decode from string\n    if(encoding === 'hex') {\n      this.accommodate(Math.ceil(bytes.length / 2));\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.hex.decode(bytes, view, this.write);\n      return this;\n    }\n    if(encoding === 'base64') {\n      this.accommodate(Math.ceil(bytes.length / 4) * 3);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.base64.decode(bytes, view, this.write);\n      return this;\n    }\n\n    // encode text as UTF-8 bytes\n    if(encoding === 'utf8') {\n      // encode as UTF-8 then decode string as raw binary\n      bytes = util.encodeUtf8(bytes);\n      encoding = 'binary';\n    }\n\n    // decode string as raw binary\n    if(encoding === 'binary' || encoding === 'raw') {\n      // one byte per character\n      this.accommodate(bytes.length);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.raw.decode(view);\n      return this;\n    }\n\n    // encode text as UTF-16 bytes\n    if(encoding === 'utf16') {\n      // two bytes per character\n      this.accommodate(bytes.length * 2);\n      view = new Uint16Array(this.data.buffer, this.write);\n      this.write += util.text.utf16.encode(view);\n      return this;\n    }\n\n    throw new Error('Invalid encoding: ' + encoding);\n  }\n\n  throw Error('Invalid parameter: ' + bytes);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBuffer = function(buffer) {\n  this.putBytes(buffer);\n  buffer.clear();\n  return this;\n};\n\n/**\n * Puts a string into this buffer.\n *\n * @param str the string to put.\n * @param [encoding] the encoding for the string (default: 'utf16').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putString = function(str) {\n  return this.putBytes(str, 'utf16');\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16 = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24 = function(i) {\n  this.accommodate(3);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32 = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16Le = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i, true);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24Le = function(i) {\n  this.accommodate(3);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF, true);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32Le = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i, true);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  do {\n    n -= 8;\n    this.data.setInt8(this.write++, (i >> n) & 0xFF);\n  } while(n > 0);\n  return this;\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putSignedInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.getByte = function() {\n  return this.data.getInt8(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16 = function() {\n  var rval = this.data.getInt16(this.read);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.getInt16(this.read) << 8 ^\n    this.data.getInt8(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32 = function() {\n  var rval = this.data.getInt32(this.read);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16Le = function() {\n  var rval = this.data.getInt16(this.read, true);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.getInt8(this.read) ^\n    this.data.getInt16(this.read + 1, true) << 8);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32Le = function() {\n  var rval = this.data.getInt32(this.read, true);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.getInt8(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out into a UTF-8 string and clears them from the buffer.\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a UTF-8 string of bytes.\n */\nutil.DataBuffer.prototype.getBytes = function(count) {\n  // TODO: deprecate this method, it is poorly named and\n  // this.toString('binary') replaces it\n  // add a toTypedArray()/toArrayBuffer() function\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a UTF-8 encoded string of the bytes from this buffer without modifying\n * the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of UTF-8 encoded characters.\n */\nutil.DataBuffer.prototype.bytes = function(count) {\n  // TODO: deprecate this method, it is poorly named, add \"getString()\"\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.at = function(i) {\n  return this.data.getUint8(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.setAt = function(i, b) {\n  this.data.setUint8(i, b);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.DataBuffer.prototype.last = function() {\n  return this.data.getUint8(this.write - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.DataBuffer.prototype.copy = function() {\n  return new util.DataBuffer(this);\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    var src = new Uint8Array(this.data.buffer, this.read);\n    var dst = new Uint8Array(src.byteLength);\n    dst.set(src);\n    this.data = new DataView(dst);\n    this.write -= this.read;\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.clear = function() {\n  this.data = new DataView(new ArrayBuffer(0));\n  this.read = this.write = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.truncate = function(count) {\n  this.write = Math.max(0, this.length() - count);\n  this.read = Math.min(this.read, this.write);\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.DataBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.byteLength; ++i) {\n    var b = this.data.getUint8(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a string, using the given encoding. If no\n * encoding is given, 'utf8' (UTF-8) is used.\n *\n * @param [encoding] the encoding to use: 'binary', 'utf8', 'utf16', 'hex',\n *          'base64' (default: 'utf8').\n *\n * @return a string representation of the bytes in this buffer.\n */\nutil.DataBuffer.prototype.toString = function(encoding) {\n  var view = new Uint8Array(this.data, this.read, this.length());\n  encoding = encoding || 'utf8';\n\n  // encode to string\n  if(encoding === 'binary' || encoding === 'raw') {\n    return util.binary.raw.encode(view);\n  }\n  if(encoding === 'hex') {\n    return util.binary.hex.encode(view);\n  }\n  if(encoding === 'base64') {\n    return util.binary.base64.encode(view);\n  }\n\n  // decode to text\n  if(encoding === 'utf8') {\n    return util.text.utf8.decode(view);\n  }\n  if(encoding === 'utf16') {\n    return util.text.utf16.decode(view);\n  }\n\n  throw new Error('Invalid encoding: ' + encoding);\n};\n\n/** End Buffer w/UInt8Array backing */\n\n/**\n * Creates a buffer that stores bytes. A value may be given to put into the\n * buffer that is either a string of bytes or a UTF-16 string that will\n * be encoded using UTF-8 (to do the latter, specify 'utf8' as the encoding).\n *\n * @param [input] the bytes to wrap (as a string) or a UTF-16 string to encode\n *          as UTF-8.\n * @param [encoding] (default: 'raw', other: 'utf8').\n */\nutil.createBuffer = function(input, encoding) {\n  // TODO: deprecate, use new ByteBuffer() instead\n  encoding = encoding || 'raw';\n  if(input !== undefined && encoding === 'utf8') {\n    input = util.encodeUtf8(input);\n  }\n  return new util.ByteBuffer(input);\n};\n\n/**\n * Fills a string with a particular value. If you want the string to be a byte\n * string, pass in String.fromCharCode(theByte).\n *\n * @param c the character to fill the string with, use String.fromCharCode\n *          to fill the string with a byte value.\n * @param n the number of characters of value c to fill with.\n *\n * @return the filled string.\n */\nutil.fillString = function(c, n) {\n  var s = '';\n  while(n > 0) {\n    if(n & 1) {\n      s += c;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      c += c;\n    }\n  }\n  return s;\n};\n\n/**\n * Performs a per byte XOR between two byte strings and returns the result as a\n * string of bytes.\n *\n * @param s1 first string of bytes.\n * @param s2 second string of bytes.\n * @param n the number of bytes to XOR.\n *\n * @return the XOR'd result.\n */\nutil.xorBytes = function(s1, s2, n) {\n  var s3 = '';\n  var b = '';\n  var t = '';\n  var i = 0;\n  var c = 0;\n  for(; n > 0; --n, ++i) {\n    b = s1.charCodeAt(i) ^ s2.charCodeAt(i);\n    if(c >= 10) {\n      s3 += t;\n      t = '';\n      c = 0;\n    }\n    t += String.fromCharCode(b);\n    ++c;\n  }\n  s3 += t;\n  return s3;\n};\n\n/**\n * Converts a hex string into a 'binary' encoded string of bytes.\n *\n * @param hex the hexadecimal string to convert.\n *\n * @return the binary-encoded string of bytes.\n */\nutil.hexToBytes = function(hex) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.decode instead.\"\n  var rval = '';\n  var i = 0;\n  if(hex.length & 1 == 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    rval += String.fromCharCode(parseInt(hex[0], 16));\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    rval += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n  }\n  return rval;\n};\n\n/**\n * Converts a 'binary' encoded string of bytes to hex.\n *\n * @param bytes the byte string to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.bytesToHex = function(bytes) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.encode instead.\"\n  return util.createBuffer(bytes).toHex();\n};\n\n/**\n * Converts an 32-bit integer to 4-big-endian byte string.\n *\n * @param i the integer.\n *\n * @return the byte string.\n */\nutil.int32ToBytes = function(i) {\n  return (\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n// base64 characters, reverse mapping\nvar _base64 =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nvar _base64Idx = [\n/*43 -43 = 0*/\n/*'+',  1,  2,  3,'/' */\n   62, -1, -1, -1, 63,\n\n/*'0','1','2','3','4','5','6','7','8','9' */\n   52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\n\n/*15, 16, 17,'=', 19, 20, 21 */\n  -1, -1, -1, 64, -1, -1, -1,\n\n/*65 - 43 = 22*/\n/*'A','B','C','D','E','F','G','H','I','J','K','L','M', */\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n\n/*'N','O','P','Q','R','S','T','U','V','W','X','Y','Z' */\n   13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n\n/*91 - 43 = 48 */\n/*48, 49, 50, 51, 52, 53 */\n  -1, -1, -1, -1, -1, -1,\n\n/*97 - 43 = 54*/\n/*'a','b','c','d','e','f','g','h','i','j','k','l','m' */\n   26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n\n/*'n','o','p','q','r','s','t','u','v','w','x','y','z' */\n   39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51\n];\n\n// base58 characters (Bitcoin alphabet)\nvar _base58 = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n\n/**\n * Base64 encodes a 'binary' encoded string of bytes.\n *\n * @param input the binary encoded string of bytes to base64-encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output.\n */\nutil.encode64 = function(input, maxline) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.encode instead.\"\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.length) {\n    chr1 = input.charCodeAt(i++);\n    chr2 = input.charCodeAt(i++);\n    chr3 = input.charCodeAt(i++);\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Base64 decodes a string into a 'binary' encoded string of bytes.\n *\n * @param input the base64-encoded input.\n *\n * @return the binary encoded string.\n */\nutil.decode64 = function(input) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.decode instead.\"\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  var output = '';\n  var enc1, enc2, enc3, enc4;\n  var i = 0;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    output += String.fromCharCode((enc1 << 2) | (enc2 >> 4));\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      output += String.fromCharCode(((enc2 & 15) << 4) | (enc3 >> 2));\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        output += String.fromCharCode(((enc3 & 3) << 6) | enc4);\n      }\n    }\n  }\n\n  return output;\n};\n\n/**\n * UTF-8 encodes the given UTF-16 encoded string (a standard JavaScript\n * string). Non-ASCII characters will be encoded as multiple bytes according\n * to UTF-8.\n *\n * @param str the string to encode.\n *\n * @return the UTF-8 encoded string.\n */\nutil.encodeUtf8 = function(str) {\n  return unescape(encodeURIComponent(str));\n};\n\n/**\n * Decodes a UTF-8 encoded string into a UTF-16 string.\n *\n * @param str the string to decode.\n *\n * @return the UTF-16 encoded string (standard JavaScript string).\n */\nutil.decodeUtf8 = function(str) {\n  return decodeURIComponent(escape(str));\n};\n\n// binary encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.binary = {\n  raw: {},\n  hex: {},\n  base64: {},\n  base58: {},\n  baseN : {\n    encode: baseN.encode,\n    decode: baseN.decode\n  }\n};\n\n/**\n * Encodes a Uint8Array as a binary-encoded string. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param bytes the Uint8Array to encode.\n *\n * @return the binary-encoded string.\n */\nutil.binary.raw.encode = function(bytes) {\n  return String.fromCharCode.apply(null, bytes);\n};\n\n/**\n * Decodes a binary-encoded string to a Uint8Array. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param str the binary-encoded string to decode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.raw.decode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Encodes a 'binary' string, ArrayBuffer, DataView, TypedArray, or\n * ByteBuffer as a string of hexadecimal characters.\n *\n * @param bytes the bytes to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.binary.hex.encode = util.bytesToHex;\n\n/**\n * Decodes a hex-encoded string to a Uint8Array.\n *\n * @param hex the hexadecimal string to convert.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.hex.decode = function(hex, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(hex.length / 2));\n  }\n  offset = offset || 0;\n  var i = 0, j = offset;\n  if(hex.length & 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    out[j++] = parseInt(hex[0], 16);\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    out[j++] = parseInt(hex.substr(i, 2), 16);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Base64-encodes a Uint8Array.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output string.\n */\nutil.binary.base64.encode = function(input, maxline) {\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.byteLength) {\n    chr1 = input[i++];\n    chr2 = input[i++];\n    chr3 = input[i++];\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Decodes a base64-encoded string to a Uint8Array.\n *\n * @param input the base64-encoded input string.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.base64.decode = function(input, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(input.length / 4) * 3);\n  }\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  offset = offset || 0;\n  var enc1, enc2, enc3, enc4;\n  var i = 0, j = offset;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    out[j++] = (enc1 << 2) | (enc2 >> 4);\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      out[j++] = ((enc2 & 15) << 4) | (enc3 >> 2);\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        out[j++] = ((enc3 & 3) << 6) | enc4;\n      }\n    }\n  }\n\n  // make sure result is the exact decoded length\n  return output ? (j - offset) : out.subarray(0, j);\n};\n\n// add support for base58 encoding/decoding with Bitcoin alphabet\nutil.binary.base58.encode = function(input, maxline) {\n  return util.binary.baseN.encode(input, _base58, maxline);\n};\nutil.binary.base58.decode = function(input, maxline) {\n  return util.binary.baseN.decode(input, _base58, maxline);\n};\n\n// text encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.text = {\n  utf8: {},\n  utf16: {}\n};\n\n/**\n * Encodes the given string as UTF-8 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf8.encode = function(str, output, offset) {\n  str = util.encodeUtf8(str);\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-8 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf8.decode = function(bytes) {\n  return util.decodeUtf8(String.fromCharCode.apply(null, bytes));\n};\n\n/**\n * Encodes the given string as UTF-16 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf16.encode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length * 2);\n  }\n  var view = new Uint16Array(out.buffer);\n  offset = offset || 0;\n  var j = offset;\n  var k = offset;\n  for(var i = 0; i < str.length; ++i) {\n    view[k++] = str.charCodeAt(i);\n    j += 2;\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-16 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf16.decode = function(bytes) {\n  return String.fromCharCode.apply(null, new Uint16Array(bytes.buffer));\n};\n\n/**\n * Deflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true to return only raw deflate data, false to include zlib\n *          header and trailer.\n *\n * @return the deflated data as a string.\n */\nutil.deflate = function(api, bytes, raw) {\n  bytes = util.decode64(api.deflate(util.encode64(bytes)).rval);\n\n  // strip zlib header and trailer if necessary\n  if(raw) {\n    // zlib header is 2 bytes (CMF,FLG) where FLG indicates that\n    // there is a 4-byte DICT (alder-32) block before the data if\n    // its 5th bit is set\n    var start = 2;\n    var flg = bytes.charCodeAt(1);\n    if(flg & 0x20) {\n      start = 6;\n    }\n    // zlib trailer is 4 bytes of adler-32\n    bytes = bytes.substring(start, bytes.length - 4);\n  }\n\n  return bytes;\n};\n\n/**\n * Inflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true if the incoming data has no zlib header or trailer and is\n *          raw DEFLATE data.\n *\n * @return the inflated data as a string, null on error.\n */\nutil.inflate = function(api, bytes, raw) {\n  // TODO: add zlib header and trailer if necessary/possible\n  var rval = api.inflate(util.encode64(bytes)).rval;\n  return (rval === null) ? null : util.decode64(rval);\n};\n\n/**\n * Sets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param obj the storage object, null to remove.\n */\nvar _setStorageObject = function(api, id, obj) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  var rval;\n  if(obj === null) {\n    rval = api.removeItem(id);\n  } else {\n    // json-encode and base64-encode object\n    obj = util.encode64(JSON.stringify(obj));\n    rval = api.setItem(id, obj);\n  }\n\n  // handle potential flash error\n  if(typeof(rval) !== 'undefined' && rval.rval !== true) {\n    var error = new Error(rval.error.message);\n    error.id = rval.error.id;\n    error.name = rval.error.name;\n    throw error;\n  }\n};\n\n/**\n * Gets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n *\n * @return the storage object entry or null if none exists.\n */\nvar _getStorageObject = function(api, id) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  // get the existing entry\n  var rval = api.getItem(id);\n\n  /* Note: We check api.init because we can't do (api == localStorage)\n    on IE because of \"Class doesn't support Automation\" exception. Only\n    the flash api has an init method so this works too, but we need a\n    better solution in the future. */\n\n  // flash returns item wrapped in an object, handle special case\n  if(api.init) {\n    if(rval.rval === null) {\n      if(rval.error) {\n        var error = new Error(rval.error.message);\n        error.id = rval.error.id;\n        error.name = rval.error.name;\n        throw error;\n      }\n      // no error, but also no item\n      rval = null;\n    } else {\n      rval = rval.rval;\n    }\n  }\n\n  // handle decoding\n  if(rval !== null) {\n    // base64-decode and json-decode data\n    rval = JSON.parse(util.decode64(rval));\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item in local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n */\nvar _setItem = function(api, id, key, data) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj === null) {\n    // create a new storage object\n    obj = {};\n  }\n  // update key\n  obj[key] = data;\n\n  // set storage object\n  _setStorageObject(api, id, obj);\n};\n\n/**\n * Gets an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n *\n * @return the item.\n */\nvar _getItem = function(api, id, key) {\n  // get storage object\n  var rval = _getStorageObject(api, id);\n  if(rval !== null) {\n    // return data at key\n    rval = (key in rval) ? rval[key] : null;\n  }\n\n  return rval;\n};\n\n/**\n * Removes an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n */\nvar _removeItem = function(api, id, key) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj !== null && key in obj) {\n    // remove key\n    delete obj[key];\n\n    // see if entry has no keys remaining\n    var empty = true;\n    for(var prop in obj) {\n      empty = false;\n      break;\n    }\n    if(empty) {\n      // remove entry entirely if no keys are left\n      obj = null;\n    }\n\n    // set storage object\n    _setStorageObject(api, id, obj);\n  }\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n */\nvar _clearItems = function(api, id) {\n  _setStorageObject(api, id, null);\n};\n\n/**\n * Calls a storage function.\n *\n * @param func the function to call.\n * @param args the arguments for the function.\n * @param location the location argument.\n *\n * @return the return value from the function.\n */\nvar _callStorageFunction = function(func, args, location) {\n  var rval = null;\n\n  // default storage types\n  if(typeof(location) === 'undefined') {\n    location = ['web', 'flash'];\n  }\n\n  // apply storage types in order of preference\n  var type;\n  var done = false;\n  var exception = null;\n  for(var idx in location) {\n    type = location[idx];\n    try {\n      if(type === 'flash' || type === 'both') {\n        if(args[0] === null) {\n          throw new Error('Flash local storage not available.');\n        }\n        rval = func.apply(this, args);\n        done = (type === 'flash');\n      }\n      if(type === 'web' || type === 'both') {\n        args[0] = localStorage;\n        rval = func.apply(this, args);\n        done = true;\n      }\n    } catch(ex) {\n      exception = ex;\n    }\n    if(done) {\n      break;\n    }\n  }\n\n  if(!done) {\n    throw exception;\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item on local disk.\n *\n * The available types of local storage include 'flash', 'web', and 'both'.\n *\n * The type 'flash' refers to flash local storage (SharedObject). In order\n * to use flash local storage, the 'api' parameter must be valid. The type\n * 'web' refers to WebStorage, if supported by the browser. The type 'both'\n * refers to storing using both 'flash' and 'web', not just one or the\n * other.\n *\n * The location array should list the storage types to use in order of\n * preference:\n *\n * ['flash']: flash only storage\n * ['web']: web only storage\n * ['both']: try to store in both\n * ['flash','web']: store in flash first, but if not available, 'web'\n * ['web','flash']: store in web first, but if not available, 'flash'\n *\n * The location array defaults to: ['web', 'flash']\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n * @param location an array with the preferred types of storage to use.\n */\nutil.setItem = function(api, id, key, data, location) {\n  _callStorageFunction(_setItem, arguments, location);\n};\n\n/**\n * Gets an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n *\n * @return the item.\n */\nutil.getItem = function(api, id, key, location) {\n  return _callStorageFunction(_getItem, arguments, location);\n};\n\n/**\n * Removes an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n */\nutil.removeItem = function(api, id, key, location) {\n  _callStorageFunction(_removeItem, arguments, location);\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface if flash is available.\n * @param id the storage ID to use.\n * @param location an array with the preferred types of storage to use.\n */\nutil.clearItems = function(api, id, location) {\n  _callStorageFunction(_clearItems, arguments, location);\n};\n\n/**\n * Parses the scheme, host, and port from an http(s) url.\n *\n * @param str the url string.\n *\n * @return the parsed url object or null if the url is invalid.\n */\nutil.parseUrl = function(str) {\n  // FIXME: this regex looks a bit broken\n  var regex = /^(https?):\\/\\/([^:&^\\/]*):?(\\d*)(.*)$/g;\n  regex.lastIndex = 0;\n  var m = regex.exec(str);\n  var url = (m === null) ? null : {\n    full: str,\n    scheme: m[1],\n    host: m[2],\n    port: m[3],\n    path: m[4]\n  };\n  if(url) {\n    url.fullHost = url.host;\n    if(url.port) {\n      if(url.port !== 80 && url.scheme === 'http') {\n        url.fullHost += ':' + url.port;\n      } else if(url.port !== 443 && url.scheme === 'https') {\n        url.fullHost += ':' + url.port;\n      }\n    } else if(url.scheme === 'http') {\n      url.port = 80;\n    } else if(url.scheme === 'https') {\n      url.port = 443;\n    }\n    url.full = url.scheme + '://' + url.fullHost;\n  }\n  return url;\n};\n\n/* Storage for query variables */\nvar _queryVariables = null;\n\n/**\n * Returns the window location query variables. Query is parsed on the first\n * call and the same object is returned on subsequent calls. The mapping\n * is from keys to an array of values. Parameters without values will have\n * an object key set but no value added to the value array. Values are\n * unescaped.\n *\n * ...?k1=v1&k2=v2:\n * {\n *   \"k1\": [\"v1\"],\n *   \"k2\": [\"v2\"]\n * }\n *\n * ...?k1=v1&k1=v2:\n * {\n *   \"k1\": [\"v1\", \"v2\"]\n * }\n *\n * ...?k1=v1&k2:\n * {\n *   \"k1\": [\"v1\"],\n *   \"k2\": []\n * }\n *\n * ...?k1=v1&k1:\n * {\n *   \"k1\": [\"v1\"]\n * }\n *\n * ...?k1&k1:\n * {\n *   \"k1\": []\n * }\n *\n * @param query the query string to parse (optional, default to cached\n *          results from parsing window location search query).\n *\n * @return object mapping keys to variables.\n */\nutil.getQueryVariables = function(query) {\n  var parse = function(q) {\n    var rval = {};\n    var kvpairs = q.split('&');\n    for(var i = 0; i < kvpairs.length; i++) {\n      var pos = kvpairs[i].indexOf('=');\n      var key;\n      var val;\n      if(pos > 0) {\n        key = kvpairs[i].substring(0, pos);\n        val = kvpairs[i].substring(pos + 1);\n      } else {\n        key = kvpairs[i];\n        val = null;\n      }\n      if(!(key in rval)) {\n        rval[key] = [];\n      }\n      // disallow overriding object prototype keys\n      if(!(key in Object.prototype) && val !== null) {\n        rval[key].push(unescape(val));\n      }\n    }\n    return rval;\n  };\n\n   var rval;\n   if(typeof(query) === 'undefined') {\n     // set cached variables if needed\n     if(_queryVariables === null) {\n       if(typeof(window) !== 'undefined' && window.location && window.location.search) {\n          // parse window search query\n          _queryVariables = parse(window.location.search.substring(1));\n       } else {\n          // no query variables available\n          _queryVariables = {};\n       }\n     }\n     rval = _queryVariables;\n   } else {\n     // parse given query\n     rval = parse(query);\n   }\n   return rval;\n};\n\n/**\n * Parses a fragment into a path and query. This method will take a URI\n * fragment and break it up as if it were the main URI. For example:\n *    /bar/baz?a=1&b=2\n * results in:\n *    {\n *       path: [\"bar\", \"baz\"],\n *       query: {\"k1\": [\"v1\"], \"k2\": [\"v2\"]}\n *    }\n *\n * @return object with a path array and query object.\n */\nutil.parseFragment = function(fragment) {\n  // default to whole fragment\n  var fp = fragment;\n  var fq = '';\n  // split into path and query if possible at the first '?'\n  var pos = fragment.indexOf('?');\n  if(pos > 0) {\n    fp = fragment.substring(0, pos);\n    fq = fragment.substring(pos + 1);\n  }\n  // split path based on '/' and ignore first element if empty\n  var path = fp.split('/');\n  if(path.length > 0 && path[0] === '') {\n    path.shift();\n  }\n  // convert query into object\n  var query = (fq === '') ? {} : util.getQueryVariables(fq);\n\n  return {\n    pathString: fp,\n    queryString: fq,\n    path: path,\n    query: query\n  };\n};\n\n/**\n * Makes a request out of a URI-like request string. This is intended to\n * be used where a fragment id (after a URI '#') is parsed as a URI with\n * path and query parts. The string should have a path beginning and\n * delimited by '/' and optional query parameters following a '?'. The\n * query should be a standard URL set of key value pairs delimited by\n * '&'. For backwards compatibility the initial '/' on the path is not\n * required. The request object has the following API, (fully described\n * in the method code):\n *    {\n *       path: <the path string part>.\n *       query: <the query string part>,\n *       getPath(i): get part or all of the split path array,\n *       getQuery(k, i): get part or all of a query key array,\n *       getQueryLast(k, _default): get last element of a query key array.\n *    }\n *\n * @return object with request parameters.\n */\nutil.makeRequest = function(reqString) {\n  var frag = util.parseFragment(reqString);\n  var req = {\n    // full path string\n    path: frag.pathString,\n    // full query string\n    query: frag.queryString,\n    /**\n     * Get path or element in path.\n     *\n     * @param i optional path index.\n     *\n     * @return path or part of path if i provided.\n     */\n    getPath: function(i) {\n      return (typeof(i) === 'undefined') ? frag.path : frag.path[i];\n    },\n    /**\n     * Get query, values for a key, or value for a key index.\n     *\n     * @param k optional query key.\n     * @param i optional query key index.\n     *\n     * @return query, values for a key, or value for a key index.\n     */\n    getQuery: function(k, i) {\n      var rval;\n      if(typeof(k) === 'undefined') {\n        rval = frag.query;\n      } else {\n        rval = frag.query[k];\n        if(rval && typeof(i) !== 'undefined') {\n           rval = rval[i];\n        }\n      }\n      return rval;\n    },\n    getQueryLast: function(k, _default) {\n      var rval;\n      var vals = req.getQuery(k);\n      if(vals) {\n        rval = vals[vals.length - 1];\n      } else {\n        rval = _default;\n      }\n      return rval;\n    }\n  };\n  return req;\n};\n\n/**\n * Makes a URI out of a path, an object with query parameters, and a\n * fragment. Uses jQuery.param() internally for query string creation.\n * If the path is an array, it will be joined with '/'.\n *\n * @param path string path or array of strings.\n * @param query object with query parameters. (optional)\n * @param fragment fragment string. (optional)\n *\n * @return string object with request parameters.\n */\nutil.makeLink = function(path, query, fragment) {\n  // join path parts if needed\n  path = jQuery.isArray(path) ? path.join('/') : path;\n\n  var qstr = jQuery.param(query || {});\n  fragment = fragment || '';\n  return path +\n    ((qstr.length > 0) ? ('?' + qstr) : '') +\n    ((fragment.length > 0) ? ('#' + fragment) : '');\n};\n\n/**\n * Follows a path of keys deep into an object hierarchy and set a value.\n * If a key does not exist or it's value is not an object, create an\n * object in it's place. This can be destructive to a object tree if\n * leaf nodes are given as non-final path keys.\n * Used to avoid exceptions from missing parts of the path.\n *\n * @param object the starting object.\n * @param keys an array of string keys.\n * @param value the value to set.\n */\nutil.setPath = function(object, keys, value) {\n  // need to start at an object\n  if(typeof(object) === 'object' && object !== null) {\n    var i = 0;\n    var len = keys.length;\n    while(i < len) {\n      var next = keys[i++];\n      if(i == len) {\n        // last\n        object[next] = value;\n      } else {\n        // more\n        var hasNext = (next in object);\n        if(!hasNext ||\n          (hasNext && typeof(object[next]) !== 'object') ||\n          (hasNext && object[next] === null)) {\n          object[next] = {};\n        }\n        object = object[next];\n      }\n    }\n  }\n};\n\n/**\n * Follows a path of keys deep into an object hierarchy and return a value.\n * If a key does not exist, create an object in it's place.\n * Used to avoid exceptions from missing parts of the path.\n *\n * @param object the starting object.\n * @param keys an array of string keys.\n * @param _default value to return if path not found.\n *\n * @return the value at the path if found, else default if given, else\n *         undefined.\n */\nutil.getPath = function(object, keys, _default) {\n  var i = 0;\n  var len = keys.length;\n  var hasNext = true;\n  while(hasNext && i < len &&\n    typeof(object) === 'object' && object !== null) {\n    var next = keys[i++];\n    hasNext = next in object;\n    if(hasNext) {\n      object = object[next];\n    }\n  }\n  return (hasNext ? object : _default);\n};\n\n/**\n * Follow a path of keys deep into an object hierarchy and delete the\n * last one. If a key does not exist, do nothing.\n * Used to avoid exceptions from missing parts of the path.\n *\n * @param object the starting object.\n * @param keys an array of string keys.\n */\nutil.deletePath = function(object, keys) {\n  // need to start at an object\n  if(typeof(object) === 'object' && object !== null) {\n    var i = 0;\n    var len = keys.length;\n    while(i < len) {\n      var next = keys[i++];\n      if(i == len) {\n        // last\n        delete object[next];\n      } else {\n        // more\n        if(!(next in object) ||\n          (typeof(object[next]) !== 'object') ||\n          (object[next] === null)) {\n           break;\n        }\n        object = object[next];\n      }\n    }\n  }\n};\n\n/**\n * Check if an object is empty.\n *\n * Taken from:\n * http://stackoverflow.com/questions/679915/how-do-i-test-for-an-empty-javascript-object-from-json/679937#679937\n *\n * @param object the object to check.\n */\nutil.isEmpty = function(obj) {\n  for(var prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Format with simple printf-style interpolation.\n *\n * %%: literal '%'\n * %s,%o: convert next argument into a string.\n *\n * @param format the string to format.\n * @param ... arguments to interpolate into the format string.\n */\nutil.format = function(format) {\n  var re = /%./g;\n  // current match\n  var match;\n  // current part\n  var part;\n  // current arg index\n  var argi = 0;\n  // collected parts to recombine later\n  var parts = [];\n  // last index found\n  var last = 0;\n  // loop while matches remain\n  while((match = re.exec(format))) {\n    part = format.substring(last, re.lastIndex - 2);\n    // don't add empty strings (ie, parts between %s%s)\n    if(part.length > 0) {\n      parts.push(part);\n    }\n    last = re.lastIndex;\n    // switch on % code\n    var code = match[0][1];\n    switch(code) {\n    case 's':\n    case 'o':\n      // check if enough arguments were given\n      if(argi < arguments.length) {\n        parts.push(arguments[argi++ + 1]);\n      } else {\n        parts.push('<?>');\n      }\n      break;\n    // FIXME: do proper formating for numbers, etc\n    //case 'f':\n    //case 'd':\n    case '%':\n      parts.push('%');\n      break;\n    default:\n      parts.push('<%' + code + '?>');\n    }\n  }\n  // add trailing part of format string\n  parts.push(format.substring(last));\n  return parts.join('');\n};\n\n/**\n * Formats a number.\n *\n * http://snipplr.com/view/5945/javascript-numberformat--ported-from-php/\n */\nutil.formatNumber = function(number, decimals, dec_point, thousands_sep) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +     bugfix by: Michael White (http://crestidg.com)\n  // +     bugfix by: Benjamin Lupton\n  // +     bugfix by: Allan Jensen (http://www.winternet.no)\n  // +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // *     example 1: number_format(1234.5678, 2, '.', '');\n  // *     returns 1: 1234.57\n\n  var n = number, c = isNaN(decimals = Math.abs(decimals)) ? 2 : decimals;\n  var d = dec_point === undefined ? ',' : dec_point;\n  var t = thousands_sep === undefined ?\n   '.' : thousands_sep, s = n < 0 ? '-' : '';\n  var i = parseInt((n = Math.abs(+n || 0).toFixed(c)), 10) + '';\n  var j = (i.length > 3) ? i.length % 3 : 0;\n  return s + (j ? i.substr(0, j) + t : '') +\n    i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + t) +\n    (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');\n};\n\n/**\n * Formats a byte size.\n *\n * http://snipplr.com/view/5949/format-humanize-file-byte-size-presentation-in-javascript/\n */\nutil.formatSize = function(size) {\n  if(size >= 1073741824) {\n    size = util.formatNumber(size / 1073741824, 2, '.', '') + ' GiB';\n  } else if(size >= 1048576) {\n    size = util.formatNumber(size / 1048576, 2, '.', '') + ' MiB';\n  } else if(size >= 1024) {\n    size = util.formatNumber(size / 1024, 0) + ' KiB';\n  } else {\n    size = util.formatNumber(size, 0) + ' bytes';\n  }\n  return size;\n};\n\n/**\n * Converts an IPv4 or IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv4 or IPv6 address to convert.\n *\n * @return the 4-byte IPv6 or 16-byte IPv6 address or null if the address can't\n *         be parsed.\n */\nutil.bytesFromIP = function(ip) {\n  if(ip.indexOf('.') !== -1) {\n    return util.bytesFromIPv4(ip);\n  }\n  if(ip.indexOf(':') !== -1) {\n    return util.bytesFromIPv6(ip);\n  }\n  return null;\n};\n\n/**\n * Converts an IPv4 string representation into bytes (in network order).\n *\n * @param ip the IPv4 address to convert.\n *\n * @return the 4-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv4 = function(ip) {\n  ip = ip.split('.');\n  if(ip.length !== 4) {\n    return null;\n  }\n  var b = util.createBuffer();\n  for(var i = 0; i < ip.length; ++i) {\n    var num = parseInt(ip[i], 10);\n    if(isNaN(num)) {\n      return null;\n    }\n    b.putByte(num);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts an IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv6 address to convert.\n *\n * @return the 16-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv6 = function(ip) {\n  var blanks = 0;\n  ip = ip.split(':').filter(function(e) {\n    if(e.length === 0) ++blanks;\n    return true;\n  });\n  var zeros = (8 - ip.length + blanks) * 2;\n  var b = util.createBuffer();\n  for(var i = 0; i < 8; ++i) {\n    if(!ip[i] || ip[i].length === 0) {\n      b.fillWithByte(0, zeros);\n      zeros = 0;\n      continue;\n    }\n    var bytes = util.hexToBytes(ip[i]);\n    if(bytes.length < 2) {\n      b.putByte(0);\n    }\n    b.putBytes(bytes);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation or 16-bytes into\n * an IPv6 string representation. The bytes must be in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 or IPv6 string representation if 4 or 16 bytes,\n *         respectively, are given, otherwise null.\n */\nutil.bytesToIP = function(bytes) {\n  if(bytes.length === 4) {\n    return util.bytesToIPv4(bytes);\n  }\n  if(bytes.length === 16) {\n    return util.bytesToIPv6(bytes);\n  }\n  return null;\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv4 = function(bytes) {\n  if(bytes.length !== 4) {\n    return null;\n  }\n  var ip = [];\n  for(var i = 0; i < bytes.length; ++i) {\n    ip.push(bytes.charCodeAt(i));\n  }\n  return ip.join('.');\n};\n\n/**\n * Converts 16-bytes into an IPv16 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv16 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv6 = function(bytes) {\n  if(bytes.length !== 16) {\n    return null;\n  }\n  var ip = [];\n  var zeroGroups = [];\n  var zeroMaxGroup = 0;\n  for(var i = 0; i < bytes.length; i += 2) {\n    var hex = util.bytesToHex(bytes[i] + bytes[i + 1]);\n    // canonicalize zero representation\n    while(hex[0] === '0' && hex !== '0') {\n      hex = hex.substr(1);\n    }\n    if(hex === '0') {\n      var last = zeroGroups[zeroGroups.length - 1];\n      var idx = ip.length;\n      if(!last || idx !== last.end + 1) {\n        zeroGroups.push({start: idx, end: idx});\n      } else {\n        last.end = idx;\n        if((last.end - last.start) >\n          (zeroGroups[zeroMaxGroup].end - zeroGroups[zeroMaxGroup].start)) {\n          zeroMaxGroup = zeroGroups.length - 1;\n        }\n      }\n    }\n    ip.push(hex);\n  }\n  if(zeroGroups.length > 0) {\n    var group = zeroGroups[zeroMaxGroup];\n    // only shorten group of length > 0\n    if(group.end - group.start > 0) {\n      ip.splice(group.start, group.end - group.start + 1, '');\n      if(group.start === 0) {\n        ip.unshift('');\n      }\n      if(group.end === 7) {\n        ip.push('');\n      }\n    }\n  }\n  return ip.join(':');\n};\n\n/**\n * Estimates the number of processes that can be run concurrently. If\n * creating Web Workers, keep in mind that the main JavaScript process needs\n * its own core.\n *\n * @param options the options to use:\n *          update true to force an update (not use the cached value).\n * @param callback(err, max) called once the operation completes.\n */\nutil.estimateCores = function(options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  if('cores' in util && !options.update) {\n    return callback(null, util.cores);\n  }\n  if(typeof navigator !== 'undefined' &&\n    'hardwareConcurrency' in navigator &&\n    navigator.hardwareConcurrency > 0) {\n    util.cores = navigator.hardwareConcurrency;\n    return callback(null, util.cores);\n  }\n  if(typeof Worker === 'undefined') {\n    // workers not available\n    util.cores = 1;\n    return callback(null, util.cores);\n  }\n  if(typeof Blob === 'undefined') {\n    // can't estimate, default to 2\n    util.cores = 2;\n    return callback(null, util.cores);\n  }\n\n  // create worker concurrency estimation code as blob\n  var blobUrl = URL.createObjectURL(new Blob(['(',\n    function() {\n      self.addEventListener('message', function(e) {\n        // run worker for 4 ms\n        var st = Date.now();\n        var et = st + 4;\n        while(Date.now() < et);\n        self.postMessage({st: st, et: et});\n      });\n    }.toString(),\n  ')()'], {type: 'application/javascript'}));\n\n  // take 5 samples using 16 workers\n  sample([], 5, 16);\n\n  function sample(max, samples, numWorkers) {\n    if(samples === 0) {\n      // get overlap average\n      var avg = Math.floor(max.reduce(function(avg, x) {\n        return avg + x;\n      }, 0) / max.length);\n      util.cores = Math.max(1, avg);\n      URL.revokeObjectURL(blobUrl);\n      return callback(null, util.cores);\n    }\n    map(numWorkers, function(err, results) {\n      max.push(reduce(numWorkers, results));\n      sample(max, samples - 1, numWorkers);\n    });\n  }\n\n  function map(numWorkers, callback) {\n    var workers = [];\n    var results = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      var worker = new Worker(blobUrl);\n      worker.addEventListener('message', function(e) {\n        results.push(e.data);\n        if(results.length === numWorkers) {\n          for(var i = 0; i < numWorkers; ++i) {\n            workers[i].terminate();\n          }\n          callback(null, results);\n        }\n      });\n      workers.push(worker);\n    }\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].postMessage(i);\n    }\n  }\n\n  function reduce(numWorkers, results) {\n    // find overlapping time windows\n    var overlaps = [];\n    for(var n = 0; n < numWorkers; ++n) {\n      var r1 = results[n];\n      var overlap = overlaps[n] = [];\n      for(var i = 0; i < numWorkers; ++i) {\n        if(n === i) {\n          continue;\n        }\n        var r2 = results[i];\n        if((r1.st > r2.st && r1.st < r2.et) ||\n          (r2.st > r1.st && r2.st < r1.et)) {\n          overlap.push(i);\n        }\n      }\n    }\n    // get maximum overlaps ... don't include overlapping worker itself\n    // as the main JS process was also being scheduled during the work and\n    // would have to be subtracted from the estimate anyway\n    return overlaps.reduce(function(max, overlap) {\n      return Math.max(max, overlap.length);\n    }, 0);\n  }\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/node-forge/lib/util.js?");

/***/ }),

/***/ "./node_modules/object-assign/index.js":
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n//# sourceURL=webpack:///./node_modules/object-assign/index.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar printWarning = function() {};\n\nif (true) {\n  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (true) {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (true) {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n\n\n//# sourceURL=webpack:///./node_modules/prop-types/checkPropTypes.js?");

/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n//# sourceURL=webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js?");

/***/ }),

/***/ "./node_modules/rdf-canonize/lib/AsyncAlgorithm.js":
/*!*********************************************************!*\
  !*** ./node_modules/rdf-canonize/lib/AsyncAlgorithm.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2016-2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst util = __webpack_require__(/*! ./util */ \"./node_modules/rdf-canonize/lib/util.js\");\n\nmodule.exports = class AsyncAlgorithm {\n  constructor({\n    maxCallStackDepth = 500,\n    maxTotalCallStackDepth = 0xFFFFFFFF,\n    // milliseconds\n    timeSlice = 10\n  } = {}) {\n    this.schedule = {};\n    this.schedule.MAX_DEPTH = maxCallStackDepth;\n    this.schedule.MAX_TOTAL_DEPTH = maxTotalCallStackDepth;\n    this.schedule.depth = 0;\n    this.schedule.totalDepth = 0;\n    this.schedule.timeSlice = timeSlice;\n  }\n\n  // do some work in a time slice, but in serial\n  doWork(fn, callback) {\n    const schedule = this.schedule;\n\n    if(schedule.totalDepth >= schedule.MAX_TOTAL_DEPTH) {\n      return callback(new Error(\n        'Maximum total call stack depth exceeded; canonicalization aborting.'));\n    }\n\n    (function work() {\n      if(schedule.depth === schedule.MAX_DEPTH) {\n        // stack too deep, run on next tick\n        schedule.depth = 0;\n        schedule.running = false;\n        return util.nextTick(work);\n      }\n\n      // if not yet running, force run\n      const now = Date.now();\n      if(!schedule.running) {\n        schedule.start = Date.now();\n        schedule.deadline = schedule.start + schedule.timeSlice;\n      }\n\n      // TODO: should also include an estimate of expectedWorkTime\n      if(now < schedule.deadline) {\n        schedule.running = true;\n        schedule.depth++;\n        schedule.totalDepth++;\n        return fn((err, result) => {\n          schedule.depth--;\n          schedule.totalDepth--;\n          callback(err, result);\n        });\n      }\n\n      // not enough time left in this slice, run after letting browser\n      // do some other things\n      schedule.depth = 0;\n      schedule.running = false;\n      util.setImmediate(work);\n    })();\n  }\n\n  // asynchronously loop\n  forEach(iterable, fn, callback) {\n    const self = this;\n    let iterator;\n    let idx = 0;\n    let length;\n    if(Array.isArray(iterable)) {\n      length = iterable.length;\n      iterator = () => {\n        if(idx === length) {\n          return false;\n        }\n        iterator.value = iterable[idx++];\n        iterator.key = idx;\n        return true;\n      };\n    } else {\n      const keys = Object.keys(iterable);\n      length = keys.length;\n      iterator = () => {\n        if(idx === length) {\n          return false;\n        }\n        iterator.key = keys[idx++];\n        iterator.value = iterable[iterator.key];\n        return true;\n      };\n    }\n\n    (function iterate(err) {\n      if(err) {\n        return callback(err);\n      }\n      if(iterator()) {\n        return self.doWork(() => fn(iterator.value, iterator.key, iterate));\n      }\n      callback();\n    })();\n  }\n\n  // asynchronous waterfall\n  waterfall(fns, callback) {\n    const self = this;\n    self.forEach(\n      fns, (fn, idx, callback) => self.doWork(fn, callback), callback);\n  }\n\n  // asynchronous while\n  whilst(condition, fn, callback) {\n    const self = this;\n    (function loop(err) {\n      if(err) {\n        return callback(err);\n      }\n      if(!condition()) {\n        return callback();\n      }\n      self.doWork(fn, loop);\n    })();\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/rdf-canonize/lib/AsyncAlgorithm.js?");

/***/ }),

/***/ "./node_modules/rdf-canonize/lib/IdentifierIssuer.js":
/*!***********************************************************!*\
  !*** ./node_modules/rdf-canonize/lib/IdentifierIssuer.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2016-2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst util = __webpack_require__(/*! ./util */ \"./node_modules/rdf-canonize/lib/util.js\");\n\nmodule.exports = class IdentifierIssuer {\n  /**\n   * Creates a new IdentifierIssuer. A IdentifierIssuer issues unique\n   * identifiers, keeping track of any previously issued identifiers.\n   *\n   * @param prefix the prefix to use ('<prefix><counter>').\n   */\n  constructor(prefix) {\n    this.prefix = prefix;\n    this.counter = 0;\n    this.existing = {};\n  }\n\n  /**\n   * Copies this IdentifierIssuer.\n   *\n   * @return a copy of this IdentifierIssuer.\n   */\n  clone() {\n    const copy = new IdentifierIssuer(this.prefix);\n    copy.counter = this.counter;\n    copy.existing = util.clone(this.existing);\n    return copy;\n  }\n\n  /**\n   * Gets the new identifier for the given old identifier, where if no old\n   * identifier is given a new identifier will be generated.\n   *\n   * @param [old] the old identifier to get the new identifier for.\n   *\n   * @return the new identifier.\n   */\n  getId(old) {\n    // return existing old identifier\n    if(old && old in this.existing) {\n      return this.existing[old];\n    }\n\n    // get next identifier\n    const identifier = this.prefix + this.counter;\n    this.counter += 1;\n\n    // save mapping\n    if(old) {\n      this.existing[old] = identifier;\n    }\n\n    return identifier;\n  }\n\n  /**\n   * Returns true if the given old identifer has already been assigned a new\n   * identifier.\n   *\n   * @param old the old identifier to check.\n   *\n   * @return true if the old identifier has been assigned a new identifier,\n   *   false if not.\n   */\n  hasId(old) {\n    return (old in this.existing);\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/rdf-canonize/lib/IdentifierIssuer.js?");

/***/ }),

/***/ "./node_modules/rdf-canonize/lib/MessageDigest-browser.js":
/*!****************************************************************!*\
  !*** ./node_modules/rdf-canonize/lib/MessageDigest-browser.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2016-2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst forge = __webpack_require__(/*! node-forge/lib/forge */ \"./node_modules/node-forge/lib/forge.js\");\n__webpack_require__(/*! node-forge/lib/md */ \"./node_modules/node-forge/lib/md.js\");\n__webpack_require__(/*! node-forge/lib/sha1 */ \"./node_modules/node-forge/lib/sha1.js\");\n__webpack_require__(/*! node-forge/lib/sha256 */ \"./node_modules/node-forge/lib/sha256.js\");\n\nmodule.exports = class MessageDigest {\n  /**\n   * Creates a new MessageDigest.\n   *\n   * @param algorithm the algorithm to use.\n   */\n  constructor(algorithm) {\n    this.md = forge.md[algorithm].create();\n  }\n\n  update(msg) {\n    this.md.update(msg, 'utf8');\n  }\n\n  digest() {\n    return this.md.digest().toHex();\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/rdf-canonize/lib/MessageDigest-browser.js?");

/***/ }),

/***/ "./node_modules/rdf-canonize/lib/NQuads.js":
/*!*************************************************!*\
  !*** ./node_modules/rdf-canonize/lib/NQuads.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2016-2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst TERMS = ['subject', 'predicate', 'object', 'graph'];\nconst RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nconst RDF_LANGSTRING = RDF + 'langString';\nconst XSD_STRING = 'http://www.w3.org/2001/XMLSchema#string';\n\n// build regexes\nconst REGEX = {};\n(() => {\n  const iri = '(?:<([^:]+:[^>]*)>)';\n  // https://www.w3.org/TR/turtle/#grammar-production-BLANK_NODE_LABEL\n  const PN_CHARS_BASE =\n    'A-Z' + 'a-z' +\n    '\\u00C0-\\u00D6' +\n    '\\u00D8-\\u00F6' +\n    '\\u00F8-\\u02FF' +\n    '\\u0370-\\u037D' +\n    '\\u037F-\\u1FFF' +\n    '\\u200C-\\u200D' +\n    '\\u2070-\\u218F' +\n    '\\u2C00-\\u2FEF' +\n    '\\u3001-\\uD7FF' +\n    '\\uF900-\\uFDCF' +\n    '\\uFDF0-\\uFFFD';\n    // TODO:\n    //'\\u10000-\\uEFFFF';\n  const PN_CHARS_U =\n    PN_CHARS_BASE +\n    '_';\n  const PN_CHARS =\n    PN_CHARS_U +\n    '0-9' +\n    '-' +\n    '\\u00B7' +\n    '\\u0300-\\u036F' +\n    '\\u203F-\\u2040';\n  const BLANK_NODE_LABEL =\n    '(_:' +\n      '(?:[' + PN_CHARS_U + '0-9])' +\n      '(?:(?:[' + PN_CHARS + '.])*(?:[' + PN_CHARS + ']))?' +\n    ')';\n  const bnode = BLANK_NODE_LABEL;\n  const plain = '\"([^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*)\"';\n  const datatype = '(?:\\\\^\\\\^' + iri + ')';\n  const language = '(?:@([a-zA-Z]+(?:-[a-zA-Z0-9]+)*))';\n  const literal = '(?:' + plain + '(?:' + datatype + '|' + language + ')?)';\n  const ws = '[ \\\\t]+';\n  const wso = '[ \\\\t]*';\n\n  // define quad part regexes\n  const subject = '(?:' + iri + '|' + bnode + ')' + ws;\n  const property = iri + ws;\n  const object = '(?:' + iri + '|' + bnode + '|' + literal + ')' + wso;\n  const graphName = '(?:\\\\.|(?:(?:' + iri + '|' + bnode + ')' + wso + '\\\\.))';\n\n  // end of line and empty regexes\n  REGEX.eoln = /(?:\\r\\n)|(?:\\n)|(?:\\r)/g;\n  REGEX.empty = new RegExp('^' + wso + '$');\n\n  // full quad regex\n  REGEX.quad = new RegExp(\n    '^' + wso + subject + property + object + graphName + wso + '$');\n})();\n\nmodule.exports = class NQuads {\n  /**\n   * Parses RDF in the form of N-Quads.\n   *\n   * @param input the N-Quads input to parse.\n   *\n   * @return an RDF dataset (an array of quads per http://rdf.js.org/).\n   */\n  static parse(input) {\n    // build RDF dataset\n    const dataset = [];\n\n    const graphs = {};\n\n    // split N-Quad input into lines\n    const lines = input.split(REGEX.eoln);\n    let lineNumber = 0;\n    for(const line of lines) {\n      lineNumber++;\n\n      // skip empty lines\n      if(REGEX.empty.test(line)) {\n        continue;\n      }\n\n      // parse quad\n      const match = line.match(REGEX.quad);\n      if(match === null) {\n        throw new Error('N-Quads parse error on line ' + lineNumber + '.');\n      }\n\n      // create RDF quad\n      const quad = {};\n\n      // get subject\n      if(match[1] !== undefined) {\n        quad.subject = {termType: 'NamedNode', value: match[1]};\n      } else {\n        quad.subject = {termType: 'BlankNode', value: match[2]};\n      }\n\n      // get predicate\n      quad.predicate = {termType: 'NamedNode', value: match[3]};\n\n      // get object\n      if(match[4] !== undefined) {\n        quad.object = {termType: 'NamedNode', value: match[4]};\n      } else if(match[5] !== undefined) {\n        quad.object = {termType: 'BlankNode', value: match[5]};\n      } else {\n        quad.object = {\n          termType: 'Literal',\n          value: undefined,\n          datatype: {\n            termType: 'NamedNode'\n          }\n        };\n        if(match[7] !== undefined) {\n          quad.object.datatype.value = match[7];\n        } else if(match[8] !== undefined) {\n          quad.object.datatype.value = RDF_LANGSTRING;\n          quad.object.language = match[8];\n        } else {\n          quad.object.datatype.value = XSD_STRING;\n        }\n        quad.object.value = _unescape(match[6]);\n      }\n\n      // get graph\n      if(match[9] !== undefined) {\n        quad.graph = {\n          termType: 'NamedNode',\n          value: match[9]\n        };\n      } else if(match[10] !== undefined) {\n        quad.graph = {\n          termType: 'BlankNode',\n          value: match[10]\n        };\n      } else {\n        quad.graph = {\n          termType: 'DefaultGraph',\n          value: ''\n        };\n      }\n\n      // only add quad if it is unique in its graph\n      if(!(quad.graph.value in graphs)) {\n        graphs[quad.graph.value] = [quad];\n        dataset.push(quad);\n      } else {\n        let unique = true;\n        const quads = graphs[quad.graph.value];\n        for(const q of quads) {\n          if(_compareTriples(q, quad)) {\n            unique = false;\n            break;\n          }\n        }\n        if(unique) {\n          quads.push(quad);\n          dataset.push(quad);\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  /**\n   * Converts an RDF dataset to N-Quads.\n   *\n   * @param dataset (array of quads) the RDF dataset to convert.\n   *\n   * @return the N-Quads string.\n   */\n  static serialize(dataset) {\n    if(!Array.isArray(dataset)) {\n      dataset = NQuads.legacyDatasetToQuads(dataset);\n    }\n    const quads = [];\n    for(const quad of dataset) {\n      quads.push(NQuads.serializeQuad(quad));\n    }\n    return quads.sort().join('');\n  }\n\n  /**\n   * Converts an RDF quad to an N-Quad string (a single quad).\n   *\n   * @param quad the RDF quad convert.\n   *\n   * @return the N-Quad string.\n   */\n  static serializeQuad(quad) {\n    const s = quad.subject;\n    const p = quad.predicate;\n    const o = quad.object;\n    const g = quad.graph;\n\n    let nquad = '';\n\n    // subject and predicate can only be NamedNode or BlankNode\n    [s, p].forEach(term => {\n      if(term.termType === 'NamedNode') {\n        nquad += '<' + term.value + '>';\n      } else {\n        nquad += term.value;\n      }\n      nquad += ' ';\n    });\n\n    // object is NamedNode, BlankNode, or Literal\n    if(o.termType === 'NamedNode') {\n      nquad += '<' + o.value + '>';\n    } else if(o.termType === 'BlankNode') {\n      nquad += o.value;\n    } else {\n      nquad += '\"' + _escape(o.value) + '\"';\n      if(o.datatype.value === RDF_LANGSTRING) {\n        if(o.language) {\n          nquad += '@' + o.language;\n        }\n      } else if(o.datatype.value !== XSD_STRING) {\n        nquad += '^^<' + o.datatype.value + '>';\n      }\n    }\n\n    // graph can only be NamedNode or BlankNode (or DefaultGraph, but that\n    // does not add to `nquad`)\n    if(g.termType === 'NamedNode') {\n      nquad += ' <' + g.value + '>';\n    } else if(g.termType === 'BlankNode') {\n      nquad += ' ' + g.value;\n    }\n\n    nquad += ' .\\n';\n    return nquad;\n  }\n\n  /**\n   * Converts a legacy-formatted dataset to an array of quads dataset per\n   * http://rdf.js.org/.\n   *\n   * @param dataset the legacy dataset to convert.\n   *\n   * @return the array of quads dataset.\n   */\n  static legacyDatasetToQuads(dataset) {\n    const quads = [];\n\n    const termTypeMap = {\n      'blank node': 'BlankNode',\n      'IRI': 'NamedNode',\n      'literal': 'Literal'\n    };\n\n    for(const graphName in dataset) {\n      const triples = dataset[graphName];\n      triples.forEach(triple => {\n        const quad = {};\n        for(const componentName in triple) {\n          const oldComponent = triple[componentName];\n          const newComponent = {\n            termType: termTypeMap[oldComponent.type],\n            value: oldComponent.value\n          };\n          if(newComponent.termType === 'Literal') {\n            newComponent.datatype = {\n              termType: 'NamedNode'\n            };\n            if('datatype' in oldComponent) {\n              newComponent.datatype.value = oldComponent.datatype;\n            }\n            if('language' in oldComponent) {\n              if(!('datatype' in oldComponent)) {\n                newComponent.datatype.value = RDF_LANGSTRING;\n              }\n              newComponent.language = oldComponent.language;\n            } else if(!('datatype' in oldComponent)) {\n              newComponent.datatype.value = XSD_STRING;\n            }\n          }\n          quad[componentName] = newComponent;\n        }\n        if(graphName === '@default') {\n          quad.graph = {\n            termType: 'DefaultGraph',\n            value: ''\n          };\n        } else {\n          quad.graph = {\n            termType: graphName.startsWith('_:') ? 'BlankNode' : 'NamedNode',\n            value: graphName\n          };\n        }\n        quads.push(quad);\n      });\n    }\n\n    return quads;\n  }\n};\n\n/**\n * Compares two RDF triples for equality.\n *\n * @param t1 the first triple.\n * @param t2 the second triple.\n *\n * @return true if the triples are the same, false if not.\n */\nfunction _compareTriples(t1, t2) {\n  for(const k in t1) {\n    if(t1[k].termType !== t2[k].termType || t1[k].value !== t2[k].value) {\n      return false;\n    }\n  }\n  if(t1.object.termType !== 'Literal') {\n    return true;\n  }\n  return (\n    (t1.object.datatype.termType === t2.object.datatype.termType) &&\n    (t1.object.datatype.value === t2.object.datatype.value) &&\n    (t1.object.language === t2.object.language)\n  );\n}\n\nconst _escapeRegex = /[\"\\\\\\n\\r]/g;\n/**\n * Escape string to N-Quads literal\n */\nfunction _escape(s) {\n  return s.replace(_escapeRegex, function(match) {\n    switch(match) {\n      case '\"': return '\\\\\"';\n      case '\\\\': return '\\\\\\\\';\n      case '\\n': return '\\\\n';\n      case '\\r': return '\\\\r';\n    }\n  });\n}\n\nconst _unescapeRegex =\n  /(?:\\\\([tbnrf\"'\\\\]))|(?:\\\\u([0-9A-Fa-f]{4}))|(?:\\\\U([0-9A-Fa-f]{8}))/g;\n/**\n * Unescape N-Quads literal to string\n */\nfunction _unescape(s) {\n  return s.replace(_unescapeRegex, function(match, code, u, U) {\n    if(code) {\n      switch(code) {\n        case 't': return '\\t';\n        case 'b': return '\\b';\n        case 'n': return '\\n';\n        case 'r': return '\\r';\n        case 'f': return '\\f';\n        case '\"': return '\"';\n        case '\\'': return '\\'';\n        case '\\\\': return '\\\\';\n      }\n    }\n    if(u) {\n      return String.fromCharCode(parseInt(u, 16));\n    }\n    if(U) {\n      // FIXME: support larger values\n      throw new Error('Unsupported U escape');\n    }\n  });\n}\n\n\n//# sourceURL=webpack:///./node_modules/rdf-canonize/lib/NQuads.js?");

/***/ }),

/***/ "./node_modules/rdf-canonize/lib/Permutator.js":
/*!*****************************************************!*\
  !*** ./node_modules/rdf-canonize/lib/Permutator.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2016-2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\n// TODO: convert to ES6 iterable\n\nmodule.exports = class Permutator {\n  /**\n   * A Permutator iterates over all possible permutations of the given array\n   * of elements.\n   *\n   * @param list the array of elements to iterate over.\n   */\n  constructor(list) {\n    // original array\n    this.list = list.sort();\n    // indicates whether there are more permutations\n    this.done = false;\n    // directional info for permutation algorithm\n    this.left = {};\n    for(let i = 0; i < list.length; ++i) {\n      this.left[list[i]] = true;\n    }\n  }\n\n  /**\n   * Returns true if there is another permutation.\n   *\n   * @return true if there is another permutation, false if not.\n   */\n  hasNext() {\n    return !this.done;\n  }\n\n  /**\n   * Gets the next permutation. Call hasNext() to ensure there is another one\n   * first.\n   *\n   * @return the next permutation.\n   */\n  next() {\n    // copy current permutation\n    const rval = this.list.slice();\n\n    /* Calculate the next permutation using the Steinhaus-Johnson-Trotter\n     permutation algorithm. */\n\n    // get largest mobile element k\n    // (mobile: element is greater than the one it is looking at)\n    let k = null;\n    let pos = 0;\n    const length = this.list.length;\n    for(let i = 0; i < length; ++i) {\n      const element = this.list[i];\n      const left = this.left[element];\n      if((k === null || element > k) &&\n        ((left && i > 0 && element > this.list[i - 1]) ||\n        (!left && i < (length - 1) && element > this.list[i + 1]))) {\n        k = element;\n        pos = i;\n      }\n    }\n\n    // no more permutations\n    if(k === null) {\n      this.done = true;\n    } else {\n      // swap k and the element it is looking at\n      const swap = this.left[k] ? pos - 1 : pos + 1;\n      this.list[pos] = this.list[swap];\n      this.list[swap] = k;\n\n      // reverse the direction of all elements larger than k\n      for(let i = 0; i < length; ++i) {\n        if(this.list[i] > k) {\n          this.left[this.list[i]] = !this.left[this.list[i]];\n        }\n      }\n    }\n\n    return rval;\n  }\n};\n\n\n\n//# sourceURL=webpack:///./node_modules/rdf-canonize/lib/Permutator.js?");

/***/ }),

/***/ "./node_modules/rdf-canonize/lib/URDNA2015.js":
/*!****************************************************!*\
  !*** ./node_modules/rdf-canonize/lib/URDNA2015.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2016-2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst AsyncAlgorithm = __webpack_require__(/*! ./AsyncAlgorithm */ \"./node_modules/rdf-canonize/lib/AsyncAlgorithm.js\");\nconst IdentifierIssuer = __webpack_require__(/*! ./IdentifierIssuer */ \"./node_modules/rdf-canonize/lib/IdentifierIssuer.js\");\nconst MessageDigest = __webpack_require__(/*! ./MessageDigest */ \"./node_modules/rdf-canonize/lib/MessageDigest-browser.js\");\nconst Permutator = __webpack_require__(/*! ./Permutator */ \"./node_modules/rdf-canonize/lib/Permutator.js\");\nconst NQuads = __webpack_require__(/*! ./NQuads */ \"./node_modules/rdf-canonize/lib/NQuads.js\");\nconst util = __webpack_require__(/*! ./util */ \"./node_modules/rdf-canonize/lib/util.js\");\n\nconst POSITIONS = {subject: 's', object: 'o', graph: 'g'};\n\nmodule.exports = class URDNA2015 extends AsyncAlgorithm {\n  constructor(options) {\n    options = options || {};\n    super(options);\n    this.name = 'URDNA2015';\n    this.options = Object.assign({}, options);\n    this.blankNodeInfo = {};\n    this.hashToBlankNodes = {};\n    this.canonicalIssuer = new IdentifierIssuer('_:c14n');\n    this.hashAlgorithm = 'sha256';\n    this.quads;\n  }\n\n  // 4.4) Normalization Algorithm\n  main(dataset, callback) {\n    const self = this;\n    self.schedule.start = Date.now();\n    let result;\n    self.quads = dataset;\n\n    // 1) Create the normalization state.\n\n    // Note: Optimize by generating non-normalized blank node map concurrently.\n    const nonNormalized = {};\n\n    self.waterfall([\n      callback => {\n        // 2) For every quad in input dataset:\n        self.forEach(dataset, (quad, idx, callback) => {\n          // 2.1) For each blank node that occurs in the quad, add a reference\n          // to the quad using the blank node identifier in the blank node to\n          // quads map, creating a new entry if necessary.\n          self.forEachComponent(quad, component => {\n            if(component.termType !== 'BlankNode') {\n              return;\n            }\n            const id = component.value;\n            if(id in self.blankNodeInfo) {\n              self.blankNodeInfo[id].quads.push(quad);\n            } else {\n              nonNormalized[id] = true;\n              self.blankNodeInfo[id] = {quads: [quad]};\n            }\n          });\n\n          callback();\n        }, callback);\n      },\n      callback => {\n        // 3) Create a list of non-normalized blank node identifiers\n        // non-normalized identifiers and populate it using the keys from the\n        // blank node to quads map.\n        // Note: We use a map here and it was generated during step 2.\n\n        // 4) Initialize simple, a boolean flag, to true.\n        let simple = true;\n\n        // 5) While simple is true, issue canonical identifiers for blank nodes:\n        self.whilst(() => simple, callback => {\n          // 5.1) Set simple to false.\n          simple = false;\n\n          // 5.2) Clear hash to blank nodes map.\n          self.hashToBlankNodes = {};\n\n          self.waterfall([\n            callback => {\n              // 5.3) For each blank node identifier identifier in\n              // non-normalized identifiers:\n              self.forEach(nonNormalized, (value, id, callback) => {\n                // 5.3.1) Create a hash, hash, according to the Hash First\n                // Degree Quads algorithm.\n                self.hashFirstDegreeQuads(id, (err, hash) => {\n                  if(err) {\n                    return callback(err);\n                  }\n                  // 5.3.2) Add hash and identifier to hash to blank nodes map,\n                  // creating a new entry if necessary.\n                  if(hash in self.hashToBlankNodes) {\n                    self.hashToBlankNodes[hash].push(id);\n                  } else {\n                    self.hashToBlankNodes[hash] = [id];\n                  }\n                  callback();\n                });\n              }, callback);\n            },\n            callback => {\n              // 5.4) For each hash to identifier list mapping in hash to blank\n              // nodes map, lexicographically-sorted by hash:\n              const hashes = Object.keys(self.hashToBlankNodes).sort();\n              self.forEach(hashes, (hash, i, callback) => {\n                // 5.4.1) If the length of identifier list is greater than 1,\n                // continue to the next mapping.\n                const idList = self.hashToBlankNodes[hash];\n                if(idList.length > 1) {\n                  return callback();\n                }\n\n                // 5.4.2) Use the Issue Identifier algorithm, passing canonical\n                // issuer and the single blank node identifier in identifier\n                // list, identifier, to issue a canonical replacement identifier\n                // for identifier.\n                // TODO: consider changing `getId` to `issue`\n                const id = idList[0];\n                self.canonicalIssuer.getId(id);\n\n                // 5.4.3) Remove identifier from non-normalized identifiers.\n                delete nonNormalized[id];\n\n                // 5.4.4) Remove hash from the hash to blank nodes map.\n                delete self.hashToBlankNodes[hash];\n\n                // 5.4.5) Set simple to true.\n                simple = true;\n                callback();\n              }, callback);\n            }\n          ], callback);\n        }, callback);\n      },\n      callback => {\n        // 6) For each hash to identifier list mapping in hash to blank nodes\n        // map, lexicographically-sorted by hash:\n        const hashes = Object.keys(self.hashToBlankNodes).sort();\n        self.forEach(hashes, (hash, idx, callback) => {\n          // 6.1) Create hash path list where each item will be a result of\n          // running the Hash N-Degree Quads algorithm.\n          const hashPathList = [];\n\n          // 6.2) For each blank node identifier identifier in identifier list:\n          const idList = self.hashToBlankNodes[hash];\n          self.waterfall([\n            callback => {\n              self.forEach(idList, (id, idx, callback) => {\n                // 6.2.1) If a canonical identifier has already been issued for\n                // identifier, continue to the next identifier.\n                if(self.canonicalIssuer.hasId(id)) {\n                  return callback();\n                }\n\n                // 6.2.2) Create temporary issuer, an identifier issuer\n                // initialized with the prefix _:b.\n                const issuer = new IdentifierIssuer('_:b');\n\n                // 6.2.3) Use the Issue Identifier algorithm, passing temporary\n                // issuer and identifier, to issue a new temporary blank node\n                // identifier for identifier.\n                issuer.getId(id);\n\n                // 6.2.4) Run the Hash N-Degree Quads algorithm, passing\n                // temporary issuer, and append the result to the hash path\n                // list.\n                self.hashNDegreeQuads(id, issuer, (err, result) => {\n                  if(err) {\n                    return callback(err);\n                  }\n                  hashPathList.push(result);\n                  callback();\n                });\n              }, callback);\n            },\n            callback => {\n              // 6.3) For each result in the hash path list,\n              // lexicographically-sorted by the hash in result:\n              // TODO: use `String.localeCompare`?\n              hashPathList.sort((a, b) =>\n                (a.hash < b.hash) ? -1 : ((a.hash > b.hash) ? 1 : 0));\n              self.forEach(hashPathList, (result, idx, callback) => {\n                // 6.3.1) For each blank node identifier, existing identifier,\n                // that was issued a temporary identifier by identifier issuer\n                // in result, issue a canonical identifier, in the same order,\n                // using the Issue Identifier algorithm, passing canonical\n                // issuer and existing identifier.\n                for(const existing in result.issuer.existing) {\n                  self.canonicalIssuer.getId(existing);\n                }\n                callback();\n              }, callback);\n            }\n          ], callback);\n        }, callback);\n      }, callback => {\n        /* Note: At this point all blank nodes in the set of RDF quads have been\n        assigned canonical identifiers, which have been stored in the canonical\n        issuer. Here each quad is updated by assigning each of its blank nodes\n        its new identifier. */\n\n        // 7) For each quad, quad, in input dataset:\n        const normalized = [];\n        self.waterfall([\n          callback => {\n            self.forEach(self.quads, (quad, idx, callback) => {\n              // 7.1) Create a copy, quad copy, of quad and replace any existing\n              // blank node identifiers using the canonical identifiers\n              // previously issued by canonical issuer.\n              // Note: We optimize away the copy here.\n              self.forEachComponent(quad, component => {\n                if(component.termType === 'BlankNode' &&\n                  !component.value.startsWith(self.canonicalIssuer.prefix)) {\n                  component.value = self.canonicalIssuer.getId(component.value);\n                }\n              });\n              // 7.2) Add quad copy to the normalized dataset.\n              normalized.push(NQuads.serializeQuad(quad));\n              callback();\n            }, callback);\n          },\n          callback => {\n            // sort normalized output\n            normalized.sort();\n\n            // 8) Return the normalized dataset.\n            result = normalized.join('');\n            return callback();\n          }\n        ], callback);\n      }\n    ], err => callback(err, result));\n  }\n\n  // 4.6) Hash First Degree Quads\n  hashFirstDegreeQuads(id, callback) {\n    const self = this;\n\n    // return cached hash\n    const info = self.blankNodeInfo[id];\n    if('hash' in info) {\n      return callback(null, info.hash);\n    }\n\n    // 1) Initialize nquads to an empty list. It will be used to store quads in\n    // N-Quads format.\n    const nquads = [];\n\n    // 2) Get the list of quads quads associated with the reference blank node\n    // identifier in the blank node to quads map.\n    const quads = info.quads;\n\n    // 3) For each quad quad in quads:\n    self.forEach(quads, (quad, idx, callback) => {\n      // 3.1) Serialize the quad in N-Quads format with the following special\n      // rule:\n\n      // 3.1.1) If any component in quad is an blank node, then serialize it\n      // using a special identifier as follows:\n      const copy = {predicate: quad.predicate};\n      self.forEachComponent(quad, (component, key) => {\n        // 3.1.2) If the blank node's existing blank node identifier matches the\n        // reference blank node identifier then use the blank node identifier\n        // _:a, otherwise, use the blank node identifier _:z.\n        copy[key] = self.modifyFirstDegreeComponent(id, component, key);\n      });\n      nquads.push(NQuads.serializeQuad(copy));\n      callback();\n    }, err => {\n      if(err) {\n        return callback(err);\n      }\n      // 4) Sort nquads in lexicographical order.\n      nquads.sort();\n\n      // 5) Return the hash that results from passing the sorted, joined nquads\n      // through the hash algorithm.\n      const md = new MessageDigest(self.hashAlgorithm);\n      for(let i = 0; i < nquads.length; ++i) {\n        md.update(nquads[i]);\n      }\n      // TODO: represent as byte buffer instead to cut memory usage in half\n      info.hash = md.digest();\n      callback(null, info.hash);\n    });\n  }\n\n  // 4.7) Hash Related Blank Node\n  hashRelatedBlankNode(related, quad, issuer, position, callback) {\n    const self = this;\n\n    // 1) Set the identifier to use for related, preferring first the canonical\n    // identifier for related if issued, second the identifier issued by issuer\n    // if issued, and last, if necessary, the result of the Hash First Degree\n    // Quads algorithm, passing related.\n    let id;\n    self.waterfall([\n      callback => {\n        if(self.canonicalIssuer.hasId(related)) {\n          id = self.canonicalIssuer.getId(related);\n          return callback();\n        }\n        if(issuer.hasId(related)) {\n          id = issuer.getId(related);\n          return callback();\n        }\n        self.hashFirstDegreeQuads(related, (err, hash) => {\n          if(err) {\n            return callback(err);\n          }\n          id = hash;\n          callback();\n        });\n      }\n    ], err => {\n      if(err) {\n        return callback(err);\n      }\n\n      // 2) Initialize a string input to the value of position.\n      // Note: We use a hash object instead.\n      const md = new MessageDigest(self.hashAlgorithm);\n      md.update(position);\n\n      // 3) If position is not g, append <, the value of the predicate in quad,\n      // and > to input.\n      if(position !== 'g') {\n        md.update(self.getRelatedPredicate(quad));\n      }\n\n      // 4) Append identifier to input.\n      md.update(id);\n\n      // 5) Return the hash that results from passing input through the hash\n      // algorithm.\n      // TODO: represent as byte buffer instead to cut memory usage in half\n      return callback(null, md.digest());\n    });\n  }\n\n  // 4.8) Hash N-Degree Quads\n  hashNDegreeQuads(id, issuer, callback) {\n    const self = this;\n\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    // Note: 2) and 3) handled within `createHashToRelated`\n    let hashToRelated;\n    const md = new MessageDigest(self.hashAlgorithm);\n    self.waterfall([\n      callback => self.createHashToRelated(id, issuer, (err, result) => {\n        if(err) {\n          return callback(err);\n        }\n        hashToRelated = result;\n        callback();\n      }),\n      callback => {\n        // 4) Create an empty string, data to hash.\n        // Note: We created a hash object `md` above instead.\n\n        // 5) For each related hash to blank node list mapping in hash to\n        // related blank nodes map, sorted lexicographically by related hash:\n        const hashes = Object.keys(hashToRelated).sort();\n        self.forEach(hashes, (hash, idx, callback) => {\n          // 5.1) Append the related hash to the data to hash.\n          md.update(hash);\n\n          // 5.2) Create a string chosen path.\n          let chosenPath = '';\n\n          // 5.3) Create an unset chosen issuer variable.\n          let chosenIssuer;\n\n          // 5.4) For each permutation of blank node list:\n          const permutator = new Permutator(hashToRelated[hash]);\n          self.whilst(() => permutator.hasNext(), nextPermutation => {\n            const permutation = permutator.next();\n\n            // 5.4.1) Create a copy of issuer, issuer copy.\n            let issuerCopy = issuer.clone();\n\n            // 5.4.2) Create a string path.\n            let path = '';\n\n            // 5.4.3) Create a recursion list, to store blank node identifiers\n            // that must be recursively processed by this algorithm.\n            const recursionList = [];\n\n            self.waterfall([\n              callback => {\n                // 5.4.4) For each related in permutation:\n                self.forEach(permutation, (related, idx, callback) => {\n                  // 5.4.4.1) If a canonical identifier has been issued for\n                  // related, append it to path.\n                  if(self.canonicalIssuer.hasId(related)) {\n                    path += self.canonicalIssuer.getId(related);\n                  } else {\n                    // 5.4.4.2) Otherwise:\n                    // 5.4.4.2.1) If issuer copy has not issued an identifier\n                    // for related, append related to recursion list.\n                    if(!issuerCopy.hasId(related)) {\n                      recursionList.push(related);\n                    }\n                    // 5.4.4.2.2) Use the Issue Identifier algorithm, passing\n                    // issuer copy and related and append the result to path.\n                    path += issuerCopy.getId(related);\n                  }\n\n                  // 5.4.4.3) If chosen path is not empty and the length of path\n                  // is greater than or equal to the length of chosen path and\n                  // path is lexicographically greater than chosen path, then\n                  // skip to the next permutation.\n                  if(chosenPath.length !== 0 &&\n                    path.length >= chosenPath.length && path > chosenPath) {\n                    // FIXME: may cause inaccurate total depth calculation\n                    return nextPermutation();\n                  }\n                  callback();\n                }, callback);\n              },\n              callback => {\n                // 5.4.5) For each related in recursion list:\n                self.forEach(recursionList, (related, idx, callback) => {\n                  // 5.4.5.1) Set result to the result of recursively executing\n                  // the Hash N-Degree Quads algorithm, passing related for\n                  // identifier and issuer copy for path identifier issuer.\n                  self.hashNDegreeQuads(related, issuerCopy, (err, result) => {\n                    if(err) {\n                      return callback(err);\n                    }\n\n                    // 5.4.5.2) Use the Issue Identifier algorithm, passing\n                    // issuer copy and related and append the result to path.\n                    path += issuerCopy.getId(related);\n\n                    // 5.4.5.3) Append <, the hash in result, and > to path.\n                    path += '<' + result.hash + '>';\n\n                    // 5.4.5.4) Set issuer copy to the identifier issuer in\n                    // result.\n                    issuerCopy = result.issuer;\n\n                    // 5.4.5.5) If chosen path is not empty and the length of\n                    // path is greater than or equal to the length of chosen\n                    // path and path is lexicographically greater than chosen\n                    // path, then skip to the next permutation.\n                    if(chosenPath.length !== 0 &&\n                      path.length >= chosenPath.length && path > chosenPath) {\n                      // FIXME: may cause inaccurate total depth calculation\n                      return nextPermutation();\n                    }\n                    callback();\n                  });\n                }, callback);\n              },\n              callback => {\n                // 5.4.6) If chosen path is empty or path is lexicographically\n                // less than chosen path, set chosen path to path and chosen\n                // issuer to issuer copy.\n                if(chosenPath.length === 0 || path < chosenPath) {\n                  chosenPath = path;\n                  chosenIssuer = issuerCopy;\n                }\n                callback();\n              }\n            ], nextPermutation);\n          }, err => {\n            if(err) {\n              return callback(err);\n            }\n\n            // 5.5) Append chosen path to data to hash.\n            md.update(chosenPath);\n\n            // 5.6) Replace issuer, by reference, with chosen issuer.\n            issuer = chosenIssuer;\n            callback();\n          });\n        }, callback);\n      }\n    ], err => {\n      // 6) Return issuer and the hash that results from passing data to hash\n      // through the hash algorithm.\n      callback(err, {hash: md.digest(), issuer});\n    });\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    component = util.clone(component);\n    component.value = (component.value === id ? '_:a' : '_:z');\n    return component;\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return '<' + quad.predicate.value + '>';\n  }\n\n  // helper for creating hash to related blank nodes map\n  createHashToRelated(id, issuer, callback) {\n    const self = this;\n\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = {};\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = self.blankNodeInfo[id].quads;\n\n    // 3) For each quad in quads:\n    self.forEach(quads, (quad, idx, callback) => {\n      // 3.1) For each component in quad, if component is the subject, object,\n      // and graph name and it is a blank node that is not identified by\n      // identifier:\n      self.forEach(quad, (component, key, callback) => {\n        if(key === 'predicate' ||\n          !(component.termType === 'BlankNode' && component.value !== id)) {\n          return callback();\n        }\n        // 3.1.1) Set hash to the result of the Hash Related Blank Node\n        // algorithm, passing the blank node identifier for component as\n        // related, quad, path identifier issuer as issuer, and position as\n        // either s, o, or g based on whether component is a subject, object,\n        // graph name, respectively.\n        const related = component.value;\n        const position = POSITIONS[key];\n        self.hashRelatedBlankNode(\n          related, quad, issuer, position, (err, hash) => {\n          if(err) {\n            return callback(err);\n          }\n          // 3.1.2) Add a mapping of hash to the blank node identifier for\n          // component to hash to related blank nodes map, adding an entry as\n          // necessary.\n          if(hash in hashToRelated) {\n            hashToRelated[hash].push(related);\n          } else {\n            hashToRelated[hash] = [related];\n          }\n          callback();\n        });\n      }, callback);\n    }, err => callback(err, hashToRelated));\n  }\n\n  // helper that iterates over quad components (skips predicate)\n  forEachComponent(quad, op) {\n    for(const key in quad) {\n      // skip `predicate`\n      if(key === 'predicate') {\n        continue;\n      }\n      op(quad[key], key, quad);\n    }\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/rdf-canonize/lib/URDNA2015.js?");

/***/ }),

/***/ "./node_modules/rdf-canonize/lib/URDNA2015Sync.js":
/*!********************************************************!*\
  !*** ./node_modules/rdf-canonize/lib/URDNA2015Sync.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2016 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst IdentifierIssuer = __webpack_require__(/*! ./IdentifierIssuer */ \"./node_modules/rdf-canonize/lib/IdentifierIssuer.js\");\nconst MessageDigest = __webpack_require__(/*! ./MessageDigest */ \"./node_modules/rdf-canonize/lib/MessageDigest-browser.js\");\nconst Permutator = __webpack_require__(/*! ./Permutator */ \"./node_modules/rdf-canonize/lib/Permutator.js\");\nconst NQuads = __webpack_require__(/*! ./NQuads */ \"./node_modules/rdf-canonize/lib/NQuads.js\");\nconst util = __webpack_require__(/*! ./util */ \"./node_modules/rdf-canonize/lib/util.js\");\n\nconst POSITIONS = {subject: 's', object: 'o', graph: 'g'};\n\nmodule.exports = class URDNA2015Sync {\n  constructor() {\n    this.name = 'URDNA2015';\n    this.blankNodeInfo = {};\n    this.hashToBlankNodes = {};\n    this.canonicalIssuer = new IdentifierIssuer('_:c14n');\n    this.hashAlgorithm = 'sha256';\n    this.quads;\n  }\n\n  // 4.4) Normalization Algorithm\n  main(dataset) {\n    const self = this;\n    self.quads = dataset;\n\n    // 1) Create the normalization state.\n\n    // Note: Optimize by generating non-normalized blank node map concurrently.\n    const nonNormalized = {};\n\n    // 2) For every quad in input dataset:\n    for(const quad of dataset) {\n      // 2.1) For each blank node that occurs in the quad, add a reference\n      // to the quad using the blank node identifier in the blank node to\n      // quads map, creating a new entry if necessary.\n      self.forEachComponent(quad, component => {\n        if(component.termType !== 'BlankNode') {\n          return;\n        }\n        const id = component.value;\n        if(id in self.blankNodeInfo) {\n          self.blankNodeInfo[id].quads.push(quad);\n        } else {\n          nonNormalized[id] = true;\n          self.blankNodeInfo[id] = {quads: [quad]};\n        }\n      });\n    }\n\n    // 3) Create a list of non-normalized blank node identifiers\n    // non-normalized identifiers and populate it using the keys from the\n    // blank node to quads map.\n    // Note: We use a map here and it was generated during step 2.\n\n    // 4) Initialize simple, a boolean flag, to true.\n    let simple = true;\n\n    // 5) While simple is true, issue canonical identifiers for blank nodes:\n    while(simple) {\n      // 5.1) Set simple to false.\n      simple = false;\n\n      // 5.2) Clear hash to blank nodes map.\n      self.hashToBlankNodes = {};\n\n      // 5.3) For each blank node identifier identifier in non-normalized\n      // identifiers:\n      for(const id in nonNormalized) {\n        // 5.3.1) Create a hash, hash, according to the Hash First Degree\n        // Quads algorithm.\n        const hash = self.hashFirstDegreeQuads(id);\n\n        // 5.3.2) Add hash and identifier to hash to blank nodes map,\n        // creating a new entry if necessary.\n        if(hash in self.hashToBlankNodes) {\n          self.hashToBlankNodes[hash].push(id);\n        } else {\n          self.hashToBlankNodes[hash] = [id];\n        }\n      }\n\n      // 5.4) For each hash to identifier list mapping in hash to blank\n      // nodes map, lexicographically-sorted by hash:\n      const hashes = Object.keys(self.hashToBlankNodes).sort();\n      for(let i = 0; i < hashes.length; ++i) {\n        // 5.4.1) If the length of identifier list is greater than 1,\n        // continue to the next mapping.\n        const hash = hashes[i];\n        const idList = self.hashToBlankNodes[hash];\n        if(idList.length > 1) {\n          continue;\n        }\n\n        // 5.4.2) Use the Issue Identifier algorithm, passing canonical\n        // issuer and the single blank node identifier in identifier\n        // list, identifier, to issue a canonical replacement identifier\n        // for identifier.\n        // TODO: consider changing `getId` to `issue`\n        const id = idList[0];\n        self.canonicalIssuer.getId(id);\n\n        // 5.4.3) Remove identifier from non-normalized identifiers.\n        delete nonNormalized[id];\n\n        // 5.4.4) Remove hash from the hash to blank nodes map.\n        delete self.hashToBlankNodes[hash];\n\n        // 5.4.5) Set simple to true.\n        simple = true;\n      }\n    }\n\n    // 6) For each hash to identifier list mapping in hash to blank nodes map,\n    // lexicographically-sorted by hash:\n    const hashes = Object.keys(self.hashToBlankNodes).sort();\n    for(let i = 0; i < hashes.length; ++i) {\n      // 6.1) Create hash path list where each item will be a result of\n      // running the Hash N-Degree Quads algorithm.\n      const hashPathList = [];\n\n      // 6.2) For each blank node identifier identifier in identifier list:\n      const hash = hashes[i];\n      const idList = self.hashToBlankNodes[hash];\n      for(let j = 0; j < idList.length; ++j) {\n        // 6.2.1) If a canonical identifier has already been issued for\n        // identifier, continue to the next identifier.\n        const id = idList[j];\n        if(self.canonicalIssuer.hasId(id)) {\n          continue;\n        }\n\n        // 6.2.2) Create temporary issuer, an identifier issuer\n        // initialized with the prefix _:b.\n        const issuer = new IdentifierIssuer('_:b');\n\n        // 6.2.3) Use the Issue Identifier algorithm, passing temporary\n        // issuer and identifier, to issue a new temporary blank node\n        // identifier for identifier.\n        issuer.getId(id);\n\n        // 6.2.4) Run the Hash N-Degree Quads algorithm, passing\n        // temporary issuer, and append the result to the hash path list.\n        const result = self.hashNDegreeQuads(id, issuer);\n        hashPathList.push(result);\n      }\n\n      // 6.3) For each result in the hash path list,\n      // lexicographically-sorted by the hash in result:\n      // TODO: use `String.localeCompare`?\n      hashPathList.sort((a, b) =>\n        (a.hash < b.hash) ? -1 : ((a.hash > b.hash) ? 1 : 0));\n      for(let j = 0; j < hashPathList.length; ++j) {\n        // 6.3.1) For each blank node identifier, existing identifier,\n        // that was issued a temporary identifier by identifier issuer\n        // in result, issue a canonical identifier, in the same order,\n        // using the Issue Identifier algorithm, passing canonical\n        // issuer and existing identifier.\n        const result = hashPathList[j];\n        for(const existing in result.issuer.existing) {\n          self.canonicalIssuer.getId(existing);\n        }\n      }\n    }\n\n    /* Note: At this point all blank nodes in the set of RDF quads have been\n    assigned canonical identifiers, which have been stored in the canonical\n    issuer. Here each quad is updated by assigning each of its blank nodes\n    its new identifier. */\n\n    // 7) For each quad, quad, in input dataset:\n    const normalized = [];\n    for(let i = 0; i < self.quads.length; ++i) {\n      // 7.1) Create a copy, quad copy, of quad and replace any existing\n      // blank node identifiers using the canonical identifiers\n      // previously issued by canonical issuer.\n      // Note: We optimize away the copy here.\n      const quad = self.quads[i];\n      self.forEachComponent(quad, component => {\n        if(component.termType === 'BlankNode' &&\n          !component.value.startsWith(self.canonicalIssuer.prefix)) {\n          component.value = self.canonicalIssuer.getId(component.value);\n        }\n      });\n      // 7.2) Add quad copy to the normalized dataset.\n      normalized.push(NQuads.serializeQuad(quad));\n    }\n\n    // sort normalized output\n    normalized.sort();\n\n    // 8) Return the normalized dataset.\n    return normalized.join('');\n  }\n\n  // 4.6) Hash First Degree Quads\n  hashFirstDegreeQuads(id) {\n    const self = this;\n\n    // return cached hash\n    const info = self.blankNodeInfo[id];\n    if('hash' in info) {\n      return info.hash;\n    }\n\n    // 1) Initialize nquads to an empty list. It will be used to store quads in\n    // N-Quads format.\n    const nquads = [];\n\n    // 2) Get the list of quads `quads` associated with the reference blank node\n    // identifier in the blank node to quads map.\n    const quads = info.quads;\n\n    // 3) For each quad `quad` in `quads`:\n    for(let i = 0; i < quads.length; ++i) {\n      const quad = quads[i];\n\n      // 3.1) Serialize the quad in N-Quads format with the following special\n      // rule:\n\n      // 3.1.1) If any component in quad is an blank node, then serialize it\n      // using a special identifier as follows:\n      const copy = {predicate: quad.predicate};\n      self.forEachComponent(quad, (component, key) => {\n        // 3.1.2) If the blank node's existing blank node identifier matches\n        // the reference blank node identifier then use the blank node\n        // identifier _:a, otherwise, use the blank node identifier _:z.\n        copy[key] = self.modifyFirstDegreeComponent(id, component, key);\n      });\n      nquads.push(NQuads.serializeQuad(copy));\n    }\n\n    // 4) Sort nquads in lexicographical order.\n    nquads.sort();\n\n    // 5) Return the hash that results from passing the sorted, joined nquads\n    // through the hash algorithm.\n    const md = new MessageDigest(self.hashAlgorithm);\n    for(let i = 0; i < nquads.length; ++i) {\n      md.update(nquads[i]);\n    }\n    // TODO: represent as byte buffer instead to cut memory usage in half\n    info.hash = md.digest();\n    return info.hash;\n  }\n\n  // 4.7) Hash Related Blank Node\n  hashRelatedBlankNode(related, quad, issuer, position) {\n    const self = this;\n\n    // 1) Set the identifier to use for related, preferring first the canonical\n    // identifier for related if issued, second the identifier issued by issuer\n    // if issued, and last, if necessary, the result of the Hash First Degree\n    // Quads algorithm, passing related.\n    let id;\n    if(self.canonicalIssuer.hasId(related)) {\n      id = self.canonicalIssuer.getId(related);\n    } else if(issuer.hasId(related)) {\n      id = issuer.getId(related);\n    } else {\n      id = self.hashFirstDegreeQuads(related);\n    }\n\n    // 2) Initialize a string input to the value of position.\n    // Note: We use a hash object instead.\n    const md = new MessageDigest(self.hashAlgorithm);\n    md.update(position);\n\n    // 3) If position is not g, append <, the value of the predicate in quad,\n    // and > to input.\n    if(position !== 'g') {\n      md.update(self.getRelatedPredicate(quad));\n    }\n\n    // 4) Append identifier to input.\n    md.update(id);\n\n    // 5) Return the hash that results from passing input through the hash\n    // algorithm.\n    // TODO: represent as byte buffer instead to cut memory usage in half\n    return md.digest();\n  }\n\n  // 4.8) Hash N-Degree Quads\n  hashNDegreeQuads(id, issuer) {\n    const self = this;\n\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    // Note: 2) and 3) handled within `createHashToRelated`\n    const md = new MessageDigest(self.hashAlgorithm);\n    const hashToRelated = self.createHashToRelated(id, issuer);\n\n    // 4) Create an empty string, data to hash.\n    // Note: We created a hash object `md` above instead.\n\n    // 5) For each related hash to blank node list mapping in hash to related\n    // blank nodes map, sorted lexicographically by related hash:\n    const hashes = Object.keys(hashToRelated).sort();\n    for(let i = 0; i < hashes.length; ++i) {\n      // 5.1) Append the related hash to the data to hash.\n      const hash = hashes[i];\n      md.update(hash);\n\n      // 5.2) Create a string chosen path.\n      let chosenPath = '';\n\n      // 5.3) Create an unset chosen issuer variable.\n      let chosenIssuer;\n\n      // 5.4) For each permutation of blank node list:\n      const permutator = new Permutator(hashToRelated[hash]);\n      while(permutator.hasNext()) {\n        const permutation = permutator.next();\n\n        // 5.4.1) Create a copy of issuer, issuer copy.\n        let issuerCopy = issuer.clone();\n\n        // 5.4.2) Create a string path.\n        let path = '';\n\n        // 5.4.3) Create a recursion list, to store blank node identifiers\n        // that must be recursively processed by this algorithm.\n        const recursionList = [];\n\n        // 5.4.4) For each related in permutation:\n        let nextPermutation = false;\n        for(let j = 0; j < permutation.length; ++j) {\n          // 5.4.4.1) If a canonical identifier has been issued for\n          // related, append it to path.\n          const related = permutation[j];\n          if(self.canonicalIssuer.hasId(related)) {\n            path += self.canonicalIssuer.getId(related);\n          } else {\n            // 5.4.4.2) Otherwise:\n            // 5.4.4.2.1) If issuer copy has not issued an identifier for\n            // related, append related to recursion list.\n            if(!issuerCopy.hasId(related)) {\n              recursionList.push(related);\n            }\n            // 5.4.4.2.2) Use the Issue Identifier algorithm, passing\n            // issuer copy and related and append the result to path.\n            path += issuerCopy.getId(related);\n          }\n\n          // 5.4.4.3) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          if(chosenPath.length !== 0 &&\n            path.length >= chosenPath.length && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.5) For each related in recursion list:\n        for(let j = 0; j < recursionList.length; ++j) {\n          // 5.4.5.1) Set result to the result of recursively executing\n          // the Hash N-Degree Quads algorithm, passing related for\n          // identifier and issuer copy for path identifier issuer.\n          const related = recursionList[j];\n          const result = self.hashNDegreeQuads(related, issuerCopy);\n\n          // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer\n          // copy and related and append the result to path.\n          path += issuerCopy.getId(related);\n\n          // 5.4.5.3) Append <, the hash in result, and > to path.\n          path += '<' + result.hash + '>';\n\n          // 5.4.5.4) Set issuer copy to the identifier issuer in\n          // result.\n          issuerCopy = result.issuer;\n\n          // 5.4.5.5) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          if(chosenPath.length !== 0 &&\n            path.length >= chosenPath.length && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.6) If chosen path is empty or path is lexicographically\n        // less than chosen path, set chosen path to path and chosen\n        // issuer to issuer copy.\n        if(chosenPath.length === 0 || path < chosenPath) {\n          chosenPath = path;\n          chosenIssuer = issuerCopy;\n        }\n      }\n\n      // 5.5) Append chosen path to data to hash.\n      md.update(chosenPath);\n\n      // 5.6) Replace issuer, by reference, with chosen issuer.\n      issuer = chosenIssuer;\n    }\n\n    // 6) Return issuer and the hash that results from passing data to hash\n    // through the hash algorithm.\n    return {hash: md.digest(), issuer};\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    component = util.clone(component);\n    component.value = (component.value === id ? '_:a' : '_:z');\n    return component;\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return '<' + quad.predicate.value + '>';\n  }\n\n  // helper for creating hash to related blank nodes map\n  createHashToRelated(id, issuer) {\n    const self = this;\n\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = {};\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = self.blankNodeInfo[id].quads;\n\n    // 3) For each quad in quads:\n    for(let i = 0; i < quads.length; ++i) {\n      // 3.1) For each component in quad, if component is the subject, object,\n      // and graph name and it is a blank node that is not identified by\n      // identifier:\n      const quad = quads[i];\n      for(const key in quad) {\n        const component = quad[key];\n        if(key === 'predicate' ||\n          !(component.termType === 'BlankNode' && component.value !== id)) {\n          continue;\n        }\n        // 3.1.1) Set hash to the result of the Hash Related Blank Node\n        // algorithm, passing the blank node identifier for component as\n        // related, quad, path identifier issuer as issuer, and position as\n        // either s, o, or g based on whether component is a subject, object,\n        // graph name, respectively.\n        const related = component.value;\n        const position = POSITIONS[key];\n        const hash = self.hashRelatedBlankNode(related, quad, issuer, position);\n\n        // 3.1.2) Add a mapping of hash to the blank node identifier for\n        // component to hash to related blank nodes map, adding an entry as\n        // necessary.\n        if(hash in hashToRelated) {\n          hashToRelated[hash].push(related);\n        } else {\n          hashToRelated[hash] = [related];\n        }\n      }\n    }\n\n    return hashToRelated;\n  }\n\n  // helper that iterates over quad components (skips predicate)\n  forEachComponent(quad, op) {\n    for(const key in quad) {\n      // skip `predicate`\n      if(key === 'predicate') {\n        continue;\n      }\n      op(quad[key], key, quad);\n    }\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/rdf-canonize/lib/URDNA2015Sync.js?");

/***/ }),

/***/ "./node_modules/rdf-canonize/lib/URGNA2012.js":
/*!****************************************************!*\
  !*** ./node_modules/rdf-canonize/lib/URGNA2012.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2016-2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst URDNA2015 = __webpack_require__(/*! ./URDNA2015 */ \"./node_modules/rdf-canonize/lib/URDNA2015.js\");\nconst util = __webpack_require__(/*! ./util */ \"./node_modules/rdf-canonize/lib/util.js\");\n\nmodule.exports = class URDNA2012 extends URDNA2015 {\n  constructor(options) {\n    super(options);\n    this.name = 'URGNA2012';\n    this.hashAlgorithm = 'sha1';\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component, key) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    component = util.clone(component);\n    if(key === 'name') {\n      component.value = '_:g';\n    } else {\n      component.value = (component.value === id ? '_:a' : '_:z');\n    }\n    return component;\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return quad.predicate.value;\n  }\n\n  // helper for creating hash to related blank nodes map\n  createHashToRelated(id, issuer, callback) {\n    const self = this;\n\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = {};\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = self.blankNodeInfo[id].quads;\n\n    // 3) For each quad in quads:\n    self.forEach(quads, (quad, idx, callback) => {\n      // 3.1) If the quad's subject is a blank node that does not match\n      // identifier, set hash to the result of the Hash Related Blank Node\n      // algorithm, passing the blank node identifier for subject as related,\n      // quad, path identifier issuer as issuer, and p as position.\n      let position;\n      let related;\n      if(quad.subject.termType === 'BlankNode' && quad.subject.value !== id) {\n        related = quad.subject.value;\n        position = 'p';\n      } else if(\n        quad.object.termType === 'BlankNode' && quad.object.value !== id) {\n        // 3.2) Otherwise, if quad's object is a blank node that does not match\n        // identifier, to the result of the Hash Related Blank Node algorithm,\n        // passing the blank node identifier for object as related, quad, path\n        // identifier issuer as issuer, and r as position.\n        related = quad.object.value;\n        position = 'r';\n      } else {\n        // 3.3) Otherwise, continue to the next quad.\n        return callback();\n      }\n      // 3.4) Add a mapping of hash to the blank node identifier for the\n      // component that matched (subject or object) to hash to related blank\n      // nodes map, adding an entry as necessary.\n      self.hashRelatedBlankNode(\n        related, quad, issuer, position, (err, hash) => {\n        if(err) {\n          return callback(err);\n        }\n        if(hash in hashToRelated) {\n          hashToRelated[hash].push(related);\n        } else {\n          hashToRelated[hash] = [related];\n        }\n        callback();\n      });\n    }, err => callback(err, hashToRelated));\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/rdf-canonize/lib/URGNA2012.js?");

/***/ }),

/***/ "./node_modules/rdf-canonize/lib/URGNA2012Sync.js":
/*!********************************************************!*\
  !*** ./node_modules/rdf-canonize/lib/URGNA2012Sync.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n * Copyright (c) 2016 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst URDNA2015Sync = __webpack_require__(/*! ./URDNA2015Sync */ \"./node_modules/rdf-canonize/lib/URDNA2015Sync.js\");\nconst util = __webpack_require__(/*! ./util */ \"./node_modules/rdf-canonize/lib/util.js\");\n\nmodule.exports = class URDNA2012Sync extends URDNA2015Sync {\n  constructor() {\n    super();\n    this.name = 'URGNA2012';\n    this.hashAlgorithm = 'sha1';\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component, key) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    component = util.clone(component);\n    if(key === 'name') {\n      component.value = '_:g';\n    } else {\n      component.value = (component.value === id ? '_:a' : '_:z');\n    }\n    return component;\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return quad.predicate.value;\n  }\n\n  // helper for creating hash to related blank nodes map\n  createHashToRelated(id, issuer) {\n    const self = this;\n\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = {};\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = self.blankNodeInfo[id].quads;\n\n    // 3) For each quad in quads:\n    for(let i = 0; i < quads.length; ++i) {\n      // 3.1) If the quad's subject is a blank node that does not match\n      // identifier, set hash to the result of the Hash Related Blank Node\n      // algorithm, passing the blank node identifier for subject as related,\n      // quad, path identifier issuer as issuer, and p as position.\n      const quad = quads[i];\n      let position;\n      let related;\n      if(quad.subject.termType === 'BlankNode' && quad.subject.value !== id) {\n        related = quad.subject.value;\n        position = 'p';\n      } else if(\n        quad.object.termType === 'BlankNode' && quad.object.value !== id) {\n        // 3.2) Otherwise, if quad's object is a blank node that does not match\n        // identifier, to the result of the Hash Related Blank Node algorithm,\n        // passing the blank node identifier for object as related, quad, path\n        // identifier issuer as issuer, and r as position.\n        related = quad.object.value;\n        position = 'r';\n      } else {\n        // 3.3) Otherwise, continue to the next quad.\n        continue;\n      }\n      // 3.4) Add a mapping of hash to the blank node identifier for the\n      // component that matched (subject or object) to hash to related blank\n      // nodes map, adding an entry as necessary.\n      const hash = self.hashRelatedBlankNode(related, quad, issuer, position);\n      if(hash in hashToRelated) {\n        hashToRelated[hash].push(related);\n      } else {\n        hashToRelated[hash] = [related];\n      }\n    }\n\n    return hashToRelated;\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/rdf-canonize/lib/URGNA2012Sync.js?");

/***/ }),

/***/ "./node_modules/rdf-canonize/lib/index.js":
/*!************************************************!*\
  !*** ./node_modules/rdf-canonize/lib/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * An implementation of the RDF Dataset Normalization specification.\n * This library works in the browser and node.js.\n *\n * BSD 3-Clause License\n * Copyright (c) 2016-2017 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n\nconst util = __webpack_require__(/*! ./util */ \"./node_modules/rdf-canonize/lib/util.js\");\nconst URDNA2015 = __webpack_require__(/*! ./URDNA2015 */ \"./node_modules/rdf-canonize/lib/URDNA2015.js\");\nconst URGNA2012 = __webpack_require__(/*! ./URGNA2012 */ \"./node_modules/rdf-canonize/lib/URGNA2012.js\");\nconst URDNA2015Sync = __webpack_require__(/*! ./URDNA2015Sync */ \"./node_modules/rdf-canonize/lib/URDNA2015Sync.js\");\nconst URGNA2012Sync = __webpack_require__(/*! ./URGNA2012Sync */ \"./node_modules/rdf-canonize/lib/URGNA2012Sync.js\");\n\n// optional native support\nlet rdfCanonizeNative;\ntry {\n  rdfCanonizeNative = __webpack_require__(/*! rdf-canonize-native */ 0);\n} catch(e) {}\n\nconst api = {};\nmodule.exports = api;\n\n// expose helpers\napi.NQuads = __webpack_require__(/*! ./NQuads */ \"./node_modules/rdf-canonize/lib/NQuads.js\");\napi.IdentifierIssuer = __webpack_require__(/*! ./IdentifierIssuer */ \"./node_modules/rdf-canonize/lib/IdentifierIssuer.js\");\n\n/**\n * Get or set native API.\n *\n * @param api the native API.\n *\n * @return the currently set native API.\n */\napi._rdfCanonizeNative = function(api) {\n  if(api) {\n    rdfCanonizeNative = api;\n  }\n  return rdfCanonizeNative;\n};\n\n/**\n * Asynchronously canonizes an RDF dataset.\n *\n * @param dataset the dataset to canonize.\n * @param options the options to use:\n *          algorithm the canonicalization algorithm to use, `URDNA2015` or\n *            `URGNA2012`.\n *          [useNative] use native implementation (default: false).\n * @param [callback(err, canonical)] called once the operation completes.\n *\n * @return a Promise that resolves to the canonicalized RDF Dataset.\n */\napi.canonize = util.callbackify(async function(dataset, options) {\n  let callback;\n  const promise = new Promise((resolve, reject) => {\n    callback = (err, canonical) => {\n      if(err) {\n        return reject(err);\n      }\n\n      /*if(options.format === 'application/n-quads') {\n        canonical = canonical.join('');\n      }\n      canonical = _parseNQuads(canonical.join(''));*/\n\n      resolve(canonical);\n    };\n  });\n\n  // back-compat with legacy dataset\n  if(!Array.isArray(dataset)) {\n    dataset = api.NQuads.legacyDatasetToQuads(dataset);\n  }\n\n  // TODO: convert algorithms to Promise-based async\n  if(options.useNative) {\n    if(rdfCanonizeNative) {\n      rdfCanonizeNative.canonize(dataset, options, callback);\n    } else {\n      throw new Error('rdf-canonize-native not available');\n    }\n  } else {\n    if(options.algorithm === 'URDNA2015') {\n      new URDNA2015(options).main(dataset, callback);\n    } else if(options.algorithm === 'URGNA2012') {\n      new URGNA2012(options).main(dataset, callback);\n    } else if(!('algorithm' in options)) {\n      throw new Error('No RDF Dataset Canonicalization algorithm specified.');\n    } else {\n      throw new Error(\n        'Invalid RDF Dataset Canonicalization algorithm: ' + options.algorithm);\n    }\n  }\n\n  return promise;\n});\n\n/**\n * Synchronously canonizes an RDF dataset.\n *\n * @param dataset the dataset to canonize.\n * @param options the options to use:\n *          algorithm the canonicalization algorithm to use, `URDNA2015` or\n *            `URGNA2012`.\n *          [useNative] use native implementation (default: false).\n *\n * @return the RDF dataset in canonical form.\n */\napi.canonizeSync = function(dataset, options) {\n  // back-compat with legacy dataset\n  if(!Array.isArray(dataset)) {\n    dataset = api.NQuads.legacyDatasetToQuads(dataset);\n  }\n\n  if(options.useNative) {\n    if(rdfCanonizeNative) {\n      return rdfCanonizeNative.canonizeSync(dataset, options);\n    }\n    throw new Error('rdf-canonize-native not available');\n  }\n  if(options.algorithm === 'URDNA2015') {\n    return new URDNA2015Sync(options).main(dataset);\n  } else if(options.algorithm === 'URGNA2012') {\n    return new URGNA2012Sync(options).main(dataset);\n  }\n  if(!('algorithm' in options)) {\n    throw new Error('No RDF Dataset Canonicalization algorithm specified.');\n  }\n  throw new Error(\n    'Invalid RDF Dataset Canonicalization algorithm: ' + options.algorithm);\n};\n\n\n//# sourceURL=webpack:///./node_modules/rdf-canonize/lib/index.js?");

/***/ }),

/***/ "./node_modules/rdf-canonize/lib/util.js":
/*!***********************************************!*\
  !*** ./node_modules/rdf-canonize/lib/util.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(setImmediate, process) {/*\n * Copyright (c) 2016-2017 Digital Bazaar, Inc. All rights reserved.\n */\n\n\nconst api = {};\nmodule.exports = api;\n\n// define setImmediate and nextTick\n//// nextTick implementation with browser-compatible fallback ////\n// from https://github.com/caolan/async/blob/master/lib/async.js\n\n// capture the global reference to guard against fakeTimer mocks\nconst _setImmediate = typeof setImmediate === 'function' && setImmediate;\n\nconst _delay = _setImmediate ?\n  // not a direct alias (for IE10 compatibility)\n  fn => _setImmediate(fn) :\n  fn => setTimeout(fn, 0);\n\nif(typeof process === 'object' && typeof process.nextTick === 'function') {\n  api.nextTick = process.nextTick;\n} else {\n  api.nextTick = _delay;\n}\napi.setImmediate = _setImmediate ? _delay : api.nextTick;\n\n/**\n * Clones an object, array, or string/number. If a typed JavaScript object\n * is given, such as a Date, it will be converted to a string.\n *\n * @param value the value to clone.\n *\n * @return the cloned value.\n */\napi.clone = function(value) {\n  if(value && typeof value === 'object') {\n    let rval;\n    if(Array.isArray(value)) {\n      rval = [];\n      for(let i = 0; i < value.length; ++i) {\n        rval[i] = api.clone(value[i]);\n      }\n    } else if(api.isObject(value)) {\n      rval = {};\n      for(const key in value) {\n        rval[key] = api.clone(value[key]);\n      }\n    } else {\n      rval = value.toString();\n    }\n    return rval;\n  }\n  return value;\n};\n\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\napi.isObject = v => Object.prototype.toString.call(v) === '[object Object]';\n\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\napi.isUndefined = v => typeof v === 'undefined';\n\napi.callbackify = fn => {\n  return async function(...args) {\n    const callback = args[args.length - 1];\n    if(typeof callback === 'function') {\n      args.pop();\n    }\n\n    let result;\n    try {\n      result = await fn.apply(null, args);\n    } catch(e) {\n      if(typeof callback === 'function') {\n        return _invokeCallback(callback, e);\n      }\n      throw e;\n    }\n\n    if(typeof callback === 'function') {\n      return _invokeCallback(callback, null, result);\n    }\n\n    return result;\n  };\n};\n\nfunction _invokeCallback(callback, err, result) {\n  try {\n    return callback(err, result);\n  } catch(unhandledError) {\n    // throw unhandled errors to prevent \"unhandled rejected promise\"\n    // and simulate what would have happened in a promiseless API\n    process.nextTick(() => {\n      throw unhandledError;\n    });\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/rdf-canonize/lib/util.js?");

/***/ }),

/***/ "./node_modules/react-dom/cjs/react-dom.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom.development.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v16.8.6\n * react-dom.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar _assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\nvar checkPropTypes = __webpack_require__(/*! prop-types/checkPropTypes */ \"./node_modules/prop-types/checkPropTypes.js\");\nvar scheduler = __webpack_require__(/*! scheduler */ \"./node_modules/scheduler/index.js\");\nvar tracing = __webpack_require__(/*! scheduler/tracing */ \"./node_modules/scheduler/tracing.js\");\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function () {};\n\n{\n  validateFormat = function (format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error = void 0;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\n// Relying on the `invariant()` implementation lets us\n// preserve the format and params in the www builds.\n\n!React ? invariant(false, 'ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.') : void 0;\n\nvar invokeGuardedCallbackImpl = function (name, func, context, a, b, c, d, e, f) {\n  var funcArgs = Array.prototype.slice.call(arguments, 3);\n  try {\n    func.apply(context, funcArgs);\n  } catch (error) {\n    this.onError(error);\n  }\n};\n\n{\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n  // functions in invokeGuardedCallback, and the production version of\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n  // like caught exceptions, and the DevTools won't pause unless the developer\n  // takes the extra step of enabling pause on caught exceptions. This is\n  // unintuitive, though, because even though React has caught the error, from\n  // the developer's perspective, the error is uncaught.\n  //\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n  // DOM node, and call the user-provided callback from inside an event handler\n  // for that fake event. If the callback throws, the error is \"captured\" using\n  // a global event handler. But because the error happens in a different\n  // event loop context, it does not interrupt the normal program flow.\n  // Effectively, this gives us try-catch behavior without actually using\n  // try-catch. Neat!\n\n  // Check that the browser supports the APIs we need to implement our special\n  // DEV version of invokeGuardedCallback\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n    var fakeNode = document.createElement('react');\n\n    var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {\n      // If document doesn't exist we know for sure we will crash in this method\n      // when we call document.createEvent(). However this can cause confusing\n      // errors: https://github.com/facebookincubator/create-react-app/issues/3482\n      // So we preemptively throw with a better message instead.\n      !(typeof document !== 'undefined') ? invariant(false, 'The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.') : void 0;\n      var evt = document.createEvent('Event');\n\n      // Keeps track of whether the user-provided callback threw an error. We\n      // set this to true at the beginning, then set it to false right after\n      // calling the function. If the function errors, `didError` will never be\n      // set to false. This strategy works even if the browser is flaky and\n      // fails to call our global error handler, because it doesn't rely on\n      // the error event at all.\n      var didError = true;\n\n      // Keeps track of the value of window.event so that we can reset it\n      // during the callback to let user code access window.event in the\n      // browsers that support it.\n      var windowEvent = window.event;\n\n      // Keeps track of the descriptor of window.event to restore it after event\n      // dispatching: https://github.com/facebook/react/issues/13688\n      var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');\n\n      // Create an event handler for our fake event. We will synchronously\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n      // call the user-provided callback.\n      var funcArgs = Array.prototype.slice.call(arguments, 3);\n      function callCallback() {\n        // We immediately remove the callback from event listeners so that\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n        // nested call would trigger the fake event handlers of any call higher\n        // in the stack.\n        fakeNode.removeEventListener(evtType, callCallback, false);\n\n        // We check for window.hasOwnProperty('event') to prevent the\n        // window.event assignment in both IE <= 10 as they throw an error\n        // \"Member not found\" in strict mode, and in Firefox which does not\n        // support window.event.\n        if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {\n          window.event = windowEvent;\n        }\n\n        func.apply(context, funcArgs);\n        didError = false;\n      }\n\n      // Create a global error event handler. We use this to capture the value\n      // that was thrown. It's possible that this error handler will fire more\n      // than once; for example, if non-React code also calls `dispatchEvent`\n      // and a handler for that event throws. We should be resilient to most of\n      // those cases. Even if our error event handler fires more than once, the\n      // last error event is always used. If the callback actually does error,\n      // we know that the last error event is the correct one, because it's not\n      // possible for anything else to have happened in between our callback\n      // erroring and the code that follows the `dispatchEvent` call below. If\n      // the callback doesn't error, but the error event was fired, we know to\n      // ignore it because `didError` will be false, as described above.\n      var error = void 0;\n      // Use this to track whether the error event is ever called.\n      var didSetError = false;\n      var isCrossOriginError = false;\n\n      function handleWindowError(event) {\n        error = event.error;\n        didSetError = true;\n        if (error === null && event.colno === 0 && event.lineno === 0) {\n          isCrossOriginError = true;\n        }\n        if (event.defaultPrevented) {\n          // Some other error handler has prevented default.\n          // Browsers silence the error report if this happens.\n          // We'll remember this to later decide whether to log it or not.\n          if (error != null && typeof error === 'object') {\n            try {\n              error._suppressLogging = true;\n            } catch (inner) {\n              // Ignore.\n            }\n          }\n        }\n      }\n\n      // Create a fake event type.\n      var evtType = 'react-' + (name ? name : 'invokeguardedcallback');\n\n      // Attach our event handlers\n      window.addEventListener('error', handleWindowError);\n      fakeNode.addEventListener(evtType, callCallback, false);\n\n      // Synchronously dispatch our fake event. If the user-provided function\n      // errors, it will trigger our global error handler.\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n\n      if (windowEventDescriptor) {\n        Object.defineProperty(window, 'event', windowEventDescriptor);\n      }\n\n      if (didError) {\n        if (!didSetError) {\n          // The callback errored, but the error event never fired.\n          error = new Error('An error was thrown inside one of your components, but React ' + \"doesn't know what it was. This is likely due to browser \" + 'flakiness. React does its best to preserve the \"Pause on ' + 'exceptions\" behavior of the DevTools, which requires some ' + \"DEV-mode only tricks. It's possible that these don't work in \" + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');\n        } else if (isCrossOriginError) {\n          error = new Error(\"A cross-origin error was thrown. React doesn't have access to \" + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');\n        }\n        this.onError(error);\n      }\n\n      // Remove our event listeners\n      window.removeEventListener('error', handleWindowError);\n    };\n\n    invokeGuardedCallbackImpl = invokeGuardedCallbackDev;\n  }\n}\n\nvar invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;\n\n// Used by Fiber to simulate a try-catch.\nvar hasError = false;\nvar caughtError = null;\n\n// Used by event system to capture/rethrow the first error.\nvar hasRethrowError = false;\nvar rethrowError = null;\n\nvar reporter = {\n  onError: function (error) {\n    hasError = true;\n    caughtError = error;\n  }\n};\n\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nfunction invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl$1.apply(reporter, arguments);\n}\n\n/**\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\n * TODO: See if caughtError and rethrowError can be unified.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nfunction invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {\n  invokeGuardedCallback.apply(this, arguments);\n  if (hasError) {\n    var error = clearCaughtError();\n    if (!hasRethrowError) {\n      hasRethrowError = true;\n      rethrowError = error;\n    }\n  }\n}\n\n/**\n * During execution of guarded functions we will capture the first error which\n * we will rethrow to be handled by the top level error handler.\n */\nfunction rethrowCaughtError() {\n  if (hasRethrowError) {\n    var error = rethrowError;\n    hasRethrowError = false;\n    rethrowError = null;\n    throw error;\n  }\n}\n\nfunction hasCaughtError() {\n  return hasError;\n}\n\nfunction clearCaughtError() {\n  if (hasError) {\n    var error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    invariant(false, 'clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.');\n  }\n}\n\n/**\n * Injectable ordering of event plugins.\n */\nvar eventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nvar namesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering() {\n  if (!eventPluginOrder) {\n    // Wait until an `eventPluginOrder` is injected.\n    return;\n  }\n  for (var pluginName in namesToPlugins) {\n    var pluginModule = namesToPlugins[pluginName];\n    var pluginIndex = eventPluginOrder.indexOf(pluginName);\n    !(pluginIndex > -1) ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : void 0;\n    if (plugins[pluginIndex]) {\n      continue;\n    }\n    !pluginModule.extractEvents ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : void 0;\n    plugins[pluginIndex] = pluginModule;\n    var publishedEvents = pluginModule.eventTypes;\n    for (var eventName in publishedEvents) {\n      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : void 0;\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\n  !!eventNameDispatchConfigs.hasOwnProperty(eventName) ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : void 0;\n  eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(registrationName, pluginModule, eventName) {\n  !!registrationNameModules[registrationName] ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : void 0;\n  registrationNameModules[registrationName] = pluginModule;\n  registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;\n\n  {\n    var lowerCasedName = registrationName.toLowerCase();\n    possibleRegistrationNames[lowerCasedName] = registrationName;\n\n    if (registrationName === 'onDoubleClick') {\n      possibleRegistrationNames.ondblclick = registrationName;\n    }\n  }\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\n\n/**\n * Ordered list of injected plugins.\n */\nvar plugins = [];\n\n/**\n * Mapping from event name to dispatch config\n */\nvar eventNameDispatchConfigs = {};\n\n/**\n * Mapping from registration name to plugin module\n */\nvar registrationNameModules = {};\n\n/**\n * Mapping from registration name to event name\n */\nvar registrationNameDependencies = {};\n\n/**\n * Mapping from lowercase registration names to the properly cased version,\n * used to warn in the case of missing event handlers. Available\n * only in true.\n * @type {Object}\n */\nvar possibleRegistrationNames = {};\n// Trust the developer to only use possibleRegistrationNames in true\n\n/**\n * Injects an ordering of plugins (by plugin name). This allows the ordering\n * to be decoupled from injection of the actual plugins so that ordering is\n * always deterministic regardless of packaging, on-the-fly injection, etc.\n *\n * @param {array} InjectedEventPluginOrder\n * @internal\n * @see {EventPluginHub.injection.injectEventPluginOrder}\n */\nfunction injectEventPluginOrder(injectedEventPluginOrder) {\n  !!eventPluginOrder ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : void 0;\n  // Clone the ordering so it cannot be dynamically mutated.\n  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n  recomputePluginOrdering();\n}\n\n/**\n * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n * in the ordering injected by `injectEventPluginOrder`.\n *\n * Plugins can be injected as part of page initialization or on-the-fly.\n *\n * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n * @internal\n * @see {EventPluginHub.injection.injectEventPluginsByName}\n */\nfunction injectEventPluginsByName(injectedNamesToPlugins) {\n  var isOrderingDirty = false;\n  for (var pluginName in injectedNamesToPlugins) {\n    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n      continue;\n    }\n    var pluginModule = injectedNamesToPlugins[pluginName];\n    if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {\n      !!namesToPlugins[pluginName] ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : void 0;\n      namesToPlugins[pluginName] = pluginModule;\n      isOrderingDirty = true;\n    }\n  }\n  if (isOrderingDirty) {\n    recomputePluginOrdering();\n  }\n}\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warningWithoutStack = function () {};\n\n{\n  warningWithoutStack = function (condition, format) {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    if (format === undefined) {\n      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (args.length > 8) {\n      // Check before the condition to catch violations early.\n      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');\n    }\n    if (condition) {\n      return;\n    }\n    if (typeof console !== 'undefined') {\n      var argsWithFormat = args.map(function (item) {\n        return '' + item;\n      });\n      argsWithFormat.unshift('Warning: ' + format);\n\n      // We intentionally don't use spread (or .apply) directly because it\n      // breaks IE9: https://github.com/facebook/react/issues/13610\n      Function.prototype.apply.call(console.error, console, argsWithFormat);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nvar warningWithoutStack$1 = warningWithoutStack;\n\nvar getFiberCurrentPropsFromNode = null;\nvar getInstanceFromNode = null;\nvar getNodeFromInstance = null;\n\nfunction setComponentTree(getFiberCurrentPropsFromNodeImpl, getInstanceFromNodeImpl, getNodeFromInstanceImpl) {\n  getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;\n  getInstanceFromNode = getInstanceFromNodeImpl;\n  getNodeFromInstance = getNodeFromInstanceImpl;\n  {\n    !(getNodeFromInstance && getInstanceFromNode) ? warningWithoutStack$1(false, 'EventPluginUtils.setComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\n  }\n}\n\nvar validateEventDispatches = void 0;\n{\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchInstances = event._dispatchInstances;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\n    var instancesIsArr = Array.isArray(dispatchInstances);\n    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n\n    !(instancesIsArr === listenersIsArr && instancesLen === listenersLen) ? warningWithoutStack$1(false, 'EventPluginUtils: Invalid `event`.') : void 0;\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\nfunction executeDispatch(event, listener, inst) {\n  var type = event.type || 'unknown-event';\n  event.currentTarget = getNodeFromInstance(inst);\n  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, dispatchListeners, dispatchInstances);\n  }\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\n\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\n\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  !(next != null) ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : void 0;\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (Array.isArray(current)) {\n    if (Array.isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n    current.push(next);\n    return current;\n  }\n\n  if (Array.isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n * @param {function} cb Callback invoked with each element or a collection.\n * @param {?} [scope] Scope used as `this` in a callback.\n */\nfunction forEachAccumulated(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n}\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @private\n */\nvar executeDispatchesAndRelease = function (event) {\n  if (event) {\n    executeDispatchesInOrder(event);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nvar executeDispatchesAndReleaseTopLevel = function (e) {\n  return executeDispatchesAndRelease(e);\n};\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nfunction shouldPreventMouseEvent(name, type, props) {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n      return !!(props.disabled && isInteractive(type));\n    default:\n      return false;\n  }\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\n\n/**\n * Methods for injecting dependencies.\n */\nvar injection = {\n  /**\n   * @param {array} InjectedEventPluginOrder\n   * @public\n   */\n  injectEventPluginOrder: injectEventPluginOrder,\n\n  /**\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n   */\n  injectEventPluginsByName: injectEventPluginsByName\n};\n\n/**\n * @param {object} inst The instance, which is the source of events.\n * @param {string} registrationName Name of listener (e.g. `onClick`).\n * @return {?function} The stored callback.\n */\nfunction getListener(inst, registrationName) {\n  var listener = void 0;\n\n  // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\n  // live here; needs to be moved to a better place soon\n  var stateNode = inst.stateNode;\n  if (!stateNode) {\n    // Work in progress (ex: onload events in incremental mode).\n    return null;\n  }\n  var props = getFiberCurrentPropsFromNode(stateNode);\n  if (!props) {\n    // Work in progress.\n    return null;\n  }\n  listener = props[registrationName];\n  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {\n    return null;\n  }\n  !(!listener || typeof listener === 'function') ? invariant(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener) : void 0;\n  return listener;\n}\n\n/**\n * Allows registered plugins an opportunity to extract events from top-level\n * native browser events.\n *\n * @return {*} An accumulation of synthetic events.\n * @internal\n */\nfunction extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var events = null;\n  for (var i = 0; i < plugins.length; i++) {\n    // Not every plugin in the ordering may be loaded at runtime.\n    var possiblePlugin = plugins[i];\n    if (possiblePlugin) {\n      var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n      if (extractedEvents) {\n        events = accumulateInto(events, extractedEvents);\n      }\n    }\n  }\n  return events;\n}\n\nfunction runEventsInBatch(events) {\n  if (events !== null) {\n    eventQueue = accumulateInto(eventQueue, events);\n  }\n\n  // Set `eventQueue` to null before processing it so that we can tell if more\n  // events get enqueued while processing.\n  var processingEventQueue = eventQueue;\n  eventQueue = null;\n\n  if (!processingEventQueue) {\n    return;\n  }\n\n  forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n  !!eventQueue ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : void 0;\n  // This would be a good time to rethrow if any of the event handlers threw.\n  rethrowCaughtError();\n}\n\nfunction runExtractedEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var events = extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n  runEventsInBatch(events);\n}\n\nvar FunctionComponent = 0;\nvar ClassComponent = 1;\nvar IndeterminateComponent = 2; // Before we know whether it is function or class\nvar HostRoot = 3; // Root of a host tree. Could be nested inside another node.\nvar HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\nvar HostComponent = 5;\nvar HostText = 6;\nvar Fragment = 7;\nvar Mode = 8;\nvar ContextConsumer = 9;\nvar ContextProvider = 10;\nvar ForwardRef = 11;\nvar Profiler = 12;\nvar SuspenseComponent = 13;\nvar MemoComponent = 14;\nvar SimpleMemoComponent = 15;\nvar LazyComponent = 16;\nvar IncompleteClassComponent = 17;\nvar DehydratedSuspenseComponent = 18;\n\nvar randomKey = Math.random().toString(36).slice(2);\nvar internalInstanceKey = '__reactInternalInstance$' + randomKey;\nvar internalEventHandlersKey = '__reactEventHandlers$' + randomKey;\n\nfunction precacheFiberNode(hostInst, node) {\n  node[internalInstanceKey] = hostInst;\n}\n\n/**\n * Given a DOM node, return the closest ReactDOMComponent or\n * ReactDOMTextComponent instance ancestor.\n */\nfunction getClosestInstanceFromNode(node) {\n  if (node[internalInstanceKey]) {\n    return node[internalInstanceKey];\n  }\n\n  while (!node[internalInstanceKey]) {\n    if (node.parentNode) {\n      node = node.parentNode;\n    } else {\n      // Top of the tree. This node must not be part of a React tree (or is\n      // unmounted, potentially).\n      return null;\n    }\n  }\n\n  var inst = node[internalInstanceKey];\n  if (inst.tag === HostComponent || inst.tag === HostText) {\n    // In Fiber, this will always be the deepest root.\n    return inst;\n  }\n\n  return null;\n}\n\n/**\n * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n * instance, or null if the node was not rendered by this React.\n */\nfunction getInstanceFromNode$1(node) {\n  var inst = node[internalInstanceKey];\n  if (inst) {\n    if (inst.tag === HostComponent || inst.tag === HostText) {\n      return inst;\n    } else {\n      return null;\n    }\n  }\n  return null;\n}\n\n/**\n * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n * DOM node.\n */\nfunction getNodeFromInstance$1(inst) {\n  if (inst.tag === HostComponent || inst.tag === HostText) {\n    // In Fiber this, is just the state node right now. We assume it will be\n    // a host component or host text.\n    return inst.stateNode;\n  }\n\n  // Without this first invariant, passing a non-DOM-component triggers the next\n  // invariant for a missing parent, which is super confusing.\n  invariant(false, 'getNodeFromInstance: Invalid argument.');\n}\n\nfunction getFiberCurrentPropsFromNode$1(node) {\n  return node[internalEventHandlersKey] || null;\n}\n\nfunction updateFiberProps(node, props) {\n  node[internalEventHandlersKey] = props;\n}\n\nfunction getParent(inst) {\n  do {\n    inst = inst.return;\n    // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n  if (inst) {\n    return inst;\n  }\n  return null;\n}\n\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\nfunction getLowestCommonAncestor(instA, instB) {\n  var depthA = 0;\n  for (var tempA = instA; tempA; tempA = getParent(tempA)) {\n    depthA++;\n  }\n  var depthB = 0;\n  for (var tempB = instB; tempB; tempB = getParent(tempB)) {\n    depthB++;\n  }\n\n  // If A is deeper, crawl up.\n  while (depthA - depthB > 0) {\n    instA = getParent(instA);\n    depthA--;\n  }\n\n  // If B is deeper, crawl up.\n  while (depthB - depthA > 0) {\n    instB = getParent(instB);\n    depthB--;\n  }\n\n  // Walk in lockstep until we find a match.\n  var depth = depthA;\n  while (depth--) {\n    if (instA === instB || instA === instB.alternate) {\n      return instA;\n    }\n    instA = getParent(instA);\n    instB = getParent(instB);\n  }\n  return null;\n}\n\n/**\n * Return if A is an ancestor of B.\n */\n\n\n/**\n * Return the parent instance of the passed-in instance.\n */\n\n\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\nfunction traverseTwoPhase(inst, fn, arg) {\n  var path = [];\n  while (inst) {\n    path.push(inst);\n    inst = getParent(inst);\n  }\n  var i = void 0;\n  for (i = path.length; i-- > 0;) {\n    fn(path[i], 'captured', arg);\n  }\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], 'bubbled', arg);\n  }\n}\n\n/**\n * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n * should would receive a `mouseEnter` or `mouseLeave` event.\n *\n * Does not invoke the callback on the nearest common ancestor because nothing\n * \"entered\" or \"left\" that element.\n */\nfunction traverseEnterLeave(from, to, fn, argFrom, argTo) {\n  var common = from && to ? getLowestCommonAncestor(from, to) : null;\n  var pathFrom = [];\n  while (true) {\n    if (!from) {\n      break;\n    }\n    if (from === common) {\n      break;\n    }\n    var alternate = from.alternate;\n    if (alternate !== null && alternate === common) {\n      break;\n    }\n    pathFrom.push(from);\n    from = getParent(from);\n  }\n  var pathTo = [];\n  while (true) {\n    if (!to) {\n      break;\n    }\n    if (to === common) {\n      break;\n    }\n    var _alternate = to.alternate;\n    if (_alternate !== null && _alternate === common) {\n      break;\n    }\n    pathTo.push(to);\n    to = getParent(to);\n  }\n  for (var i = 0; i < pathFrom.length; i++) {\n    fn(pathFrom[i], 'bubbled', argFrom);\n  }\n  for (var _i = pathTo.length; _i-- > 0;) {\n    fn(pathTo[_i], 'captured', argTo);\n  }\n}\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(inst, event, propagationPhase) {\n  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing even a\n * single one.\n */\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(inst, phase, event) {\n  {\n    !inst ? warningWithoutStack$1(false, 'Dispatching inst must not be null') : void 0;\n  }\n  var listener = listenerAtPhase(inst, event, phase);\n  if (listener) {\n    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We cannot perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(inst, ignoredDirection, event) {\n  if (inst && event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(inst, registrationName);\n    if (listener) {\n      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\n\n\nfunction accumulateEnterLeaveDispatches(leave, enter, from, to) {\n  traverseEnterLeave(from, to, accumulateDispatches, leave, enter);\n}\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n// Do not uses the below two methods directly!\n// Instead use constants exported from DOMTopLevelEventTypes in ReactDOM.\n// (It is the only module that is allowed to access these methods.)\n\nfunction unsafeCastStringToDOMTopLevelType(topLevelType) {\n  return topLevelType;\n}\n\nfunction unsafeCastDOMTopLevelTypeToString(topLevelType) {\n  return topLevelType;\n}\n\n/**\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n *\n * @param {string} styleProp\n * @param {string} eventName\n * @returns {object}\n */\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n\n  return prefixes;\n}\n\n/**\n * A list of event names to a configurable list of vendor prefixes.\n */\nvar vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n};\n\n/**\n * Event names that have already been detected and prefixed (if applicable).\n */\nvar prefixedEventNames = {};\n\n/**\n * Element to check for prefixes on.\n */\nvar style = {};\n\n/**\n * Bootstrap if a DOM exists.\n */\nif (canUseDOM) {\n  style = document.createElement('div').style;\n\n  // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  }\n\n  // Same as above\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n\n/**\n * Attempts to determine the correct vendor prefixed event name.\n *\n * @param {string} eventName\n * @returns {string}\n */\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  var prefixMap = vendorPrefixes[eventName];\n\n  for (var styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return prefixedEventNames[eventName] = prefixMap[styleProp];\n    }\n  }\n\n  return eventName;\n}\n\n/**\n * To identify top level events in ReactDOM, we use constants defined by this\n * module. This is the only module that uses the unsafe* methods to express\n * that the constants actually correspond to the browser event names. This lets\n * us save some bundle size by avoiding a top level type -> event name map.\n * The rest of ReactDOM code should import top level types from this file.\n */\nvar TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');\nvar TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));\nvar TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));\nvar TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));\nvar TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');\nvar TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');\nvar TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');\nvar TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');\nvar TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');\nvar TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');\nvar TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');\nvar TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');\nvar TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');\nvar TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');\nvar TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');\nvar TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');\nvar TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');\nvar TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');\nvar TOP_AUX_CLICK = unsafeCastStringToDOMTopLevelType('auxclick');\nvar TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');\nvar TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');\nvar TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');\nvar TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');\nvar TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');\nvar TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');\nvar TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');\nvar TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');\nvar TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');\nvar TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');\nvar TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');\nvar TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');\nvar TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');\nvar TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');\nvar TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');\nvar TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');\nvar TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');\nvar TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');\nvar TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');\nvar TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');\nvar TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');\nvar TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');\nvar TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');\nvar TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');\nvar TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');\nvar TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');\nvar TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');\nvar TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');\nvar TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');\nvar TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');\nvar TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');\nvar TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');\nvar TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');\nvar TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');\nvar TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');\nvar TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');\n\n\nvar TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');\nvar TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');\nvar TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');\nvar TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');\nvar TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');\nvar TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');\nvar TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');\nvar TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');\nvar TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');\nvar TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');\nvar TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');\nvar TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');\nvar TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');\nvar TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');\nvar TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');\nvar TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');\nvar TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');\nvar TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');\nvar TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');\nvar TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');\nvar TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');\nvar TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));\nvar TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');\nvar TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');\nvar TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel');\n\n// List of events that need to be individually attached to media elements.\n// Note that events in this list will *not* be listened to at the top level\n// unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.\nvar mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];\n\nfunction getRawEventName(topLevelType) {\n  return unsafeCastDOMTopLevelTypeToString(topLevelType);\n}\n\n/**\n * These variables store information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n *\n */\n\nvar root = null;\nvar startText = null;\nvar fallbackText = null;\n\nfunction initialize(nativeEventTarget) {\n  root = nativeEventTarget;\n  startText = getText();\n  return true;\n}\n\nfunction reset() {\n  root = null;\n  startText = null;\n  fallbackText = null;\n}\n\nfunction getData() {\n  if (fallbackText) {\n    return fallbackText;\n  }\n\n  var start = void 0;\n  var startValue = startText;\n  var startLength = startValue.length;\n  var end = void 0;\n  var endValue = getText();\n  var endLength = endValue.length;\n\n  for (start = 0; start < startLength; start++) {\n    if (startValue[start] !== endValue[start]) {\n      break;\n    }\n  }\n\n  var minEnd = startLength - start;\n  for (end = 1; end <= minEnd; end++) {\n    if (startValue[startLength - end] !== endValue[endLength - end]) {\n      break;\n    }\n  }\n\n  var sliceTail = end > 1 ? 1 - end : undefined;\n  fallbackText = endValue.slice(start, sliceTail);\n  return fallbackText;\n}\n\nfunction getText() {\n  if ('value' in root) {\n    return root.value;\n  }\n  return root.textContent;\n}\n\n/* eslint valid-typeof: 0 */\n\nvar EVENT_POOL_SIZE = 10;\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: function () {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\nfunction functionThatReturnsTrue() {\n  return true;\n}\n\nfunction functionThatReturnsFalse() {\n  return false;\n}\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\nfunction SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n  {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n    delete this.isDefaultPrevented;\n    delete this.isPropagationStopped;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = functionThatReturnsFalse;\n  }\n  this.isPropagationStopped = functionThatReturnsFalse;\n  return this;\n}\n\n_assign(SyntheticEvent.prototype, {\n  preventDefault: function () {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== 'unknown') {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  },\n\n  stopPropagation: function () {\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== 'unknown') {\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = functionThatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function () {\n    this.isPersistent = functionThatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: functionThatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function () {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      {\n        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n      }\n    }\n    this.dispatchConfig = null;\n    this._targetInst = null;\n    this.nativeEvent = null;\n    this.isDefaultPrevented = functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    this._dispatchListeners = null;\n    this._dispatchInstances = null;\n    {\n      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n      Object.defineProperty(this, 'isDefaultPrevented', getPooledWarningPropertyDefinition('isDefaultPrevented', functionThatReturnsFalse));\n      Object.defineProperty(this, 'isPropagationStopped', getPooledWarningPropertyDefinition('isPropagationStopped', functionThatReturnsFalse));\n      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', function () {}));\n      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', function () {}));\n    }\n  }\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n */\nSyntheticEvent.extend = function (Interface) {\n  var Super = this;\n\n  var E = function () {};\n  E.prototype = Super.prototype;\n  var prototype = new E();\n\n  function Class() {\n    return Super.apply(this, arguments);\n  }\n  _assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = _assign({}, Super.Interface, Interface);\n  Class.extend = Super.extend;\n  addEventPoolingTo(Class);\n\n  return Class;\n};\n\naddEventPoolingTo(SyntheticEvent);\n\n/**\n * Helper to nullify syntheticEvent instance properties when destructing\n *\n * @param {String} propName\n * @param {?object} getVal\n * @return {object} defineProperty object\n */\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  var isFunction = typeof getVal === 'function';\n  return {\n    configurable: true,\n    set: set,\n    get: get\n  };\n\n  function set(val) {\n    var action = isFunction ? 'setting the method' : 'setting the property';\n    warn(action, 'This is effectively a no-op');\n    return val;\n  }\n\n  function get() {\n    var action = isFunction ? 'accessing the method' : 'accessing the property';\n    var result = isFunction ? 'This is a no-op function' : 'This is set to null';\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    var warningCondition = false;\n    !warningCondition ? warningWithoutStack$1(false, \"This synthetic event is reused for performance reasons. If you're seeing this, \" + \"you're %s `%s` on a released/nullified synthetic event. %s. \" + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;\n  }\n}\n\nfunction getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {\n  var EventConstructor = this;\n  if (EventConstructor.eventPool.length) {\n    var instance = EventConstructor.eventPool.pop();\n    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);\n    return instance;\n  }\n  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);\n}\n\nfunction releasePooledEvent(event) {\n  var EventConstructor = this;\n  !(event instanceof EventConstructor) ? invariant(false, 'Trying to release an event instance into a pool of a different type.') : void 0;\n  event.destructor();\n  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n    EventConstructor.eventPool.push(event);\n  }\n}\n\nfunction addEventPoolingTo(EventConstructor) {\n  EventConstructor.eventPool = [];\n  EventConstructor.getPooled = getPooledEvent;\n  EventConstructor.release = releasePooledEvent;\n}\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nvar SyntheticCompositionEvent = SyntheticEvent.extend({\n  data: null\n});\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\nvar SyntheticInputEvent = SyntheticEvent.extend({\n  data: null\n});\n\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nvar START_KEYCODE = 229;\n\nvar canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;\n\nvar documentMode = null;\nif (canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nvar canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode;\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nvar useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\n\nvar SPACEBAR_CODE = 32;\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\n// Events and their corresponding property names.\nvar eventTypes = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: 'onBeforeInput',\n      captured: 'onBeforeInputCapture'\n    },\n    dependencies: [TOP_COMPOSITION_END, TOP_KEY_PRESS, TOP_TEXT_INPUT, TOP_PASTE]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionEnd',\n      captured: 'onCompositionEndCapture'\n    },\n    dependencies: [TOP_BLUR, TOP_COMPOSITION_END, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionStart',\n      captured: 'onCompositionStartCapture'\n    },\n    dependencies: [TOP_BLUR, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionUpdate',\n      captured: 'onCompositionUpdateCapture'\n    },\n    dependencies: [TOP_BLUR, TOP_COMPOSITION_UPDATE, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]\n  }\n};\n\n// Track whether we've ever handled a keypress on the space key.\nvar hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent) {\n  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n  // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n  !(nativeEvent.ctrlKey && nativeEvent.altKey);\n}\n\n/**\n * Translate native top level events into event types.\n *\n * @param {string} topLevelType\n * @return {object}\n */\nfunction getCompositionEventType(topLevelType) {\n  switch (topLevelType) {\n    case TOP_COMPOSITION_START:\n      return eventTypes.compositionStart;\n    case TOP_COMPOSITION_END:\n      return eventTypes.compositionEnd;\n    case TOP_COMPOSITION_UPDATE:\n      return eventTypes.compositionUpdate;\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n  return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case TOP_KEY_UP:\n      // Command keys insert or clear IME input.\n      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n    case TOP_KEY_DOWN:\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return nativeEvent.keyCode !== START_KEYCODE;\n    case TOP_KEY_PRESS:\n    case TOP_MOUSE_DOWN:\n    case TOP_BLUR:\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent) {\n  var detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n/**\n * Check if a composition event was triggered by Korean IME.\n * Our fallback mode does not work well with IE's Korean IME,\n * so just use native composition events when Korean IME is used.\n * Although CompositionEvent.locale property is deprecated,\n * it is available in IE, where our fallback mode is enabled.\n *\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isUsingKoreanIME(nativeEvent) {\n  return nativeEvent.locale === 'ko';\n}\n\n// Track the current IME composition status, if any.\nvar isComposing = false;\n\n/**\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var eventType = void 0;\n  var fallbackData = void 0;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(topLevelType);\n  } else if (!isComposing) {\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n      eventType = eventTypes.compositionStart;\n    }\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n    eventType = eventTypes.compositionEnd;\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!isComposing && eventType === eventTypes.compositionStart) {\n      isComposing = initialize(nativeEventTarget);\n    } else if (eventType === eventTypes.compositionEnd) {\n      if (isComposing) {\n        fallbackData = getData();\n      }\n    }\n  }\n\n  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);\n\n  if (fallbackData) {\n    // Inject data generated from fallback path into the synthetic event.\n    // This matches the property of native CompositionEventInterface.\n    event.data = fallbackData;\n  } else {\n    var customData = getDataFromCustomEvent(nativeEvent);\n    if (customData !== null) {\n      event.data = customData;\n    }\n  }\n\n  accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * @param {TopLevelType} topLevelType Number from `TopLevelType`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The string corresponding to this `beforeInput` event.\n */\nfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case TOP_COMPOSITION_END:\n      return getDataFromCustomEvent(nativeEvent);\n    case TOP_KEY_PRESS:\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      var which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case TOP_TEXT_INPUT:\n      // Record the characters to be added to the DOM.\n      var chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to ignore it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n *\n * @param {number} topLevelType Number from `TopLevelEventTypes`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The fallback string for this `beforeInput` event.\n */\nfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  // If composition event is available, we extract a string only at\n  // compositionevent, otherwise extract it at fallback events.\n  if (isComposing) {\n    if (topLevelType === TOP_COMPOSITION_END || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n      var chars = getData();\n      reset();\n      isComposing = false;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (topLevelType) {\n    case TOP_PASTE:\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case TOP_KEY_PRESS:\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (!isKeypressCommand(nativeEvent)) {\n        // IE fires the `keypress` event when a user types an emoji via\n        // Touch keyboard of Windows.  In such a case, the `char` property\n        // holds an emoji character like `\\uD83D\\uDE0A`.  Because its length\n        // is 2, the property `which` does not represent an emoji correctly.\n        // In such a case, we directly return the `char` property instead of\n        // using `which`.\n        if (nativeEvent.char && nativeEvent.char.length > 1) {\n          return nativeEvent.char;\n        } else if (nativeEvent.which) {\n          return String.fromCharCode(nativeEvent.which);\n        }\n      }\n      return null;\n    case TOP_COMPOSITION_END:\n      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var chars = void 0;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);\n\n  event.data = chars;\n  accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nvar BeforeInputEventPlugin = {\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var composition = extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n\n    var beforeInput = extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n\n    if (composition === null) {\n      return beforeInput;\n    }\n\n    if (beforeInput === null) {\n      return composition;\n    }\n\n    return [composition, beforeInput];\n  }\n};\n\n// Use to restore controlled state after a change event has fired.\n\nvar restoreImpl = null;\nvar restoreTarget = null;\nvar restoreQueue = null;\n\nfunction restoreStateOfTarget(target) {\n  // We perform this translation at the end of the event loop so that we\n  // always receive the correct fiber here\n  var internalInstance = getInstanceFromNode(target);\n  if (!internalInstance) {\n    // Unmounted\n    return;\n  }\n  !(typeof restoreImpl === 'function') ? invariant(false, 'setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n  var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);\n  restoreImpl(internalInstance.stateNode, internalInstance.type, props);\n}\n\nfunction setRestoreImplementation(impl) {\n  restoreImpl = impl;\n}\n\nfunction enqueueStateRestore(target) {\n  if (restoreTarget) {\n    if (restoreQueue) {\n      restoreQueue.push(target);\n    } else {\n      restoreQueue = [target];\n    }\n  } else {\n    restoreTarget = target;\n  }\n}\n\nfunction needsStateRestore() {\n  return restoreTarget !== null || restoreQueue !== null;\n}\n\nfunction restoreStateIfNeeded() {\n  if (!restoreTarget) {\n    return;\n  }\n  var target = restoreTarget;\n  var queuedTargets = restoreQueue;\n  restoreTarget = null;\n  restoreQueue = null;\n\n  restoreStateOfTarget(target);\n  if (queuedTargets) {\n    for (var i = 0; i < queuedTargets.length; i++) {\n      restoreStateOfTarget(queuedTargets[i]);\n    }\n  }\n}\n\n// Used as a way to call batchedUpdates when we don't have a reference to\n// the renderer. Such as when we're dispatching events or if third party\n// libraries need to call batchedUpdates. Eventually, this API will go away when\n// everything is batched by default. We'll then have a similar API to opt-out of\n// scheduled work and instead do synchronous work.\n\n// Defaults\nvar _batchedUpdatesImpl = function (fn, bookkeeping) {\n  return fn(bookkeeping);\n};\nvar _interactiveUpdatesImpl = function (fn, a, b) {\n  return fn(a, b);\n};\nvar _flushInteractiveUpdatesImpl = function () {};\n\nvar isBatching = false;\nfunction batchedUpdates(fn, bookkeeping) {\n  if (isBatching) {\n    // If we are currently inside another batch, we need to wait until it\n    // fully completes before restoring state.\n    return fn(bookkeeping);\n  }\n  isBatching = true;\n  try {\n    return _batchedUpdatesImpl(fn, bookkeeping);\n  } finally {\n    // Here we wait until all updates have propagated, which is important\n    // when using controlled components within layers:\n    // https://github.com/facebook/react/issues/1698\n    // Then we restore state of any controlled component.\n    isBatching = false;\n    var controlledComponentsHavePendingUpdates = needsStateRestore();\n    if (controlledComponentsHavePendingUpdates) {\n      // If a controlled event was fired, we may need to restore the state of\n      // the DOM node back to the controlled value. This is necessary when React\n      // bails out of the update without touching the DOM.\n      _flushInteractiveUpdatesImpl();\n      restoreStateIfNeeded();\n    }\n  }\n}\n\nfunction interactiveUpdates(fn, a, b) {\n  return _interactiveUpdatesImpl(fn, a, b);\n}\n\n\n\nfunction setBatchingImplementation(batchedUpdatesImpl, interactiveUpdatesImpl, flushInteractiveUpdatesImpl) {\n  _batchedUpdatesImpl = batchedUpdatesImpl;\n  _interactiveUpdatesImpl = interactiveUpdatesImpl;\n  _flushInteractiveUpdatesImpl = flushInteractiveUpdatesImpl;\n}\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\nvar supportedInputTypes = {\n  color: true,\n  date: true,\n  datetime: true,\n  'datetime-local': true,\n  email: true,\n  month: true,\n  number: true,\n  password: true,\n  range: true,\n  search: true,\n  tel: true,\n  text: true,\n  time: true,\n  url: true,\n  week: true\n};\n\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\n  if (nodeName === 'input') {\n    return !!supportedInputTypes[elem.type];\n  }\n\n  if (nodeName === 'textarea') {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * HTML nodeType values that represent the type of the node\n */\n\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\nvar DOCUMENT_NODE = 9;\nvar DOCUMENT_FRAGMENT_NODE = 11;\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\nfunction getEventTarget(nativeEvent) {\n  // Fallback to nativeEvent.srcElement for IE9\n  // https://github.com/facebook/react/issues/12506\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\n\n  // Normalize SVG <use> element events #4963\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  }\n\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === TEXT_NODE ? target.parentNode : target;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in document;\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  return isSupported;\n}\n\nfunction isCheckable(elem) {\n  var type = elem.type;\n  var nodeName = elem.nodeName;\n  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');\n}\n\nfunction getTracker(node) {\n  return node._valueTracker;\n}\n\nfunction detachTracker(node) {\n  node._valueTracker = null;\n}\n\nfunction getValueFromNode(node) {\n  var value = '';\n  if (!node) {\n    return value;\n  }\n\n  if (isCheckable(node)) {\n    value = node.checked ? 'true' : 'false';\n  } else {\n    value = node.value;\n  }\n\n  return value;\n}\n\nfunction trackValueOnNode(node) {\n  var valueField = isCheckable(node) ? 'checked' : 'value';\n  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);\n\n  var currentValue = '' + node[valueField];\n\n  // if someone has already defined a value or Safari, then bail\n  // and don't track value will cause over reporting of changes,\n  // but it's better then a hard failure\n  // (needed for certain tests that spyOn input values and Safari)\n  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {\n    return;\n  }\n  var get = descriptor.get,\n      set = descriptor.set;\n\n  Object.defineProperty(node, valueField, {\n    configurable: true,\n    get: function () {\n      return get.call(this);\n    },\n    set: function (value) {\n      currentValue = '' + value;\n      set.call(this, value);\n    }\n  });\n  // We could've passed this the first time\n  // but it triggers a bug in IE11 and Edge 14/15.\n  // Calling defineProperty() again should be equivalent.\n  // https://github.com/facebook/react/issues/11768\n  Object.defineProperty(node, valueField, {\n    enumerable: descriptor.enumerable\n  });\n\n  var tracker = {\n    getValue: function () {\n      return currentValue;\n    },\n    setValue: function (value) {\n      currentValue = '' + value;\n    },\n    stopTracking: function () {\n      detachTracker(node);\n      delete node[valueField];\n    }\n  };\n  return tracker;\n}\n\nfunction track(node) {\n  if (getTracker(node)) {\n    return;\n  }\n\n  // TODO: Once it's just Fiber we can move this to node._wrapperState\n  node._valueTracker = trackValueOnNode(node);\n}\n\nfunction updateValueIfChanged(node) {\n  if (!node) {\n    return false;\n  }\n\n  var tracker = getTracker(node);\n  // if there is no tracker at this point it's unlikely\n  // that trying again will succeed\n  if (!tracker) {\n    return true;\n  }\n\n  var lastValue = tracker.getValue();\n  var nextValue = getValueFromNode(node);\n  if (nextValue !== lastValue) {\n    tracker.setValue(nextValue);\n    return true;\n  }\n  return false;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\n// Prevent newer renderers from RTE when used with older react package versions.\n// Current owner and dispatcher used to share the same ref,\n// but PR #14548 split them out to better support the react-debug-tools package.\nif (!ReactSharedInternals.hasOwnProperty('ReactCurrentDispatcher')) {\n  ReactSharedInternals.ReactCurrentDispatcher = {\n    current: null\n  };\n}\n\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nvar describeComponentFrame = function (name, source, ownerName) {\n  var sourceInfo = '';\n  if (source) {\n    var path = source.fileName;\n    var fileName = path.replace(BEFORE_SLASH_RE, '');\n    {\n      // In DEV, include code for a common special case:\n      // prefer \"folder/index.js\" instead of just \"index.js\".\n      if (/^index\\./.test(fileName)) {\n        var match = path.match(BEFORE_SLASH_RE);\n        if (match) {\n          var pathBeforeSlash = match[1];\n          if (pathBeforeSlash) {\n            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n            fileName = folderName + '/' + fileName;\n          }\n        }\n      }\n    }\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n};\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\n\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n\nvar Pending = 0;\nvar Resolved = 1;\nvar Rejected = 2;\n\nfunction refineResolvedLazyComponent(lazyComponent) {\n  return lazyComponent._status === Resolved ? lazyComponent._result : null;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + '(' + functionName + ')' : wrapperName);\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  {\n    if (typeof type.tag === 'number') {\n      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_CONCURRENT_MODE_TYPE:\n      return 'ConcurrentMode';\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n      case REACT_LAZY_TYPE:\n        {\n          var thenable = type;\n          var resolvedThenable = refineResolvedLazyComponent(thenable);\n          if (resolvedThenable) {\n            return getComponentName(resolvedThenable);\n          }\n        }\n    }\n  }\n  return null;\n}\n\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction describeFiber(fiber) {\n  switch (fiber.tag) {\n    case HostRoot:\n    case HostPortal:\n    case HostText:\n    case Fragment:\n    case ContextProvider:\n    case ContextConsumer:\n      return '';\n    default:\n      var owner = fiber._debugOwner;\n      var source = fiber._debugSource;\n      var name = getComponentName(fiber.type);\n      var ownerName = null;\n      if (owner) {\n        ownerName = getComponentName(owner.type);\n      }\n      return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nfunction getStackByFiberInDevAndProd(workInProgress) {\n  var info = '';\n  var node = workInProgress;\n  do {\n    info += describeFiber(node);\n    node = node.return;\n  } while (node);\n  return info;\n}\n\nvar current = null;\nvar phase = null;\n\nfunction getCurrentFiberOwnerNameInDevOrNull() {\n  {\n    if (current === null) {\n      return null;\n    }\n    var owner = current._debugOwner;\n    if (owner !== null && typeof owner !== 'undefined') {\n      return getComponentName(owner.type);\n    }\n  }\n  return null;\n}\n\nfunction getCurrentFiberStackInDev() {\n  {\n    if (current === null) {\n      return '';\n    }\n    // Safe because if current fiber exists, we are reconciling,\n    // and it is guaranteed to be the work-in-progress version.\n    return getStackByFiberInDevAndProd(current);\n  }\n  return '';\n}\n\nfunction resetCurrentFiber() {\n  {\n    ReactDebugCurrentFrame.getCurrentStack = null;\n    current = null;\n    phase = null;\n  }\n}\n\nfunction setCurrentFiber(fiber) {\n  {\n    ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;\n    current = fiber;\n    phase = null;\n  }\n}\n\nfunction setCurrentPhase(lifeCyclePhase) {\n  {\n    phase = lifeCyclePhase;\n  }\n}\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = warningWithoutStack$1;\n\n{\n  warning = function (condition, format) {\n    if (condition) {\n      return;\n    }\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n    // eslint-disable-next-line react-internal/warning-and-invariant-args\n\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));\n  };\n}\n\nvar warning$1 = warning;\n\n// A reserved attribute.\n// It is handled by React separately and shouldn't be written to the DOM.\nvar RESERVED = 0;\n\n// A simple string attribute.\n// Attributes that aren't in the whitelist are presumed to have this type.\nvar STRING = 1;\n\n// A string attribute that accepts booleans in React. In HTML, these are called\n// \"enumerated\" attributes with \"true\" and \"false\" as possible values.\n// When true, it should be set to a \"true\" string.\n// When false, it should be set to a \"false\" string.\nvar BOOLEANISH_STRING = 2;\n\n// A real boolean attribute.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\nvar BOOLEAN = 3;\n\n// An attribute that can be used as a flag as well as with a value.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n// For any other value, should be present with that value.\nvar OVERLOADED_BOOLEAN = 4;\n\n// An attribute that must be numeric or parse as a numeric.\n// When falsy, it should be removed.\nvar NUMERIC = 5;\n\n// An attribute that must be positive numeric or parse as a positive numeric.\n// When falsy, it should be removed.\nvar POSITIVE_NUMERIC = 6;\n\n/* eslint-disable max-len */\nvar ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n/* eslint-enable max-len */\nvar ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\n\n\nvar ROOT_ATTRIBUTE_NAME = 'data-reactroot';\nvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar illegalAttributeNameCache = {};\nvar validatedAttributeNameCache = {};\n\nfunction isAttributeNameSafe(attributeName) {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {\n    return true;\n  }\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n  {\n    warning$1(false, 'Invalid attribute name: `%s`', attributeName);\n  }\n  return false;\n}\n\nfunction shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {\n  if (propertyInfo !== null) {\n    return propertyInfo.type === RESERVED;\n  }\n  if (isCustomComponentTag) {\n    return false;\n  }\n  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {\n    return true;\n  }\n  return false;\n}\n\nfunction shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {\n  if (propertyInfo !== null && propertyInfo.type === RESERVED) {\n    return false;\n  }\n  switch (typeof value) {\n    case 'function':\n    // $FlowIssue symbol is perfectly valid here\n    case 'symbol':\n      // eslint-disable-line\n      return true;\n    case 'boolean':\n      {\n        if (isCustomComponentTag) {\n          return false;\n        }\n        if (propertyInfo !== null) {\n          return !propertyInfo.acceptsBooleans;\n        } else {\n          var prefix = name.toLowerCase().slice(0, 5);\n          return prefix !== 'data-' && prefix !== 'aria-';\n        }\n      }\n    default:\n      return false;\n  }\n}\n\nfunction shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {\n  if (value === null || typeof value === 'undefined') {\n    return true;\n  }\n  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {\n    return true;\n  }\n  if (isCustomComponentTag) {\n    return false;\n  }\n  if (propertyInfo !== null) {\n    switch (propertyInfo.type) {\n      case BOOLEAN:\n        return !value;\n      case OVERLOADED_BOOLEAN:\n        return value === false;\n      case NUMERIC:\n        return isNaN(value);\n      case POSITIVE_NUMERIC:\n        return isNaN(value) || value < 1;\n    }\n  }\n  return false;\n}\n\nfunction getPropertyInfo(name) {\n  return properties.hasOwnProperty(name) ? properties[name] : null;\n}\n\nfunction PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace) {\n  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;\n  this.attributeName = attributeName;\n  this.attributeNamespace = attributeNamespace;\n  this.mustUseProperty = mustUseProperty;\n  this.propertyName = name;\n  this.type = type;\n}\n\n// When adding attributes to this list, be sure to also add them to\n// the `possibleStandardNames` module to ensure casing and incorrect\n// name warnings.\nvar properties = {};\n\n// These props are reserved by React. They shouldn't be written to the DOM.\n['children', 'dangerouslySetInnerHTML',\n// TODO: This prevents the assignment of defaultValue to regular\n// elements (not just inputs). Now that ReactDOMInput assigns to the\n// defaultValue property -- do we need this?\n'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty\n  name, // attributeName\n  null);\n} // attributeNamespace\n);\n\n// A few React string attributes have a different name.\n// This is a mapping from React prop names to the attribute names.\n[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {\n  var name = _ref[0],\n      attributeName = _ref[1];\n\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, // attributeName\n  null);\n} // attributeNamespace\n);\n\n// These are \"enumerated\" HTML attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null);\n} // attributeNamespace\n);\n\n// These are \"enumerated\" SVG attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n// Since these are SVG attributes, their attribute names are case-sensitive.\n['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\n  name, // attributeName\n  null);\n} // attributeNamespace\n);\n\n// These are HTML boolean attributes.\n['allowFullScreen', 'async',\n// Note: there is a special case that prevents it from being written to the DOM\n// on the client side because the browsers are inconsistent. Instead we call focus().\n'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless',\n// Microdata\n'itemScope'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null);\n} // attributeNamespace\n);\n\n// These are the few React props that we set as DOM properties\n// rather than attributes. These are all booleans.\n['checked',\n// Note: `option.selected` is not updated if `select.multiple` is\n// disabled with `removeAttribute`. We have special logic for handling this.\n'multiple', 'muted', 'selected'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty\n  name, // attributeName\n  null);\n} // attributeNamespace\n);\n\n// These are HTML attributes that are \"overloaded booleans\": they behave like\n// booleans, but can also accept a string value.\n['capture', 'download'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty\n  name, // attributeName\n  null);\n} // attributeNamespace\n);\n\n// These are HTML attributes that must be positive numbers.\n['cols', 'rows', 'size', 'span'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty\n  name, // attributeName\n  null);\n} // attributeNamespace\n);\n\n// These are HTML attributes that must be numbers.\n['rowSpan', 'start'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null);\n} // attributeNamespace\n);\n\nvar CAMELIZE = /[\\-\\:]([a-z])/g;\nvar capitalize = function (token) {\n  return token[1].toUpperCase();\n};\n\n// This is a list of all SVG attributes that need special casing, namespacing,\n// or boolean value assignment. Regular attributes that just accept strings\n// and have the same names are omitted, just like in the HTML whitelist.\n// Some of these attributes can be hard to find. This list was created by\n// scrapping the MDN documentation.\n['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, null);\n} // attributeNamespace\n);\n\n// String SVG attributes with the xlink namespace.\n['xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, 'http://www.w3.org/1999/xlink');\n});\n\n// String SVG attributes with the xml namespace.\n['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, 'http://www.w3.org/XML/1998/namespace');\n});\n\n// These attribute exists both in HTML and SVG.\n// The attribute name is case-sensitive in SVG so we can't just use\n// the React name like we do for attributes that exist only in HTML.\n['tabIndex', 'crossOrigin'].forEach(function (attributeName) {\n  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty\n  attributeName.toLowerCase(), // attributeName\n  null);\n} // attributeNamespace\n);\n\n/**\n * Get the value for a property on a node. Only used in DEV for SSR validation.\n * The \"expected\" argument is used as a hint of what the expected value is.\n * Some properties have multiple equivalent values.\n */\nfunction getValueForProperty(node, name, expected, propertyInfo) {\n  {\n    if (propertyInfo.mustUseProperty) {\n      var propertyName = propertyInfo.propertyName;\n\n      return node[propertyName];\n    } else {\n      var attributeName = propertyInfo.attributeName;\n\n      var stringValue = null;\n\n      if (propertyInfo.type === OVERLOADED_BOOLEAN) {\n        if (node.hasAttribute(attributeName)) {\n          var value = node.getAttribute(attributeName);\n          if (value === '') {\n            return true;\n          }\n          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n            return value;\n          }\n          if (value === '' + expected) {\n            return expected;\n          }\n          return value;\n        }\n      } else if (node.hasAttribute(attributeName)) {\n        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n          // We had an attribute but shouldn't have had one, so read it\n          // for the error message.\n          return node.getAttribute(attributeName);\n        }\n        if (propertyInfo.type === BOOLEAN) {\n          // If this was a boolean, it doesn't matter what the value is\n          // the fact that we have it is the same as the expected.\n          return expected;\n        }\n        // Even if this property uses a namespace we use getAttribute\n        // because we assume its namespaced name is the same as our config.\n        // To use getAttributeNS we need the local name which we don't have\n        // in our config atm.\n        stringValue = node.getAttribute(attributeName);\n      }\n\n      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n        return stringValue === null ? expected : stringValue;\n      } else if (stringValue === '' + expected) {\n        return expected;\n      } else {\n        return stringValue;\n      }\n    }\n  }\n}\n\n/**\n * Get the value for a attribute on a node. Only used in DEV for SSR validation.\n * The third argument is used as a hint of what the expected value is. Some\n * attributes have multiple equivalent values.\n */\nfunction getValueForAttribute(node, name, expected) {\n  {\n    if (!isAttributeNameSafe(name)) {\n      return;\n    }\n    if (!node.hasAttribute(name)) {\n      return expected === undefined ? undefined : null;\n    }\n    var value = node.getAttribute(name);\n    if (value === '' + expected) {\n      return expected;\n    }\n    return value;\n  }\n}\n\n/**\n * Sets the value for a property on a node.\n *\n * @param {DOMElement} node\n * @param {string} name\n * @param {*} value\n */\nfunction setValueForProperty(node, name, value, isCustomComponentTag) {\n  var propertyInfo = getPropertyInfo(name);\n  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {\n    return;\n  }\n  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {\n    value = null;\n  }\n  // If the prop isn't in the special list, treat it as a simple attribute.\n  if (isCustomComponentTag || propertyInfo === null) {\n    if (isAttributeNameSafe(name)) {\n      var _attributeName = name;\n      if (value === null) {\n        node.removeAttribute(_attributeName);\n      } else {\n        node.setAttribute(_attributeName, '' + value);\n      }\n    }\n    return;\n  }\n  var mustUseProperty = propertyInfo.mustUseProperty;\n\n  if (mustUseProperty) {\n    var propertyName = propertyInfo.propertyName;\n\n    if (value === null) {\n      var type = propertyInfo.type;\n\n      node[propertyName] = type === BOOLEAN ? false : '';\n    } else {\n      // Contrary to `setAttribute`, object properties are properly\n      // `toString`ed by IE8/9.\n      node[propertyName] = value;\n    }\n    return;\n  }\n  // The rest are treated as attributes with special cases.\n  var attributeName = propertyInfo.attributeName,\n      attributeNamespace = propertyInfo.attributeNamespace;\n\n  if (value === null) {\n    node.removeAttribute(attributeName);\n  } else {\n    var _type = propertyInfo.type;\n\n    var attributeValue = void 0;\n    if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {\n      attributeValue = '';\n    } else {\n      // `setAttribute` with objects becomes only `[object]` in IE8/9,\n      // ('' + value) makes it output the correct toString()-value.\n      attributeValue = '' + value;\n    }\n    if (attributeNamespace) {\n      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);\n    } else {\n      node.setAttribute(attributeName, attributeValue);\n    }\n  }\n}\n\n// Flow does not allow string concatenation of most non-string types. To work\n// around this limitation, we use an opaque type that can only be obtained by\n// passing the value through getToStringValue first.\nfunction toString(value) {\n  return '' + value;\n}\n\nfunction getToStringValue(value) {\n  switch (typeof value) {\n    case 'boolean':\n    case 'number':\n    case 'object':\n    case 'string':\n    case 'undefined':\n      return value;\n    default:\n      // function, symbol are assigned as empty strings\n      return '';\n  }\n}\n\nvar ReactDebugCurrentFrame$1 = null;\n\nvar ReactControlledValuePropTypes = {\n  checkPropTypes: null\n};\n\n{\n  ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\n  var hasReadOnlyValue = {\n    button: true,\n    checkbox: true,\n    image: true,\n    hidden: true,\n    radio: true,\n    reset: true,\n    submit: true\n  };\n\n  var propTypes = {\n    value: function (props, propName, componentName) {\n      if (hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled || props[propName] == null) {\n        return null;\n      }\n      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n    },\n    checked: function (props, propName, componentName) {\n      if (props.onChange || props.readOnly || props.disabled || props[propName] == null) {\n        return null;\n      }\n      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n    }\n  };\n\n  /**\n   * Provide a linked `value` attribute for controlled forms. You should not use\n   * this outside of the ReactDOM controlled form components.\n   */\n  ReactControlledValuePropTypes.checkPropTypes = function (tagName, props) {\n    checkPropTypes(propTypes, props, 'prop', tagName, ReactDebugCurrentFrame$1.getStackAddendum);\n  };\n}\n\nvar enableUserTimingAPI = true;\n\n// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\nvar debugRenderPhaseSideEffects = false;\n\n// In some cases, StrictMode should also double-render lifecycles.\n// This can be confusing for tests though,\n// And it can be bad for performance in production.\n// This feature flag can be used to control the behavior:\nvar debugRenderPhaseSideEffectsForStrictMode = true;\n\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\nvar replayFailedUnitOfWorkWithInvokeGuardedCallback = true;\n\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\nvar warnAboutDeprecatedLifecycles = false;\n\n// Gather advanced timing metrics for Profiler subtrees.\nvar enableProfilerTimer = true;\n\n// Trace which interactions trigger each commit.\nvar enableSchedulerTracing = true;\n\n// Only used in www builds.\nvar enableSuspenseServerRenderer = false; // TODO: true? Here it might just be false.\n\n// Only used in www builds.\n\n\n// Only used in www builds.\n\n\n// React Fire: prevent the value and checked attributes from syncing\n// with their related DOM properties\nvar disableInputAttributeSyncing = false;\n\n// These APIs will no longer be \"unstable\" in the upcoming 16.7 release,\n// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.\nvar enableStableConcurrentModeAPIs = false;\n\nvar warnAboutShorthandPropertyCollision = false;\n\n// TODO: direct imports like some-package/src/* are bad. Fix me.\nvar didWarnValueDefaultValue = false;\nvar didWarnCheckedDefaultChecked = false;\nvar didWarnControlledToUncontrolled = false;\nvar didWarnUncontrolledToControlled = false;\n\nfunction isControlled(props) {\n  var usesChecked = props.type === 'checkbox' || props.type === 'radio';\n  return usesChecked ? props.checked != null : props.value != null;\n}\n\n/**\n * Implements an <input> host component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\n\nfunction getHostProps(element, props) {\n  var node = element;\n  var checked = props.checked;\n\n  var hostProps = _assign({}, props, {\n    defaultChecked: undefined,\n    defaultValue: undefined,\n    value: undefined,\n    checked: checked != null ? checked : node._wrapperState.initialChecked\n  });\n\n  return hostProps;\n}\n\nfunction initWrapperState(element, props) {\n  {\n    ReactControlledValuePropTypes.checkPropTypes('input', props);\n\n    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {\n      warning$1(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);\n      didWarnCheckedDefaultChecked = true;\n    }\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n      warning$1(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);\n      didWarnValueDefaultValue = true;\n    }\n  }\n\n  var node = element;\n  var defaultValue = props.defaultValue == null ? '' : props.defaultValue;\n\n  node._wrapperState = {\n    initialChecked: props.checked != null ? props.checked : props.defaultChecked,\n    initialValue: getToStringValue(props.value != null ? props.value : defaultValue),\n    controlled: isControlled(props)\n  };\n}\n\nfunction updateChecked(element, props) {\n  var node = element;\n  var checked = props.checked;\n  if (checked != null) {\n    setValueForProperty(node, 'checked', checked, false);\n  }\n}\n\nfunction updateWrapper(element, props) {\n  var node = element;\n  {\n    var _controlled = isControlled(props);\n\n    if (!node._wrapperState.controlled && _controlled && !didWarnUncontrolledToControlled) {\n      warning$1(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);\n      didWarnUncontrolledToControlled = true;\n    }\n    if (node._wrapperState.controlled && !_controlled && !didWarnControlledToUncontrolled) {\n      warning$1(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);\n      didWarnControlledToUncontrolled = true;\n    }\n  }\n\n  updateChecked(element, props);\n\n  var value = getToStringValue(props.value);\n  var type = props.type;\n\n  if (value != null) {\n    if (type === 'number') {\n      if (value === 0 && node.value === '' ||\n      // We explicitly want to coerce to number here if possible.\n      // eslint-disable-next-line\n      node.value != value) {\n        node.value = toString(value);\n      }\n    } else if (node.value !== toString(value)) {\n      node.value = toString(value);\n    }\n  } else if (type === 'submit' || type === 'reset') {\n    // Submit/reset inputs need the attribute removed completely to avoid\n    // blank-text buttons.\n    node.removeAttribute('value');\n    return;\n  }\n\n  if (disableInputAttributeSyncing) {\n    // When not syncing the value attribute, React only assigns a new value\n    // whenever the defaultValue React prop has changed. When not present,\n    // React does nothing\n    if (props.hasOwnProperty('defaultValue')) {\n      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));\n    }\n  } else {\n    // When syncing the value attribute, the value comes from a cascade of\n    // properties:\n    //  1. The value React property\n    //  2. The defaultValue React property\n    //  3. Otherwise there should be no change\n    if (props.hasOwnProperty('value')) {\n      setDefaultValue(node, props.type, value);\n    } else if (props.hasOwnProperty('defaultValue')) {\n      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));\n    }\n  }\n\n  if (disableInputAttributeSyncing) {\n    // When not syncing the checked attribute, the attribute is directly\n    // controllable from the defaultValue React property. It needs to be\n    // updated as new props come in.\n    if (props.defaultChecked == null) {\n      node.removeAttribute('checked');\n    } else {\n      node.defaultChecked = !!props.defaultChecked;\n    }\n  } else {\n    // When syncing the checked attribute, it only changes when it needs\n    // to be removed, such as transitioning from a checkbox into a text input\n    if (props.checked == null && props.defaultChecked != null) {\n      node.defaultChecked = !!props.defaultChecked;\n    }\n  }\n}\n\nfunction postMountWrapper(element, props, isHydrating) {\n  var node = element;\n\n  // Do not assign value if it is already set. This prevents user text input\n  // from being lost during SSR hydration.\n  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {\n    var type = props.type;\n    var isButton = type === 'submit' || type === 'reset';\n\n    // Avoid setting value attribute on submit/reset inputs as it overrides the\n    // default value provided by the browser. See: #12872\n    if (isButton && (props.value === undefined || props.value === null)) {\n      return;\n    }\n\n    var _initialValue = toString(node._wrapperState.initialValue);\n\n    // Do not assign value if it is already set. This prevents user text input\n    // from being lost during SSR hydration.\n    if (!isHydrating) {\n      if (disableInputAttributeSyncing) {\n        var value = getToStringValue(props.value);\n\n        // When not syncing the value attribute, the value property points\n        // directly to the React prop. Only assign it if it exists.\n        if (value != null) {\n          // Always assign on buttons so that it is possible to assign an\n          // empty string to clear button text.\n          //\n          // Otherwise, do not re-assign the value property if is empty. This\n          // potentially avoids a DOM write and prevents Firefox (~60.0.1) from\n          // prematurely marking required inputs as invalid. Equality is compared\n          // to the current value in case the browser provided value is not an\n          // empty string.\n          if (isButton || value !== node.value) {\n            node.value = toString(value);\n          }\n        }\n      } else {\n        // When syncing the value attribute, the value property should use\n        // the wrapperState._initialValue property. This uses:\n        //\n        //   1. The value React property when present\n        //   2. The defaultValue React property when present\n        //   3. An empty string\n        if (_initialValue !== node.value) {\n          node.value = _initialValue;\n        }\n      }\n    }\n\n    if (disableInputAttributeSyncing) {\n      // When not syncing the value attribute, assign the value attribute\n      // directly from the defaultValue React property (when present)\n      var defaultValue = getToStringValue(props.defaultValue);\n      if (defaultValue != null) {\n        node.defaultValue = toString(defaultValue);\n      }\n    } else {\n      // Otherwise, the value attribute is synchronized to the property,\n      // so we assign defaultValue to the same thing as the value property\n      // assignment step above.\n      node.defaultValue = _initialValue;\n    }\n  }\n\n  // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n  // this is needed to work around a chrome bug where setting defaultChecked\n  // will sometimes influence the value of checked (even after detachment).\n  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n  // We need to temporarily unset name to avoid disrupting radio button groups.\n  var name = node.name;\n  if (name !== '') {\n    node.name = '';\n  }\n\n  if (disableInputAttributeSyncing) {\n    // When not syncing the checked attribute, the checked property\n    // never gets assigned. It must be manually set. We don't want\n    // to do this when hydrating so that existing user input isn't\n    // modified\n    if (!isHydrating) {\n      updateChecked(element, props);\n    }\n\n    // Only assign the checked attribute if it is defined. This saves\n    // a DOM write when controlling the checked attribute isn't needed\n    // (text inputs, submit/reset)\n    if (props.hasOwnProperty('defaultChecked')) {\n      node.defaultChecked = !node.defaultChecked;\n      node.defaultChecked = !!props.defaultChecked;\n    }\n  } else {\n    // When syncing the checked attribute, both the checked property and\n    // attribute are assigned at the same time using defaultChecked. This uses:\n    //\n    //   1. The checked React property when present\n    //   2. The defaultChecked React property when present\n    //   3. Otherwise, false\n    node.defaultChecked = !node.defaultChecked;\n    node.defaultChecked = !!node._wrapperState.initialChecked;\n  }\n\n  if (name !== '') {\n    node.name = name;\n  }\n}\n\nfunction restoreControlledState(element, props) {\n  var node = element;\n  updateWrapper(node, props);\n  updateNamedCousins(node, props);\n}\n\nfunction updateNamedCousins(rootNode, props) {\n  var name = props.name;\n  if (props.type === 'radio' && name != null) {\n    var queryRoot = rootNode;\n\n    while (queryRoot.parentNode) {\n      queryRoot = queryRoot.parentNode;\n    }\n\n    // If `rootNode.form` was non-null, then we could try `form.elements`,\n    // but that sometimes behaves strangely in IE8. We could also try using\n    // `form.getElementsByName`, but that will only return direct children\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\n    // the input might not even be in a form. It might not even be in the\n    // document. Let's just use the local `querySelectorAll` to ensure we don't\n    // miss anything.\n    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n    for (var i = 0; i < group.length; i++) {\n      var otherNode = group[i];\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n        continue;\n      }\n      // This will throw if radio buttons rendered by different copies of React\n      // and the same name are rendered into the same form (same as #1939).\n      // That's probably okay; we don't support it just as we don't support\n      // mixing React radio buttons with non-React ones.\n      var otherProps = getFiberCurrentPropsFromNode$1(otherNode);\n      !otherProps ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : void 0;\n\n      // We need update the tracked value on the named cousin since the value\n      // was changed but the input saw no event or value set\n      updateValueIfChanged(otherNode);\n\n      // If this is a controlled radio button group, forcing the input that\n      // was previously checked to update will cause it to be come re-checked\n      // as appropriate.\n      updateWrapper(otherNode, otherProps);\n    }\n  }\n}\n\n// In Chrome, assigning defaultValue to certain input types triggers input validation.\n// For number inputs, the display value loses trailing decimal points. For email inputs,\n// Chrome raises \"The specified value <x> is not a valid email address\".\n//\n// Here we check to see if the defaultValue has actually changed, avoiding these problems\n// when the user is inputting text\n//\n// https://github.com/facebook/react/issues/7253\nfunction setDefaultValue(node, type, value) {\n  if (\n  // Focused number inputs synchronize on blur. See ChangeEventPlugin.js\n  type !== 'number' || node.ownerDocument.activeElement !== node) {\n    if (value == null) {\n      node.defaultValue = toString(node._wrapperState.initialValue);\n    } else if (node.defaultValue !== toString(value)) {\n      node.defaultValue = toString(value);\n    }\n  }\n}\n\nvar eventTypes$1 = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: 'onChange',\n      captured: 'onChangeCapture'\n    },\n    dependencies: [TOP_BLUR, TOP_CHANGE, TOP_CLICK, TOP_FOCUS, TOP_INPUT, TOP_KEY_DOWN, TOP_KEY_UP, TOP_SELECTION_CHANGE]\n  }\n};\n\nfunction createAndAccumulateChangeEvent(inst, nativeEvent, target) {\n  var event = SyntheticEvent.getPooled(eventTypes$1.change, inst, nativeEvent, target);\n  event.type = 'change';\n  // Flag this event loop as needing state restore.\n  enqueueStateRestore(target);\n  accumulateTwoPhaseDispatches(event);\n  return event;\n}\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementInst = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  runEventsInBatch(event);\n}\n\nfunction getInstIfValueChanged(targetInst) {\n  var targetNode = getNodeFromInstance$1(targetInst);\n  if (updateValueIfChanged(targetNode)) {\n    return targetInst;\n  }\n}\n\nfunction getTargetInstForChangeEvent(topLevelType, targetInst) {\n  if (topLevelType === TOP_CHANGE) {\n    return targetInst;\n  }\n}\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events.\n  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);\n}\n\n/**\n * (For IE <=9) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElement.attachEvent('onpropertychange', handlePropertyChange);\n}\n\n/**\n * (For IE <=9) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onpropertychange', handlePropertyChange);\n  activeElement = null;\n  activeElementInst = null;\n}\n\n/**\n * (For IE <=9) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  if (getInstIfValueChanged(activeElementInst)) {\n    manualDispatchChangeEvent(nativeEvent);\n  }\n}\n\nfunction handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {\n  if (topLevelType === TOP_FOCUS) {\n    // In IE9, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(target, targetInst);\n  } else if (topLevelType === TOP_BLUR) {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetInstForInputEventPolyfill(topLevelType, targetInst) {\n  if (topLevelType === TOP_SELECTION_CHANGE || topLevelType === TOP_KEY_UP || topLevelType === TOP_KEY_DOWN) {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    return getInstIfValueChanged(activeElementInst);\n  }\n}\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  var nodeName = elem.nodeName;\n  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n}\n\nfunction getTargetInstForClickEvent(topLevelType, targetInst) {\n  if (topLevelType === TOP_CLICK) {\n    return getInstIfValueChanged(targetInst);\n  }\n}\n\nfunction getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {\n  if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {\n    return getInstIfValueChanged(targetInst);\n  }\n}\n\nfunction handleControlledInputBlur(node) {\n  var state = node._wrapperState;\n\n  if (!state || !state.controlled || node.type !== 'number') {\n    return;\n  }\n\n  if (!disableInputAttributeSyncing) {\n    // If controlled, assign the value attribute to the current value on blur\n    setDefaultValue(node, 'number', node.value);\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n  eventTypes: eventTypes$1,\n\n  _isInputEventSupported: isInputEventSupported,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;\n\n    var getTargetInstFunc = void 0,\n        handleEventFunc = void 0;\n    if (shouldUseChangeEvent(targetNode)) {\n      getTargetInstFunc = getTargetInstForChangeEvent;\n    } else if (isTextInputElement(targetNode)) {\n      if (isInputEventSupported) {\n        getTargetInstFunc = getTargetInstForInputOrChangeEvent;\n      } else {\n        getTargetInstFunc = getTargetInstForInputEventPolyfill;\n        handleEventFunc = handleEventsForInputEventPolyfill;\n      }\n    } else if (shouldUseClickEvent(targetNode)) {\n      getTargetInstFunc = getTargetInstForClickEvent;\n    }\n\n    if (getTargetInstFunc) {\n      var inst = getTargetInstFunc(topLevelType, targetInst);\n      if (inst) {\n        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(topLevelType, targetNode, targetInst);\n    }\n\n    // When blurring, set the value attribute for number inputs\n    if (topLevelType === TOP_BLUR) {\n      handleControlledInputBlur(targetNode);\n    }\n  }\n};\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\nvar DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];\n\nvar SyntheticUIEvent = SyntheticEvent.extend({\n  view: null,\n  detail: null\n});\n\nvar modifierKeyToProp = {\n  Alt: 'altKey',\n  Control: 'ctrlKey',\n  Meta: 'metaKey',\n  Shift: 'shiftKey'\n};\n\n// Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support\n// getModifierState. If getModifierState is not supported, we map it to a set of\n// modifier keys exposed by the event. In this case, Lock-keys are not supported.\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nfunction modifierStateGetter(keyArg) {\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\nvar previousScreenX = 0;\nvar previousScreenY = 0;\n// Use flags to signal movementX/Y has already been set\nvar isMovementXSet = false;\nvar isMovementYSet = false;\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar SyntheticMouseEvent = SyntheticUIEvent.extend({\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  pageX: null,\n  pageY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: null,\n  buttons: null,\n  relatedTarget: function (event) {\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n  },\n  movementX: function (event) {\n    if ('movementX' in event) {\n      return event.movementX;\n    }\n\n    var screenX = previousScreenX;\n    previousScreenX = event.screenX;\n\n    if (!isMovementXSet) {\n      isMovementXSet = true;\n      return 0;\n    }\n\n    return event.type === 'mousemove' ? event.screenX - screenX : 0;\n  },\n  movementY: function (event) {\n    if ('movementY' in event) {\n      return event.movementY;\n    }\n\n    var screenY = previousScreenY;\n    previousScreenY = event.screenY;\n\n    if (!isMovementYSet) {\n      isMovementYSet = true;\n      return 0;\n    }\n\n    return event.type === 'mousemove' ? event.screenY - screenY : 0;\n  }\n});\n\n/**\n * @interface PointerEvent\n * @see http://www.w3.org/TR/pointerevents/\n */\nvar SyntheticPointerEvent = SyntheticMouseEvent.extend({\n  pointerId: null,\n  width: null,\n  height: null,\n  pressure: null,\n  tangentialPressure: null,\n  tiltX: null,\n  tiltY: null,\n  twist: null,\n  pointerType: null,\n  isPrimary: null\n});\n\nvar eventTypes$2 = {\n  mouseEnter: {\n    registrationName: 'onMouseEnter',\n    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]\n  },\n  mouseLeave: {\n    registrationName: 'onMouseLeave',\n    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]\n  },\n  pointerEnter: {\n    registrationName: 'onPointerEnter',\n    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]\n  },\n  pointerLeave: {\n    registrationName: 'onPointerLeave',\n    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]\n  }\n};\n\nvar EnterLeaveEventPlugin = {\n  eventTypes: eventTypes$2,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var isOverEvent = topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;\n    var isOutEvent = topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;\n\n    if (isOverEvent && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n\n    if (!isOutEvent && !isOverEvent) {\n      // Must not be a mouse or pointer in or out - ignoring.\n      return null;\n    }\n\n    var win = void 0;\n    if (nativeEventTarget.window === nativeEventTarget) {\n      // `nativeEventTarget` is probably a window object.\n      win = nativeEventTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = nativeEventTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from = void 0;\n    var to = void 0;\n    if (isOutEvent) {\n      from = targetInst;\n      var related = nativeEvent.relatedTarget || nativeEvent.toElement;\n      to = related ? getClosestInstanceFromNode(related) : null;\n    } else {\n      // Moving to a node from outside the window.\n      from = null;\n      to = targetInst;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var eventInterface = void 0,\n        leaveEventType = void 0,\n        enterEventType = void 0,\n        eventTypePrefix = void 0;\n\n    if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {\n      eventInterface = SyntheticMouseEvent;\n      leaveEventType = eventTypes$2.mouseLeave;\n      enterEventType = eventTypes$2.mouseEnter;\n      eventTypePrefix = 'mouse';\n    } else if (topLevelType === TOP_POINTER_OUT || topLevelType === TOP_POINTER_OVER) {\n      eventInterface = SyntheticPointerEvent;\n      leaveEventType = eventTypes$2.pointerLeave;\n      enterEventType = eventTypes$2.pointerEnter;\n      eventTypePrefix = 'pointer';\n    }\n\n    var fromNode = from == null ? win : getNodeFromInstance$1(from);\n    var toNode = to == null ? win : getNodeFromInstance$1(to);\n\n    var leave = eventInterface.getPooled(leaveEventType, from, nativeEvent, nativeEventTarget);\n    leave.type = eventTypePrefix + 'leave';\n    leave.target = fromNode;\n    leave.relatedTarget = toNode;\n\n    var enter = eventInterface.getPooled(enterEventType, to, nativeEvent, nativeEventTarget);\n    enter.type = eventTypePrefix + 'enter';\n    enter.target = toNode;\n    enter.relatedTarget = fromNode;\n\n    accumulateEnterLeaveDispatches(leave, enter, from, to);\n\n    return [leave, enter];\n  }\n};\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty$1.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\n\n/**\n * This API should be called `delete` but we'd have to make sure to always\n * transform these to strings for IE support. When this transform is fully\n * supported we can rename it.\n */\n\n\nfunction get(key) {\n  return key._reactInternalFiber;\n}\n\nfunction has(key) {\n  return key._reactInternalFiber !== undefined;\n}\n\nfunction set(key, value) {\n  key._reactInternalFiber = value;\n}\n\n// Don't change these two values. They're used by React Dev Tools.\nvar NoEffect = /*              */0;\nvar PerformedWork = /*         */1;\n\n// You can change the rest (and add more).\nvar Placement = /*             */2;\nvar Update = /*                */4;\nvar PlacementAndUpdate = /*    */6;\nvar Deletion = /*              */8;\nvar ContentReset = /*          */16;\nvar Callback = /*              */32;\nvar DidCapture = /*            */64;\nvar Ref = /*                   */128;\nvar Snapshot = /*              */256;\nvar Passive = /*               */512;\n\n// Passive & Update & Callback & Ref & Snapshot\nvar LifecycleEffectMask = /*   */932;\n\n// Union of all host effects\nvar HostEffectMask = /*        */1023;\n\nvar Incomplete = /*            */1024;\nvar ShouldCapture = /*         */2048;\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n\nvar MOUNTING = 1;\nvar MOUNTED = 2;\nvar UNMOUNTED = 3;\n\nfunction isFiberMountedImpl(fiber) {\n  var node = fiber;\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    if ((node.effectTag & Placement) !== NoEffect) {\n      return MOUNTING;\n    }\n    while (node.return) {\n      node = node.return;\n      if ((node.effectTag & Placement) !== NoEffect) {\n        return MOUNTING;\n      }\n    }\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return MOUNTED;\n  }\n  // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n  return UNMOUNTED;\n}\n\nfunction isFiberMounted(fiber) {\n  return isFiberMountedImpl(fiber) === MOUNTED;\n}\n\nfunction isMounted(component) {\n  {\n    var owner = ReactCurrentOwner$1.current;\n    if (owner !== null && owner.tag === ClassComponent) {\n      var ownerFiber = owner;\n      var instance = ownerFiber.stateNode;\n      !instance._warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber.type) || 'A component') : void 0;\n      instance._warnedAboutRefsInRender = true;\n    }\n  }\n\n  var fiber = get(component);\n  if (!fiber) {\n    return false;\n  }\n  return isFiberMountedImpl(fiber) === MOUNTED;\n}\n\nfunction assertIsMounted(fiber) {\n  !(isFiberMountedImpl(fiber) === MOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;\n}\n\nfunction findCurrentFiberUsingSlowPath(fiber) {\n  var alternate = fiber.alternate;\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    var state = isFiberMountedImpl(fiber);\n    !(state !== UNMOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;\n    if (state === MOUNTING) {\n      return null;\n    }\n    return fiber;\n  }\n  // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n  var a = fiber;\n  var b = alternate;\n  while (true) {\n    var parentA = a.return;\n    var parentB = parentA ? parentA.alternate : null;\n    if (!parentA || !parentB) {\n      // We're at the root.\n      break;\n    }\n\n    // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n    if (parentA.child === parentB.child) {\n      var child = parentA.child;\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n        child = child.sibling;\n      }\n      // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n      invariant(false, 'Unable to find node on an unmounted component.');\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      var didFindChild = false;\n      var _child = parentA.child;\n      while (_child) {\n        if (_child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (_child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        _child = _child.sibling;\n      }\n      if (!didFindChild) {\n        // Search parent B's child set\n        _child = parentB.child;\n        while (_child) {\n          if (_child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (_child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          _child = _child.sibling;\n        }\n        !didFindChild ? invariant(false, 'Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.') : void 0;\n      }\n    }\n\n    !(a.alternate === b) ? invariant(false, 'Return fibers should always be each others\\' alternates. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n  }\n  // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n  !(a.tag === HostRoot) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  }\n  // Otherwise B has to be current branch.\n  return alternate;\n}\n\nfunction findCurrentHostFiber(parent) {\n  var currentParent = findCurrentFiberUsingSlowPath(parent);\n  if (!currentParent) {\n    return null;\n  }\n\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  var node = currentParent;\n  while (true) {\n    if (node.tag === HostComponent || node.tag === HostText) {\n      return node;\n    } else if (node.child) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === currentParent) {\n      return null;\n    }\n    while (!node.sibling) {\n      if (!node.return || node.return === currentParent) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  // Flow needs the return null here, but ESLint complains about it.\n  // eslint-disable-next-line no-unreachable\n  return null;\n}\n\nfunction findCurrentHostFiberWithNoPortals(parent) {\n  var currentParent = findCurrentFiberUsingSlowPath(parent);\n  if (!currentParent) {\n    return null;\n  }\n\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  var node = currentParent;\n  while (true) {\n    if (node.tag === HostComponent || node.tag === HostText) {\n      return node;\n    } else if (node.child && node.tag !== HostPortal) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === currentParent) {\n      return null;\n    }\n    while (!node.sibling) {\n      if (!node.return || node.return === currentParent) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  // Flow needs the return null here, but ESLint complains about it.\n  // eslint-disable-next-line no-unreachable\n  return null;\n}\n\nfunction addEventBubbleListener(element, eventType, listener) {\n  element.addEventListener(eventType, listener, false);\n}\n\nfunction addEventCaptureListener(element, eventType, listener) {\n  element.addEventListener(eventType, listener, true);\n}\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n */\nvar SyntheticAnimationEvent = SyntheticEvent.extend({\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n});\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nvar SyntheticClipboardEvent = SyntheticEvent.extend({\n  clipboardData: function (event) {\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n  }\n});\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar SyntheticFocusEvent = SyntheticUIEvent.extend({\n  relatedTarget: null\n});\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {number} Normalized `charCode` property.\n */\nfunction getEventCharCode(nativeEvent) {\n  var charCode = void 0;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)\n  // report Enter as charCode 10 when ctrl is pressed.\n  if (charCode === 10) {\n    charCode = 13;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar normalizeKey = {\n  Esc: 'Escape',\n  Spacebar: ' ',\n  Left: 'ArrowLeft',\n  Up: 'ArrowUp',\n  Right: 'ArrowRight',\n  Down: 'ArrowDown',\n  Del: 'Delete',\n  Win: 'OS',\n  Menu: 'ContextMenu',\n  Apps: 'ContextMenu',\n  Scroll: 'ScrollLock',\n  MozPrintableKey: 'Unidentified'\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar translateToKey = {\n  '8': 'Backspace',\n  '9': 'Tab',\n  '12': 'Clear',\n  '13': 'Enter',\n  '16': 'Shift',\n  '17': 'Control',\n  '18': 'Alt',\n  '19': 'Pause',\n  '20': 'CapsLock',\n  '27': 'Escape',\n  '32': ' ',\n  '33': 'PageUp',\n  '34': 'PageDown',\n  '35': 'End',\n  '36': 'Home',\n  '37': 'ArrowLeft',\n  '38': 'ArrowUp',\n  '39': 'ArrowRight',\n  '40': 'ArrowDown',\n  '45': 'Insert',\n  '46': 'Delete',\n  '112': 'F1',\n  '113': 'F2',\n  '114': 'F3',\n  '115': 'F4',\n  '116': 'F5',\n  '117': 'F6',\n  '118': 'F7',\n  '119': 'F8',\n  '120': 'F9',\n  '121': 'F10',\n  '122': 'F11',\n  '123': 'F12',\n  '144': 'NumLock',\n  '145': 'ScrollLock',\n  '224': 'Meta'\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar SyntheticKeyboardEvent = SyntheticUIEvent.extend({\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function (event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function (event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function (event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  }\n});\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar SyntheticDragEvent = SyntheticMouseEvent.extend({\n  dataTransfer: null\n});\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nvar SyntheticTouchEvent = SyntheticUIEvent.extend({\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState\n});\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n */\nvar SyntheticTransitionEvent = SyntheticEvent.extend({\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n});\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar SyntheticWheelEvent = SyntheticMouseEvent.extend({\n  deltaX: function (event) {\n    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n  },\n  deltaY: function (event) {\n    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n    'wheelDelta' in event ? -event.wheelDelta : 0;\n  },\n\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null\n});\n\n/**\n * Turns\n * ['abort', ...]\n * into\n * eventTypes = {\n *   'abort': {\n *     phasedRegistrationNames: {\n *       bubbled: 'onAbort',\n *       captured: 'onAbortCapture',\n *     },\n *     dependencies: [TOP_ABORT],\n *   },\n *   ...\n * };\n * topLevelEventsToDispatchConfig = new Map([\n *   [TOP_ABORT, { sameConfig }],\n * ]);\n */\n\nvar interactiveEventTypeNames = [[TOP_BLUR, 'blur'], [TOP_CANCEL, 'cancel'], [TOP_CLICK, 'click'], [TOP_CLOSE, 'close'], [TOP_CONTEXT_MENU, 'contextMenu'], [TOP_COPY, 'copy'], [TOP_CUT, 'cut'], [TOP_AUX_CLICK, 'auxClick'], [TOP_DOUBLE_CLICK, 'doubleClick'], [TOP_DRAG_END, 'dragEnd'], [TOP_DRAG_START, 'dragStart'], [TOP_DROP, 'drop'], [TOP_FOCUS, 'focus'], [TOP_INPUT, 'input'], [TOP_INVALID, 'invalid'], [TOP_KEY_DOWN, 'keyDown'], [TOP_KEY_PRESS, 'keyPress'], [TOP_KEY_UP, 'keyUp'], [TOP_MOUSE_DOWN, 'mouseDown'], [TOP_MOUSE_UP, 'mouseUp'], [TOP_PASTE, 'paste'], [TOP_PAUSE, 'pause'], [TOP_PLAY, 'play'], [TOP_POINTER_CANCEL, 'pointerCancel'], [TOP_POINTER_DOWN, 'pointerDown'], [TOP_POINTER_UP, 'pointerUp'], [TOP_RATE_CHANGE, 'rateChange'], [TOP_RESET, 'reset'], [TOP_SEEKED, 'seeked'], [TOP_SUBMIT, 'submit'], [TOP_TOUCH_CANCEL, 'touchCancel'], [TOP_TOUCH_END, 'touchEnd'], [TOP_TOUCH_START, 'touchStart'], [TOP_VOLUME_CHANGE, 'volumeChange']];\nvar nonInteractiveEventTypeNames = [[TOP_ABORT, 'abort'], [TOP_ANIMATION_END, 'animationEnd'], [TOP_ANIMATION_ITERATION, 'animationIteration'], [TOP_ANIMATION_START, 'animationStart'], [TOP_CAN_PLAY, 'canPlay'], [TOP_CAN_PLAY_THROUGH, 'canPlayThrough'], [TOP_DRAG, 'drag'], [TOP_DRAG_ENTER, 'dragEnter'], [TOP_DRAG_EXIT, 'dragExit'], [TOP_DRAG_LEAVE, 'dragLeave'], [TOP_DRAG_OVER, 'dragOver'], [TOP_DURATION_CHANGE, 'durationChange'], [TOP_EMPTIED, 'emptied'], [TOP_ENCRYPTED, 'encrypted'], [TOP_ENDED, 'ended'], [TOP_ERROR, 'error'], [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture'], [TOP_LOAD, 'load'], [TOP_LOADED_DATA, 'loadedData'], [TOP_LOADED_METADATA, 'loadedMetadata'], [TOP_LOAD_START, 'loadStart'], [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture'], [TOP_MOUSE_MOVE, 'mouseMove'], [TOP_MOUSE_OUT, 'mouseOut'], [TOP_MOUSE_OVER, 'mouseOver'], [TOP_PLAYING, 'playing'], [TOP_POINTER_MOVE, 'pointerMove'], [TOP_POINTER_OUT, 'pointerOut'], [TOP_POINTER_OVER, 'pointerOver'], [TOP_PROGRESS, 'progress'], [TOP_SCROLL, 'scroll'], [TOP_SEEKING, 'seeking'], [TOP_STALLED, 'stalled'], [TOP_SUSPEND, 'suspend'], [TOP_TIME_UPDATE, 'timeUpdate'], [TOP_TOGGLE, 'toggle'], [TOP_TOUCH_MOVE, 'touchMove'], [TOP_TRANSITION_END, 'transitionEnd'], [TOP_WAITING, 'waiting'], [TOP_WHEEL, 'wheel']];\n\nvar eventTypes$4 = {};\nvar topLevelEventsToDispatchConfig = {};\n\nfunction addEventTypeNameToConfig(_ref, isInteractive) {\n  var topEvent = _ref[0],\n      event = _ref[1];\n\n  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n  var onEvent = 'on' + capitalizedEvent;\n\n  var type = {\n    phasedRegistrationNames: {\n      bubbled: onEvent,\n      captured: onEvent + 'Capture'\n    },\n    dependencies: [topEvent],\n    isInteractive: isInteractive\n  };\n  eventTypes$4[event] = type;\n  topLevelEventsToDispatchConfig[topEvent] = type;\n}\n\ninteractiveEventTypeNames.forEach(function (eventTuple) {\n  addEventTypeNameToConfig(eventTuple, true);\n});\nnonInteractiveEventTypeNames.forEach(function (eventTuple) {\n  addEventTypeNameToConfig(eventTuple, false);\n});\n\n// Only used in DEV for exhaustiveness validation.\nvar knownHTMLTopLevelTypes = [TOP_ABORT, TOP_CANCEL, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_CLOSE, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_INPUT, TOP_INVALID, TOP_LOAD, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_RESET, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUBMIT, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_TOGGLE, TOP_VOLUME_CHANGE, TOP_WAITING];\n\nvar SimpleEventPlugin = {\n  eventTypes: eventTypes$4,\n\n  isInteractiveTopLevelEventType: function (topLevelType) {\n    var config = topLevelEventsToDispatchConfig[topLevelType];\n    return config !== undefined && config.isInteractive === true;\n  },\n\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    var EventConstructor = void 0;\n    switch (topLevelType) {\n      case TOP_KEY_PRESS:\n        // Firefox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n      /* falls through */\n      case TOP_KEY_DOWN:\n      case TOP_KEY_UP:\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case TOP_BLUR:\n      case TOP_FOCUS:\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case TOP_CLICK:\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n      /* falls through */\n      case TOP_AUX_CLICK:\n      case TOP_DOUBLE_CLICK:\n      case TOP_MOUSE_DOWN:\n      case TOP_MOUSE_MOVE:\n      case TOP_MOUSE_UP:\n      // TODO: Disabled elements should not respond to mouse events\n      /* falls through */\n      case TOP_MOUSE_OUT:\n      case TOP_MOUSE_OVER:\n      case TOP_CONTEXT_MENU:\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case TOP_DRAG:\n      case TOP_DRAG_END:\n      case TOP_DRAG_ENTER:\n      case TOP_DRAG_EXIT:\n      case TOP_DRAG_LEAVE:\n      case TOP_DRAG_OVER:\n      case TOP_DRAG_START:\n      case TOP_DROP:\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case TOP_TOUCH_CANCEL:\n      case TOP_TOUCH_END:\n      case TOP_TOUCH_MOVE:\n      case TOP_TOUCH_START:\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case TOP_ANIMATION_END:\n      case TOP_ANIMATION_ITERATION:\n      case TOP_ANIMATION_START:\n        EventConstructor = SyntheticAnimationEvent;\n        break;\n      case TOP_TRANSITION_END:\n        EventConstructor = SyntheticTransitionEvent;\n        break;\n      case TOP_SCROLL:\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case TOP_WHEEL:\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case TOP_COPY:\n      case TOP_CUT:\n      case TOP_PASTE:\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n      case TOP_GOT_POINTER_CAPTURE:\n      case TOP_LOST_POINTER_CAPTURE:\n      case TOP_POINTER_CANCEL:\n      case TOP_POINTER_DOWN:\n      case TOP_POINTER_MOVE:\n      case TOP_POINTER_OUT:\n      case TOP_POINTER_OVER:\n      case TOP_POINTER_UP:\n        EventConstructor = SyntheticPointerEvent;\n        break;\n      default:\n        {\n          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {\n            warningWithoutStack$1(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);\n          }\n        }\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n    }\n    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n    accumulateTwoPhaseDispatches(event);\n    return event;\n  }\n};\n\nvar isInteractiveTopLevelEventType = SimpleEventPlugin.isInteractiveTopLevelEventType;\n\n\nvar CALLBACK_BOOKKEEPING_POOL_SIZE = 10;\nvar callbackBookkeepingPool = [];\n\n/**\n * Find the deepest React component completely containing the root of the\n * passed-in instance (for use when entire React trees are nested within each\n * other). If React trees are not nested, returns null.\n */\nfunction findRootContainerNode(inst) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  while (inst.return) {\n    inst = inst.return;\n  }\n  if (inst.tag !== HostRoot) {\n    // This can happen if we're in a detached tree.\n    return null;\n  }\n  return inst.stateNode.containerInfo;\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst) {\n  if (callbackBookkeepingPool.length) {\n    var instance = callbackBookkeepingPool.pop();\n    instance.topLevelType = topLevelType;\n    instance.nativeEvent = nativeEvent;\n    instance.targetInst = targetInst;\n    return instance;\n  }\n  return {\n    topLevelType: topLevelType,\n    nativeEvent: nativeEvent,\n    targetInst: targetInst,\n    ancestors: []\n  };\n}\n\nfunction releaseTopLevelCallbackBookKeeping(instance) {\n  instance.topLevelType = null;\n  instance.nativeEvent = null;\n  instance.targetInst = null;\n  instance.ancestors.length = 0;\n  if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {\n    callbackBookkeepingPool.push(instance);\n  }\n}\n\nfunction handleTopLevel(bookKeeping) {\n  var targetInst = bookKeeping.targetInst;\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = targetInst;\n  do {\n    if (!ancestor) {\n      bookKeeping.ancestors.push(ancestor);\n      break;\n    }\n    var root = findRootContainerNode(ancestor);\n    if (!root) {\n      break;\n    }\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = getClosestInstanceFromNode(root);\n  } while (ancestor);\n\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    targetInst = bookKeeping.ancestors[i];\n    runExtractedEventsInBatch(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\n// TODO: can we stop exporting these?\nvar _enabled = true;\n\nfunction setEnabled(enabled) {\n  _enabled = !!enabled;\n}\n\nfunction isEnabled() {\n  return _enabled;\n}\n\n/**\n * Traps top-level events by using event bubbling.\n *\n * @param {number} topLevelType Number from `TopLevelEventTypes`.\n * @param {object} element Element on which to attach listener.\n * @return {?object} An object with a remove function which will forcefully\n *                  remove the listener.\n * @internal\n */\nfunction trapBubbledEvent(topLevelType, element) {\n  if (!element) {\n    return null;\n  }\n  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;\n\n  addEventBubbleListener(element, getRawEventName(topLevelType),\n  // Check if interactive and wrap in interactiveUpdates\n  dispatch.bind(null, topLevelType));\n}\n\n/**\n * Traps a top-level event by using event capturing.\n *\n * @param {number} topLevelType Number from `TopLevelEventTypes`.\n * @param {object} element Element on which to attach listener.\n * @return {?object} An object with a remove function which will forcefully\n *                  remove the listener.\n * @internal\n */\nfunction trapCapturedEvent(topLevelType, element) {\n  if (!element) {\n    return null;\n  }\n  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;\n\n  addEventCaptureListener(element, getRawEventName(topLevelType),\n  // Check if interactive and wrap in interactiveUpdates\n  dispatch.bind(null, topLevelType));\n}\n\nfunction dispatchInteractiveEvent(topLevelType, nativeEvent) {\n  interactiveUpdates(dispatchEvent, topLevelType, nativeEvent);\n}\n\nfunction dispatchEvent(topLevelType, nativeEvent) {\n  if (!_enabled) {\n    return;\n  }\n\n  var nativeEventTarget = getEventTarget(nativeEvent);\n  var targetInst = getClosestInstanceFromNode(nativeEventTarget);\n  if (targetInst !== null && typeof targetInst.tag === 'number' && !isFiberMounted(targetInst)) {\n    // If we get an event (ex: img onload) before committing that\n    // component's mount, ignore it for now (that is, treat it as if it was an\n    // event on a non-React tree). We might also consider queueing events and\n    // dispatching them after the mount.\n    targetInst = null;\n  }\n\n  var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst);\n\n  try {\n    // Event queue being processed in the same cycle allows\n    // `preventDefault`.\n    batchedUpdates(handleTopLevel, bookKeeping);\n  } finally {\n    releaseTopLevelCallbackBookKeeping(bookKeeping);\n  }\n}\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactDOMEventListener, which is injected and can therefore support\n *    pluggable event sources. This is the only work that occurs in the main\n *    thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar alreadyListeningTo = {};\nvar reactTopListenersCounter = 0;\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + ('' + Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * We listen for bubbled touch events on the document object.\n *\n * Firefox v8.01 (and possibly others) exhibited strange behavior when\n * mounting `onmousemove` events at some node that was not the document\n * element. The symptoms were that if your mouse is not moving over something\n * contained within that mount point (for example on the background) the\n * top-level listeners for `onmousemove` won't be called. However, if you\n * register the `mousemove` on the document object, then it will of course\n * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n * top-level listeners to the document object only, at least for these\n * movement types of events and possibly all events.\n *\n * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n *\n * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n * they bubble to document.\n *\n * @param {string} registrationName Name of listener (e.g. `onClick`).\n * @param {object} mountAt Container where to mount the listener\n */\nfunction listenTo(registrationName, mountAt) {\n  var isListening = getListeningForDocument(mountAt);\n  var dependencies = registrationNameDependencies[registrationName];\n\n  for (var i = 0; i < dependencies.length; i++) {\n    var dependency = dependencies[i];\n    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n      switch (dependency) {\n        case TOP_SCROLL:\n          trapCapturedEvent(TOP_SCROLL, mountAt);\n          break;\n        case TOP_FOCUS:\n        case TOP_BLUR:\n          trapCapturedEvent(TOP_FOCUS, mountAt);\n          trapCapturedEvent(TOP_BLUR, mountAt);\n          // We set the flag for a single dependency later in this function,\n          // but this ensures we mark both as attached rather than just one.\n          isListening[TOP_BLUR] = true;\n          isListening[TOP_FOCUS] = true;\n          break;\n        case TOP_CANCEL:\n        case TOP_CLOSE:\n          if (isEventSupported(getRawEventName(dependency))) {\n            trapCapturedEvent(dependency, mountAt);\n          }\n          break;\n        case TOP_INVALID:\n        case TOP_SUBMIT:\n        case TOP_RESET:\n          // We listen to them on the target DOM elements.\n          // Some of them bubble so we don't want them to fire twice.\n          break;\n        default:\n          // By default, listen on the top level to all non-media events.\n          // Media events don't bubble so adding the listener wouldn't do anything.\n          var isMediaEvent = mediaEventTypes.indexOf(dependency) !== -1;\n          if (!isMediaEvent) {\n            trapBubbledEvent(dependency, mountAt);\n          }\n          break;\n      }\n      isListening[dependency] = true;\n    }\n  }\n}\n\nfunction isListeningToAllDependencies(registrationName, mountAt) {\n  var isListening = getListeningForDocument(mountAt);\n  var dependencies = registrationNameDependencies[registrationName];\n  for (var i = 0; i < dependencies.length; i++) {\n    var dependency = dependencies[i];\n    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getActiveElement(doc) {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === TEXT_NODE) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\n/**\n * @param {DOMElement} outerNode\n * @return {?object}\n */\nfunction getOffsets(outerNode) {\n  var ownerDocument = outerNode.ownerDocument;\n\n  var win = ownerDocument && ownerDocument.defaultView || window;\n  var selection = win.getSelection && win.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode,\n      anchorOffset = selection.anchorOffset,\n      focusNode = selection.focusNode,\n      focusOffset = selection.focusOffset;\n\n  // In Firefox, anchorNode and focusNode can be \"anonymous divs\", e.g. the\n  // up/down buttons on an <input type=\"number\">. Anonymous divs do not seem to\n  // expose properties, triggering a \"Permission denied error\" if any of its\n  // properties are accessed. The only seemingly possible way to avoid erroring\n  // is to access a property that typically works for non-anonymous divs and\n  // catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n\n  try {\n    /* eslint-disable no-unused-expressions */\n    anchorNode.nodeType;\n    focusNode.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);\n}\n\n/**\n * Returns {start, end} where `start` is the character/codepoint index of\n * (anchorNode, anchorOffset) within the textContent of `outerNode`, and\n * `end` is the index of (focusNode, focusOffset).\n *\n * Returns null if you pass in garbage input but we should probably just crash.\n *\n * Exported only for testing.\n */\nfunction getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {\n  var length = 0;\n  var start = -1;\n  var end = -1;\n  var indexWithinAnchor = 0;\n  var indexWithinFocus = 0;\n  var node = outerNode;\n  var parentNode = null;\n\n  outer: while (true) {\n    var next = null;\n\n    while (true) {\n      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {\n        start = length + anchorOffset;\n      }\n      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {\n        end = length + focusOffset;\n      }\n\n      if (node.nodeType === TEXT_NODE) {\n        length += node.nodeValue.length;\n      }\n\n      if ((next = node.firstChild) === null) {\n        break;\n      }\n      // Moving from `node` to its first child `next`.\n      parentNode = node;\n      node = next;\n    }\n\n    while (true) {\n      if (node === outerNode) {\n        // If `outerNode` has children, this is always the second time visiting\n        // it. If it has no children, this is still the first loop, and the only\n        // valid selection is anchorNode and focusNode both equal to this node\n        // and both offsets 0, in which case we will have handled above.\n        break outer;\n      }\n      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {\n        start = length;\n      }\n      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {\n        end = length;\n      }\n      if ((next = node.nextSibling) !== null) {\n        break;\n      }\n      node = parentNode;\n      parentNode = node.parentNode;\n    }\n\n    // Moving from `node` to its next sibling `next`.\n    node = next;\n  }\n\n  if (start === -1 || end === -1) {\n    // This should never happen. (Would happen if the anchor/focus nodes aren't\n    // actually inside the passed-in node.)\n    return null;\n  }\n\n  return {\n    start: start,\n    end: end\n  };\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programmatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setOffsets(node, offsets) {\n  var doc = node.ownerDocument || document;\n  var win = doc && doc.defaultView || window;\n\n  // Edge fails with \"Object expected\" in some scenarios.\n  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,\n  // fails when pasting 100+ items)\n  if (!win.getSelection) {\n    return;\n  }\n\n  var selection = win.getSelection();\n  var length = node.textContent.length;\n  var start = Math.min(offsets.start, length);\n  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {\n      return;\n    }\n    var range = doc.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nfunction isTextNode(node) {\n  return node && node.nodeType === TEXT_NODE;\n}\n\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nfunction isInDocument(node) {\n  return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);\n}\n\nfunction isSameOriginFrame(iframe) {\n  try {\n    // Accessing the contentDocument of a HTMLIframeElement can cause the browser\n    // to throw, e.g. if it has a cross-origin src attribute.\n    // Safari will show an error in the console when the access results in \"Blocked a frame with origin\". e.g:\n    // iframe.contentDocument.defaultView;\n    // A safety way is to access one of the cross origin properties: Window or Location\n    // Which might result in \"SecurityError\" DOM Exception and it is compatible to Safari.\n    // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl\n\n    return typeof iframe.contentWindow.location.href === 'string';\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction getActiveElementDeep() {\n  var win = window;\n  var element = getActiveElement();\n  while (element instanceof win.HTMLIFrameElement) {\n    if (isSameOriginFrame(element)) {\n      win = element.contentWindow;\n    } else {\n      return element;\n    }\n    element = getActiveElement(win.document);\n  }\n  return element;\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\n\n/**\n * @hasSelectionCapabilities: we get the element types that support selection\n * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`\n * and `selectionEnd` rows.\n */\nfunction hasSelectionCapabilities(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');\n}\n\nfunction getSelectionInformation() {\n  var focusedElem = getActiveElementDeep();\n  return {\n    focusedElem: focusedElem,\n    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection$1(focusedElem) : null\n  };\n}\n\n/**\n * @restoreSelection: If any selection information was potentially lost,\n * restore it. This is useful when performing operations that could remove dom\n * nodes and place them back in, resulting in focus being lost.\n */\nfunction restoreSelection(priorSelectionInformation) {\n  var curFocusedElem = getActiveElementDeep();\n  var priorFocusedElem = priorSelectionInformation.focusedElem;\n  var priorSelectionRange = priorSelectionInformation.selectionRange;\n  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n    if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {\n      setSelection(priorFocusedElem, priorSelectionRange);\n    }\n\n    // Focusing a node can change the scroll position, which is undesirable\n    var ancestors = [];\n    var ancestor = priorFocusedElem;\n    while (ancestor = ancestor.parentNode) {\n      if (ancestor.nodeType === ELEMENT_NODE) {\n        ancestors.push({\n          element: ancestor,\n          left: ancestor.scrollLeft,\n          top: ancestor.scrollTop\n        });\n      }\n    }\n\n    if (typeof priorFocusedElem.focus === 'function') {\n      priorFocusedElem.focus();\n    }\n\n    for (var i = 0; i < ancestors.length; i++) {\n      var info = ancestors[i];\n      info.element.scrollLeft = info.left;\n      info.element.scrollTop = info.top;\n    }\n  }\n}\n\n/**\n * @getSelection: Gets the selection bounds of a focused textarea, input or\n * contentEditable node.\n * -@input: Look up selection bounds of this input\n * -@return {start: selectionStart, end: selectionEnd}\n */\nfunction getSelection$1(input) {\n  var selection = void 0;\n\n  if ('selectionStart' in input) {\n    // Modern browser with input or textarea.\n    selection = {\n      start: input.selectionStart,\n      end: input.selectionEnd\n    };\n  } else {\n    // Content editable or old IE textarea.\n    selection = getOffsets(input);\n  }\n\n  return selection || { start: 0, end: 0 };\n}\n\n/**\n * @setSelection: Sets the selection bounds of a textarea or input and focuses\n * the input.\n * -@input     Set selection bounds of this input or textarea\n * -@offsets   Object of same form that is returned from get*\n */\nfunction setSelection(input, offsets) {\n  var start = offsets.start,\n      end = offsets.end;\n\n  if (end === undefined) {\n    end = start;\n  }\n\n  if ('selectionStart' in input) {\n    input.selectionStart = start;\n    input.selectionEnd = Math.min(end, input.value.length);\n  } else {\n    setOffsets(input, offsets);\n  }\n}\n\nvar skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nvar eventTypes$3 = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: 'onSelect',\n      captured: 'onSelectCapture'\n    },\n    dependencies: [TOP_BLUR, TOP_CONTEXT_MENU, TOP_DRAG_END, TOP_FOCUS, TOP_KEY_DOWN, TOP_KEY_UP, TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_SELECTION_CHANGE]\n  }\n};\n\nvar activeElement$1 = null;\nvar activeElementInst$1 = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node && hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else {\n    var win = node.ownerDocument && node.ownerDocument.defaultView || window;\n    var selection = win.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  }\n}\n\n/**\n * Get document associated with the event target.\n *\n * @param {object} nativeEventTarget\n * @return {Document}\n */\nfunction getEventTargetDocument(eventTarget) {\n  return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @param {object} nativeEventTarget\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  var doc = getEventTargetDocument(nativeEventTarget);\n\n  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement$1);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes$3.select, activeElementInst$1, nativeEvent, nativeEventTarget);\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement$1;\n\n    accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n\n  return null;\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n  eventTypes: eventTypes$3,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var doc = getEventTargetDocument(nativeEventTarget);\n    // Track whether all listeners exists for this plugin. If none exist, we do\n    // not extract events. See #3639.\n    if (!doc || !isListeningToAllDependencies('onSelect', doc)) {\n      return null;\n    }\n\n    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case TOP_FOCUS:\n        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n          activeElement$1 = targetNode;\n          activeElementInst$1 = targetInst;\n          lastSelection = null;\n        }\n        break;\n      case TOP_BLUR:\n        activeElement$1 = null;\n        activeElementInst$1 = null;\n        lastSelection = null;\n        break;\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case TOP_MOUSE_DOWN:\n        mouseDown = true;\n        break;\n      case TOP_CONTEXT_MENU:\n      case TOP_MOUSE_UP:\n      case TOP_DRAG_END:\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't). IE's event fires out of order with respect\n      // to key and input events on deletion, so we discard it.\n      //\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      // This is also our approach for IE handling, for the reason above.\n      case TOP_SELECTION_CHANGE:\n        if (skipSelectionChangeEvent) {\n          break;\n        }\n      // falls through\n      case TOP_KEY_DOWN:\n      case TOP_KEY_UP:\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n    }\n\n    return null;\n  }\n};\n\n/**\n * Inject modules for resolving DOM hierarchy and plugin ordering.\n */\ninjection.injectEventPluginOrder(DOMEventPluginOrder);\nsetComponentTree(getFiberCurrentPropsFromNode$1, getInstanceFromNode$1, getNodeFromInstance$1);\n\n/**\n * Some important event plugins included by default (without having to require\n * them).\n */\ninjection.injectEventPluginsByName({\n  SimpleEventPlugin: SimpleEventPlugin,\n  EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n  ChangeEventPlugin: ChangeEventPlugin,\n  SelectEventPlugin: SelectEventPlugin,\n  BeforeInputEventPlugin: BeforeInputEventPlugin\n});\n\nvar didWarnSelectedSetOnOption = false;\nvar didWarnInvalidChild = false;\n\nfunction flattenChildren(children) {\n  var content = '';\n\n  // Flatten children. We'll warn if they are invalid\n  // during validateProps() which runs for hydration too.\n  // Note that this would throw on non-element objects.\n  // Elements are stringified (which is normally irrelevant\n  // but matters for <fbt>).\n  React.Children.forEach(children, function (child) {\n    if (child == null) {\n      return;\n    }\n    content += child;\n    // Note: we don't warn about invalid children here.\n    // Instead, this is done separately below so that\n    // it happens during the hydration codepath too.\n  });\n\n  return content;\n}\n\n/**\n * Implements an <option> host component that warns when `selected` is set.\n */\n\nfunction validateProps(element, props) {\n  {\n    // This mirrors the codepath above, but runs for hydration too.\n    // Warn about invalid children here so that client and hydration are consistent.\n    // TODO: this seems like it could cause a DEV-only throw for hydration\n    // if children contains a non-element object. We should try to avoid that.\n    if (typeof props.children === 'object' && props.children !== null) {\n      React.Children.forEach(props.children, function (child) {\n        if (child == null) {\n          return;\n        }\n        if (typeof child === 'string' || typeof child === 'number') {\n          return;\n        }\n        if (typeof child.type !== 'string') {\n          return;\n        }\n        if (!didWarnInvalidChild) {\n          didWarnInvalidChild = true;\n          warning$1(false, 'Only strings and numbers are supported as <option> children.');\n        }\n      });\n    }\n\n    // TODO: Remove support for `selected` in <option>.\n    if (props.selected != null && !didWarnSelectedSetOnOption) {\n      warning$1(false, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');\n      didWarnSelectedSetOnOption = true;\n    }\n  }\n}\n\nfunction postMountWrapper$1(element, props) {\n  // value=\"\" should make a value attribute (#6219)\n  if (props.value != null) {\n    element.setAttribute('value', toString(getToStringValue(props.value)));\n  }\n}\n\nfunction getHostProps$1(element, props) {\n  var hostProps = _assign({ children: undefined }, props);\n  var content = flattenChildren(props.children);\n\n  if (content) {\n    hostProps.children = content;\n  }\n\n  return hostProps;\n}\n\n// TODO: direct imports like some-package/src/* are bad. Fix me.\nvar didWarnValueDefaultValue$1 = void 0;\n\n{\n  didWarnValueDefaultValue$1 = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  var ownerName = getCurrentFiberOwnerNameInDevOrNull();\n  if (ownerName) {\n    return '\\n\\nCheck the render method of `' + ownerName + '`.';\n  }\n  return '';\n}\n\nvar valuePropNames = ['value', 'defaultValue'];\n\n/**\n * Validation function for `value` and `defaultValue`.\n */\nfunction checkSelectPropTypes(props) {\n  ReactControlledValuePropTypes.checkPropTypes('select', props);\n\n  for (var i = 0; i < valuePropNames.length; i++) {\n    var propName = valuePropNames[i];\n    if (props[propName] == null) {\n      continue;\n    }\n    var isArray = Array.isArray(props[propName]);\n    if (props.multiple && !isArray) {\n      warning$1(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());\n    } else if (!props.multiple && isArray) {\n      warning$1(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());\n    }\n  }\n}\n\nfunction updateOptions(node, multiple, propValue, setDefaultSelected) {\n  var options = node.options;\n\n  if (multiple) {\n    var selectedValues = propValue;\n    var selectedValue = {};\n    for (var i = 0; i < selectedValues.length; i++) {\n      // Prefix to avoid chaos with special keys.\n      selectedValue['$' + selectedValues[i]] = true;\n    }\n    for (var _i = 0; _i < options.length; _i++) {\n      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);\n      if (options[_i].selected !== selected) {\n        options[_i].selected = selected;\n      }\n      if (selected && setDefaultSelected) {\n        options[_i].defaultSelected = true;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    var _selectedValue = toString(getToStringValue(propValue));\n    var defaultSelected = null;\n    for (var _i2 = 0; _i2 < options.length; _i2++) {\n      if (options[_i2].value === _selectedValue) {\n        options[_i2].selected = true;\n        if (setDefaultSelected) {\n          options[_i2].defaultSelected = true;\n        }\n        return;\n      }\n      if (defaultSelected === null && !options[_i2].disabled) {\n        defaultSelected = options[_i2];\n      }\n    }\n    if (defaultSelected !== null) {\n      defaultSelected.selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> host component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\n\nfunction getHostProps$2(element, props) {\n  return _assign({}, props, {\n    value: undefined\n  });\n}\n\nfunction initWrapperState$1(element, props) {\n  var node = element;\n  {\n    checkSelectPropTypes(props);\n  }\n\n  node._wrapperState = {\n    wasMultiple: !!props.multiple\n  };\n\n  {\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {\n      warning$1(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');\n      didWarnValueDefaultValue$1 = true;\n    }\n  }\n}\n\nfunction postMountWrapper$2(element, props) {\n  var node = element;\n  node.multiple = !!props.multiple;\n  var value = props.value;\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  } else if (props.defaultValue != null) {\n    updateOptions(node, !!props.multiple, props.defaultValue, true);\n  }\n}\n\nfunction postUpdateWrapper(element, props) {\n  var node = element;\n  var wasMultiple = node._wrapperState.wasMultiple;\n  node._wrapperState.wasMultiple = !!props.multiple;\n\n  var value = props.value;\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  } else if (wasMultiple !== !!props.multiple) {\n    // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n    if (props.defaultValue != null) {\n      updateOptions(node, !!props.multiple, props.defaultValue, true);\n    } else {\n      // Revert the select back to its default unselected state.\n      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);\n    }\n  }\n}\n\nfunction restoreControlledState$2(element, props) {\n  var node = element;\n  var value = props.value;\n\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  }\n}\n\nvar didWarnValDefaultVal = false;\n\n/**\n * Implements a <textarea> host component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\n\nfunction getHostProps$3(element, props) {\n  var node = element;\n  !(props.dangerouslySetInnerHTML == null) ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : void 0;\n\n  // Always set children to the same thing. In IE9, the selection range will\n  // get reset if `textContent` is mutated.  We could add a check in setTextContent\n  // to only set the value if/when the value differs from the node value (which would\n  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this\n  // solution. The value can be a boolean or object so that's why it's forced\n  // to be a string.\n  var hostProps = _assign({}, props, {\n    value: undefined,\n    defaultValue: undefined,\n    children: toString(node._wrapperState.initialValue)\n  });\n\n  return hostProps;\n}\n\nfunction initWrapperState$2(element, props) {\n  var node = element;\n  {\n    ReactControlledValuePropTypes.checkPropTypes('textarea', props);\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {\n      warning$1(false, '%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');\n      didWarnValDefaultVal = true;\n    }\n  }\n\n  var initialValue = props.value;\n\n  // Only bother fetching default value if we're going to use it\n  if (initialValue == null) {\n    var defaultValue = props.defaultValue;\n    // TODO (yungsters): Remove support for children content in <textarea>.\n    var children = props.children;\n    if (children != null) {\n      {\n        warning$1(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');\n      }\n      !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;\n      if (Array.isArray(children)) {\n        !(children.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;\n        children = children[0];\n      }\n\n      defaultValue = children;\n    }\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n    initialValue = defaultValue;\n  }\n\n  node._wrapperState = {\n    initialValue: getToStringValue(initialValue)\n  };\n}\n\nfunction updateWrapper$1(element, props) {\n  var node = element;\n  var value = getToStringValue(props.value);\n  var defaultValue = getToStringValue(props.defaultValue);\n  if (value != null) {\n    // Cast `value` to a string to ensure the value is set correctly. While\n    // browsers typically do this as necessary, jsdom doesn't.\n    var newValue = toString(value);\n    // To avoid side effects (such as losing text selection), only set value if changed\n    if (newValue !== node.value) {\n      node.value = newValue;\n    }\n    if (props.defaultValue == null && node.defaultValue !== newValue) {\n      node.defaultValue = newValue;\n    }\n  }\n  if (defaultValue != null) {\n    node.defaultValue = toString(defaultValue);\n  }\n}\n\nfunction postMountWrapper$3(element, props) {\n  var node = element;\n  // This is in postMount because we need access to the DOM node, which is not\n  // available until after the component has mounted.\n  var textContent = node.textContent;\n\n  // Only set node.value if textContent is equal to the expected\n  // initial value. In IE10/IE11 there is a bug where the placeholder attribute\n  // will populate textContent as well.\n  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/\n  if (textContent === node._wrapperState.initialValue) {\n    node.value = textContent;\n  }\n}\n\nfunction restoreControlledState$3(element, props) {\n  // DOM component is still mounted; update\n  updateWrapper$1(element, props);\n}\n\nvar HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';\nvar MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\nvar SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\nvar Namespaces = {\n  html: HTML_NAMESPACE$1,\n  mathml: MATH_NAMESPACE,\n  svg: SVG_NAMESPACE\n};\n\n// Assumes there is no parent namespace.\nfunction getIntrinsicNamespace(type) {\n  switch (type) {\n    case 'svg':\n      return SVG_NAMESPACE;\n    case 'math':\n      return MATH_NAMESPACE;\n    default:\n      return HTML_NAMESPACE$1;\n  }\n}\n\nfunction getChildNamespace(parentNamespace, type) {\n  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {\n    // No (or default) parent namespace: potential entry point.\n    return getIntrinsicNamespace(type);\n  }\n  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {\n    // We're leaving SVG.\n    return HTML_NAMESPACE$1;\n  }\n  // By default, pass namespace below.\n  return parentNamespace;\n}\n\n/* globals MSApp */\n\n/**\n * Create a function which has 'unsafe' privileges (required by windows8 apps)\n */\nvar createMicrosoftUnsafeLocalFunction = function (func) {\n  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n    return function (arg0, arg1, arg2, arg3) {\n      MSApp.execUnsafeLocalFunction(function () {\n        return func(arg0, arg1, arg2, arg3);\n      });\n    };\n  } else {\n    return func;\n  }\n};\n\n// SVG temp container for IE lacking innerHTML\nvar reusableSVGContainer = void 0;\n\n/**\n * Set the innerHTML property of a node\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nvar setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {\n  // IE does not have innerHTML for SVG nodes, so instead we inject the\n  // new markup in a temp node and then move the child nodes across into\n  // the target node\n\n  if (node.namespaceURI === Namespaces.svg && !('innerHTML' in node)) {\n    reusableSVGContainer = reusableSVGContainer || document.createElement('div');\n    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';\n    var svgNode = reusableSVGContainer.firstChild;\n    while (node.firstChild) {\n      node.removeChild(node.firstChild);\n    }\n    while (svgNode.firstChild) {\n      node.appendChild(svgNode.firstChild);\n    }\n  } else {\n    node.innerHTML = html;\n  }\n});\n\n/**\n * Set the textContent property of a node. For text updates, it's faster\n * to set the `nodeValue` of the Text node directly instead of using\n * `.textContent` which will remove the existing node and create a new one.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nvar setTextContent = function (node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n\n    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n};\n\n// List derived from Gecko source code:\n// https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js\nvar shorthandToLonghand = {\n  animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],\n  background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],\n  backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],\n  border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],\n  borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],\n  borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],\n  borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],\n  borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],\n  borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],\n  borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],\n  borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],\n  borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],\n  borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],\n  borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],\n  borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],\n  borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],\n  borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],\n  columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],\n  columns: ['columnCount', 'columnWidth'],\n  flex: ['flexBasis', 'flexGrow', 'flexShrink'],\n  flexFlow: ['flexDirection', 'flexWrap'],\n  font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],\n  fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],\n  gap: ['columnGap', 'rowGap'],\n  grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],\n  gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],\n  gridColumn: ['gridColumnEnd', 'gridColumnStart'],\n  gridColumnGap: ['columnGap'],\n  gridGap: ['columnGap', 'rowGap'],\n  gridRow: ['gridRowEnd', 'gridRowStart'],\n  gridRowGap: ['rowGap'],\n  gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],\n  listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],\n  margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],\n  marker: ['markerEnd', 'markerMid', 'markerStart'],\n  mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],\n  maskPosition: ['maskPositionX', 'maskPositionY'],\n  outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],\n  overflow: ['overflowX', 'overflowY'],\n  padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],\n  placeContent: ['alignContent', 'justifyContent'],\n  placeItems: ['alignItems', 'justifyItems'],\n  placeSelf: ['alignSelf', 'justifySelf'],\n  textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],\n  textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],\n  transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],\n  wordWrap: ['overflowWrap']\n};\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nvar isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridArea: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value, isCustomProperty) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {\n    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n  }\n\n  return ('' + value).trim();\n}\n\nvar uppercasePattern = /([A-Z])/g;\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n */\nfunction hyphenateStyleName(name) {\n  return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');\n}\n\nvar warnValidStyle = function () {};\n\n{\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n  var msPattern$1 = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n  var warnedForNaNValue = false;\n  var warnedForInfinityValue = false;\n\n  var camelize = function (string) {\n    return string.replace(hyphenPattern, function (_, character) {\n      return character.toUpperCase();\n    });\n  };\n\n  var warnHyphenatedStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    warning$1(false, 'Unsupported style property %s. Did you mean %s?', name,\n    // As Andi Smith suggests\n    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n    // is converted to lowercase `ms`.\n    camelize(name.replace(msPattern$1, 'ms-')));\n  };\n\n  var warnBadVendoredStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    warning$1(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));\n  };\n\n  var warnStyleValueWithSemicolon = function (name, value) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    warning$1(false, \"Style property values shouldn't contain a semicolon. \" + 'Try \"%s: %s\" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));\n  };\n\n  var warnStyleValueIsNaN = function (name, value) {\n    if (warnedForNaNValue) {\n      return;\n    }\n\n    warnedForNaNValue = true;\n    warning$1(false, '`NaN` is an invalid value for the `%s` css style property.', name);\n  };\n\n  var warnStyleValueIsInfinity = function (name, value) {\n    if (warnedForInfinityValue) {\n      return;\n    }\n\n    warnedForInfinityValue = true;\n    warning$1(false, '`Infinity` is an invalid value for the `%s` css style property.', name);\n  };\n\n  warnValidStyle = function (name, value) {\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value);\n    }\n\n    if (typeof value === 'number') {\n      if (isNaN(value)) {\n        warnStyleValueIsNaN(name, value);\n      } else if (!isFinite(value)) {\n        warnStyleValueIsInfinity(name, value);\n      }\n    }\n  };\n}\n\nvar warnValidStyle$1 = warnValidStyle;\n\n/**\n * Operations for dealing with CSS properties.\n */\n\n/**\n * This creates a string that is expected to be equivalent to the style\n * attribute generated by server-side rendering. It by-passes warnings and\n * security checks so it's not safe to use this value for anything other than\n * comparison. It is only used in DEV for SSR validation.\n */\nfunction createDangerousStringForStyles(styles) {\n  {\n    var serialized = '';\n    var delimiter = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var styleValue = styles[styleName];\n      if (styleValue != null) {\n        var isCustomProperty = styleName.indexOf('--') === 0;\n        serialized += delimiter + hyphenateStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);\n\n        delimiter = ';';\n      }\n    }\n    return serialized || null;\n  }\n}\n\n/**\n * Sets the value for multiple styles on a node.  If a value is specified as\n * '' (empty string), the corresponding style property will be unset.\n *\n * @param {DOMElement} node\n * @param {object} styles\n */\nfunction setValueForStyles(node, styles) {\n  var style = node.style;\n  for (var styleName in styles) {\n    if (!styles.hasOwnProperty(styleName)) {\n      continue;\n    }\n    var isCustomProperty = styleName.indexOf('--') === 0;\n    {\n      if (!isCustomProperty) {\n        warnValidStyle$1(styleName, styles[styleName]);\n      }\n    }\n    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);\n    if (styleName === 'float') {\n      styleName = 'cssFloat';\n    }\n    if (isCustomProperty) {\n      style.setProperty(styleName, styleValue);\n    } else {\n      style[styleName] = styleValue;\n    }\n  }\n}\n\nfunction isValueEmpty(value) {\n  return value == null || typeof value === 'boolean' || value === '';\n}\n\n/**\n * Given {color: 'red', overflow: 'hidden'} returns {\n *   color: 'color',\n *   overflowX: 'overflow',\n *   overflowY: 'overflow',\n * }. This can be read as \"the overflowY property was set by the overflow\n * shorthand\". That is, the values are the property that each was derived from.\n */\nfunction expandShorthandMap(styles) {\n  var expanded = {};\n  for (var key in styles) {\n    var longhands = shorthandToLonghand[key] || [key];\n    for (var i = 0; i < longhands.length; i++) {\n      expanded[longhands[i]] = key;\n    }\n  }\n  return expanded;\n}\n\n/**\n * When mixing shorthand and longhand property names, we warn during updates if\n * we expect an incorrect result to occur. In particular, we warn for:\n *\n * Updating a shorthand property (longhand gets overwritten):\n *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}\n *   becomes .style.font = 'baz'\n * Removing a shorthand property (longhand gets lost too):\n *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}\n *   becomes .style.font = ''\n * Removing a longhand property (should revert to shorthand; doesn't):\n *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}\n *   becomes .style.fontVariant = ''\n */\nfunction validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {\n  if (!warnAboutShorthandPropertyCollision) {\n    return;\n  }\n\n  if (!nextStyles) {\n    return;\n  }\n\n  var expandedUpdates = expandShorthandMap(styleUpdates);\n  var expandedStyles = expandShorthandMap(nextStyles);\n  var warnedAbout = {};\n  for (var key in expandedUpdates) {\n    var originalKey = expandedUpdates[key];\n    var correctOriginalKey = expandedStyles[key];\n    if (correctOriginalKey && originalKey !== correctOriginalKey) {\n      var warningKey = originalKey + ',' + correctOriginalKey;\n      if (warnedAbout[warningKey]) {\n        continue;\n      }\n      warnedAbout[warningKey] = true;\n      warning$1(false, '%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + \"avoid this, don't mix shorthand and non-shorthand properties \" + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);\n    }\n  }\n}\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special-case tags.\n\nvar omittedCloseTags = {\n  area: true,\n  base: true,\n  br: true,\n  col: true,\n  embed: true,\n  hr: true,\n  img: true,\n  input: true,\n  keygen: true,\n  link: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true\n  // NOTE: menuitem's close tag should be omitted, but that causes problems.\n};\n\n// For HTML, certain tags cannot have children. This has the same purpose as\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\nvar voidElementTags = _assign({\n  menuitem: true\n}, omittedCloseTags);\n\n// TODO: We can remove this if we add invariantWithStack()\n// or add stack by default to invariants where possible.\nvar HTML$1 = '__html';\n\nvar ReactDebugCurrentFrame$2 = null;\n{\n  ReactDebugCurrentFrame$2 = ReactSharedInternals.ReactDebugCurrentFrame;\n}\n\nfunction assertValidProps(tag, props) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (voidElementTags[tag]) {\n    !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, ReactDebugCurrentFrame$2.getStackAddendum()) : void 0;\n  }\n  if (props.dangerouslySetInnerHTML != null) {\n    !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;\n    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;\n  }\n  {\n    !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning$1(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;\n  }\n  !(props.style == null || typeof props.style === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \\'em\\'}} when using JSX.%s', ReactDebugCurrentFrame$2.getStackAddendum()) : void 0;\n}\n\nfunction isCustomComponent(tagName, props) {\n  if (tagName.indexOf('-') === -1) {\n    return typeof props.is === 'string';\n  }\n  switch (tagName) {\n    // These are reserved SVG and MathML elements.\n    // We don't mind this whitelist too much because we expect it to never grow.\n    // The alternative is to track the namespace in a few places which is convoluted.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph':\n      return false;\n    default:\n      return true;\n  }\n}\n\n// When adding attributes to the HTML or SVG whitelist, be sure to\n// also add them to this module to ensure casing and incorrect name\n// warnings.\nvar possibleStandardNames = {\n  // HTML\n  accept: 'accept',\n  acceptcharset: 'acceptCharset',\n  'accept-charset': 'acceptCharset',\n  accesskey: 'accessKey',\n  action: 'action',\n  allowfullscreen: 'allowFullScreen',\n  alt: 'alt',\n  as: 'as',\n  async: 'async',\n  autocapitalize: 'autoCapitalize',\n  autocomplete: 'autoComplete',\n  autocorrect: 'autoCorrect',\n  autofocus: 'autoFocus',\n  autoplay: 'autoPlay',\n  autosave: 'autoSave',\n  capture: 'capture',\n  cellpadding: 'cellPadding',\n  cellspacing: 'cellSpacing',\n  challenge: 'challenge',\n  charset: 'charSet',\n  checked: 'checked',\n  children: 'children',\n  cite: 'cite',\n  class: 'className',\n  classid: 'classID',\n  classname: 'className',\n  cols: 'cols',\n  colspan: 'colSpan',\n  content: 'content',\n  contenteditable: 'contentEditable',\n  contextmenu: 'contextMenu',\n  controls: 'controls',\n  controlslist: 'controlsList',\n  coords: 'coords',\n  crossorigin: 'crossOrigin',\n  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',\n  data: 'data',\n  datetime: 'dateTime',\n  default: 'default',\n  defaultchecked: 'defaultChecked',\n  defaultvalue: 'defaultValue',\n  defer: 'defer',\n  dir: 'dir',\n  disabled: 'disabled',\n  download: 'download',\n  draggable: 'draggable',\n  enctype: 'encType',\n  for: 'htmlFor',\n  form: 'form',\n  formmethod: 'formMethod',\n  formaction: 'formAction',\n  formenctype: 'formEncType',\n  formnovalidate: 'formNoValidate',\n  formtarget: 'formTarget',\n  frameborder: 'frameBorder',\n  headers: 'headers',\n  height: 'height',\n  hidden: 'hidden',\n  high: 'high',\n  href: 'href',\n  hreflang: 'hrefLang',\n  htmlfor: 'htmlFor',\n  httpequiv: 'httpEquiv',\n  'http-equiv': 'httpEquiv',\n  icon: 'icon',\n  id: 'id',\n  innerhtml: 'innerHTML',\n  inputmode: 'inputMode',\n  integrity: 'integrity',\n  is: 'is',\n  itemid: 'itemID',\n  itemprop: 'itemProp',\n  itemref: 'itemRef',\n  itemscope: 'itemScope',\n  itemtype: 'itemType',\n  keyparams: 'keyParams',\n  keytype: 'keyType',\n  kind: 'kind',\n  label: 'label',\n  lang: 'lang',\n  list: 'list',\n  loop: 'loop',\n  low: 'low',\n  manifest: 'manifest',\n  marginwidth: 'marginWidth',\n  marginheight: 'marginHeight',\n  max: 'max',\n  maxlength: 'maxLength',\n  media: 'media',\n  mediagroup: 'mediaGroup',\n  method: 'method',\n  min: 'min',\n  minlength: 'minLength',\n  multiple: 'multiple',\n  muted: 'muted',\n  name: 'name',\n  nomodule: 'noModule',\n  nonce: 'nonce',\n  novalidate: 'noValidate',\n  open: 'open',\n  optimum: 'optimum',\n  pattern: 'pattern',\n  placeholder: 'placeholder',\n  playsinline: 'playsInline',\n  poster: 'poster',\n  preload: 'preload',\n  profile: 'profile',\n  radiogroup: 'radioGroup',\n  readonly: 'readOnly',\n  referrerpolicy: 'referrerPolicy',\n  rel: 'rel',\n  required: 'required',\n  reversed: 'reversed',\n  role: 'role',\n  rows: 'rows',\n  rowspan: 'rowSpan',\n  sandbox: 'sandbox',\n  scope: 'scope',\n  scoped: 'scoped',\n  scrolling: 'scrolling',\n  seamless: 'seamless',\n  selected: 'selected',\n  shape: 'shape',\n  size: 'size',\n  sizes: 'sizes',\n  span: 'span',\n  spellcheck: 'spellCheck',\n  src: 'src',\n  srcdoc: 'srcDoc',\n  srclang: 'srcLang',\n  srcset: 'srcSet',\n  start: 'start',\n  step: 'step',\n  style: 'style',\n  summary: 'summary',\n  tabindex: 'tabIndex',\n  target: 'target',\n  title: 'title',\n  type: 'type',\n  usemap: 'useMap',\n  value: 'value',\n  width: 'width',\n  wmode: 'wmode',\n  wrap: 'wrap',\n\n  // SVG\n  about: 'about',\n  accentheight: 'accentHeight',\n  'accent-height': 'accentHeight',\n  accumulate: 'accumulate',\n  additive: 'additive',\n  alignmentbaseline: 'alignmentBaseline',\n  'alignment-baseline': 'alignmentBaseline',\n  allowreorder: 'allowReorder',\n  alphabetic: 'alphabetic',\n  amplitude: 'amplitude',\n  arabicform: 'arabicForm',\n  'arabic-form': 'arabicForm',\n  ascent: 'ascent',\n  attributename: 'attributeName',\n  attributetype: 'attributeType',\n  autoreverse: 'autoReverse',\n  azimuth: 'azimuth',\n  basefrequency: 'baseFrequency',\n  baselineshift: 'baselineShift',\n  'baseline-shift': 'baselineShift',\n  baseprofile: 'baseProfile',\n  bbox: 'bbox',\n  begin: 'begin',\n  bias: 'bias',\n  by: 'by',\n  calcmode: 'calcMode',\n  capheight: 'capHeight',\n  'cap-height': 'capHeight',\n  clip: 'clip',\n  clippath: 'clipPath',\n  'clip-path': 'clipPath',\n  clippathunits: 'clipPathUnits',\n  cliprule: 'clipRule',\n  'clip-rule': 'clipRule',\n  color: 'color',\n  colorinterpolation: 'colorInterpolation',\n  'color-interpolation': 'colorInterpolation',\n  colorinterpolationfilters: 'colorInterpolationFilters',\n  'color-interpolation-filters': 'colorInterpolationFilters',\n  colorprofile: 'colorProfile',\n  'color-profile': 'colorProfile',\n  colorrendering: 'colorRendering',\n  'color-rendering': 'colorRendering',\n  contentscripttype: 'contentScriptType',\n  contentstyletype: 'contentStyleType',\n  cursor: 'cursor',\n  cx: 'cx',\n  cy: 'cy',\n  d: 'd',\n  datatype: 'datatype',\n  decelerate: 'decelerate',\n  descent: 'descent',\n  diffuseconstant: 'diffuseConstant',\n  direction: 'direction',\n  display: 'display',\n  divisor: 'divisor',\n  dominantbaseline: 'dominantBaseline',\n  'dominant-baseline': 'dominantBaseline',\n  dur: 'dur',\n  dx: 'dx',\n  dy: 'dy',\n  edgemode: 'edgeMode',\n  elevation: 'elevation',\n  enablebackground: 'enableBackground',\n  'enable-background': 'enableBackground',\n  end: 'end',\n  exponent: 'exponent',\n  externalresourcesrequired: 'externalResourcesRequired',\n  fill: 'fill',\n  fillopacity: 'fillOpacity',\n  'fill-opacity': 'fillOpacity',\n  fillrule: 'fillRule',\n  'fill-rule': 'fillRule',\n  filter: 'filter',\n  filterres: 'filterRes',\n  filterunits: 'filterUnits',\n  floodopacity: 'floodOpacity',\n  'flood-opacity': 'floodOpacity',\n  floodcolor: 'floodColor',\n  'flood-color': 'floodColor',\n  focusable: 'focusable',\n  fontfamily: 'fontFamily',\n  'font-family': 'fontFamily',\n  fontsize: 'fontSize',\n  'font-size': 'fontSize',\n  fontsizeadjust: 'fontSizeAdjust',\n  'font-size-adjust': 'fontSizeAdjust',\n  fontstretch: 'fontStretch',\n  'font-stretch': 'fontStretch',\n  fontstyle: 'fontStyle',\n  'font-style': 'fontStyle',\n  fontvariant: 'fontVariant',\n  'font-variant': 'fontVariant',\n  fontweight: 'fontWeight',\n  'font-weight': 'fontWeight',\n  format: 'format',\n  from: 'from',\n  fx: 'fx',\n  fy: 'fy',\n  g1: 'g1',\n  g2: 'g2',\n  glyphname: 'glyphName',\n  'glyph-name': 'glyphName',\n  glyphorientationhorizontal: 'glyphOrientationHorizontal',\n  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',\n  glyphorientationvertical: 'glyphOrientationVertical',\n  'glyph-orientation-vertical': 'glyphOrientationVertical',\n  glyphref: 'glyphRef',\n  gradienttransform: 'gradientTransform',\n  gradientunits: 'gradientUnits',\n  hanging: 'hanging',\n  horizadvx: 'horizAdvX',\n  'horiz-adv-x': 'horizAdvX',\n  horizoriginx: 'horizOriginX',\n  'horiz-origin-x': 'horizOriginX',\n  ideographic: 'ideographic',\n  imagerendering: 'imageRendering',\n  'image-rendering': 'imageRendering',\n  in2: 'in2',\n  in: 'in',\n  inlist: 'inlist',\n  intercept: 'intercept',\n  k1: 'k1',\n  k2: 'k2',\n  k3: 'k3',\n  k4: 'k4',\n  k: 'k',\n  kernelmatrix: 'kernelMatrix',\n  kernelunitlength: 'kernelUnitLength',\n  kerning: 'kerning',\n  keypoints: 'keyPoints',\n  keysplines: 'keySplines',\n  keytimes: 'keyTimes',\n  lengthadjust: 'lengthAdjust',\n  letterspacing: 'letterSpacing',\n  'letter-spacing': 'letterSpacing',\n  lightingcolor: 'lightingColor',\n  'lighting-color': 'lightingColor',\n  limitingconeangle: 'limitingConeAngle',\n  local: 'local',\n  markerend: 'markerEnd',\n  'marker-end': 'markerEnd',\n  markerheight: 'markerHeight',\n  markermid: 'markerMid',\n  'marker-mid': 'markerMid',\n  markerstart: 'markerStart',\n  'marker-start': 'markerStart',\n  markerunits: 'markerUnits',\n  markerwidth: 'markerWidth',\n  mask: 'mask',\n  maskcontentunits: 'maskContentUnits',\n  maskunits: 'maskUnits',\n  mathematical: 'mathematical',\n  mode: 'mode',\n  numoctaves: 'numOctaves',\n  offset: 'offset',\n  opacity: 'opacity',\n  operator: 'operator',\n  order: 'order',\n  orient: 'orient',\n  orientation: 'orientation',\n  origin: 'origin',\n  overflow: 'overflow',\n  overlineposition: 'overlinePosition',\n  'overline-position': 'overlinePosition',\n  overlinethickness: 'overlineThickness',\n  'overline-thickness': 'overlineThickness',\n  paintorder: 'paintOrder',\n  'paint-order': 'paintOrder',\n  panose1: 'panose1',\n  'panose-1': 'panose1',\n  pathlength: 'pathLength',\n  patterncontentunits: 'patternContentUnits',\n  patterntransform: 'patternTransform',\n  patternunits: 'patternUnits',\n  pointerevents: 'pointerEvents',\n  'pointer-events': 'pointerEvents',\n  points: 'points',\n  pointsatx: 'pointsAtX',\n  pointsaty: 'pointsAtY',\n  pointsatz: 'pointsAtZ',\n  prefix: 'prefix',\n  preservealpha: 'preserveAlpha',\n  preserveaspectratio: 'preserveAspectRatio',\n  primitiveunits: 'primitiveUnits',\n  property: 'property',\n  r: 'r',\n  radius: 'radius',\n  refx: 'refX',\n  refy: 'refY',\n  renderingintent: 'renderingIntent',\n  'rendering-intent': 'renderingIntent',\n  repeatcount: 'repeatCount',\n  repeatdur: 'repeatDur',\n  requiredextensions: 'requiredExtensions',\n  requiredfeatures: 'requiredFeatures',\n  resource: 'resource',\n  restart: 'restart',\n  result: 'result',\n  results: 'results',\n  rotate: 'rotate',\n  rx: 'rx',\n  ry: 'ry',\n  scale: 'scale',\n  security: 'security',\n  seed: 'seed',\n  shaperendering: 'shapeRendering',\n  'shape-rendering': 'shapeRendering',\n  slope: 'slope',\n  spacing: 'spacing',\n  specularconstant: 'specularConstant',\n  specularexponent: 'specularExponent',\n  speed: 'speed',\n  spreadmethod: 'spreadMethod',\n  startoffset: 'startOffset',\n  stddeviation: 'stdDeviation',\n  stemh: 'stemh',\n  stemv: 'stemv',\n  stitchtiles: 'stitchTiles',\n  stopcolor: 'stopColor',\n  'stop-color': 'stopColor',\n  stopopacity: 'stopOpacity',\n  'stop-opacity': 'stopOpacity',\n  strikethroughposition: 'strikethroughPosition',\n  'strikethrough-position': 'strikethroughPosition',\n  strikethroughthickness: 'strikethroughThickness',\n  'strikethrough-thickness': 'strikethroughThickness',\n  string: 'string',\n  stroke: 'stroke',\n  strokedasharray: 'strokeDasharray',\n  'stroke-dasharray': 'strokeDasharray',\n  strokedashoffset: 'strokeDashoffset',\n  'stroke-dashoffset': 'strokeDashoffset',\n  strokelinecap: 'strokeLinecap',\n  'stroke-linecap': 'strokeLinecap',\n  strokelinejoin: 'strokeLinejoin',\n  'stroke-linejoin': 'strokeLinejoin',\n  strokemiterlimit: 'strokeMiterlimit',\n  'stroke-miterlimit': 'strokeMiterlimit',\n  strokewidth: 'strokeWidth',\n  'stroke-width': 'strokeWidth',\n  strokeopacity: 'strokeOpacity',\n  'stroke-opacity': 'strokeOpacity',\n  suppresscontenteditablewarning: 'suppressContentEditableWarning',\n  suppresshydrationwarning: 'suppressHydrationWarning',\n  surfacescale: 'surfaceScale',\n  systemlanguage: 'systemLanguage',\n  tablevalues: 'tableValues',\n  targetx: 'targetX',\n  targety: 'targetY',\n  textanchor: 'textAnchor',\n  'text-anchor': 'textAnchor',\n  textdecoration: 'textDecoration',\n  'text-decoration': 'textDecoration',\n  textlength: 'textLength',\n  textrendering: 'textRendering',\n  'text-rendering': 'textRendering',\n  to: 'to',\n  transform: 'transform',\n  typeof: 'typeof',\n  u1: 'u1',\n  u2: 'u2',\n  underlineposition: 'underlinePosition',\n  'underline-position': 'underlinePosition',\n  underlinethickness: 'underlineThickness',\n  'underline-thickness': 'underlineThickness',\n  unicode: 'unicode',\n  unicodebidi: 'unicodeBidi',\n  'unicode-bidi': 'unicodeBidi',\n  unicoderange: 'unicodeRange',\n  'unicode-range': 'unicodeRange',\n  unitsperem: 'unitsPerEm',\n  'units-per-em': 'unitsPerEm',\n  unselectable: 'unselectable',\n  valphabetic: 'vAlphabetic',\n  'v-alphabetic': 'vAlphabetic',\n  values: 'values',\n  vectoreffect: 'vectorEffect',\n  'vector-effect': 'vectorEffect',\n  version: 'version',\n  vertadvy: 'vertAdvY',\n  'vert-adv-y': 'vertAdvY',\n  vertoriginx: 'vertOriginX',\n  'vert-origin-x': 'vertOriginX',\n  vertoriginy: 'vertOriginY',\n  'vert-origin-y': 'vertOriginY',\n  vhanging: 'vHanging',\n  'v-hanging': 'vHanging',\n  videographic: 'vIdeographic',\n  'v-ideographic': 'vIdeographic',\n  viewbox: 'viewBox',\n  viewtarget: 'viewTarget',\n  visibility: 'visibility',\n  vmathematical: 'vMathematical',\n  'v-mathematical': 'vMathematical',\n  vocab: 'vocab',\n  widths: 'widths',\n  wordspacing: 'wordSpacing',\n  'word-spacing': 'wordSpacing',\n  writingmode: 'writingMode',\n  'writing-mode': 'writingMode',\n  x1: 'x1',\n  x2: 'x2',\n  x: 'x',\n  xchannelselector: 'xChannelSelector',\n  xheight: 'xHeight',\n  'x-height': 'xHeight',\n  xlinkactuate: 'xlinkActuate',\n  'xlink:actuate': 'xlinkActuate',\n  xlinkarcrole: 'xlinkArcrole',\n  'xlink:arcrole': 'xlinkArcrole',\n  xlinkhref: 'xlinkHref',\n  'xlink:href': 'xlinkHref',\n  xlinkrole: 'xlinkRole',\n  'xlink:role': 'xlinkRole',\n  xlinkshow: 'xlinkShow',\n  'xlink:show': 'xlinkShow',\n  xlinktitle: 'xlinkTitle',\n  'xlink:title': 'xlinkTitle',\n  xlinktype: 'xlinkType',\n  'xlink:type': 'xlinkType',\n  xmlbase: 'xmlBase',\n  'xml:base': 'xmlBase',\n  xmllang: 'xmlLang',\n  'xml:lang': 'xmlLang',\n  xmlns: 'xmlns',\n  'xml:space': 'xmlSpace',\n  xmlnsxlink: 'xmlnsXlink',\n  'xmlns:xlink': 'xmlnsXlink',\n  xmlspace: 'xmlSpace',\n  y1: 'y1',\n  y2: 'y2',\n  y: 'y',\n  ychannelselector: 'yChannelSelector',\n  z: 'z',\n  zoomandpan: 'zoomAndPan'\n};\n\nvar ariaProperties = {\n  'aria-current': 0, // state\n  'aria-details': 0,\n  'aria-disabled': 0, // state\n  'aria-hidden': 0, // state\n  'aria-invalid': 0, // state\n  'aria-keyshortcuts': 0,\n  'aria-label': 0,\n  'aria-roledescription': 0,\n  // Widget Attributes\n  'aria-autocomplete': 0,\n  'aria-checked': 0,\n  'aria-expanded': 0,\n  'aria-haspopup': 0,\n  'aria-level': 0,\n  'aria-modal': 0,\n  'aria-multiline': 0,\n  'aria-multiselectable': 0,\n  'aria-orientation': 0,\n  'aria-placeholder': 0,\n  'aria-pressed': 0,\n  'aria-readonly': 0,\n  'aria-required': 0,\n  'aria-selected': 0,\n  'aria-sort': 0,\n  'aria-valuemax': 0,\n  'aria-valuemin': 0,\n  'aria-valuenow': 0,\n  'aria-valuetext': 0,\n  // Live Region Attributes\n  'aria-atomic': 0,\n  'aria-busy': 0,\n  'aria-live': 0,\n  'aria-relevant': 0,\n  // Drag-and-Drop Attributes\n  'aria-dropeffect': 0,\n  'aria-grabbed': 0,\n  // Relationship Attributes\n  'aria-activedescendant': 0,\n  'aria-colcount': 0,\n  'aria-colindex': 0,\n  'aria-colspan': 0,\n  'aria-controls': 0,\n  'aria-describedby': 0,\n  'aria-errormessage': 0,\n  'aria-flowto': 0,\n  'aria-labelledby': 0,\n  'aria-owns': 0,\n  'aria-posinset': 0,\n  'aria-rowcount': 0,\n  'aria-rowindex': 0,\n  'aria-rowspan': 0,\n  'aria-setsize': 0\n};\n\nvar warnedProperties = {};\nvar rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\nvar rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\nvar hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction validateProperty(tagName, name) {\n  if (hasOwnProperty$2.call(warnedProperties, name) && warnedProperties[name]) {\n    return true;\n  }\n\n  if (rARIACamel.test(name)) {\n    var ariaName = 'aria-' + name.slice(4).toLowerCase();\n    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;\n\n    // If this is an aria-* attribute, but is not listed in the known DOM\n    // DOM properties, then it is an invalid aria-* attribute.\n    if (correctName == null) {\n      warning$1(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);\n      warnedProperties[name] = true;\n      return true;\n    }\n    // aria-* attributes should be lowercase; suggest the lowercase version.\n    if (name !== correctName) {\n      warning$1(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);\n      warnedProperties[name] = true;\n      return true;\n    }\n  }\n\n  if (rARIA.test(name)) {\n    var lowerCasedName = name.toLowerCase();\n    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;\n\n    // If this is an aria-* attribute, but is not listed in the known DOM\n    // DOM properties, then it is an invalid aria-* attribute.\n    if (standardName == null) {\n      warnedProperties[name] = true;\n      return false;\n    }\n    // aria-* attributes should be lowercase; suggest the lowercase version.\n    if (name !== standardName) {\n      warning$1(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);\n      warnedProperties[name] = true;\n      return true;\n    }\n  }\n\n  return true;\n}\n\nfunction warnInvalidARIAProps(type, props) {\n  var invalidProps = [];\n\n  for (var key in props) {\n    var isValid = validateProperty(type, key);\n    if (!isValid) {\n      invalidProps.push(key);\n    }\n  }\n\n  var unknownPropString = invalidProps.map(function (prop) {\n    return '`' + prop + '`';\n  }).join(', ');\n\n  if (invalidProps.length === 1) {\n    warning$1(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);\n  } else if (invalidProps.length > 1) {\n    warning$1(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);\n  }\n}\n\nfunction validateProperties(type, props) {\n  if (isCustomComponent(type, props)) {\n    return;\n  }\n  warnInvalidARIAProps(type, props);\n}\n\nvar didWarnValueNull = false;\n\nfunction validateProperties$1(type, props) {\n  if (type !== 'input' && type !== 'textarea' && type !== 'select') {\n    return;\n  }\n\n  if (props != null && props.value === null && !didWarnValueNull) {\n    didWarnValueNull = true;\n    if (type === 'select' && props.multiple) {\n      warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);\n    } else {\n      warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);\n    }\n  }\n}\n\nvar validateProperty$1 = function () {};\n\n{\n  var warnedProperties$1 = {};\n  var _hasOwnProperty = Object.prototype.hasOwnProperty;\n  var EVENT_NAME_REGEX = /^on./;\n  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;\n  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\n  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\n  validateProperty$1 = function (tagName, name, value, canUseEventSystem) {\n    if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {\n      return true;\n    }\n\n    var lowerCasedName = name.toLowerCase();\n    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {\n      warning$1(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    // We can't rely on the event system being injected on the server.\n    if (canUseEventSystem) {\n      if (registrationNameModules.hasOwnProperty(name)) {\n        return true;\n      }\n      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;\n      if (registrationName != null) {\n        warning$1(false, 'Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);\n        warnedProperties$1[name] = true;\n        return true;\n      }\n      if (EVENT_NAME_REGEX.test(name)) {\n        warning$1(false, 'Unknown event handler property `%s`. It will be ignored.', name);\n        warnedProperties$1[name] = true;\n        return true;\n      }\n    } else if (EVENT_NAME_REGEX.test(name)) {\n      // If no event plugins have been injected, we are in a server environment.\n      // So we can't tell if the event name is correct for sure, but we can filter\n      // out known bad ones like `onclick`. We can't suggest a specific replacement though.\n      if (INVALID_EVENT_NAME_REGEX.test(name)) {\n        warning$1(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);\n      }\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    // Let the ARIA attribute hook validate ARIA attributes\n    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {\n      return true;\n    }\n\n    if (lowerCasedName === 'innerhtml') {\n      warning$1(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (lowerCasedName === 'aria') {\n      warning$1(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {\n      warning$1(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (typeof value === 'number' && isNaN(value)) {\n      warning$1(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    var propertyInfo = getPropertyInfo(name);\n    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;\n\n    // Known attributes should match the casing specified in the property config.\n    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n      var standardName = possibleStandardNames[lowerCasedName];\n      if (standardName !== name) {\n        warning$1(false, 'Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);\n        warnedProperties$1[name] = true;\n        return true;\n      }\n    } else if (!isReserved && name !== lowerCasedName) {\n      // Unknown attributes should have lowercase casing since that's how they\n      // will be cased anyway with server rendering.\n      warning$1(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {\n      if (value) {\n        warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\\n\\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s=\"%s\" or %s={value.toString()}.', value, name, name, value, name);\n      } else {\n        warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\\n\\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s=\"%s\" or %s={value.toString()}.\\n\\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);\n      }\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    // Now that we've validated casing, do not validate\n    // data types for reserved props\n    if (isReserved) {\n      return true;\n    }\n\n    // Warn when a known attribute is a bad type\n    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {\n      warnedProperties$1[name] = true;\n      return false;\n    }\n\n    // Warn when passing the strings 'false' or 'true' into a boolean prop\n    if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {\n      warning$1(false, 'Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string \"false\".', name, value);\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    return true;\n  };\n}\n\nvar warnUnknownProperties = function (type, props, canUseEventSystem) {\n  var unknownProps = [];\n  for (var key in props) {\n    var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);\n    if (!isValid) {\n      unknownProps.push(key);\n    }\n  }\n\n  var unknownPropString = unknownProps.map(function (prop) {\n    return '`' + prop + '`';\n  }).join(', ');\n  if (unknownProps.length === 1) {\n    warning$1(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);\n  } else if (unknownProps.length > 1) {\n    warning$1(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);\n  }\n};\n\nfunction validateProperties$2(type, props, canUseEventSystem) {\n  if (isCustomComponent(type, props)) {\n    return;\n  }\n  warnUnknownProperties(type, props, canUseEventSystem);\n}\n\n// TODO: direct imports like some-package/src/* are bad. Fix me.\nvar didWarnInvalidHydration = false;\nvar didWarnShadyDOM = false;\n\nvar DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';\nvar SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';\nvar SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';\nvar AUTOFOCUS = 'autoFocus';\nvar CHILDREN = 'children';\nvar STYLE$1 = 'style';\nvar HTML = '__html';\n\nvar HTML_NAMESPACE = Namespaces.html;\n\n\nvar warnedUnknownTags = void 0;\nvar suppressHydrationWarning = void 0;\n\nvar validatePropertiesInDevelopment = void 0;\nvar warnForTextDifference = void 0;\nvar warnForPropDifference = void 0;\nvar warnForExtraAttributes = void 0;\nvar warnForInvalidEventListener = void 0;\nvar canDiffStyleForHydrationWarning = void 0;\n\nvar normalizeMarkupForTextOrAttribute = void 0;\nvar normalizeHTML = void 0;\n\n{\n  warnedUnknownTags = {\n    // Chrome is the only major browser not shipping <time>. But as of July\n    // 2017 it intends to ship it due to widespread usage. We intentionally\n    // *don't* warn for <time> even if it's unrecognized by Chrome because\n    // it soon will be, and many apps have been using it anyway.\n    time: true,\n    // There are working polyfills for <dialog>. Let people use it.\n    dialog: true,\n    // Electron ships a custom <webview> tag to display external web content in\n    // an isolated frame and process.\n    // This tag is not present in non Electron environments such as JSDom which\n    // is often used for testing purposes.\n    // @see https://electronjs.org/docs/api/webview-tag\n    webview: true\n  };\n\n  validatePropertiesInDevelopment = function (type, props) {\n    validateProperties(type, props);\n    validateProperties$1(type, props);\n    validateProperties$2(type, props, /* canUseEventSystem */true);\n  };\n\n  // IE 11 parses & normalizes the style attribute as opposed to other\n  // browsers. It adds spaces and sorts the properties in some\n  // non-alphabetical order. Handling that would require sorting CSS\n  // properties in the client & server versions or applying\n  // `expectedStyle` to a temporary DOM node to read its `style` attribute\n  // normalized. Since it only affects IE, we're skipping style warnings\n  // in that browser completely in favor of doing all that work.\n  // See https://github.com/facebook/react/issues/11807\n  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;\n\n  // HTML parsing normalizes CR and CRLF to LF.\n  // It also can turn \\u0000 into \\uFFFD inside attributes.\n  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream\n  // If we have a mismatch, it might be caused by that.\n  // We will still patch up in this case but not fire the warning.\n  var NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g;\n  var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\n\n  normalizeMarkupForTextOrAttribute = function (markup) {\n    var markupString = typeof markup === 'string' ? markup : '' + markup;\n    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');\n  };\n\n  warnForTextDifference = function (serverText, clientText) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);\n    var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);\n    if (normalizedServerText === normalizedClientText) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    warningWithoutStack$1(false, 'Text content did not match. Server: \"%s\" Client: \"%s\"', normalizedServerText, normalizedClientText);\n  };\n\n  warnForPropDifference = function (propName, serverValue, clientValue) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);\n    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);\n    if (normalizedServerValue === normalizedClientValue) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    warningWithoutStack$1(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));\n  };\n\n  warnForExtraAttributes = function (attributeNames) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    var names = [];\n    attributeNames.forEach(function (name) {\n      names.push(name);\n    });\n    warningWithoutStack$1(false, 'Extra attributes from the server: %s', names);\n  };\n\n  warnForInvalidEventListener = function (registrationName, listener) {\n    if (listener === false) {\n      warning$1(false, 'Expected `%s` listener to be a function, instead got `false`.\\n\\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);\n    } else {\n      warning$1(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);\n    }\n  };\n\n  // Parse the HTML and read it back to normalize the HTML string so that it\n  // can be used for comparison.\n  normalizeHTML = function (parent, html) {\n    // We could have created a separate document here to avoid\n    // re-initializing custom elements if they exist. But this breaks\n    // how <noscript> is being handled. So we use the same document.\n    // See the discussion in https://github.com/facebook/react/pull/11157.\n    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);\n    testElement.innerHTML = html;\n    return testElement.innerHTML;\n  };\n}\n\nfunction ensureListeningTo(rootContainerElement, registrationName) {\n  var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;\n  var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;\n  listenTo(registrationName, doc);\n}\n\nfunction getOwnerDocumentFromRootContainer(rootContainerElement) {\n  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;\n}\n\nfunction noop() {}\n\nfunction trapClickOnNonInteractiveElement(node) {\n  // Mobile Safari does not fire properly bubble click events on\n  // non-interactive elements, which means delegated click listeners do not\n  // fire. The workaround for this bug involves attaching an empty click\n  // listener on the target node.\n  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n  // Just set it using the onclick property so that we don't have to manage any\n  // bookkeeping for it. Not sure if we need to clear it when the listener is\n  // removed.\n  // TODO: Only do this for the relevant Safaris maybe?\n  node.onclick = noop;\n}\n\nfunction setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {\n  for (var propKey in nextProps) {\n    if (!nextProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n    var nextProp = nextProps[propKey];\n    if (propKey === STYLE$1) {\n      {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      }\n      // Relies on `updateStylesByID` not mutating `styleUpdates`.\n      setValueForStyles(domElement, nextProp);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      var nextHtml = nextProp ? nextProp[HTML] : undefined;\n      if (nextHtml != null) {\n        setInnerHTML(domElement, nextHtml);\n      }\n    } else if (propKey === CHILDREN) {\n      if (typeof nextProp === 'string') {\n        // Avoid setting initial textContent when the text is empty. In IE11 setting\n        // textContent on a <textarea> will cause the placeholder to not\n        // show within the <textarea> until it has been focused and blurred again.\n        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n        var canSetTextContent = tag !== 'textarea' || nextProp !== '';\n        if (canSetTextContent) {\n          setTextContent(domElement, nextProp);\n        }\n      } else if (typeof nextProp === 'number') {\n        setTextContent(domElement, '' + nextProp);\n      }\n    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {\n      // Noop\n    } else if (propKey === AUTOFOCUS) {\n      // We polyfill it separately on the client during commit.\n      // We could have excluded it in the property list instead of\n      // adding a special case here, but then it wouldn't be emitted\n      // on server rendering (but we *do* want to emit it in SSR).\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if ( true && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        ensureListeningTo(rootContainerElement, propKey);\n      }\n    } else if (nextProp != null) {\n      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);\n    }\n  }\n}\n\nfunction updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {\n  // TODO: Handle wasCustomComponentTag\n  for (var i = 0; i < updatePayload.length; i += 2) {\n    var propKey = updatePayload[i];\n    var propValue = updatePayload[i + 1];\n    if (propKey === STYLE$1) {\n      setValueForStyles(domElement, propValue);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      setInnerHTML(domElement, propValue);\n    } else if (propKey === CHILDREN) {\n      setTextContent(domElement, propValue);\n    } else {\n      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);\n    }\n  }\n}\n\nfunction createElement(type, props, rootContainerElement, parentNamespace) {\n  var isCustomComponentTag = void 0;\n\n  // We create tags in the namespace of their parent container, except HTML\n  // tags get no namespace.\n  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);\n  var domElement = void 0;\n  var namespaceURI = parentNamespace;\n  if (namespaceURI === HTML_NAMESPACE) {\n    namespaceURI = getIntrinsicNamespace(type);\n  }\n  if (namespaceURI === HTML_NAMESPACE) {\n    {\n      isCustomComponentTag = isCustomComponent(type, props);\n      // Should this check be gated by parent namespace? Not sure we want to\n      // allow <SVG> or <mATH>.\n      !(isCustomComponentTag || type === type.toLowerCase()) ? warning$1(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type) : void 0;\n    }\n\n    if (type === 'script') {\n      // Create the script via .innerHTML so its \"parser-inserted\" flag is\n      // set to true and it does not execute\n      var div = ownerDocument.createElement('div');\n      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line\n      // This is guaranteed to yield a script element.\n      var firstChild = div.firstChild;\n      domElement = div.removeChild(firstChild);\n    } else if (typeof props.is === 'string') {\n      // $FlowIssue `createElement` should be updated for Web Components\n      domElement = ownerDocument.createElement(type, { is: props.is });\n    } else {\n      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.\n      // See discussion in https://github.com/facebook/react/pull/6896\n      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n      domElement = ownerDocument.createElement(type);\n      // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`\n      // attributes on `select`s needs to be added before `option`s are inserted.\n      // This prevents:\n      // - a bug where the `select` does not scroll to the correct option because singular\n      //  `select` elements automatically pick the first item #13222\n      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239\n      // See https://github.com/facebook/react/issues/13222\n      // and https://github.com/facebook/react/issues/14239\n      if (type === 'select') {\n        var node = domElement;\n        if (props.multiple) {\n          node.multiple = true;\n        } else if (props.size) {\n          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where\n          // it is possible that no option is selected.\n          //\n          // This is only necessary when a select in \"single selection mode\".\n          node.size = props.size;\n        }\n      }\n    }\n  } else {\n    domElement = ownerDocument.createElementNS(namespaceURI, type);\n  }\n\n  {\n    if (namespaceURI === HTML_NAMESPACE) {\n      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {\n        warnedUnknownTags[type] = true;\n        warning$1(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);\n      }\n    }\n  }\n\n  return domElement;\n}\n\nfunction createTextNode(text, rootContainerElement) {\n  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);\n}\n\nfunction setInitialProperties(domElement, tag, rawProps, rootContainerElement) {\n  var isCustomComponentTag = isCustomComponent(tag, rawProps);\n  {\n    validatePropertiesInDevelopment(tag, rawProps);\n    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {\n      warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');\n      didWarnShadyDOM = true;\n    }\n  }\n\n  // TODO: Make sure that we check isMounted before firing any of these events.\n  var props = void 0;\n  switch (tag) {\n    case 'iframe':\n    case 'object':\n      trapBubbledEvent(TOP_LOAD, domElement);\n      props = rawProps;\n      break;\n    case 'video':\n    case 'audio':\n      // Create listener for each media event\n      for (var i = 0; i < mediaEventTypes.length; i++) {\n        trapBubbledEvent(mediaEventTypes[i], domElement);\n      }\n      props = rawProps;\n      break;\n    case 'source':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      props = rawProps;\n      break;\n    case 'img':\n    case 'image':\n    case 'link':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      trapBubbledEvent(TOP_LOAD, domElement);\n      props = rawProps;\n      break;\n    case 'form':\n      trapBubbledEvent(TOP_RESET, domElement);\n      trapBubbledEvent(TOP_SUBMIT, domElement);\n      props = rawProps;\n      break;\n    case 'details':\n      trapBubbledEvent(TOP_TOGGLE, domElement);\n      props = rawProps;\n      break;\n    case 'input':\n      initWrapperState(domElement, rawProps);\n      props = getHostProps(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    case 'option':\n      validateProps(domElement, rawProps);\n      props = getHostProps$1(domElement, rawProps);\n      break;\n    case 'select':\n      initWrapperState$1(domElement, rawProps);\n      props = getHostProps$2(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    case 'textarea':\n      initWrapperState$2(domElement, rawProps);\n      props = getHostProps$3(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    default:\n      props = rawProps;\n  }\n\n  assertValidProps(tag, props);\n\n  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      postMountWrapper(domElement, rawProps, false);\n      break;\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      postMountWrapper$3(domElement, rawProps);\n      break;\n    case 'option':\n      postMountWrapper$1(domElement, rawProps);\n      break;\n    case 'select':\n      postMountWrapper$2(domElement, rawProps);\n      break;\n    default:\n      if (typeof props.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n      break;\n  }\n}\n\n// Calculate the diff between the two objects.\nfunction diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {\n  {\n    validatePropertiesInDevelopment(tag, nextRawProps);\n  }\n\n  var updatePayload = null;\n\n  var lastProps = void 0;\n  var nextProps = void 0;\n  switch (tag) {\n    case 'input':\n      lastProps = getHostProps(domElement, lastRawProps);\n      nextProps = getHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    case 'option':\n      lastProps = getHostProps$1(domElement, lastRawProps);\n      nextProps = getHostProps$1(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    case 'select':\n      lastProps = getHostProps$2(domElement, lastRawProps);\n      nextProps = getHostProps$2(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    case 'textarea':\n      lastProps = getHostProps$3(domElement, lastRawProps);\n      nextProps = getHostProps$3(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    default:\n      lastProps = lastRawProps;\n      nextProps = nextRawProps;\n      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n      break;\n  }\n\n  assertValidProps(tag, nextProps);\n\n  var propKey = void 0;\n  var styleName = void 0;\n  var styleUpdates = null;\n  for (propKey in lastProps) {\n    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n      continue;\n    }\n    if (propKey === STYLE$1) {\n      var lastStyle = lastProps[propKey];\n      for (styleName in lastStyle) {\n        if (lastStyle.hasOwnProperty(styleName)) {\n          if (!styleUpdates) {\n            styleUpdates = {};\n          }\n          styleUpdates[styleName] = '';\n        }\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {\n      // Noop. This is handled by the clear text mechanism.\n    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {\n      // Noop\n    } else if (propKey === AUTOFOCUS) {\n      // Noop. It doesn't work on updates anyway.\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      // This is a special case. If any listener updates we need to ensure\n      // that the \"current\" fiber pointer gets updated so we need a commit\n      // to update this element.\n      if (!updatePayload) {\n        updatePayload = [];\n      }\n    } else {\n      // For all other deleted properties we add it to the queue. We use\n      // the whitelist in the commit phase instead.\n      (updatePayload = updatePayload || []).push(propKey, null);\n    }\n  }\n  for (propKey in nextProps) {\n    var nextProp = nextProps[propKey];\n    var lastProp = lastProps != null ? lastProps[propKey] : undefined;\n    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n      continue;\n    }\n    if (propKey === STYLE$1) {\n      {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      }\n      if (lastProp) {\n        // Unset styles on `lastProp` but not on `nextProp`.\n        for (styleName in lastProp) {\n          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n            styleUpdates[styleName] = '';\n          }\n        }\n        // Update styles that changed since `lastProp`.\n        for (styleName in nextProp) {\n          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n            styleUpdates[styleName] = nextProp[styleName];\n          }\n        }\n      } else {\n        // Relies on `updateStylesByID` not mutating `styleUpdates`.\n        if (!styleUpdates) {\n          if (!updatePayload) {\n            updatePayload = [];\n          }\n          updatePayload.push(propKey, styleUpdates);\n        }\n        styleUpdates = nextProp;\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      var nextHtml = nextProp ? nextProp[HTML] : undefined;\n      var lastHtml = lastProp ? lastProp[HTML] : undefined;\n      if (nextHtml != null) {\n        if (lastHtml !== nextHtml) {\n          (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);\n        }\n      } else {\n        // TODO: It might be too late to clear this if we have children\n        // inserted already.\n      }\n    } else if (propKey === CHILDREN) {\n      if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {\n        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);\n      }\n    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {\n      // Noop\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        // We eagerly listen to this even though we haven't committed yet.\n        if ( true && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        ensureListeningTo(rootContainerElement, propKey);\n      }\n      if (!updatePayload && lastProp !== nextProp) {\n        // This is a special case. If any listener updates we need to ensure\n        // that the \"current\" props pointer gets updated so we need a commit\n        // to update this element.\n        updatePayload = [];\n      }\n    } else {\n      // For any other property we always add it to the queue and then we\n      // filter it out using the whitelist during the commit.\n      (updatePayload = updatePayload || []).push(propKey, nextProp);\n    }\n  }\n  if (styleUpdates) {\n    {\n      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE$1]);\n    }\n    (updatePayload = updatePayload || []).push(STYLE$1, styleUpdates);\n  }\n  return updatePayload;\n}\n\n// Apply the diff.\nfunction updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {\n  // Update checked *before* name.\n  // In the middle of an update, it is possible to have multiple checked.\n  // When a checked radio tries to change name, browser makes another radio's checked false.\n  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {\n    updateChecked(domElement, nextRawProps);\n  }\n\n  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);\n  var isCustomComponentTag = isCustomComponent(tag, nextRawProps);\n  // Apply the diff.\n  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);\n\n  // TODO: Ensure that an update gets scheduled if any of the special props\n  // changed.\n  switch (tag) {\n    case 'input':\n      // Update the wrapper around inputs *after* updating props. This has to\n      // happen after `updateDOMProperties`. Otherwise HTML5 input validations\n      // raise warnings and prevent the new value from being assigned.\n      updateWrapper(domElement, nextRawProps);\n      break;\n    case 'textarea':\n      updateWrapper$1(domElement, nextRawProps);\n      break;\n    case 'select':\n      // <select> value update needs to occur after <option> children\n      // reconciliation\n      postUpdateWrapper(domElement, nextRawProps);\n      break;\n  }\n}\n\nfunction getPossibleStandardName(propName) {\n  {\n    var lowerCasedName = propName.toLowerCase();\n    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n      return null;\n    }\n    return possibleStandardNames[lowerCasedName] || null;\n  }\n  return null;\n}\n\nfunction diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {\n  var isCustomComponentTag = void 0;\n  var extraAttributeNames = void 0;\n\n  {\n    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;\n    isCustomComponentTag = isCustomComponent(tag, rawProps);\n    validatePropertiesInDevelopment(tag, rawProps);\n    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {\n      warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');\n      didWarnShadyDOM = true;\n    }\n  }\n\n  // TODO: Make sure that we check isMounted before firing any of these events.\n  switch (tag) {\n    case 'iframe':\n    case 'object':\n      trapBubbledEvent(TOP_LOAD, domElement);\n      break;\n    case 'video':\n    case 'audio':\n      // Create listener for each media event\n      for (var i = 0; i < mediaEventTypes.length; i++) {\n        trapBubbledEvent(mediaEventTypes[i], domElement);\n      }\n      break;\n    case 'source':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      break;\n    case 'img':\n    case 'image':\n    case 'link':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      trapBubbledEvent(TOP_LOAD, domElement);\n      break;\n    case 'form':\n      trapBubbledEvent(TOP_RESET, domElement);\n      trapBubbledEvent(TOP_SUBMIT, domElement);\n      break;\n    case 'details':\n      trapBubbledEvent(TOP_TOGGLE, domElement);\n      break;\n    case 'input':\n      initWrapperState(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    case 'option':\n      validateProps(domElement, rawProps);\n      break;\n    case 'select':\n      initWrapperState$1(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    case 'textarea':\n      initWrapperState$2(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n  }\n\n  assertValidProps(tag, rawProps);\n\n  {\n    extraAttributeNames = new Set();\n    var attributes = domElement.attributes;\n    for (var _i = 0; _i < attributes.length; _i++) {\n      var name = attributes[_i].name.toLowerCase();\n      switch (name) {\n        // Built-in SSR attribute is whitelisted\n        case 'data-reactroot':\n          break;\n        // Controlled attributes are not validated\n        // TODO: Only ignore them on controlled tags.\n        case 'value':\n          break;\n        case 'checked':\n          break;\n        case 'selected':\n          break;\n        default:\n          // Intentionally use the original name.\n          // See discussion in https://github.com/facebook/react/pull/10676.\n          extraAttributeNames.add(attributes[_i].name);\n      }\n    }\n  }\n\n  var updatePayload = null;\n  for (var propKey in rawProps) {\n    if (!rawProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n    var nextProp = rawProps[propKey];\n    if (propKey === CHILDREN) {\n      // For text content children we compare against textContent. This\n      // might match additional HTML that is hidden when we read it using\n      // textContent. E.g. \"foo\" will match \"f<span>oo</span>\" but that still\n      // satisfies our requirement. Our requirement is not to produce perfect\n      // HTML and attributes. Ideally we should preserve structure but it's\n      // ok not to if the visible content is still enough to indicate what\n      // even listeners these nodes might be wired up to.\n      // TODO: Warn if there is more than a single textNode as a child.\n      // TODO: Should we use domElement.firstChild.nodeValue to compare?\n      if (typeof nextProp === 'string') {\n        if (domElement.textContent !== nextProp) {\n          if ( true && !suppressHydrationWarning) {\n            warnForTextDifference(domElement.textContent, nextProp);\n          }\n          updatePayload = [CHILDREN, nextProp];\n        }\n      } else if (typeof nextProp === 'number') {\n        if (domElement.textContent !== '' + nextProp) {\n          if ( true && !suppressHydrationWarning) {\n            warnForTextDifference(domElement.textContent, nextProp);\n          }\n          updatePayload = [CHILDREN, '' + nextProp];\n        }\n      }\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if ( true && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        ensureListeningTo(rootContainerElement, propKey);\n      }\n    } else if ( true &&\n    // Convince Flow we've calculated it (it's DEV-only in this method.)\n    typeof isCustomComponentTag === 'boolean') {\n      // Validate that the properties correspond to their expected values.\n      var serverValue = void 0;\n      var propertyInfo = getPropertyInfo(propKey);\n      if (suppressHydrationWarning) {\n        // Don't bother comparing. We're ignoring all these warnings.\n      } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 ||\n      // Controlled attributes are not validated\n      // TODO: Only ignore them on controlled tags.\n      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {\n        // Noop\n      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n        var serverHTML = domElement.innerHTML;\n        var nextHtml = nextProp ? nextProp[HTML] : undefined;\n        var expectedHTML = normalizeHTML(domElement, nextHtml != null ? nextHtml : '');\n        if (expectedHTML !== serverHTML) {\n          warnForPropDifference(propKey, serverHTML, expectedHTML);\n        }\n      } else if (propKey === STYLE$1) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey);\n\n        if (canDiffStyleForHydrationWarning) {\n          var expectedStyle = createDangerousStringForStyles(nextProp);\n          serverValue = domElement.getAttribute('style');\n          if (expectedStyle !== serverValue) {\n            warnForPropDifference(propKey, serverValue, expectedStyle);\n          }\n        }\n      } else if (isCustomComponentTag) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey.toLowerCase());\n        serverValue = getValueForAttribute(domElement, propKey, nextProp);\n\n        if (nextProp !== serverValue) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {\n        var isMismatchDueToBadCasing = false;\n        if (propertyInfo !== null) {\n          // $FlowFixMe - Should be inferred as not undefined.\n          extraAttributeNames.delete(propertyInfo.attributeName);\n          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);\n        } else {\n          var ownNamespace = parentNamespace;\n          if (ownNamespace === HTML_NAMESPACE) {\n            ownNamespace = getIntrinsicNamespace(tag);\n          }\n          if (ownNamespace === HTML_NAMESPACE) {\n            // $FlowFixMe - Should be inferred as not undefined.\n            extraAttributeNames.delete(propKey.toLowerCase());\n          } else {\n            var standardName = getPossibleStandardName(propKey);\n            if (standardName !== null && standardName !== propKey) {\n              // If an SVG prop is supplied with bad casing, it will\n              // be successfully parsed from HTML, but will produce a mismatch\n              // (and would be incorrectly rendered on the client).\n              // However, we already warn about bad casing elsewhere.\n              // So we'll skip the misleading extra mismatch warning in this case.\n              isMismatchDueToBadCasing = true;\n              // $FlowFixMe - Should be inferred as not undefined.\n              extraAttributeNames.delete(standardName);\n            }\n            // $FlowFixMe - Should be inferred as not undefined.\n            extraAttributeNames.delete(propKey);\n          }\n          serverValue = getValueForAttribute(domElement, propKey, nextProp);\n        }\n\n        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      }\n    }\n  }\n\n  {\n    // $FlowFixMe - Should be inferred as not undefined.\n    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {\n      // $FlowFixMe - Should be inferred as not undefined.\n      warnForExtraAttributes(extraAttributeNames);\n    }\n  }\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      postMountWrapper(domElement, rawProps, true);\n      break;\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      postMountWrapper$3(domElement, rawProps);\n      break;\n    case 'select':\n    case 'option':\n      // For input and textarea we current always set the value property at\n      // post mount to force it to diverge from attributes. However, for\n      // option and select we don't quite do the same thing and select\n      // is not resilient to the DOM state changing so we don't do that here.\n      // TODO: Consider not doing this for input and textarea.\n      break;\n    default:\n      if (typeof rawProps.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n      break;\n  }\n\n  return updatePayload;\n}\n\nfunction diffHydratedText(textNode, text) {\n  var isDifferent = textNode.nodeValue !== text;\n  return isDifferent;\n}\n\nfunction warnForUnmatchedText(textNode, text) {\n  {\n    warnForTextDifference(textNode.nodeValue, text);\n  }\n}\n\nfunction warnForDeletedHydratableElement(parentNode, child) {\n  {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    warningWithoutStack$1(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());\n  }\n}\n\nfunction warnForDeletedHydratableText(parentNode, child) {\n  {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    warningWithoutStack$1(false, 'Did not expect server HTML to contain the text node \"%s\" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());\n  }\n}\n\nfunction warnForInsertedHydratedElement(parentNode, tag, props) {\n  {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    warningWithoutStack$1(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());\n  }\n}\n\nfunction warnForInsertedHydratedText(parentNode, text) {\n  {\n    if (text === '') {\n      // We expect to insert empty text nodes since they're not represented in\n      // the HTML.\n      // TODO: Remove this special case if we can just avoid inserting empty\n      // text nodes.\n      return;\n    }\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    warningWithoutStack$1(false, 'Expected server HTML to contain a matching text node for \"%s\" in <%s>.', text, parentNode.nodeName.toLowerCase());\n  }\n}\n\nfunction restoreControlledState$1(domElement, tag, props) {\n  switch (tag) {\n    case 'input':\n      restoreControlledState(domElement, props);\n      return;\n    case 'textarea':\n      restoreControlledState$3(domElement, props);\n      return;\n    case 'select':\n      restoreControlledState$2(domElement, props);\n      return;\n  }\n}\n\n// TODO: direct imports like some-package/src/* are bad. Fix me.\nvar validateDOMNesting = function () {};\nvar updatedAncestorInfo = function () {};\n\n{\n  // This validation code was written based on the HTML5 parsing spec:\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  //\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n  // not clear what practical benefit doing so provides); instead, we warn only\n  // for cases where the parser will give a parse tree differing from what React\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\n  // because it still parses correctly; we do warn for other cases like nested\n  // <p> tags where the beginning of the second element implicitly closes the\n  // first, causing a confusing mess.\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\n  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n  // TODO: Distinguish by namespace here -- for <title>, including it here\n  // errs on the side of fewer warnings\n  'foreignObject', 'desc', 'title'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n  var buttonScopeTags = inScopeTags.concat(['button']);\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n\n  var emptyAncestorInfo = {\n    current: null,\n\n    formTag: null,\n    aTagInScope: null,\n    buttonTagInScope: null,\n    nobrTagInScope: null,\n    pTagInButtonScope: null,\n\n    listItemTagAutoclosing: null,\n    dlItemTagAutoclosing: null\n  };\n\n  updatedAncestorInfo = function (oldInfo, tag) {\n    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);\n    var info = { tag: tag };\n\n    if (inScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.aTagInScope = null;\n      ancestorInfo.buttonTagInScope = null;\n      ancestorInfo.nobrTagInScope = null;\n    }\n    if (buttonScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.pTagInButtonScope = null;\n    }\n\n    // See rules for 'li', 'dd', 'dt' start tags in\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n      ancestorInfo.listItemTagAutoclosing = null;\n      ancestorInfo.dlItemTagAutoclosing = null;\n    }\n\n    ancestorInfo.current = info;\n\n    if (tag === 'form') {\n      ancestorInfo.formTag = info;\n    }\n    if (tag === 'a') {\n      ancestorInfo.aTagInScope = info;\n    }\n    if (tag === 'button') {\n      ancestorInfo.buttonTagInScope = info;\n    }\n    if (tag === 'nobr') {\n      ancestorInfo.nobrTagInScope = info;\n    }\n    if (tag === 'p') {\n      ancestorInfo.pTagInButtonScope = info;\n    }\n    if (tag === 'li') {\n      ancestorInfo.listItemTagAutoclosing = info;\n    }\n    if (tag === 'dd' || tag === 'dt') {\n      ancestorInfo.dlItemTagAutoclosing = info;\n    }\n\n    return ancestorInfo;\n  };\n\n  /**\n   * Returns whether\n   */\n  var isTagValidWithParent = function (tag, parentTag) {\n    // First, let's check if we're in an unusual parsing mode...\n    switch (parentTag) {\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n      case 'select':\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n      case 'optgroup':\n        return tag === 'option' || tag === '#text';\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n      // but\n      case 'option':\n        return tag === '#text';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n      // No special behavior since these rules fall back to \"in body\" mode for\n      // all except special table nodes which cause bad parsing behavior anyway.\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n      case 'tr':\n        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n      case 'tbody':\n      case 'thead':\n      case 'tfoot':\n        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n      case 'colgroup':\n        return tag === 'col' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n      case 'table':\n        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n      case 'head':\n        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n      case 'html':\n        return tag === 'head' || tag === 'body';\n      case '#document':\n        return tag === 'html';\n    }\n\n    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n    // where the parsing rules cause implicit opens or closes to be added.\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    switch (tag) {\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\n      case 'rp':\n      case 'rt':\n        return impliedEndTags.indexOf(parentTag) === -1;\n\n      case 'body':\n      case 'caption':\n      case 'col':\n      case 'colgroup':\n      case 'frame':\n      case 'head':\n      case 'html':\n      case 'tbody':\n      case 'td':\n      case 'tfoot':\n      case 'th':\n      case 'thead':\n      case 'tr':\n        // These tags are only valid with a few parents that have special child\n        // parsing rules -- if we're down here, then none of those matched and\n        // so we allow it only if we don't know what the parent is, as all other\n        // cases are invalid.\n        return parentTag == null;\n    }\n\n    return true;\n  };\n\n  /**\n   * Returns whether\n   */\n  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\n    switch (tag) {\n      case 'address':\n      case 'article':\n      case 'aside':\n      case 'blockquote':\n      case 'center':\n      case 'details':\n      case 'dialog':\n      case 'dir':\n      case 'div':\n      case 'dl':\n      case 'fieldset':\n      case 'figcaption':\n      case 'figure':\n      case 'footer':\n      case 'header':\n      case 'hgroup':\n      case 'main':\n      case 'menu':\n      case 'nav':\n      case 'ol':\n      case 'p':\n      case 'section':\n      case 'summary':\n      case 'ul':\n      case 'pre':\n      case 'listing':\n      case 'table':\n      case 'hr':\n      case 'xmp':\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return ancestorInfo.pTagInButtonScope;\n\n      case 'form':\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\n      case 'li':\n        return ancestorInfo.listItemTagAutoclosing;\n\n      case 'dd':\n      case 'dt':\n        return ancestorInfo.dlItemTagAutoclosing;\n\n      case 'button':\n        return ancestorInfo.buttonTagInScope;\n\n      case 'a':\n        // Spec says something about storing a list of markers, but it sounds\n        // equivalent to this check.\n        return ancestorInfo.aTagInScope;\n\n      case 'nobr':\n        return ancestorInfo.nobrTagInScope;\n    }\n\n    return null;\n  };\n\n  var didWarn = {};\n\n  validateDOMNesting = function (childTag, childText, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.current;\n    var parentTag = parentInfo && parentInfo.tag;\n\n    if (childText != null) {\n      !(childTag == null) ? warningWithoutStack$1(false, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;\n      childTag = '#text';\n    }\n\n    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n    var invalidParentOrAncestor = invalidParent || invalidAncestor;\n    if (!invalidParentOrAncestor) {\n      return;\n    }\n\n    var ancestorTag = invalidParentOrAncestor.tag;\n    var addendum = getCurrentFiberStackInDev();\n\n    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;\n    if (didWarn[warnKey]) {\n      return;\n    }\n    didWarn[warnKey] = true;\n\n    var tagDisplayName = childTag;\n    var whitespaceInfo = '';\n    if (childTag === '#text') {\n      if (/\\S/.test(childText)) {\n        tagDisplayName = 'Text nodes';\n      } else {\n        tagDisplayName = 'Whitespace text nodes';\n        whitespaceInfo = \" Make sure you don't have any extra whitespace between tags on \" + 'each line of your source code.';\n      }\n    } else {\n      tagDisplayName = '<' + childTag + '>';\n    }\n\n    if (invalidParent) {\n      var info = '';\n      if (ancestorTag === 'table' && childTag === 'tr') {\n        info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\n      }\n      warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);\n    } else {\n      warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);\n    }\n  };\n}\n\n// Renderers that don't support persistence\n// can re-export everything from this module.\n\nfunction shim() {\n  invariant(false, 'The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.');\n}\n\n// Persistence (when unsupported)\nvar supportsPersistence = false;\nvar cloneInstance = shim;\nvar createContainerChildSet = shim;\nvar appendChildToContainerChildSet = shim;\nvar finalizeContainerChildren = shim;\nvar replaceContainerChildren = shim;\nvar cloneHiddenInstance = shim;\nvar cloneUnhiddenInstance = shim;\nvar createHiddenTextInstance = shim;\n\nvar SUPPRESS_HYDRATION_WARNING = void 0;\n{\n  SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';\n}\n\nvar SUSPENSE_START_DATA = '$';\nvar SUSPENSE_END_DATA = '/$';\n\nvar STYLE = 'style';\n\nvar eventsEnabled = null;\nvar selectionInformation = null;\n\nfunction shouldAutoFocusHostComponent(type, props) {\n  switch (type) {\n    case 'button':\n    case 'input':\n    case 'select':\n    case 'textarea':\n      return !!props.autoFocus;\n  }\n  return false;\n}\n\nfunction getRootHostContext(rootContainerInstance) {\n  var type = void 0;\n  var namespace = void 0;\n  var nodeType = rootContainerInstance.nodeType;\n  switch (nodeType) {\n    case DOCUMENT_NODE:\n    case DOCUMENT_FRAGMENT_NODE:\n      {\n        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';\n        var root = rootContainerInstance.documentElement;\n        namespace = root ? root.namespaceURI : getChildNamespace(null, '');\n        break;\n      }\n    default:\n      {\n        var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;\n        var ownNamespace = container.namespaceURI || null;\n        type = container.tagName;\n        namespace = getChildNamespace(ownNamespace, type);\n        break;\n      }\n  }\n  {\n    var validatedTag = type.toLowerCase();\n    var _ancestorInfo = updatedAncestorInfo(null, validatedTag);\n    return { namespace: namespace, ancestorInfo: _ancestorInfo };\n  }\n  return namespace;\n}\n\nfunction getChildHostContext(parentHostContext, type, rootContainerInstance) {\n  {\n    var parentHostContextDev = parentHostContext;\n    var _namespace = getChildNamespace(parentHostContextDev.namespace, type);\n    var _ancestorInfo2 = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);\n    return { namespace: _namespace, ancestorInfo: _ancestorInfo2 };\n  }\n  var parentNamespace = parentHostContext;\n  return getChildNamespace(parentNamespace, type);\n}\n\nfunction getPublicInstance(instance) {\n  return instance;\n}\n\nfunction prepareForCommit(containerInfo) {\n  eventsEnabled = isEnabled();\n  selectionInformation = getSelectionInformation();\n  setEnabled(false);\n}\n\nfunction resetAfterCommit(containerInfo) {\n  restoreSelection(selectionInformation);\n  selectionInformation = null;\n  setEnabled(eventsEnabled);\n  eventsEnabled = null;\n}\n\nfunction createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {\n  var parentNamespace = void 0;\n  {\n    // TODO: take namespace into account when validating.\n    var hostContextDev = hostContext;\n    validateDOMNesting(type, null, hostContextDev.ancestorInfo);\n    if (typeof props.children === 'string' || typeof props.children === 'number') {\n      var string = '' + props.children;\n      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);\n      validateDOMNesting(null, string, ownAncestorInfo);\n    }\n    parentNamespace = hostContextDev.namespace;\n  }\n  var domElement = createElement(type, props, rootContainerInstance, parentNamespace);\n  precacheFiberNode(internalInstanceHandle, domElement);\n  updateFiberProps(domElement, props);\n  return domElement;\n}\n\nfunction appendInitialChild(parentInstance, child) {\n  parentInstance.appendChild(child);\n}\n\nfunction finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {\n  setInitialProperties(domElement, type, props, rootContainerInstance);\n  return shouldAutoFocusHostComponent(type, props);\n}\n\nfunction prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {\n  {\n    var hostContextDev = hostContext;\n    if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {\n      var string = '' + newProps.children;\n      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);\n      validateDOMNesting(null, string, ownAncestorInfo);\n    }\n  }\n  return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);\n}\n\nfunction shouldSetTextContent(type, props) {\n  return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;\n}\n\nfunction shouldDeprioritizeSubtree(type, props) {\n  return !!props.hidden;\n}\n\nfunction createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {\n  {\n    var hostContextDev = hostContext;\n    validateDOMNesting(null, text, hostContextDev.ancestorInfo);\n  }\n  var textNode = createTextNode(text, rootContainerInstance);\n  precacheFiberNode(internalInstanceHandle, textNode);\n  return textNode;\n}\n\nvar isPrimaryRenderer = true;\n// This initialization code may run even on server environments\n// if a component just imports ReactDOM (e.g. for findDOMNode).\n// Some environments might not have setTimeout or clearTimeout.\nvar scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;\nvar cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;\nvar noTimeout = -1;\nvar schedulePassiveEffects = scheduler.unstable_scheduleCallback;\nvar cancelPassiveEffects = scheduler.unstable_cancelCallback;\n\n// -------------------\n//     Mutation\n// -------------------\n\nvar supportsMutation = true;\n\nfunction commitMount(domElement, type, newProps, internalInstanceHandle) {\n  // Despite the naming that might imply otherwise, this method only\n  // fires if there is an `Update` effect scheduled during mounting.\n  // This happens if `finalizeInitialChildren` returns `true` (which it\n  // does to implement the `autoFocus` attribute on the client). But\n  // there are also other cases when this might happen (such as patching\n  // up text content during hydration mismatch). So we'll check this again.\n  if (shouldAutoFocusHostComponent(type, newProps)) {\n    domElement.focus();\n  }\n}\n\nfunction commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {\n  // Update the props handle so that we know which props are the ones with\n  // with current event handlers.\n  updateFiberProps(domElement, newProps);\n  // Apply the diff to the DOM node.\n  updateProperties(domElement, updatePayload, type, oldProps, newProps);\n}\n\nfunction resetTextContent(domElement) {\n  setTextContent(domElement, '');\n}\n\nfunction commitTextUpdate(textInstance, oldText, newText) {\n  textInstance.nodeValue = newText;\n}\n\nfunction appendChild(parentInstance, child) {\n  parentInstance.appendChild(child);\n}\n\nfunction appendChildToContainer(container, child) {\n  var parentNode = void 0;\n  if (container.nodeType === COMMENT_NODE) {\n    parentNode = container.parentNode;\n    parentNode.insertBefore(child, container);\n  } else {\n    parentNode = container;\n    parentNode.appendChild(child);\n  }\n  // This container might be used for a portal.\n  // If something inside a portal is clicked, that click should bubble\n  // through the React tree. However, on Mobile Safari the click would\n  // never bubble through the *DOM* tree unless an ancestor with onclick\n  // event exists. So we wouldn't see it and dispatch it.\n  // This is why we ensure that non React root containers have inline onclick\n  // defined.\n  // https://github.com/facebook/react/issues/11918\n  var reactRootContainer = container._reactRootContainer;\n  if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {\n    // TODO: This cast may not be sound for SVG, MathML or custom elements.\n    trapClickOnNonInteractiveElement(parentNode);\n  }\n}\n\nfunction insertBefore(parentInstance, child, beforeChild) {\n  parentInstance.insertBefore(child, beforeChild);\n}\n\nfunction insertInContainerBefore(container, child, beforeChild) {\n  if (container.nodeType === COMMENT_NODE) {\n    container.parentNode.insertBefore(child, beforeChild);\n  } else {\n    container.insertBefore(child, beforeChild);\n  }\n}\n\nfunction removeChild(parentInstance, child) {\n  parentInstance.removeChild(child);\n}\n\nfunction removeChildFromContainer(container, child) {\n  if (container.nodeType === COMMENT_NODE) {\n    container.parentNode.removeChild(child);\n  } else {\n    container.removeChild(child);\n  }\n}\n\nfunction clearSuspenseBoundary(parentInstance, suspenseInstance) {\n  var node = suspenseInstance;\n  // Delete all nodes within this suspense boundary.\n  // There might be nested nodes so we need to keep track of how\n  // deep we are and only break out when we're back on top.\n  var depth = 0;\n  do {\n    var nextNode = node.nextSibling;\n    parentInstance.removeChild(node);\n    if (nextNode && nextNode.nodeType === COMMENT_NODE) {\n      var data = nextNode.data;\n      if (data === SUSPENSE_END_DATA) {\n        if (depth === 0) {\n          parentInstance.removeChild(nextNode);\n          return;\n        } else {\n          depth--;\n        }\n      } else if (data === SUSPENSE_START_DATA) {\n        depth++;\n      }\n    }\n    node = nextNode;\n  } while (node);\n  // TODO: Warn, we didn't find the end comment boundary.\n}\n\nfunction clearSuspenseBoundaryFromContainer(container, suspenseInstance) {\n  if (container.nodeType === COMMENT_NODE) {\n    clearSuspenseBoundary(container.parentNode, suspenseInstance);\n  } else if (container.nodeType === ELEMENT_NODE) {\n    clearSuspenseBoundary(container, suspenseInstance);\n  } else {\n    // Document nodes should never contain suspense boundaries.\n  }\n}\n\nfunction hideInstance(instance) {\n  // TODO: Does this work for all element types? What about MathML? Should we\n  // pass host context to this method?\n  instance = instance;\n  instance.style.display = 'none';\n}\n\nfunction hideTextInstance(textInstance) {\n  textInstance.nodeValue = '';\n}\n\nfunction unhideInstance(instance, props) {\n  instance = instance;\n  var styleProp = props[STYLE];\n  var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;\n  instance.style.display = dangerousStyleValue('display', display);\n}\n\nfunction unhideTextInstance(textInstance, text) {\n  textInstance.nodeValue = text;\n}\n\n// -------------------\n//     Hydration\n// -------------------\n\nvar supportsHydration = true;\n\nfunction canHydrateInstance(instance, type, props) {\n  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {\n    return null;\n  }\n  // This has now been refined to an element node.\n  return instance;\n}\n\nfunction canHydrateTextInstance(instance, text) {\n  if (text === '' || instance.nodeType !== TEXT_NODE) {\n    // Empty strings are not parsed by HTML so there won't be a correct match here.\n    return null;\n  }\n  // This has now been refined to a text node.\n  return instance;\n}\n\nfunction canHydrateSuspenseInstance(instance) {\n  if (instance.nodeType !== COMMENT_NODE) {\n    // Empty strings are not parsed by HTML so there won't be a correct match here.\n    return null;\n  }\n  // This has now been refined to a suspense node.\n  return instance;\n}\n\nfunction getNextHydratableSibling(instance) {\n  var node = instance.nextSibling;\n  // Skip non-hydratable nodes.\n  while (node && node.nodeType !== ELEMENT_NODE && node.nodeType !== TEXT_NODE && (!enableSuspenseServerRenderer || node.nodeType !== COMMENT_NODE || node.data !== SUSPENSE_START_DATA)) {\n    node = node.nextSibling;\n  }\n  return node;\n}\n\nfunction getFirstHydratableChild(parentInstance) {\n  var next = parentInstance.firstChild;\n  // Skip non-hydratable nodes.\n  while (next && next.nodeType !== ELEMENT_NODE && next.nodeType !== TEXT_NODE && (!enableSuspenseServerRenderer || next.nodeType !== COMMENT_NODE || next.data !== SUSPENSE_START_DATA)) {\n    next = next.nextSibling;\n  }\n  return next;\n}\n\nfunction hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {\n  precacheFiberNode(internalInstanceHandle, instance);\n  // TODO: Possibly defer this until the commit phase where all the events\n  // get attached.\n  updateFiberProps(instance, props);\n  var parentNamespace = void 0;\n  {\n    var hostContextDev = hostContext;\n    parentNamespace = hostContextDev.namespace;\n  }\n  return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);\n}\n\nfunction hydrateTextInstance(textInstance, text, internalInstanceHandle) {\n  precacheFiberNode(internalInstanceHandle, textInstance);\n  return diffHydratedText(textInstance, text);\n}\n\nfunction getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {\n  var node = suspenseInstance.nextSibling;\n  // Skip past all nodes within this suspense boundary.\n  // There might be nested nodes so we need to keep track of how\n  // deep we are and only break out when we're back on top.\n  var depth = 0;\n  while (node) {\n    if (node.nodeType === COMMENT_NODE) {\n      var data = node.data;\n      if (data === SUSPENSE_END_DATA) {\n        if (depth === 0) {\n          return getNextHydratableSibling(node);\n        } else {\n          depth--;\n        }\n      } else if (data === SUSPENSE_START_DATA) {\n        depth++;\n      }\n    }\n    node = node.nextSibling;\n  }\n  // TODO: Warn, we didn't find the end comment boundary.\n  return null;\n}\n\nfunction didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {\n  {\n    warnForUnmatchedText(textInstance, text);\n  }\n}\n\nfunction didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {\n  if ( true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n    warnForUnmatchedText(textInstance, text);\n  }\n}\n\nfunction didNotHydrateContainerInstance(parentContainer, instance) {\n  {\n    if (instance.nodeType === ELEMENT_NODE) {\n      warnForDeletedHydratableElement(parentContainer, instance);\n    } else if (instance.nodeType === COMMENT_NODE) {\n      // TODO: warnForDeletedHydratableSuspenseBoundary\n    } else {\n      warnForDeletedHydratableText(parentContainer, instance);\n    }\n  }\n}\n\nfunction didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {\n  if ( true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n    if (instance.nodeType === ELEMENT_NODE) {\n      warnForDeletedHydratableElement(parentInstance, instance);\n    } else if (instance.nodeType === COMMENT_NODE) {\n      // TODO: warnForDeletedHydratableSuspenseBoundary\n    } else {\n      warnForDeletedHydratableText(parentInstance, instance);\n    }\n  }\n}\n\nfunction didNotFindHydratableContainerInstance(parentContainer, type, props) {\n  {\n    warnForInsertedHydratedElement(parentContainer, type, props);\n  }\n}\n\nfunction didNotFindHydratableContainerTextInstance(parentContainer, text) {\n  {\n    warnForInsertedHydratedText(parentContainer, text);\n  }\n}\n\n\n\nfunction didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {\n  if ( true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n    warnForInsertedHydratedElement(parentInstance, type, props);\n  }\n}\n\nfunction didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {\n  if ( true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n    warnForInsertedHydratedText(parentInstance, text);\n  }\n}\n\nfunction didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {\n  if ( true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n    // TODO: warnForInsertedHydratedSuspense(parentInstance);\n  }\n}\n\n// Prefix measurements so that it's possible to filter them.\n// Longer prefixes are hard to read in DevTools.\nvar reactEmoji = '\\u269B';\nvar warningEmoji = '\\u26D4';\nvar supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';\n\n// Keep track of current fiber so that we know the path to unwind on pause.\n// TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?\nvar currentFiber = null;\n// If we're in the middle of user code, which fiber and method is it?\n// Reusing `currentFiber` would be confusing for this because user code fiber\n// can change during commit phase too, but we don't need to unwind it (since\n// lifecycles in the commit phase don't resemble a tree).\nvar currentPhase = null;\nvar currentPhaseFiber = null;\n// Did lifecycle hook schedule an update? This is often a performance problem,\n// so we will keep track of it, and include it in the report.\n// Track commits caused by cascading updates.\nvar isCommitting = false;\nvar hasScheduledUpdateInCurrentCommit = false;\nvar hasScheduledUpdateInCurrentPhase = false;\nvar commitCountInCurrentWorkLoop = 0;\nvar effectCountInCurrentCommit = 0;\nvar isWaitingForCallback = false;\n// During commits, we only show a measurement once per method name\n// to avoid stretch the commit phase with measurement overhead.\nvar labelsInCurrentCommit = new Set();\n\nvar formatMarkName = function (markName) {\n  return reactEmoji + ' ' + markName;\n};\n\nvar formatLabel = function (label, warning) {\n  var prefix = warning ? warningEmoji + ' ' : reactEmoji + ' ';\n  var suffix = warning ? ' Warning: ' + warning : '';\n  return '' + prefix + label + suffix;\n};\n\nvar beginMark = function (markName) {\n  performance.mark(formatMarkName(markName));\n};\n\nvar clearMark = function (markName) {\n  performance.clearMarks(formatMarkName(markName));\n};\n\nvar endMark = function (label, markName, warning) {\n  var formattedMarkName = formatMarkName(markName);\n  var formattedLabel = formatLabel(label, warning);\n  try {\n    performance.measure(formattedLabel, formattedMarkName);\n  } catch (err) {}\n  // If previous mark was missing for some reason, this will throw.\n  // This could only happen if React crashed in an unexpected place earlier.\n  // Don't pile on with more errors.\n\n  // Clear marks immediately to avoid growing buffer.\n  performance.clearMarks(formattedMarkName);\n  performance.clearMeasures(formattedLabel);\n};\n\nvar getFiberMarkName = function (label, debugID) {\n  return label + ' (#' + debugID + ')';\n};\n\nvar getFiberLabel = function (componentName, isMounted, phase) {\n  if (phase === null) {\n    // These are composite component total time measurements.\n    return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';\n  } else {\n    // Composite component methods.\n    return componentName + '.' + phase;\n  }\n};\n\nvar beginFiberMark = function (fiber, phase) {\n  var componentName = getComponentName(fiber.type) || 'Unknown';\n  var debugID = fiber._debugID;\n  var isMounted = fiber.alternate !== null;\n  var label = getFiberLabel(componentName, isMounted, phase);\n\n  if (isCommitting && labelsInCurrentCommit.has(label)) {\n    // During the commit phase, we don't show duplicate labels because\n    // there is a fixed overhead for every measurement, and we don't\n    // want to stretch the commit phase beyond necessary.\n    return false;\n  }\n  labelsInCurrentCommit.add(label);\n\n  var markName = getFiberMarkName(label, debugID);\n  beginMark(markName);\n  return true;\n};\n\nvar clearFiberMark = function (fiber, phase) {\n  var componentName = getComponentName(fiber.type) || 'Unknown';\n  var debugID = fiber._debugID;\n  var isMounted = fiber.alternate !== null;\n  var label = getFiberLabel(componentName, isMounted, phase);\n  var markName = getFiberMarkName(label, debugID);\n  clearMark(markName);\n};\n\nvar endFiberMark = function (fiber, phase, warning) {\n  var componentName = getComponentName(fiber.type) || 'Unknown';\n  var debugID = fiber._debugID;\n  var isMounted = fiber.alternate !== null;\n  var label = getFiberLabel(componentName, isMounted, phase);\n  var markName = getFiberMarkName(label, debugID);\n  endMark(label, markName, warning);\n};\n\nvar shouldIgnoreFiber = function (fiber) {\n  // Host components should be skipped in the timeline.\n  // We could check typeof fiber.type, but does this work with RN?\n  switch (fiber.tag) {\n    case HostRoot:\n    case HostComponent:\n    case HostText:\n    case HostPortal:\n    case Fragment:\n    case ContextProvider:\n    case ContextConsumer:\n    case Mode:\n      return true;\n    default:\n      return false;\n  }\n};\n\nvar clearPendingPhaseMeasurement = function () {\n  if (currentPhase !== null && currentPhaseFiber !== null) {\n    clearFiberMark(currentPhaseFiber, currentPhase);\n  }\n  currentPhaseFiber = null;\n  currentPhase = null;\n  hasScheduledUpdateInCurrentPhase = false;\n};\n\nvar pauseTimers = function () {\n  // Stops all currently active measurements so that they can be resumed\n  // if we continue in a later deferred loop from the same unit of work.\n  var fiber = currentFiber;\n  while (fiber) {\n    if (fiber._debugIsCurrentlyTiming) {\n      endFiberMark(fiber, null, null);\n    }\n    fiber = fiber.return;\n  }\n};\n\nvar resumeTimersRecursively = function (fiber) {\n  if (fiber.return !== null) {\n    resumeTimersRecursively(fiber.return);\n  }\n  if (fiber._debugIsCurrentlyTiming) {\n    beginFiberMark(fiber, null);\n  }\n};\n\nvar resumeTimers = function () {\n  // Resumes all measurements that were active during the last deferred loop.\n  if (currentFiber !== null) {\n    resumeTimersRecursively(currentFiber);\n  }\n};\n\nfunction recordEffect() {\n  if (enableUserTimingAPI) {\n    effectCountInCurrentCommit++;\n  }\n}\n\nfunction recordScheduleUpdate() {\n  if (enableUserTimingAPI) {\n    if (isCommitting) {\n      hasScheduledUpdateInCurrentCommit = true;\n    }\n    if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {\n      hasScheduledUpdateInCurrentPhase = true;\n    }\n  }\n}\n\nfunction startRequestCallbackTimer() {\n  if (enableUserTimingAPI) {\n    if (supportsUserTiming && !isWaitingForCallback) {\n      isWaitingForCallback = true;\n      beginMark('(Waiting for async callback...)');\n    }\n  }\n}\n\nfunction stopRequestCallbackTimer(didExpire, expirationTime) {\n  if (enableUserTimingAPI) {\n    if (supportsUserTiming) {\n      isWaitingForCallback = false;\n      var warning = didExpire ? 'React was blocked by main thread' : null;\n      endMark('(Waiting for async callback... will force flush in ' + expirationTime + ' ms)', '(Waiting for async callback...)', warning);\n    }\n  }\n}\n\nfunction startWorkTimer(fiber) {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\n      return;\n    }\n    // If we pause, this is the fiber to unwind from.\n    currentFiber = fiber;\n    if (!beginFiberMark(fiber, null)) {\n      return;\n    }\n    fiber._debugIsCurrentlyTiming = true;\n  }\n}\n\nfunction cancelWorkTimer(fiber) {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\n      return;\n    }\n    // Remember we shouldn't complete measurement for this fiber.\n    // Otherwise flamechart will be deep even for small updates.\n    fiber._debugIsCurrentlyTiming = false;\n    clearFiberMark(fiber, null);\n  }\n}\n\nfunction stopWorkTimer(fiber) {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\n      return;\n    }\n    // If we pause, its parent is the fiber to unwind from.\n    currentFiber = fiber.return;\n    if (!fiber._debugIsCurrentlyTiming) {\n      return;\n    }\n    fiber._debugIsCurrentlyTiming = false;\n    endFiberMark(fiber, null, null);\n  }\n}\n\nfunction stopFailedWorkTimer(fiber) {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\n      return;\n    }\n    // If we pause, its parent is the fiber to unwind from.\n    currentFiber = fiber.return;\n    if (!fiber._debugIsCurrentlyTiming) {\n      return;\n    }\n    fiber._debugIsCurrentlyTiming = false;\n    var warning = fiber.tag === SuspenseComponent || fiber.tag === DehydratedSuspenseComponent ? 'Rendering was suspended' : 'An error was thrown inside this error boundary';\n    endFiberMark(fiber, null, warning);\n  }\n}\n\nfunction startPhaseTimer(fiber, phase) {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    clearPendingPhaseMeasurement();\n    if (!beginFiberMark(fiber, phase)) {\n      return;\n    }\n    currentPhaseFiber = fiber;\n    currentPhase = phase;\n  }\n}\n\nfunction stopPhaseTimer() {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    if (currentPhase !== null && currentPhaseFiber !== null) {\n      var warning = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;\n      endFiberMark(currentPhaseFiber, currentPhase, warning);\n    }\n    currentPhase = null;\n    currentPhaseFiber = null;\n  }\n}\n\nfunction startWorkLoopTimer(nextUnitOfWork) {\n  if (enableUserTimingAPI) {\n    currentFiber = nextUnitOfWork;\n    if (!supportsUserTiming) {\n      return;\n    }\n    commitCountInCurrentWorkLoop = 0;\n    // This is top level call.\n    // Any other measurements are performed within.\n    beginMark('(React Tree Reconciliation)');\n    // Resume any measurements that were in progress during the last loop.\n    resumeTimers();\n  }\n}\n\nfunction stopWorkLoopTimer(interruptedBy, didCompleteRoot) {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    var warning = null;\n    if (interruptedBy !== null) {\n      if (interruptedBy.tag === HostRoot) {\n        warning = 'A top-level update interrupted the previous render';\n      } else {\n        var componentName = getComponentName(interruptedBy.type) || 'Unknown';\n        warning = 'An update to ' + componentName + ' interrupted the previous render';\n      }\n    } else if (commitCountInCurrentWorkLoop > 1) {\n      warning = 'There were cascading updates';\n    }\n    commitCountInCurrentWorkLoop = 0;\n    var label = didCompleteRoot ? '(React Tree Reconciliation: Completed Root)' : '(React Tree Reconciliation: Yielded)';\n    // Pause any measurements until the next loop.\n    pauseTimers();\n    endMark(label, '(React Tree Reconciliation)', warning);\n  }\n}\n\nfunction startCommitTimer() {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    isCommitting = true;\n    hasScheduledUpdateInCurrentCommit = false;\n    labelsInCurrentCommit.clear();\n    beginMark('(Committing Changes)');\n  }\n}\n\nfunction stopCommitTimer() {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n\n    var warning = null;\n    if (hasScheduledUpdateInCurrentCommit) {\n      warning = 'Lifecycle hook scheduled a cascading update';\n    } else if (commitCountInCurrentWorkLoop > 0) {\n      warning = 'Caused by a cascading update in earlier commit';\n    }\n    hasScheduledUpdateInCurrentCommit = false;\n    commitCountInCurrentWorkLoop++;\n    isCommitting = false;\n    labelsInCurrentCommit.clear();\n\n    endMark('(Committing Changes)', '(Committing Changes)', warning);\n  }\n}\n\nfunction startCommitSnapshotEffectsTimer() {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    effectCountInCurrentCommit = 0;\n    beginMark('(Committing Snapshot Effects)');\n  }\n}\n\nfunction stopCommitSnapshotEffectsTimer() {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    var count = effectCountInCurrentCommit;\n    effectCountInCurrentCommit = 0;\n    endMark('(Committing Snapshot Effects: ' + count + ' Total)', '(Committing Snapshot Effects)', null);\n  }\n}\n\nfunction startCommitHostEffectsTimer() {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    effectCountInCurrentCommit = 0;\n    beginMark('(Committing Host Effects)');\n  }\n}\n\nfunction stopCommitHostEffectsTimer() {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    var count = effectCountInCurrentCommit;\n    effectCountInCurrentCommit = 0;\n    endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);\n  }\n}\n\nfunction startCommitLifeCyclesTimer() {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    effectCountInCurrentCommit = 0;\n    beginMark('(Calling Lifecycle Methods)');\n  }\n}\n\nfunction stopCommitLifeCyclesTimer() {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    var count = effectCountInCurrentCommit;\n    effectCountInCurrentCommit = 0;\n    endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);\n  }\n}\n\nvar valueStack = [];\n\nvar fiberStack = void 0;\n\n{\n  fiberStack = [];\n}\n\nvar index = -1;\n\nfunction createCursor(defaultValue) {\n  return {\n    current: defaultValue\n  };\n}\n\nfunction pop(cursor, fiber) {\n  if (index < 0) {\n    {\n      warningWithoutStack$1(false, 'Unexpected pop.');\n    }\n    return;\n  }\n\n  {\n    if (fiber !== fiberStack[index]) {\n      warningWithoutStack$1(false, 'Unexpected Fiber popped.');\n    }\n  }\n\n  cursor.current = valueStack[index];\n\n  valueStack[index] = null;\n\n  {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push(cursor, value, fiber) {\n  index++;\n\n  valueStack[index] = cursor.current;\n\n  {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nfunction checkThatStackIsEmpty() {\n  {\n    if (index !== -1) {\n      warningWithoutStack$1(false, 'Expected an empty stack. Something was not reset properly.');\n    }\n  }\n}\n\nfunction resetStackAfterFatalErrorInDev() {\n  {\n    index = -1;\n    valueStack.length = 0;\n    fiberStack.length = 0;\n  }\n}\n\nvar warnedAboutMissingGetChildContext = void 0;\n\n{\n  warnedAboutMissingGetChildContext = {};\n}\n\nvar emptyContextObject = {};\n{\n  Object.freeze(emptyContextObject);\n}\n\n// A cursor to the current merged context object on the stack.\nvar contextStackCursor = createCursor(emptyContextObject);\n// A cursor to a boolean indicating whether the context has changed.\nvar didPerformWorkStackCursor = createCursor(false);\n// Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\nvar previousContext = emptyContextObject;\n\nfunction getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {\n  if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n    // If the fiber is a context provider itself, when we read its context\n    // we may have already pushed its own child context on the stack. A context\n    // provider should not \"see\" its own child context. Therefore we read the\n    // previous (parent) context instead for a context provider.\n    return previousContext;\n  }\n  return contextStackCursor.current;\n}\n\nfunction cacheContext(workInProgress, unmaskedContext, maskedContext) {\n  var instance = workInProgress.stateNode;\n  instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n  instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n}\n\nfunction getMaskedContext(workInProgress, unmaskedContext) {\n  var type = workInProgress.type;\n  var contextTypes = type.contextTypes;\n  if (!contextTypes) {\n    return emptyContextObject;\n  }\n\n  // Avoid recreating masked context unless unmasked context has changed.\n  // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n  // This may trigger infinite loops if componentWillReceiveProps calls setState.\n  var instance = workInProgress.stateNode;\n  if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {\n    return instance.__reactInternalMemoizedMaskedChildContext;\n  }\n\n  var context = {};\n  for (var key in contextTypes) {\n    context[key] = unmaskedContext[key];\n  }\n\n  {\n    var name = getComponentName(type) || 'Unknown';\n    checkPropTypes(contextTypes, context, 'context', name, getCurrentFiberStackInDev);\n  }\n\n  // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // Context is created before the class component is instantiated so check for instance.\n  if (instance) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return context;\n}\n\nfunction hasContextChanged() {\n  return didPerformWorkStackCursor.current;\n}\n\nfunction isContextProvider(type) {\n  var childContextTypes = type.childContextTypes;\n  return childContextTypes !== null && childContextTypes !== undefined;\n}\n\nfunction popContext(fiber) {\n  pop(didPerformWorkStackCursor, fiber);\n  pop(contextStackCursor, fiber);\n}\n\nfunction popTopLevelContextObject(fiber) {\n  pop(didPerformWorkStackCursor, fiber);\n  pop(contextStackCursor, fiber);\n}\n\nfunction pushTopLevelContextObject(fiber, context, didChange) {\n  !(contextStackCursor.current === emptyContextObject) ? invariant(false, 'Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n\n  push(contextStackCursor, context, fiber);\n  push(didPerformWorkStackCursor, didChange, fiber);\n}\n\nfunction processChildContext(fiber, type, parentContext) {\n  var instance = fiber.stateNode;\n  var childContextTypes = type.childContextTypes;\n\n  // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n  // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n  if (typeof instance.getChildContext !== 'function') {\n    {\n      var componentName = getComponentName(type) || 'Unknown';\n\n      if (!warnedAboutMissingGetChildContext[componentName]) {\n        warnedAboutMissingGetChildContext[componentName] = true;\n        warningWithoutStack$1(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);\n      }\n    }\n    return parentContext;\n  }\n\n  var childContext = void 0;\n  {\n    setCurrentPhase('getChildContext');\n  }\n  startPhaseTimer(fiber, 'getChildContext');\n  childContext = instance.getChildContext();\n  stopPhaseTimer();\n  {\n    setCurrentPhase(null);\n  }\n  for (var contextKey in childContext) {\n    !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', getComponentName(type) || 'Unknown', contextKey) : void 0;\n  }\n  {\n    var name = getComponentName(type) || 'Unknown';\n    checkPropTypes(childContextTypes, childContext, 'child context', name,\n    // In practice, there is one case in which we won't get a stack. It's when\n    // somebody calls unstable_renderSubtreeIntoContainer() and we process\n    // context from the parent component instance. The stack will be missing\n    // because it's outside of the reconciliation, and so the pointer has not\n    // been set. This is rare and doesn't matter. We'll also remove that API.\n    getCurrentFiberStackInDev);\n  }\n\n  return _assign({}, parentContext, childContext);\n}\n\nfunction pushContextProvider(workInProgress) {\n  var instance = workInProgress.stateNode;\n  // We push the context as early as possible to ensure stack integrity.\n  // If the instance does not exist yet, we will push null at first,\n  // and replace it on the stack later when invalidating the context.\n  var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;\n\n  // Remember the parent context so we can merge with it later.\n  // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n  previousContext = contextStackCursor.current;\n  push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n  push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);\n\n  return true;\n}\n\nfunction invalidateContextProvider(workInProgress, type, didChange) {\n  var instance = workInProgress.stateNode;\n  !instance ? invariant(false, 'Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n\n  if (didChange) {\n    // Merge parent and own context.\n    // Skip this if we're not updating due to sCU.\n    // This avoids unnecessarily recomputing memoized values.\n    var mergedContext = processChildContext(workInProgress, type, previousContext);\n    instance.__reactInternalMemoizedMergedChildContext = mergedContext;\n\n    // Replace the old (or empty) context with the new one.\n    // It is important to unwind the context in the reverse order.\n    pop(didPerformWorkStackCursor, workInProgress);\n    pop(contextStackCursor, workInProgress);\n    // Now push the new context and mark that it has changed.\n    push(contextStackCursor, mergedContext, workInProgress);\n    push(didPerformWorkStackCursor, didChange, workInProgress);\n  } else {\n    pop(didPerformWorkStackCursor, workInProgress);\n    push(didPerformWorkStackCursor, didChange, workInProgress);\n  }\n}\n\nfunction findCurrentUnmaskedContext(fiber) {\n  // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n  // makes sense elsewhere\n  !(isFiberMounted(fiber) && fiber.tag === ClassComponent) ? invariant(false, 'Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n\n  var node = fiber;\n  do {\n    switch (node.tag) {\n      case HostRoot:\n        return node.stateNode.context;\n      case ClassComponent:\n        {\n          var Component = node.type;\n          if (isContextProvider(Component)) {\n            return node.stateNode.__reactInternalMemoizedMergedChildContext;\n          }\n          break;\n        }\n    }\n    node = node.return;\n  } while (node !== null);\n  invariant(false, 'Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.');\n}\n\nvar onCommitFiberRoot = null;\nvar onCommitFiberUnmount = null;\nvar hasLoggedError = false;\n\nfunction catchErrors(fn) {\n  return function (arg) {\n    try {\n      return fn(arg);\n    } catch (err) {\n      if ( true && !hasLoggedError) {\n        hasLoggedError = true;\n        warningWithoutStack$1(false, 'React DevTools encountered an error: %s', err);\n      }\n    }\n  };\n}\n\nvar isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\n\nfunction injectInternals(internals) {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n  if (!hook.supportsFiber) {\n    {\n      warningWithoutStack$1(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');\n    }\n    // DevTools exists, even though it doesn't support Fiber.\n    return true;\n  }\n  try {\n    var rendererID = hook.inject(internals);\n    // We have successfully injected, so now it is safe to set up hooks.\n    onCommitFiberRoot = catchErrors(function (root) {\n      return hook.onCommitFiberRoot(rendererID, root);\n    });\n    onCommitFiberUnmount = catchErrors(function (fiber) {\n      return hook.onCommitFiberUnmount(rendererID, fiber);\n    });\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    {\n      warningWithoutStack$1(false, 'React DevTools encountered an error: %s.', err);\n    }\n  }\n  // DevTools exists\n  return true;\n}\n\nfunction onCommitRoot(root) {\n  if (typeof onCommitFiberRoot === 'function') {\n    onCommitFiberRoot(root);\n  }\n}\n\nfunction onCommitUnmount(fiber) {\n  if (typeof onCommitFiberUnmount === 'function') {\n    onCommitFiberUnmount(fiber);\n  }\n}\n\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\nvar maxSigned31BitInt = 1073741823;\n\nvar NoWork = 0;\nvar Never = 1;\nvar Sync = maxSigned31BitInt;\n\nvar UNIT_SIZE = 10;\nvar MAGIC_NUMBER_OFFSET = maxSigned31BitInt - 1;\n\n// 1 unit of expiration time represents 10ms.\nfunction msToExpirationTime(ms) {\n  // Always add an offset so that we don't clash with the magic number for NoWork.\n  return MAGIC_NUMBER_OFFSET - (ms / UNIT_SIZE | 0);\n}\n\nfunction expirationTimeToMs(expirationTime) {\n  return (MAGIC_NUMBER_OFFSET - expirationTime) * UNIT_SIZE;\n}\n\nfunction ceiling(num, precision) {\n  return ((num / precision | 0) + 1) * precision;\n}\n\nfunction computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {\n  return MAGIC_NUMBER_OFFSET - ceiling(MAGIC_NUMBER_OFFSET - currentTime + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);\n}\n\nvar LOW_PRIORITY_EXPIRATION = 5000;\nvar LOW_PRIORITY_BATCH_SIZE = 250;\n\nfunction computeAsyncExpiration(currentTime) {\n  return computeExpirationBucket(currentTime, LOW_PRIORITY_EXPIRATION, LOW_PRIORITY_BATCH_SIZE);\n}\n\n// We intentionally set a higher expiration time for interactive updates in\n// dev than in production.\n//\n// If the main thread is being blocked so long that you hit the expiration,\n// it's a problem that could be solved with better scheduling.\n//\n// People will be more likely to notice this and fix it with the long\n// expiration time in development.\n//\n// In production we opt for better UX at the risk of masking scheduling\n// problems, by expiring fast.\nvar HIGH_PRIORITY_EXPIRATION = 500;\nvar HIGH_PRIORITY_BATCH_SIZE = 100;\n\nfunction computeInteractiveExpiration(currentTime) {\n  return computeExpirationBucket(currentTime, HIGH_PRIORITY_EXPIRATION, HIGH_PRIORITY_BATCH_SIZE);\n}\n\nvar NoContext = 0;\nvar ConcurrentMode = 1;\nvar StrictMode = 2;\nvar ProfileMode = 4;\n\nvar hasBadMapPolyfill = void 0;\n\n{\n  hasBadMapPolyfill = false;\n  try {\n    var nonExtensibleObject = Object.preventExtensions({});\n    var testMap = new Map([[nonExtensibleObject, null]]);\n    var testSet = new Set([nonExtensibleObject]);\n    // This is necessary for Rollup to not consider these unused.\n    // https://github.com/rollup/rollup/issues/1771\n    // TODO: we can remove these if Rollup fixes the bug.\n    testMap.set(0, 0);\n    testSet.add(0);\n  } catch (e) {\n    // TODO: Consider warning about bad polyfills\n    hasBadMapPolyfill = true;\n  }\n}\n\n// A Fiber is work on a Component that needs to be done or was done. There can\n// be more than one per component.\n\n\nvar debugCounter = void 0;\n\n{\n  debugCounter = 1;\n}\n\nfunction FiberNode(tag, pendingProps, key, mode) {\n  // Instance\n  this.tag = tag;\n  this.key = key;\n  this.elementType = null;\n  this.type = null;\n  this.stateNode = null;\n\n  // Fiber\n  this.return = null;\n  this.child = null;\n  this.sibling = null;\n  this.index = 0;\n\n  this.ref = null;\n\n  this.pendingProps = pendingProps;\n  this.memoizedProps = null;\n  this.updateQueue = null;\n  this.memoizedState = null;\n  this.contextDependencies = null;\n\n  this.mode = mode;\n\n  // Effects\n  this.effectTag = NoEffect;\n  this.nextEffect = null;\n\n  this.firstEffect = null;\n  this.lastEffect = null;\n\n  this.expirationTime = NoWork;\n  this.childExpirationTime = NoWork;\n\n  this.alternate = null;\n\n  if (enableProfilerTimer) {\n    // Note: The following is done to avoid a v8 performance cliff.\n    //\n    // Initializing the fields below to smis and later updating them with\n    // double values will cause Fibers to end up having separate shapes.\n    // This behavior/bug has something to do with Object.preventExtension().\n    // Fortunately this only impacts DEV builds.\n    // Unfortunately it makes React unusably slow for some applications.\n    // To work around this, initialize the fields below with doubles.\n    //\n    // Learn more about this here:\n    // https://github.com/facebook/react/issues/14365\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n    this.actualDuration = Number.NaN;\n    this.actualStartTime = Number.NaN;\n    this.selfBaseDuration = Number.NaN;\n    this.treeBaseDuration = Number.NaN;\n\n    // It's okay to replace the initial doubles with smis after initialization.\n    // This won't trigger the performance cliff mentioned above,\n    // and it simplifies other profiler code (including DevTools).\n    this.actualDuration = 0;\n    this.actualStartTime = -1;\n    this.selfBaseDuration = 0;\n    this.treeBaseDuration = 0;\n  }\n\n  {\n    this._debugID = debugCounter++;\n    this._debugSource = null;\n    this._debugOwner = null;\n    this._debugIsCurrentlyTiming = false;\n    this._debugHookTypes = null;\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {\n      Object.preventExtensions(this);\n    }\n  }\n}\n\n// This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\nvar createFiber = function (tag, pendingProps, key, mode) {\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n  return new FiberNode(tag, pendingProps, key, mode);\n};\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction isSimpleFunctionComponent(type) {\n  return typeof type === 'function' && !shouldConstruct(type) && type.defaultProps === undefined;\n}\n\nfunction resolveLazyComponentTag(Component) {\n  if (typeof Component === 'function') {\n    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n  } else if (Component !== undefined && Component !== null) {\n    var $$typeof = Component.$$typeof;\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\n      return ForwardRef;\n    }\n    if ($$typeof === REACT_MEMO_TYPE) {\n      return MemoComponent;\n    }\n  }\n  return IndeterminateComponent;\n}\n\n// This is used to create an alternate fiber to do work on.\nfunction createWorkInProgress(current, pendingProps, expirationTime) {\n  var workInProgress = current.alternate;\n  if (workInProgress === null) {\n    // We use a double buffering pooling technique because we know that we'll\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\n    // node that we're free to reuse. This is lazily created to avoid allocating\n    // extra objects for things that are never updated. It also allow us to\n    // reclaim the extra memory if needed.\n    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n    {\n      // DEV-only fields\n      workInProgress._debugID = current._debugID;\n      workInProgress._debugSource = current._debugSource;\n      workInProgress._debugOwner = current._debugOwner;\n      workInProgress._debugHookTypes = current._debugHookTypes;\n    }\n\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps;\n\n    // We already have an alternate.\n    // Reset the effect tag.\n    workInProgress.effectTag = NoEffect;\n\n    // The effect list is no longer valid.\n    workInProgress.nextEffect = null;\n    workInProgress.firstEffect = null;\n    workInProgress.lastEffect = null;\n\n    if (enableProfilerTimer) {\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n      // This prevents time from endlessly accumulating in new commits.\n      // This has the downside of resetting values for different priority renders,\n      // But works for yielding (the common case) and should support resuming.\n      workInProgress.actualDuration = 0;\n      workInProgress.actualStartTime = -1;\n    }\n  }\n\n  workInProgress.childExpirationTime = current.childExpirationTime;\n  workInProgress.expirationTime = current.expirationTime;\n\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.contextDependencies = current.contextDependencies;\n\n  // These will be overridden during the parent's reconciliation\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n  if (enableProfilerTimer) {\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\n  }\n\n  return workInProgress;\n}\n\nfunction createHostRootFiber(isConcurrent) {\n  var mode = isConcurrent ? ConcurrentMode | StrictMode : NoContext;\n\n  if (enableProfilerTimer && isDevToolsPresent) {\n    // Always collect profile timings when DevTools are present.\n    // This enables DevTools to start capturing timing at any point–\n    // Without some nodes in the tree having empty base times.\n    mode |= ProfileMode;\n  }\n\n  return createFiber(HostRoot, null, null, mode);\n}\n\nfunction createFiberFromTypeAndProps(type, // React$ElementType\nkey, pendingProps, owner, mode, expirationTime) {\n  var fiber = void 0;\n\n  var fiberTag = IndeterminateComponent;\n  // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n  var resolvedType = type;\n  if (typeof type === 'function') {\n    if (shouldConstruct(type)) {\n      fiberTag = ClassComponent;\n    }\n  } else if (typeof type === 'string') {\n    fiberTag = HostComponent;\n  } else {\n    getTag: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);\n      case REACT_CONCURRENT_MODE_TYPE:\n        return createFiberFromMode(pendingProps, mode | ConcurrentMode | StrictMode, expirationTime, key);\n      case REACT_STRICT_MODE_TYPE:\n        return createFiberFromMode(pendingProps, mode | StrictMode, expirationTime, key);\n      case REACT_PROFILER_TYPE:\n        return createFiberFromProfiler(pendingProps, mode, expirationTime, key);\n      case REACT_SUSPENSE_TYPE:\n        return createFiberFromSuspense(pendingProps, mode, expirationTime, key);\n      default:\n        {\n          if (typeof type === 'object' && type !== null) {\n            switch (type.$$typeof) {\n              case REACT_PROVIDER_TYPE:\n                fiberTag = ContextProvider;\n                break getTag;\n              case REACT_CONTEXT_TYPE:\n                // This is a consumer\n                fiberTag = ContextConsumer;\n                break getTag;\n              case REACT_FORWARD_REF_TYPE:\n                fiberTag = ForwardRef;\n                break getTag;\n              case REACT_MEMO_TYPE:\n                fiberTag = MemoComponent;\n                break getTag;\n              case REACT_LAZY_TYPE:\n                fiberTag = LazyComponent;\n                resolvedType = null;\n                break getTag;\n            }\n          }\n          var info = '';\n          {\n            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n              info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and \" + 'named imports.';\n            }\n            var ownerName = owner ? getComponentName(owner.type) : null;\n            if (ownerName) {\n              info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n            }\n          }\n          invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info);\n        }\n    }\n  }\n\n  fiber = createFiber(fiberTag, pendingProps, key, mode);\n  fiber.elementType = type;\n  fiber.type = resolvedType;\n  fiber.expirationTime = expirationTime;\n\n  return fiber;\n}\n\nfunction createFiberFromElement(element, mode, expirationTime) {\n  var owner = null;\n  {\n    owner = element._owner;\n  }\n  var type = element.type;\n  var key = element.key;\n  var pendingProps = element.props;\n  var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime);\n  {\n    fiber._debugSource = element._source;\n    fiber._debugOwner = element._owner;\n  }\n  return fiber;\n}\n\nfunction createFiberFromFragment(elements, mode, expirationTime, key) {\n  var fiber = createFiber(Fragment, elements, key, mode);\n  fiber.expirationTime = expirationTime;\n  return fiber;\n}\n\nfunction createFiberFromProfiler(pendingProps, mode, expirationTime, key) {\n  {\n    if (typeof pendingProps.id !== 'string' || typeof pendingProps.onRender !== 'function') {\n      warningWithoutStack$1(false, 'Profiler must specify an \"id\" string and \"onRender\" function as props');\n    }\n  }\n\n  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n  // TODO: The Profiler fiber shouldn't have a type. It has a tag.\n  fiber.elementType = REACT_PROFILER_TYPE;\n  fiber.type = REACT_PROFILER_TYPE;\n  fiber.expirationTime = expirationTime;\n\n  return fiber;\n}\n\nfunction createFiberFromMode(pendingProps, mode, expirationTime, key) {\n  var fiber = createFiber(Mode, pendingProps, key, mode);\n\n  // TODO: The Mode fiber shouldn't have a type. It has a tag.\n  var type = (mode & ConcurrentMode) === NoContext ? REACT_STRICT_MODE_TYPE : REACT_CONCURRENT_MODE_TYPE;\n  fiber.elementType = type;\n  fiber.type = type;\n\n  fiber.expirationTime = expirationTime;\n  return fiber;\n}\n\nfunction createFiberFromSuspense(pendingProps, mode, expirationTime, key) {\n  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n\n  // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.\n  var type = REACT_SUSPENSE_TYPE;\n  fiber.elementType = type;\n  fiber.type = type;\n\n  fiber.expirationTime = expirationTime;\n  return fiber;\n}\n\nfunction createFiberFromText(content, mode, expirationTime) {\n  var fiber = createFiber(HostText, content, null, mode);\n  fiber.expirationTime = expirationTime;\n  return fiber;\n}\n\nfunction createFiberFromHostInstanceForDeletion() {\n  var fiber = createFiber(HostComponent, null, null, NoContext);\n  // TODO: These should not need a type.\n  fiber.elementType = 'DELETED';\n  fiber.type = 'DELETED';\n  return fiber;\n}\n\nfunction createFiberFromPortal(portal, mode, expirationTime) {\n  var pendingProps = portal.children !== null ? portal.children : [];\n  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n  fiber.expirationTime = expirationTime;\n  fiber.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null, // Used by persistent updates\n    implementation: portal.implementation\n  };\n  return fiber;\n}\n\n// Used for stashing WIP properties to replay failed work in DEV.\nfunction assignFiberPropertiesInDEV(target, source) {\n  if (target === null) {\n    // This Fiber's initial properties will always be overwritten.\n    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\n    target = createFiber(IndeterminateComponent, null, null, NoContext);\n  }\n\n  // This is intentionally written as a list of all properties.\n  // We tried to use Object.assign() instead but this is called in\n  // the hottest path, and Object.assign() was too slow:\n  // https://github.com/facebook/react/issues/12502\n  // This code is DEV-only so size is not a concern.\n\n  target.tag = source.tag;\n  target.key = source.key;\n  target.elementType = source.elementType;\n  target.type = source.type;\n  target.stateNode = source.stateNode;\n  target.return = source.return;\n  target.child = source.child;\n  target.sibling = source.sibling;\n  target.index = source.index;\n  target.ref = source.ref;\n  target.pendingProps = source.pendingProps;\n  target.memoizedProps = source.memoizedProps;\n  target.updateQueue = source.updateQueue;\n  target.memoizedState = source.memoizedState;\n  target.contextDependencies = source.contextDependencies;\n  target.mode = source.mode;\n  target.effectTag = source.effectTag;\n  target.nextEffect = source.nextEffect;\n  target.firstEffect = source.firstEffect;\n  target.lastEffect = source.lastEffect;\n  target.expirationTime = source.expirationTime;\n  target.childExpirationTime = source.childExpirationTime;\n  target.alternate = source.alternate;\n  if (enableProfilerTimer) {\n    target.actualDuration = source.actualDuration;\n    target.actualStartTime = source.actualStartTime;\n    target.selfBaseDuration = source.selfBaseDuration;\n    target.treeBaseDuration = source.treeBaseDuration;\n  }\n  target._debugID = source._debugID;\n  target._debugSource = source._debugSource;\n  target._debugOwner = source._debugOwner;\n  target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;\n  target._debugHookTypes = source._debugHookTypes;\n  return target;\n}\n\n// TODO: This should be lifted into the renderer.\n\n\n// The following attributes are only used by interaction tracing builds.\n// They enable interactions to be associated with their async work,\n// And expose interaction metadata to the React DevTools Profiler plugin.\n// Note that these attributes are only defined when the enableSchedulerTracing flag is enabled.\n\n\n// Exported FiberRoot type includes all properties,\n// To avoid requiring potentially error-prone :any casts throughout the project.\n// Profiling properties are only safe to access in profiling builds (when enableSchedulerTracing is true).\n// The types are defined separately within this file to ensure they stay in sync.\n// (We don't have to use an inline :any cast when enableSchedulerTracing is disabled.)\n\n\nfunction createFiberRoot(containerInfo, isConcurrent, hydrate) {\n  // Cyclic construction. This cheats the type system right now because\n  // stateNode is any.\n  var uninitializedFiber = createHostRootFiber(isConcurrent);\n\n  var root = void 0;\n  if (enableSchedulerTracing) {\n    root = {\n      current: uninitializedFiber,\n      containerInfo: containerInfo,\n      pendingChildren: null,\n\n      earliestPendingTime: NoWork,\n      latestPendingTime: NoWork,\n      earliestSuspendedTime: NoWork,\n      latestSuspendedTime: NoWork,\n      latestPingedTime: NoWork,\n\n      pingCache: null,\n\n      didError: false,\n\n      pendingCommitExpirationTime: NoWork,\n      finishedWork: null,\n      timeoutHandle: noTimeout,\n      context: null,\n      pendingContext: null,\n      hydrate: hydrate,\n      nextExpirationTimeToWorkOn: NoWork,\n      expirationTime: NoWork,\n      firstBatch: null,\n      nextScheduledRoot: null,\n\n      interactionThreadID: tracing.unstable_getThreadID(),\n      memoizedInteractions: new Set(),\n      pendingInteractionMap: new Map()\n    };\n  } else {\n    root = {\n      current: uninitializedFiber,\n      containerInfo: containerInfo,\n      pendingChildren: null,\n\n      pingCache: null,\n\n      earliestPendingTime: NoWork,\n      latestPendingTime: NoWork,\n      earliestSuspendedTime: NoWork,\n      latestSuspendedTime: NoWork,\n      latestPingedTime: NoWork,\n\n      didError: false,\n\n      pendingCommitExpirationTime: NoWork,\n      finishedWork: null,\n      timeoutHandle: noTimeout,\n      context: null,\n      pendingContext: null,\n      hydrate: hydrate,\n      nextExpirationTimeToWorkOn: NoWork,\n      expirationTime: NoWork,\n      firstBatch: null,\n      nextScheduledRoot: null\n    };\n  }\n\n  uninitializedFiber.stateNode = root;\n\n  // The reason for the way the Flow types are structured in this file,\n  // Is to avoid needing :any casts everywhere interaction tracing fields are used.\n  // Unfortunately that requires an :any cast for non-interaction tracing capable builds.\n  // $FlowFixMe Remove this :any cast and replace it with something better.\n  return root;\n}\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar lowPriorityWarning = function () {};\n\n{\n  var printWarning = function (format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nvar lowPriorityWarning$1 = lowPriorityWarning;\n\nvar ReactStrictModeWarnings = {\n  discardPendingWarnings: function () {},\n  flushPendingDeprecationWarnings: function () {},\n  flushPendingUnsafeLifecycleWarnings: function () {},\n  recordDeprecationWarnings: function (fiber, instance) {},\n  recordUnsafeLifecycleWarnings: function (fiber, instance) {},\n  recordLegacyContextWarning: function (fiber, instance) {},\n  flushLegacyContextWarning: function () {}\n};\n\n{\n  var LIFECYCLE_SUGGESTIONS = {\n    UNSAFE_componentWillMount: 'componentDidMount',\n    UNSAFE_componentWillReceiveProps: 'static getDerivedStateFromProps',\n    UNSAFE_componentWillUpdate: 'componentDidUpdate'\n  };\n\n  var pendingComponentWillMountWarnings = [];\n  var pendingComponentWillReceivePropsWarnings = [];\n  var pendingComponentWillUpdateWarnings = [];\n  var pendingUnsafeLifecycleWarnings = new Map();\n  var pendingLegacyContextWarning = new Map();\n\n  // Tracks components we have already warned about.\n  var didWarnAboutDeprecatedLifecycles = new Set();\n  var didWarnAboutUnsafeLifecycles = new Set();\n  var didWarnAboutLegacyContext = new Set();\n\n  var setToSortedString = function (set) {\n    var array = [];\n    set.forEach(function (value) {\n      array.push(value);\n    });\n    return array.sort().join(', ');\n  };\n\n  ReactStrictModeWarnings.discardPendingWarnings = function () {\n    pendingComponentWillMountWarnings = [];\n    pendingComponentWillReceivePropsWarnings = [];\n    pendingComponentWillUpdateWarnings = [];\n    pendingUnsafeLifecycleWarnings = new Map();\n    pendingLegacyContextWarning = new Map();\n  };\n\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {\n    pendingUnsafeLifecycleWarnings.forEach(function (lifecycleWarningsMap, strictRoot) {\n      var lifecyclesWarningMessages = [];\n\n      Object.keys(lifecycleWarningsMap).forEach(function (lifecycle) {\n        var lifecycleWarnings = lifecycleWarningsMap[lifecycle];\n        if (lifecycleWarnings.length > 0) {\n          var componentNames = new Set();\n          lifecycleWarnings.forEach(function (fiber) {\n            componentNames.add(getComponentName(fiber.type) || 'Component');\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n\n          var formatted = lifecycle.replace('UNSAFE_', '');\n          var suggestion = LIFECYCLE_SUGGESTIONS[lifecycle];\n          var sortedComponentNames = setToSortedString(componentNames);\n\n          lifecyclesWarningMessages.push(formatted + ': Please update the following components to use ' + (suggestion + ' instead: ' + sortedComponentNames));\n        }\n      });\n\n      if (lifecyclesWarningMessages.length > 0) {\n        var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);\n\n        warningWithoutStack$1(false, 'Unsafe lifecycle methods were found within a strict-mode tree:%s' + '\\n\\n%s' + '\\n\\nLearn more about this warning here:' + '\\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, lifecyclesWarningMessages.join('\\n\\n'));\n      }\n    });\n\n    pendingUnsafeLifecycleWarnings = new Map();\n  };\n\n  var findStrictRoot = function (fiber) {\n    var maybeStrictRoot = null;\n\n    var node = fiber;\n    while (node !== null) {\n      if (node.mode & StrictMode) {\n        maybeStrictRoot = node;\n      }\n      node = node.return;\n    }\n\n    return maybeStrictRoot;\n  };\n\n  ReactStrictModeWarnings.flushPendingDeprecationWarnings = function () {\n    if (pendingComponentWillMountWarnings.length > 0) {\n      var uniqueNames = new Set();\n      pendingComponentWillMountWarnings.forEach(function (fiber) {\n        uniqueNames.add(getComponentName(fiber.type) || 'Component');\n        didWarnAboutDeprecatedLifecycles.add(fiber.type);\n      });\n\n      var sortedNames = setToSortedString(uniqueNames);\n\n      lowPriorityWarning$1(false, 'componentWillMount is deprecated and will be removed in the next major version. ' + 'Use componentDidMount instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillMount.' + '\\n\\nPlease update the following components: %s' + '\\n\\nLearn more about this warning here:' + '\\nhttps://fb.me/react-async-component-lifecycle-hooks', sortedNames);\n\n      pendingComponentWillMountWarnings = [];\n    }\n\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\n      var _uniqueNames = new Set();\n      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {\n        _uniqueNames.add(getComponentName(fiber.type) || 'Component');\n        didWarnAboutDeprecatedLifecycles.add(fiber.type);\n      });\n\n      var _sortedNames = setToSortedString(_uniqueNames);\n\n      lowPriorityWarning$1(false, 'componentWillReceiveProps is deprecated and will be removed in the next major version. ' + 'Use static getDerivedStateFromProps instead.' + '\\n\\nPlease update the following components: %s' + '\\n\\nLearn more about this warning here:' + '\\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames);\n\n      pendingComponentWillReceivePropsWarnings = [];\n    }\n\n    if (pendingComponentWillUpdateWarnings.length > 0) {\n      var _uniqueNames2 = new Set();\n      pendingComponentWillUpdateWarnings.forEach(function (fiber) {\n        _uniqueNames2.add(getComponentName(fiber.type) || 'Component');\n        didWarnAboutDeprecatedLifecycles.add(fiber.type);\n      });\n\n      var _sortedNames2 = setToSortedString(_uniqueNames2);\n\n      lowPriorityWarning$1(false, 'componentWillUpdate is deprecated and will be removed in the next major version. ' + 'Use componentDidUpdate instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillUpdate.' + '\\n\\nPlease update the following components: %s' + '\\n\\nLearn more about this warning here:' + '\\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames2);\n\n      pendingComponentWillUpdateWarnings = [];\n    }\n  };\n\n  ReactStrictModeWarnings.recordDeprecationWarnings = function (fiber, instance) {\n    // Dedup strategy: Warn once per component.\n    if (didWarnAboutDeprecatedLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    // Don't warn about react-lifecycles-compat polyfilled components.\n    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {\n      pendingComponentWillMountWarnings.push(fiber);\n    }\n    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n      pendingComponentWillReceivePropsWarnings.push(fiber);\n    }\n    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n      pendingComponentWillUpdateWarnings.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {\n    var strictRoot = findStrictRoot(fiber);\n    if (strictRoot === null) {\n      warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n      return;\n    }\n\n    // Dedup strategy: Warn once per component.\n    // This is difficult to track any other way since component names\n    // are often vague and are likely to collide between 3rd party libraries.\n    // An expand property is probably okay to use here since it's DEV-only,\n    // and will only be set in the event of serious warnings.\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    var warningsForRoot = void 0;\n    if (!pendingUnsafeLifecycleWarnings.has(strictRoot)) {\n      warningsForRoot = {\n        UNSAFE_componentWillMount: [],\n        UNSAFE_componentWillReceiveProps: [],\n        UNSAFE_componentWillUpdate: []\n      };\n\n      pendingUnsafeLifecycleWarnings.set(strictRoot, warningsForRoot);\n    } else {\n      warningsForRoot = pendingUnsafeLifecycleWarnings.get(strictRoot);\n    }\n\n    var unsafeLifecycles = [];\n    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillMount === 'function') {\n      unsafeLifecycles.push('UNSAFE_componentWillMount');\n    }\n    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n      unsafeLifecycles.push('UNSAFE_componentWillReceiveProps');\n    }\n    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillUpdate === 'function') {\n      unsafeLifecycles.push('UNSAFE_componentWillUpdate');\n    }\n\n    if (unsafeLifecycles.length > 0) {\n      unsafeLifecycles.forEach(function (lifecycle) {\n        warningsForRoot[lifecycle].push(fiber);\n      });\n    }\n  };\n\n  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {\n    var strictRoot = findStrictRoot(fiber);\n    if (strictRoot === null) {\n      warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n      return;\n    }\n\n    // Dedup strategy: Warn once per component.\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\n      return;\n    }\n\n    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {\n      if (warningsForRoot === undefined) {\n        warningsForRoot = [];\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n      }\n      warningsForRoot.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushLegacyContextWarning = function () {\n    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {\n      var uniqueNames = new Set();\n      fiberArray.forEach(function (fiber) {\n        uniqueNames.add(getComponentName(fiber.type) || 'Component');\n        didWarnAboutLegacyContext.add(fiber.type);\n      });\n\n      var sortedNames = setToSortedString(uniqueNames);\n      var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);\n\n      warningWithoutStack$1(false, 'Legacy context API has been detected within a strict-mode tree: %s' + '\\n\\nPlease update the following components: %s' + '\\n\\nLearn more about this warning here:' + '\\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, sortedNames);\n    });\n  };\n}\n\n// This lets us hook into Fiber to debug what it's doing.\n// See https://github.com/facebook/react/pull/8033.\n// This is not part of the public API, not even for React DevTools.\n// You may only inject a debugTool if you work on React Fiber itself.\nvar ReactFiberInstrumentation = {\n  debugTool: null\n};\n\nvar ReactFiberInstrumentation_1 = ReactFiberInstrumentation;\n\n// TODO: Offscreen updates should never suspend. However, a promise that\n// suspended inside an offscreen subtree should be able to ping at the priority\n// of the outer render.\n\nfunction markPendingPriorityLevel(root, expirationTime) {\n  // If there's a gap between completing a failed root and retrying it,\n  // additional updates may be scheduled. Clear `didError`, in case the update\n  // is sufficient to fix the error.\n  root.didError = false;\n\n  // Update the latest and earliest pending times\n  var earliestPendingTime = root.earliestPendingTime;\n  if (earliestPendingTime === NoWork) {\n    // No other pending updates.\n    root.earliestPendingTime = root.latestPendingTime = expirationTime;\n  } else {\n    if (earliestPendingTime < expirationTime) {\n      // This is the earliest pending update.\n      root.earliestPendingTime = expirationTime;\n    } else {\n      var latestPendingTime = root.latestPendingTime;\n      if (latestPendingTime > expirationTime) {\n        // This is the latest pending update\n        root.latestPendingTime = expirationTime;\n      }\n    }\n  }\n  findNextExpirationTimeToWorkOn(expirationTime, root);\n}\n\nfunction markCommittedPriorityLevels(root, earliestRemainingTime) {\n  root.didError = false;\n\n  if (earliestRemainingTime === NoWork) {\n    // Fast path. There's no remaining work. Clear everything.\n    root.earliestPendingTime = NoWork;\n    root.latestPendingTime = NoWork;\n    root.earliestSuspendedTime = NoWork;\n    root.latestSuspendedTime = NoWork;\n    root.latestPingedTime = NoWork;\n    findNextExpirationTimeToWorkOn(NoWork, root);\n    return;\n  }\n\n  if (earliestRemainingTime < root.latestPingedTime) {\n    root.latestPingedTime = NoWork;\n  }\n\n  // Let's see if the previous latest known pending level was just flushed.\n  var latestPendingTime = root.latestPendingTime;\n  if (latestPendingTime !== NoWork) {\n    if (latestPendingTime > earliestRemainingTime) {\n      // We've flushed all the known pending levels.\n      root.earliestPendingTime = root.latestPendingTime = NoWork;\n    } else {\n      var earliestPendingTime = root.earliestPendingTime;\n      if (earliestPendingTime > earliestRemainingTime) {\n        // We've flushed the earliest known pending level. Set this to the\n        // latest pending time.\n        root.earliestPendingTime = root.latestPendingTime;\n      }\n    }\n  }\n\n  // Now let's handle the earliest remaining level in the whole tree. We need to\n  // decide whether to treat it as a pending level or as suspended. Check\n  // it falls within the range of known suspended levels.\n\n  var earliestSuspendedTime = root.earliestSuspendedTime;\n  if (earliestSuspendedTime === NoWork) {\n    // There's no suspended work. Treat the earliest remaining level as a\n    // pending level.\n    markPendingPriorityLevel(root, earliestRemainingTime);\n    findNextExpirationTimeToWorkOn(NoWork, root);\n    return;\n  }\n\n  var latestSuspendedTime = root.latestSuspendedTime;\n  if (earliestRemainingTime < latestSuspendedTime) {\n    // The earliest remaining level is later than all the suspended work. That\n    // means we've flushed all the suspended work.\n    root.earliestSuspendedTime = NoWork;\n    root.latestSuspendedTime = NoWork;\n    root.latestPingedTime = NoWork;\n\n    // There's no suspended work. Treat the earliest remaining level as a\n    // pending level.\n    markPendingPriorityLevel(root, earliestRemainingTime);\n    findNextExpirationTimeToWorkOn(NoWork, root);\n    return;\n  }\n\n  if (earliestRemainingTime > earliestSuspendedTime) {\n    // The earliest remaining time is earlier than all the suspended work.\n    // Treat it as a pending update.\n    markPendingPriorityLevel(root, earliestRemainingTime);\n    findNextExpirationTimeToWorkOn(NoWork, root);\n    return;\n  }\n\n  // The earliest remaining time falls within the range of known suspended\n  // levels. We should treat this as suspended work.\n  findNextExpirationTimeToWorkOn(NoWork, root);\n}\n\nfunction hasLowerPriorityWork(root, erroredExpirationTime) {\n  var latestPendingTime = root.latestPendingTime;\n  var latestSuspendedTime = root.latestSuspendedTime;\n  var latestPingedTime = root.latestPingedTime;\n  return latestPendingTime !== NoWork && latestPendingTime < erroredExpirationTime || latestSuspendedTime !== NoWork && latestSuspendedTime < erroredExpirationTime || latestPingedTime !== NoWork && latestPingedTime < erroredExpirationTime;\n}\n\nfunction isPriorityLevelSuspended(root, expirationTime) {\n  var earliestSuspendedTime = root.earliestSuspendedTime;\n  var latestSuspendedTime = root.latestSuspendedTime;\n  return earliestSuspendedTime !== NoWork && expirationTime <= earliestSuspendedTime && expirationTime >= latestSuspendedTime;\n}\n\nfunction markSuspendedPriorityLevel(root, suspendedTime) {\n  root.didError = false;\n  clearPing(root, suspendedTime);\n\n  // First, check the known pending levels and update them if needed.\n  var earliestPendingTime = root.earliestPendingTime;\n  var latestPendingTime = root.latestPendingTime;\n  if (earliestPendingTime === suspendedTime) {\n    if (latestPendingTime === suspendedTime) {\n      // Both known pending levels were suspended. Clear them.\n      root.earliestPendingTime = root.latestPendingTime = NoWork;\n    } else {\n      // The earliest pending level was suspended. Clear by setting it to the\n      // latest pending level.\n      root.earliestPendingTime = latestPendingTime;\n    }\n  } else if (latestPendingTime === suspendedTime) {\n    // The latest pending level was suspended. Clear by setting it to the\n    // latest pending level.\n    root.latestPendingTime = earliestPendingTime;\n  }\n\n  // Finally, update the known suspended levels.\n  var earliestSuspendedTime = root.earliestSuspendedTime;\n  var latestSuspendedTime = root.latestSuspendedTime;\n  if (earliestSuspendedTime === NoWork) {\n    // No other suspended levels.\n    root.earliestSuspendedTime = root.latestSuspendedTime = suspendedTime;\n  } else {\n    if (earliestSuspendedTime < suspendedTime) {\n      // This is the earliest suspended level.\n      root.earliestSuspendedTime = suspendedTime;\n    } else if (latestSuspendedTime > suspendedTime) {\n      // This is the latest suspended level\n      root.latestSuspendedTime = suspendedTime;\n    }\n  }\n\n  findNextExpirationTimeToWorkOn(suspendedTime, root);\n}\n\nfunction markPingedPriorityLevel(root, pingedTime) {\n  root.didError = false;\n\n  // TODO: When we add back resuming, we need to ensure the progressed work\n  // is thrown out and not reused during the restarted render. One way to\n  // invalidate the progressed work is to restart at expirationTime + 1.\n  var latestPingedTime = root.latestPingedTime;\n  if (latestPingedTime === NoWork || latestPingedTime > pingedTime) {\n    root.latestPingedTime = pingedTime;\n  }\n  findNextExpirationTimeToWorkOn(pingedTime, root);\n}\n\nfunction clearPing(root, completedTime) {\n  var latestPingedTime = root.latestPingedTime;\n  if (latestPingedTime >= completedTime) {\n    root.latestPingedTime = NoWork;\n  }\n}\n\nfunction findEarliestOutstandingPriorityLevel(root, renderExpirationTime) {\n  var earliestExpirationTime = renderExpirationTime;\n\n  var earliestPendingTime = root.earliestPendingTime;\n  var earliestSuspendedTime = root.earliestSuspendedTime;\n  if (earliestPendingTime > earliestExpirationTime) {\n    earliestExpirationTime = earliestPendingTime;\n  }\n  if (earliestSuspendedTime > earliestExpirationTime) {\n    earliestExpirationTime = earliestSuspendedTime;\n  }\n  return earliestExpirationTime;\n}\n\nfunction didExpireAtExpirationTime(root, currentTime) {\n  var expirationTime = root.expirationTime;\n  if (expirationTime !== NoWork && currentTime <= expirationTime) {\n    // The root has expired. Flush all work up to the current time.\n    root.nextExpirationTimeToWorkOn = currentTime;\n  }\n}\n\nfunction findNextExpirationTimeToWorkOn(completedExpirationTime, root) {\n  var earliestSuspendedTime = root.earliestSuspendedTime;\n  var latestSuspendedTime = root.latestSuspendedTime;\n  var earliestPendingTime = root.earliestPendingTime;\n  var latestPingedTime = root.latestPingedTime;\n\n  // Work on the earliest pending time. Failing that, work on the latest\n  // pinged time.\n  var nextExpirationTimeToWorkOn = earliestPendingTime !== NoWork ? earliestPendingTime : latestPingedTime;\n\n  // If there is no pending or pinged work, check if there's suspended work\n  // that's lower priority than what we just completed.\n  if (nextExpirationTimeToWorkOn === NoWork && (completedExpirationTime === NoWork || latestSuspendedTime < completedExpirationTime)) {\n    // The lowest priority suspended work is the work most likely to be\n    // committed next. Let's start rendering it again, so that if it times out,\n    // it's ready to commit.\n    nextExpirationTimeToWorkOn = latestSuspendedTime;\n  }\n\n  var expirationTime = nextExpirationTimeToWorkOn;\n  if (expirationTime !== NoWork && earliestSuspendedTime > expirationTime) {\n    // Expire using the earliest known expiration time.\n    expirationTime = earliestSuspendedTime;\n  }\n\n  root.nextExpirationTimeToWorkOn = nextExpirationTimeToWorkOn;\n  root.expirationTime = expirationTime;\n}\n\nfunction resolveDefaultProps(Component, baseProps) {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    var props = _assign({}, baseProps);\n    var defaultProps = Component.defaultProps;\n    for (var propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n    return props;\n  }\n  return baseProps;\n}\n\nfunction readLazyComponentType(lazyComponent) {\n  var status = lazyComponent._status;\n  var result = lazyComponent._result;\n  switch (status) {\n    case Resolved:\n      {\n        var Component = result;\n        return Component;\n      }\n    case Rejected:\n      {\n        var error = result;\n        throw error;\n      }\n    case Pending:\n      {\n        var thenable = result;\n        throw thenable;\n      }\n    default:\n      {\n        lazyComponent._status = Pending;\n        var ctor = lazyComponent._ctor;\n        var _thenable = ctor();\n        _thenable.then(function (moduleObject) {\n          if (lazyComponent._status === Pending) {\n            var defaultExport = moduleObject.default;\n            {\n              if (defaultExport === undefined) {\n                warning$1(false, 'lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + \"const MyComponent = lazy(() => import('./MyComponent'))\", moduleObject);\n              }\n            }\n            lazyComponent._status = Resolved;\n            lazyComponent._result = defaultExport;\n          }\n        }, function (error) {\n          if (lazyComponent._status === Pending) {\n            lazyComponent._status = Rejected;\n            lazyComponent._result = error;\n          }\n        });\n        // Handle synchronous thenables.\n        switch (lazyComponent._status) {\n          case Resolved:\n            return lazyComponent._result;\n          case Rejected:\n            throw lazyComponent._result;\n        }\n        lazyComponent._result = _thenable;\n        throw _thenable;\n      }\n  }\n}\n\nvar fakeInternalInstance = {};\nvar isArray$1 = Array.isArray;\n\n// React.Component uses a shared frozen object by default.\n// We'll use it to determine whether we need to initialize legacy refs.\nvar emptyRefsObject = new React.Component().refs;\n\nvar didWarnAboutStateAssignmentForComponent = void 0;\nvar didWarnAboutUninitializedState = void 0;\nvar didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = void 0;\nvar didWarnAboutLegacyLifecyclesAndDerivedState = void 0;\nvar didWarnAboutUndefinedDerivedState = void 0;\nvar warnOnUndefinedDerivedState = void 0;\nvar warnOnInvalidCallback$1 = void 0;\nvar didWarnAboutDirectlyAssigningPropsToState = void 0;\nvar didWarnAboutContextTypeAndContextTypes = void 0;\nvar didWarnAboutInvalidateContextType = void 0;\n\n{\n  didWarnAboutStateAssignmentForComponent = new Set();\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n\n  var didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback$1 = function (callback, callerName) {\n    if (callback === null || typeof callback === 'function') {\n      return;\n    }\n    var key = callerName + '_' + callback;\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n      warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);\n    }\n  };\n\n  warnOnUndefinedDerivedState = function (type, partialState) {\n    if (partialState === undefined) {\n      var componentName = getComponentName(type) || 'Component';\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n        warningWithoutStack$1(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);\n      }\n    }\n  };\n\n  // This is so gross but it's at least non-critical and can be removed if\n  // it causes problems. This is meant to give a nicer error message for\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\n  // exception.\n  Object.defineProperty(fakeInternalInstance, '_processChildContext', {\n    enumerable: false,\n    value: function () {\n      invariant(false, '_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn\\'t supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).');\n    }\n  });\n  Object.freeze(fakeInternalInstance);\n}\n\nfunction applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {\n  var prevState = workInProgress.memoizedState;\n\n  {\n    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\n      // Invoke the function an extra time to help detect side-effects.\n      getDerivedStateFromProps(nextProps, prevState);\n    }\n  }\n\n  var partialState = getDerivedStateFromProps(nextProps, prevState);\n\n  {\n    warnOnUndefinedDerivedState(ctor, partialState);\n  }\n  // Merge the partial state and the previous state.\n  var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);\n  workInProgress.memoizedState = memoizedState;\n\n  // Once the update queue is empty, persist the derived state onto the\n  // base state.\n  var updateQueue = workInProgress.updateQueue;\n  if (updateQueue !== null && workInProgress.expirationTime === NoWork) {\n    updateQueue.baseState = memoizedState;\n  }\n}\n\nvar classComponentUpdater = {\n  isMounted: isMounted,\n  enqueueSetState: function (inst, payload, callback) {\n    var fiber = get(inst);\n    var currentTime = requestCurrentTime();\n    var expirationTime = computeExpirationForFiber(currentTime, fiber);\n\n    var update = createUpdate(expirationTime);\n    update.payload = payload;\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback$1(callback, 'setState');\n      }\n      update.callback = callback;\n    }\n\n    flushPassiveEffects();\n    enqueueUpdate(fiber, update);\n    scheduleWork(fiber, expirationTime);\n  },\n  enqueueReplaceState: function (inst, payload, callback) {\n    var fiber = get(inst);\n    var currentTime = requestCurrentTime();\n    var expirationTime = computeExpirationForFiber(currentTime, fiber);\n\n    var update = createUpdate(expirationTime);\n    update.tag = ReplaceState;\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback$1(callback, 'replaceState');\n      }\n      update.callback = callback;\n    }\n\n    flushPassiveEffects();\n    enqueueUpdate(fiber, update);\n    scheduleWork(fiber, expirationTime);\n  },\n  enqueueForceUpdate: function (inst, callback) {\n    var fiber = get(inst);\n    var currentTime = requestCurrentTime();\n    var expirationTime = computeExpirationForFiber(currentTime, fiber);\n\n    var update = createUpdate(expirationTime);\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback$1(callback, 'forceUpdate');\n      }\n      update.callback = callback;\n    }\n\n    flushPassiveEffects();\n    enqueueUpdate(fiber, update);\n    scheduleWork(fiber, expirationTime);\n  }\n};\n\nfunction checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {\n  var instance = workInProgress.stateNode;\n  if (typeof instance.shouldComponentUpdate === 'function') {\n    startPhaseTimer(workInProgress, 'shouldComponentUpdate');\n    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);\n    stopPhaseTimer();\n\n    {\n      !(shouldUpdate !== undefined) ? warningWithoutStack$1(false, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(ctor) || 'Component') : void 0;\n    }\n\n    return shouldUpdate;\n  }\n\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);\n  }\n\n  return true;\n}\n\nfunction checkClassInstance(workInProgress, ctor, newProps) {\n  var instance = workInProgress.stateNode;\n  {\n    var name = getComponentName(ctor) || 'Component';\n    var renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\n        warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);\n      } else {\n        warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);\n      }\n    }\n\n    var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;\n    !noGetInitialStateOnES6 ? warningWithoutStack$1(false, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name) : void 0;\n    var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;\n    !noGetDefaultPropsOnES6 ? warningWithoutStack$1(false, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name) : void 0;\n    var noInstancePropTypes = !instance.propTypes;\n    !noInstancePropTypes ? warningWithoutStack$1(false, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name) : void 0;\n    var noInstanceContextType = !instance.contextType;\n    !noInstanceContextType ? warningWithoutStack$1(false, 'contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name) : void 0;\n    var noInstanceContextTypes = !instance.contextTypes;\n    !noInstanceContextTypes ? warningWithoutStack$1(false, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name) : void 0;\n\n    if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {\n      didWarnAboutContextTypeAndContextTypes.add(ctor);\n      warningWithoutStack$1(false, '%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);\n    }\n\n    var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';\n    !noComponentShouldUpdate ? warningWithoutStack$1(false, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name) : void 0;\n    if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {\n      warningWithoutStack$1(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(ctor) || 'A pure component');\n    }\n    var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';\n    !noComponentDidUnmount ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name) : void 0;\n    var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';\n    !noComponentDidReceiveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name) : void 0;\n    var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';\n    !noComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name) : void 0;\n    var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== 'function';\n    !noUnsafeComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name) : void 0;\n    var hasMutatedProps = instance.props !== newProps;\n    !(instance.props === undefined || !hasMutatedProps) ? warningWithoutStack$1(false, '%s(...): When calling super() in `%s`, make sure to pass ' + \"up the same props that your component's constructor was passed.\", name, name) : void 0;\n    var noInstanceDefaultProps = !instance.defaultProps;\n    !noInstanceDefaultProps ? warningWithoutStack$1(false, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name) : void 0;\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n      warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(ctor));\n    }\n\n    var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== 'function';\n    !noInstanceGetDerivedStateFromProps ? warningWithoutStack$1(false, '%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;\n    var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromError !== 'function';\n    !noInstanceGetDerivedStateFromCatch ? warningWithoutStack$1(false, '%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;\n    var noStaticGetSnapshotBeforeUpdate = typeof ctor.getSnapshotBeforeUpdate !== 'function';\n    !noStaticGetSnapshotBeforeUpdate ? warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name) : void 0;\n    var _state = instance.state;\n    if (_state && (typeof _state !== 'object' || isArray$1(_state))) {\n      warningWithoutStack$1(false, '%s.state: must be set to an object or null', name);\n    }\n    if (typeof instance.getChildContext === 'function') {\n      !(typeof ctor.childContextTypes === 'object') ? warningWithoutStack$1(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name) : void 0;\n    }\n  }\n}\n\nfunction adoptClassInstance(workInProgress, instance) {\n  instance.updater = classComponentUpdater;\n  workInProgress.stateNode = instance;\n  // The instance needs access to the fiber so that it can schedule updates\n  set(instance, workInProgress);\n  {\n    instance._reactInternalInstance = fakeInternalInstance;\n  }\n}\n\nfunction constructClassInstance(workInProgress, ctor, props, renderExpirationTime) {\n  var isLegacyContextConsumer = false;\n  var unmaskedContext = emptyContextObject;\n  var context = null;\n  var contextType = ctor.contextType;\n\n  {\n    if ('contextType' in ctor) {\n      var isValid =\n      // Allow null for conditional declaration\n      contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n\n        var addendum = '';\n        if (contextType === undefined) {\n          addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';\n        } else if (typeof contextType !== 'object') {\n          addendum = ' However, it is set to a ' + typeof contextType + '.';\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = ' Did you accidentally pass the Context.Provider instead?';\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = ' Did you accidentally pass the Context.Consumer instead?';\n        } else {\n          addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';\n        }\n        warningWithoutStack$1(false, '%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentName(ctor) || 'Component', addendum);\n      }\n    }\n  }\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    context = readContext(contextType);\n  } else {\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    var contextTypes = ctor.contextTypes;\n    isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;\n    context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;\n  }\n\n  // Instantiate twice to help detect side-effects.\n  {\n    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\n      new ctor(props, context); // eslint-disable-line no-new\n    }\n  }\n\n  var instance = new ctor(props, context);\n  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;\n  adoptClassInstance(workInProgress, instance);\n\n  {\n    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {\n      var componentName = getComponentName(ctor) || 'Component';\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n        warningWithoutStack$1(false, '`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);\n      }\n    }\n\n    // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {\n      var foundWillMountName = null;\n      var foundWillReceivePropsName = null;\n      var foundWillUpdateName = null;\n      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {\n        foundWillMountName = 'componentWillMount';\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        foundWillMountName = 'UNSAFE_componentWillMount';\n      }\n      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n        foundWillReceivePropsName = 'componentWillReceiveProps';\n      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n      }\n      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n        foundWillUpdateName = 'componentWillUpdate';\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n      }\n      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n        var _componentName = getComponentName(ctor) || 'Component';\n        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);\n          warningWithoutStack$1(false, 'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' + 'The above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://fb.me/react-async-component-lifecycle-hooks', _componentName, newApiName, foundWillMountName !== null ? '\\n  ' + foundWillMountName : '', foundWillReceivePropsName !== null ? '\\n  ' + foundWillReceivePropsName : '', foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '');\n        }\n      }\n    }\n  }\n\n  // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\n  if (isLegacyContextConsumer) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return instance;\n}\n\nfunction callComponentWillMount(workInProgress, instance) {\n  startPhaseTimer(workInProgress, 'componentWillMount');\n  var oldState = instance.state;\n\n  if (typeof instance.componentWillMount === 'function') {\n    instance.componentWillMount();\n  }\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  stopPhaseTimer();\n\n  if (oldState !== instance.state) {\n    {\n      warningWithoutStack$1(false, '%s.componentWillMount(): Assigning directly to this.state is ' + \"deprecated (except inside a component's \" + 'constructor). Use setState instead.', getComponentName(workInProgress.type) || 'Component');\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {\n  var oldState = instance.state;\n  startPhaseTimer(workInProgress, 'componentWillReceiveProps');\n  if (typeof instance.componentWillReceiveProps === 'function') {\n    instance.componentWillReceiveProps(newProps, nextContext);\n  }\n  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  }\n  stopPhaseTimer();\n\n  if (instance.state !== oldState) {\n    {\n      var componentName = getComponentName(workInProgress.type) || 'Component';\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n        didWarnAboutStateAssignmentForComponent.add(componentName);\n        warningWithoutStack$1(false, '%s.componentWillReceiveProps(): Assigning directly to ' + \"this.state is deprecated (except inside a component's \" + 'constructor). Use setState instead.', componentName);\n      }\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\n// Invokes the mount life-cycles on a previously never rendered instance.\nfunction mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {\n  {\n    checkClassInstance(workInProgress, ctor, newProps);\n  }\n\n  var instance = workInProgress.stateNode;\n  instance.props = newProps;\n  instance.state = workInProgress.memoizedState;\n  instance.refs = emptyRefsObject;\n\n  var contextType = ctor.contextType;\n  if (typeof contextType === 'object' && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else {\n    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  {\n    if (instance.state === newProps) {\n      var componentName = getComponentName(ctor) || 'Component';\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n        warningWithoutStack$1(false, '%s: It is not recommended to assign props directly to state ' + \"because updates to props won't be reflected in state. \" + 'In most cases, it is better to use props directly.', componentName);\n      }\n    }\n\n    if (workInProgress.mode & StrictMode) {\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);\n\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);\n    }\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.recordDeprecationWarnings(workInProgress, instance);\n    }\n  }\n\n  var updateQueue = workInProgress.updateQueue;\n  if (updateQueue !== null) {\n    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);\n    instance.state = workInProgress.memoizedState;\n  }\n\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n    instance.state = workInProgress.memoizedState;\n  }\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\n    callComponentWillMount(workInProgress, instance);\n    // If we had additional state updates during this life-cycle, let's\n    // process them now.\n    updateQueue = workInProgress.updateQueue;\n    if (updateQueue !== null) {\n      processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);\n      instance.state = workInProgress.memoizedState;\n    }\n  }\n\n  if (typeof instance.componentDidMount === 'function') {\n    workInProgress.effectTag |= Update;\n  }\n}\n\nfunction resumeMountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {\n  var instance = workInProgress.stateNode;\n\n  var oldProps = workInProgress.memoizedProps;\n  instance.props = oldProps;\n\n  var oldContext = instance.context;\n  var contextType = ctor.contextType;\n  var nextContext = void 0;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n  }\n\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  var oldState = workInProgress.memoizedState;\n  var newState = instance.state = oldState;\n  var updateQueue = workInProgress.updateQueue;\n  if (updateQueue !== null) {\n    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);\n    newState = workInProgress.memoizedState;\n  }\n  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.effectTag |= Update;\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n    newState = workInProgress.memoizedState;\n  }\n\n  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\n      startPhaseTimer(workInProgress, 'componentWillMount');\n      if (typeof instance.componentWillMount === 'function') {\n        instance.componentWillMount();\n      }\n      if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        instance.UNSAFE_componentWillMount();\n      }\n      stopPhaseTimer();\n    }\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.effectTag |= Update;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.effectTag |= Update;\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\n// Invokes the update life-cycles and returns false if it shouldn't rerender.\nfunction updateClassInstance(current, workInProgress, ctor, newProps, renderExpirationTime) {\n  var instance = workInProgress.stateNode;\n\n  var oldProps = workInProgress.memoizedProps;\n  instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps);\n\n  var oldContext = instance.context;\n  var contextType = ctor.contextType;\n  var nextContext = void 0;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n  }\n\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  var oldState = workInProgress.memoizedState;\n  var newState = instance.state = oldState;\n  var updateQueue = workInProgress.updateQueue;\n  if (updateQueue !== null) {\n    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);\n    newState = workInProgress.memoizedState;\n  }\n\n  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.effectTag |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.effectTag |= Snapshot;\n      }\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n    newState = workInProgress.memoizedState;\n  }\n\n  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {\n      startPhaseTimer(workInProgress, 'componentWillUpdate');\n      if (typeof instance.componentWillUpdate === 'function') {\n        instance.componentWillUpdate(newProps, newState, nextContext);\n      }\n      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n      }\n      stopPhaseTimer();\n    }\n    if (typeof instance.componentDidUpdate === 'function') {\n      workInProgress.effectTag |= Update;\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      workInProgress.effectTag |= Snapshot;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.effectTag |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.effectTag |= Snapshot;\n      }\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized props/state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\nvar didWarnAboutMaps = void 0;\nvar didWarnAboutGenerators = void 0;\nvar didWarnAboutStringRefInStrictMode = void 0;\nvar ownerHasKeyUseWarning = void 0;\nvar ownerHasFunctionTypeWarning = void 0;\nvar warnForMissingKey = function (child) {};\n\n{\n  didWarnAboutMaps = false;\n  didWarnAboutGenerators = false;\n  didWarnAboutStringRefInStrictMode = {};\n\n  /**\n   * Warn if there's no key explicitly set on dynamic arrays of children or\n   * object keys are not valid. This allows us to keep track of children between\n   * updates.\n   */\n  ownerHasKeyUseWarning = {};\n  ownerHasFunctionTypeWarning = {};\n\n  warnForMissingKey = function (child) {\n    if (child === null || typeof child !== 'object') {\n      return;\n    }\n    if (!child._store || child._store.validated || child.key != null) {\n      return;\n    }\n    !(typeof child._store === 'object') ? invariant(false, 'React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n    child._store.validated = true;\n\n    var currentComponentErrorInfo = 'Each child in a list should have a unique ' + '\"key\" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + getCurrentFiberStackInDev();\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n    warning$1(false, 'Each child in a list should have a unique ' + '\"key\" prop. See https://fb.me/react-warning-keys for ' + 'more information.');\n  };\n}\n\nvar isArray = Array.isArray;\n\nfunction coerceRef(returnFiber, current$$1, element) {\n  var mixedRef = element.ref;\n  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {\n    {\n      if (returnFiber.mode & StrictMode) {\n        var componentName = getComponentName(returnFiber.type) || 'Component';\n        if (!didWarnAboutStringRefInStrictMode[componentName]) {\n          warningWithoutStack$1(false, 'A string ref, \"%s\", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using createRef() instead.' + '\\n%s' + '\\n\\nLearn more about using refs safely here:' + '\\nhttps://fb.me/react-strict-mode-string-ref', mixedRef, getStackByFiberInDevAndProd(returnFiber));\n          didWarnAboutStringRefInStrictMode[componentName] = true;\n        }\n      }\n    }\n\n    if (element._owner) {\n      var owner = element._owner;\n      var inst = void 0;\n      if (owner) {\n        var ownerFiber = owner;\n        !(ownerFiber.tag === ClassComponent) ? invariant(false, 'Function components cannot have refs. Did you mean to use React.forwardRef()?') : void 0;\n        inst = ownerFiber.stateNode;\n      }\n      !inst ? invariant(false, 'Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.', mixedRef) : void 0;\n      var stringRef = '' + mixedRef;\n      // Check if previous string ref matches new string ref\n      if (current$$1 !== null && current$$1.ref !== null && typeof current$$1.ref === 'function' && current$$1.ref._stringRef === stringRef) {\n        return current$$1.ref;\n      }\n      var ref = function (value) {\n        var refs = inst.refs;\n        if (refs === emptyRefsObject) {\n          // This is a lazy pooled frozen object, so we need to initialize.\n          refs = inst.refs = {};\n        }\n        if (value === null) {\n          delete refs[stringRef];\n        } else {\n          refs[stringRef] = value;\n        }\n      };\n      ref._stringRef = stringRef;\n      return ref;\n    } else {\n      !(typeof mixedRef === 'string') ? invariant(false, 'Expected ref to be a function, a string, an object returned by React.createRef(), or null.') : void 0;\n      !element._owner ? invariant(false, 'Element ref was specified as a string (%s) but no owner was set. This could happen for one of the following reasons:\\n1. You may be adding a ref to a function component\\n2. You may be adding a ref to a component that was not created inside a component\\'s render method\\n3. You have multiple copies of React loaded\\nSee https://fb.me/react-refs-must-have-owner for more information.', mixedRef) : void 0;\n    }\n  }\n  return mixedRef;\n}\n\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\n  if (returnFiber.type !== 'textarea') {\n    var addendum = '';\n    {\n      addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + getCurrentFiberStackInDev();\n    }\n    invariant(false, 'Objects are not valid as a React child (found: %s).%s', Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild, addendum);\n  }\n}\n\nfunction warnOnFunctionType() {\n  var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + getCurrentFiberStackInDev();\n\n  if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {\n    return;\n  }\n  ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;\n\n  warning$1(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');\n}\n\n// This wrapper function exists because I expect to clone the code in each path\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\nfunction ChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber, childToDelete) {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return;\n    }\n    // Deletions are added in reversed order so we add it to the front.\n    // At this point, the return fiber's effect list is empty except for\n    // deletions, so we can just append the deletion to the list. The remaining\n    // effects aren't added until the complete phase. Once we implement\n    // resuming, this may not be true.\n    var last = returnFiber.lastEffect;\n    if (last !== null) {\n      last.nextEffect = childToDelete;\n      returnFiber.lastEffect = childToDelete;\n    } else {\n      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\n    }\n    childToDelete.nextEffect = null;\n    childToDelete.effectTag = Deletion;\n  }\n\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return null;\n    }\n\n    // TODO: For the shouldClone case, this could be micro-optimized a bit by\n    // assuming that after the first child we've already added everything.\n    var childToDelete = currentFirstChild;\n    while (childToDelete !== null) {\n      deleteChild(returnFiber, childToDelete);\n      childToDelete = childToDelete.sibling;\n    }\n    return null;\n  }\n\n  function mapRemainingChildren(returnFiber, currentFirstChild) {\n    // Add the remaining children to a temporary map so that we can find them by\n    // keys quickly. Implicit (null) keys get added to this set with their index\n    var existingChildren = new Map();\n\n    var existingChild = currentFirstChild;\n    while (existingChild !== null) {\n      if (existingChild.key !== null) {\n        existingChildren.set(existingChild.key, existingChild);\n      } else {\n        existingChildren.set(existingChild.index, existingChild);\n      }\n      existingChild = existingChild.sibling;\n    }\n    return existingChildren;\n  }\n\n  function useFiber(fiber, pendingProps, expirationTime) {\n    // We currently set sibling to null and index to 0 here because it is easy\n    // to forget to do before returning it. E.g. for the single child case.\n    var clone = createWorkInProgress(fiber, pendingProps, expirationTime);\n    clone.index = 0;\n    clone.sibling = null;\n    return clone;\n  }\n\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return lastPlacedIndex;\n    }\n    var current$$1 = newFiber.alternate;\n    if (current$$1 !== null) {\n      var oldIndex = current$$1.index;\n      if (oldIndex < lastPlacedIndex) {\n        // This is a move.\n        newFiber.effectTag = Placement;\n        return lastPlacedIndex;\n      } else {\n        // This item can stay in place.\n        return oldIndex;\n      }\n    } else {\n      // This is an insertion.\n      newFiber.effectTag = Placement;\n      return lastPlacedIndex;\n    }\n  }\n\n  function placeSingleChild(newFiber) {\n    // This is simpler for the single child case. We only need to do a\n    // placement for inserting new children.\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\n      newFiber.effectTag = Placement;\n    }\n    return newFiber;\n  }\n\n  function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {\n    if (current$$1 === null || current$$1.tag !== HostText) {\n      // Insert\n      var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current$$1, textContent, expirationTime);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateElement(returnFiber, current$$1, element, expirationTime) {\n    if (current$$1 !== null && current$$1.elementType === element.type) {\n      // Move based on index\n      var existing = useFiber(current$$1, element.props, expirationTime);\n      existing.ref = coerceRef(returnFiber, current$$1, element);\n      existing.return = returnFiber;\n      {\n        existing._debugSource = element._source;\n        existing._debugOwner = element._owner;\n      }\n      return existing;\n    } else {\n      // Insert\n      var created = createFiberFromElement(element, returnFiber.mode, expirationTime);\n      created.ref = coerceRef(returnFiber, current$$1, element);\n      created.return = returnFiber;\n      return created;\n    }\n  }\n\n  function updatePortal(returnFiber, current$$1, portal, expirationTime) {\n    if (current$$1 === null || current$$1.tag !== HostPortal || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) {\n      // Insert\n      var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current$$1, portal.children || [], expirationTime);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {\n    if (current$$1 === null || current$$1.tag !== Fragment) {\n      // Insert\n      var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current$$1, fragment, expirationTime);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function createChild(returnFiber, newChild, expirationTime) {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      var created = createFiberFromText('' + newChild, returnFiber.mode, expirationTime);\n      created.return = returnFiber;\n      return created;\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          {\n            var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);\n            _created.ref = coerceRef(returnFiber, null, newChild);\n            _created.return = returnFiber;\n            return _created;\n          }\n        case REACT_PORTAL_TYPE:\n          {\n            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);\n            _created2.return = returnFiber;\n            return _created2;\n          }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);\n        _created3.return = returnFiber;\n        return _created3;\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType();\n      }\n    }\n\n    return null;\n  }\n\n  function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {\n    // Update the fiber if the keys match, otherwise return null.\n\n    var key = oldFiber !== null ? oldFiber.key : null;\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      if (key !== null) {\n        return null;\n      }\n      return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          {\n            if (newChild.key === key) {\n              if (newChild.type === REACT_FRAGMENT_TYPE) {\n                return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);\n              }\n              return updateElement(returnFiber, oldFiber, newChild, expirationTime);\n            } else {\n              return null;\n            }\n          }\n        case REACT_PORTAL_TYPE:\n          {\n            if (newChild.key === key) {\n              return updatePortal(returnFiber, oldFiber, newChild, expirationTime);\n            } else {\n              return null;\n            }\n          }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        if (key !== null) {\n          return null;\n        }\n\n        return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType();\n      }\n    }\n\n    return null;\n  }\n\n  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys, so we neither have to check the old nor\n      // new node for the key. If both are text nodes, they match.\n      var matchedFiber = existingChildren.get(newIdx) || null;\n      return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          {\n            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n            if (newChild.type === REACT_FRAGMENT_TYPE) {\n              return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);\n            }\n            return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);\n          }\n        case REACT_PORTAL_TYPE:\n          {\n            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n            return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);\n          }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        var _matchedFiber3 = existingChildren.get(newIdx) || null;\n        return updateFragment(returnFiber, _matchedFiber3, newChild, expirationTime, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType();\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Warns if there is a duplicate or missing key\n   */\n  function warnOnInvalidKey(child, knownKeys) {\n    {\n      if (typeof child !== 'object' || child === null) {\n        return knownKeys;\n      }\n      switch (child.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n        case REACT_PORTAL_TYPE:\n          warnForMissingKey(child);\n          var key = child.key;\n          if (typeof key !== 'string') {\n            break;\n          }\n          if (knownKeys === null) {\n            knownKeys = new Set();\n            knownKeys.add(key);\n            break;\n          }\n          if (!knownKeys.has(key)) {\n            knownKeys.add(key);\n            break;\n          }\n          warning$1(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);\n          break;\n        default:\n          break;\n      }\n    }\n    return knownKeys;\n  }\n\n  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {\n    // This algorithm can't optimize by searching from both ends since we\n    // don't have backpointers on fibers. I'm trying to see how far we can get\n    // with that model. If it ends up not being worth the tradeoffs, we can\n    // add it later.\n\n    // Even with a two ended optimization, we'd want to optimize for the case\n    // where there are few changes and brute force the comparison instead of\n    // going for the Map. It'd like to explore hitting that path first in\n    // forward-only mode and only go for the Map once we notice that we need\n    // lots of look ahead. This doesn't handle reversal as well as two ended\n    // search but that's unusual. Besides, for the two ended optimization to\n    // work on Iterables, we'd need to copy the whole set.\n\n    // In this first iteration, we'll just live with hitting the bad case\n    // (adding everything to a Map) in for every insert/move.\n\n    // If you change this code, also update reconcileChildrenIterator() which\n    // uses the same algorithm.\n\n    {\n      // First, validate keys.\n      var knownKeys = null;\n      for (var i = 0; i < newChildren.length; i++) {\n        var child = newChildren[i];\n        knownKeys = warnOnInvalidKey(child, knownKeys);\n      }\n    }\n\n    var resultingFirstChild = null;\n    var previousNewFiber = null;\n\n    var oldFiber = currentFirstChild;\n    var lastPlacedIndex = 0;\n    var newIdx = 0;\n    var nextOldFiber = null;\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (newIdx === newChildren.length) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; newIdx < newChildren.length; newIdx++) {\n        var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);\n        if (!_newFiber) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = _newFiber;\n        } else {\n          previousNewFiber.sibling = _newFiber;\n        }\n        previousNewFiber = _newFiber;\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; newIdx < newChildren.length; newIdx++) {\n      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);\n      if (_newFiber2) {\n        if (shouldTrackSideEffects) {\n          if (_newFiber2.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);\n          }\n        }\n        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = _newFiber2;\n        } else {\n          previousNewFiber.sibling = _newFiber2;\n        }\n        previousNewFiber = _newFiber2;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {\n    // This is the same implementation as reconcileChildrenArray(),\n    // but using the iterator instead.\n\n    var iteratorFn = getIteratorFn(newChildrenIterable);\n    !(typeof iteratorFn === 'function') ? invariant(false, 'An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n\n    {\n      // We don't support rendering Generators because it's a mutation.\n      // See https://github.com/facebook/react/issues/12995\n      if (typeof Symbol === 'function' &&\n      // $FlowFixMe Flow doesn't know about toStringTag\n      newChildrenIterable[Symbol.toStringTag] === 'Generator') {\n        !didWarnAboutGenerators ? warning$1(false, 'Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.') : void 0;\n        didWarnAboutGenerators = true;\n      }\n\n      // Warn about using Maps as children\n      if (newChildrenIterable.entries === iteratorFn) {\n        !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;\n        didWarnAboutMaps = true;\n      }\n\n      // First, validate keys.\n      // We'll get a different iterator later for the main pass.\n      var _newChildren = iteratorFn.call(newChildrenIterable);\n      if (_newChildren) {\n        var knownKeys = null;\n        var _step = _newChildren.next();\n        for (; !_step.done; _step = _newChildren.next()) {\n          var child = _step.value;\n          knownKeys = warnOnInvalidKey(child, knownKeys);\n        }\n      }\n    }\n\n    var newChildren = iteratorFn.call(newChildrenIterable);\n    !(newChildren != null) ? invariant(false, 'An iterable object provided no iterator.') : void 0;\n\n    var resultingFirstChild = null;\n    var previousNewFiber = null;\n\n    var oldFiber = currentFirstChild;\n    var lastPlacedIndex = 0;\n    var newIdx = 0;\n    var nextOldFiber = null;\n\n    var step = newChildren.next();\n    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (!oldFiber) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (step.done) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; !step.done; newIdx++, step = newChildren.next()) {\n        var _newFiber3 = createChild(returnFiber, step.value, expirationTime);\n        if (_newFiber3 === null) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = _newFiber3;\n        } else {\n          previousNewFiber.sibling = _newFiber3;\n        }\n        previousNewFiber = _newFiber3;\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; !step.done; newIdx++, step = newChildren.next()) {\n      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);\n      if (_newFiber4 !== null) {\n        if (shouldTrackSideEffects) {\n          if (_newFiber4.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);\n          }\n        }\n        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = _newFiber4;\n        } else {\n          previousNewFiber.sibling = _newFiber4;\n        }\n        previousNewFiber = _newFiber4;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {\n    // There's no need to check for keys on text nodes since we don't have a\n    // way to define them.\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n      // We already have an existing node so let's just update it and delete\n      // the rest.\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n      var existing = useFiber(currentFirstChild, textContent, expirationTime);\n      existing.return = returnFiber;\n      return existing;\n    }\n    // The existing first child is not a text node so we need to create one\n    // and delete the existing ones.\n    deleteRemainingChildren(returnFiber, currentFirstChild);\n    var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {\n    var key = element.key;\n    var child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.elementType === element.type) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);\n          existing.ref = coerceRef(returnFiber, child, element);\n          existing.return = returnFiber;\n          {\n            existing._debugSource = element._source;\n            existing._debugOwner = element._owner;\n          }\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    if (element.type === REACT_FRAGMENT_TYPE) {\n      var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);\n      created.return = returnFiber;\n      return created;\n    } else {\n      var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);\n      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);\n      _created4.return = returnFiber;\n      return _created4;\n    }\n  }\n\n  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {\n    var key = portal.key;\n    var child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          var existing = useFiber(child, portal.children || [], expirationTime);\n          existing.return = returnFiber;\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);\n    created.return = returnFiber;\n    return created;\n  }\n\n  // This API will tag the children with the side-effect of the reconciliation\n  // itself. They will be added to the side-effect list as we pass through the\n  // children and the parent.\n  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n\n    // Handle top level unkeyed fragments as if they were arrays.\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n    // We treat the ambiguous cases above the same.\n    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;\n    if (isUnkeyedTopLevelFragment) {\n      newChild = newChild.props.children;\n    }\n\n    // Handle object types\n    var isObject = typeof newChild === 'object' && newChild !== null;\n\n    if (isObject) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));\n      }\n    }\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));\n    }\n\n    if (isArray(newChild)) {\n      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);\n    }\n\n    if (getIteratorFn(newChild)) {\n      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);\n    }\n\n    if (isObject) {\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType();\n      }\n    }\n    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {\n      // If the new child is undefined, and the return fiber is a composite\n      // component, throw an error. If Fiber return types are disabled,\n      // we already threw above.\n      switch (returnFiber.tag) {\n        case ClassComponent:\n          {\n            {\n              var instance = returnFiber.stateNode;\n              if (instance.render._isMockFunction) {\n                // We allow auto-mocks to proceed as if they're returning null.\n                break;\n              }\n            }\n          }\n        // Intentionally fall through to the next case, which handles both\n        // functions and classes\n        // eslint-disable-next-lined no-fallthrough\n        case FunctionComponent:\n          {\n            var Component = returnFiber.type;\n            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');\n          }\n      }\n    }\n\n    // Remaining cases are all treated as empty.\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n\n  return reconcileChildFibers;\n}\n\nvar reconcileChildFibers = ChildReconciler(true);\nvar mountChildFibers = ChildReconciler(false);\n\nfunction cloneChildFibers(current$$1, workInProgress) {\n  !(current$$1 === null || workInProgress.child === current$$1.child) ? invariant(false, 'Resuming work not yet implemented.') : void 0;\n\n  if (workInProgress.child === null) {\n    return;\n  }\n\n  var currentChild = workInProgress.child;\n  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);\n  workInProgress.child = newChild;\n\n  newChild.return = workInProgress;\n  while (currentChild.sibling !== null) {\n    currentChild = currentChild.sibling;\n    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);\n    newChild.return = workInProgress;\n  }\n  newChild.sibling = null;\n}\n\nvar NO_CONTEXT = {};\n\nvar contextStackCursor$1 = createCursor(NO_CONTEXT);\nvar contextFiberStackCursor = createCursor(NO_CONTEXT);\nvar rootInstanceStackCursor = createCursor(NO_CONTEXT);\n\nfunction requiredContext(c) {\n  !(c !== NO_CONTEXT) ? invariant(false, 'Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n  return c;\n}\n\nfunction getRootHostContainer() {\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\n  return rootInstance;\n}\n\nfunction pushHostContainer(fiber, nextRootInstance) {\n  // Push current root instance onto the stack;\n  // This allows us to reset root when portals are popped.\n  push(rootInstanceStackCursor, nextRootInstance, fiber);\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n\n  // Finally, we need to push the host context to the stack.\n  // However, we can't just call getRootHostContext() and push it because\n  // we'd have a different number of entries on the stack depending on\n  // whether getRootHostContext() throws somewhere in renderer code or not.\n  // So we push an empty value first. This lets us safely unwind on errors.\n  push(contextStackCursor$1, NO_CONTEXT, fiber);\n  var nextRootContext = getRootHostContext(nextRootInstance);\n  // Now that we know this function doesn't throw, replace it.\n  pop(contextStackCursor$1, fiber);\n  push(contextStackCursor$1, nextRootContext, fiber);\n}\n\nfunction popHostContainer(fiber) {\n  pop(contextStackCursor$1, fiber);\n  pop(contextFiberStackCursor, fiber);\n  pop(rootInstanceStackCursor, fiber);\n}\n\nfunction getHostContext() {\n  var context = requiredContext(contextStackCursor$1.current);\n  return context;\n}\n\nfunction pushHostContext(fiber) {\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\n  var context = requiredContext(contextStackCursor$1.current);\n  var nextContext = getChildHostContext(context, fiber.type, rootInstance);\n\n  // Don't push this Fiber's context unless it's unique.\n  if (context === nextContext) {\n    return;\n  }\n\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n  push(contextStackCursor$1, nextContext, fiber);\n}\n\nfunction popHostContext(fiber) {\n  // Do not pop unless this Fiber provided the current context.\n  // pushHostContext() only pushes Fibers that provide unique contexts.\n  if (contextFiberStackCursor.current !== fiber) {\n    return;\n  }\n\n  pop(contextStackCursor$1, fiber);\n  pop(contextFiberStackCursor, fiber);\n}\n\nvar NoEffect$1 = /*             */0;\nvar UnmountSnapshot = /*      */2;\nvar UnmountMutation = /*      */4;\nvar MountMutation = /*        */8;\nvar UnmountLayout = /*        */16;\nvar MountLayout = /*          */32;\nvar MountPassive = /*         */64;\nvar UnmountPassive = /*       */128;\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\n\n\nvar didWarnAboutMismatchedHooksForComponent = void 0;\n{\n  didWarnAboutMismatchedHooksForComponent = new Set();\n}\n\n// These are set right before calling the component.\nvar renderExpirationTime = NoWork;\n// The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\nvar currentlyRenderingFiber$1 = null;\n\n// Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\nvar currentHook = null;\nvar nextCurrentHook = null;\nvar firstWorkInProgressHook = null;\nvar workInProgressHook = null;\nvar nextWorkInProgressHook = null;\n\nvar remainingExpirationTime = NoWork;\nvar componentUpdateQueue = null;\nvar sideEffectTag = 0;\n\n// Updates scheduled during render will trigger an immediate re-render at the\n// end of the current pass. We can't store these updates on the normal queue,\n// because if the work is aborted, they should be discarded. Because this is\n// a relatively rare case, we also don't want to add an additional field to\n// either the hook or queue object types. So we store them in a lazily create\n// map of queue -> render-phase updates, which are discarded once the component\n// completes without re-rendering.\n\n// Whether an update was scheduled during the currently executing render pass.\nvar didScheduleRenderPhaseUpdate = false;\n// Lazily created map of render-phase updates\nvar renderPhaseUpdates = null;\n// Counter to prevent infinite loops.\nvar numberOfReRenders = 0;\nvar RE_RENDER_LIMIT = 25;\n\n// In DEV, this is the name of the currently executing primitive hook\nvar currentHookNameInDev = null;\n\n// In DEV, this list ensures that hooks are called in the same order between renders.\n// The list stores the order of hooks used during the initial render (mount).\n// Subsequent renders (updates) reference this list.\nvar hookTypesDev = null;\nvar hookTypesUpdateIndexDev = -1;\n\nfunction mountHookTypesDev() {\n  {\n    var hookName = currentHookNameInDev;\n\n    if (hookTypesDev === null) {\n      hookTypesDev = [hookName];\n    } else {\n      hookTypesDev.push(hookName);\n    }\n  }\n}\n\nfunction updateHookTypesDev() {\n  {\n    var hookName = currentHookNameInDev;\n\n    if (hookTypesDev !== null) {\n      hookTypesUpdateIndexDev++;\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n        warnOnHookMismatchInDev(hookName);\n      }\n    }\n  }\n}\n\nfunction warnOnHookMismatchInDev(currentHookName) {\n  {\n    var componentName = getComponentName(currentlyRenderingFiber$1.type);\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\n\n      if (hookTypesDev !== null) {\n        var table = '';\n\n        var secondColumnStart = 30;\n\n        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {\n          var oldHookName = hookTypesDev[i];\n          var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;\n\n          var row = i + 1 + '. ' + oldHookName;\n\n          // Extra space so second column lines up\n          // lol @ IE not supporting String#repeat\n          while (row.length < secondColumnStart) {\n            row += ' ';\n          }\n\n          row += newHookName + '\\n';\n\n          table += row;\n        }\n\n        warning$1(false, 'React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://fb.me/rules-of-hooks\\n\\n' + '   Previous render            Next render\\n' + '   ------------------------------------------------------\\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n', componentName, table);\n      }\n    }\n  }\n}\n\nfunction throwInvalidHookError() {\n  invariant(false, 'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.');\n}\n\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n  if (prevDeps === null) {\n    {\n      warning$1(false, '%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);\n    }\n    return false;\n  }\n\n  {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      warning$1(false, 'The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\\n\\n' + 'Previous: %s\\n' + 'Incoming: %s', currentHookNameInDev, '[' + nextDeps.join(', ') + ']', '[' + prevDeps.join(', ') + ']');\n    }\n  }\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (is(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\n\nfunction renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {\n  renderExpirationTime = nextRenderExpirationTime;\n  currentlyRenderingFiber$1 = workInProgress;\n  nextCurrentHook = current !== null ? current.memoizedState : null;\n\n  {\n    hookTypesDev = current !== null ? current._debugHookTypes : null;\n    hookTypesUpdateIndexDev = -1;\n  }\n\n  // The following should have already been reset\n  // currentHook = null;\n  // workInProgressHook = null;\n\n  // remainingExpirationTime = NoWork;\n  // componentUpdateQueue = null;\n\n  // didScheduleRenderPhaseUpdate = false;\n  // renderPhaseUpdates = null;\n  // numberOfReRenders = 0;\n  // sideEffectTag = 0;\n\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\n  // Currently we will identify the update render as a mount because nextCurrentHook === null.\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\n\n  // Using nextCurrentHook to differentiate between mount/update only works if at least one stateful hook is used.\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\n  // so nextCurrentHook would be null during updates and mounts.\n  {\n    if (nextCurrentHook !== null) {\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;\n    } else if (hookTypesDev !== null) {\n      // This dispatcher handles an edge case where a component is updating,\n      // but no stateful hooks have been used.\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\n      // This dispatcher does that.\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;\n    } else {\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;\n    }\n  }\n\n  var children = Component(props, refOrContext);\n\n  if (didScheduleRenderPhaseUpdate) {\n    do {\n      didScheduleRenderPhaseUpdate = false;\n      numberOfReRenders += 1;\n\n      // Start over from the beginning of the list\n      nextCurrentHook = current !== null ? current.memoizedState : null;\n      nextWorkInProgressHook = firstWorkInProgressHook;\n\n      currentHook = null;\n      workInProgressHook = null;\n      componentUpdateQueue = null;\n\n      {\n        // Also validate hook order for cascading updates.\n        hookTypesUpdateIndexDev = -1;\n      }\n\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;\n\n      children = Component(props, refOrContext);\n    } while (didScheduleRenderPhaseUpdate);\n\n    renderPhaseUpdates = null;\n    numberOfReRenders = 0;\n  }\n\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrancy.\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n\n  var renderedWork = currentlyRenderingFiber$1;\n\n  renderedWork.memoizedState = firstWorkInProgressHook;\n  renderedWork.expirationTime = remainingExpirationTime;\n  renderedWork.updateQueue = componentUpdateQueue;\n  renderedWork.effectTag |= sideEffectTag;\n\n  {\n    renderedWork._debugHookTypes = hookTypesDev;\n  }\n\n  // This check uses currentHook so that it works the same in DEV and prod bundles.\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\n  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;\n\n  renderExpirationTime = NoWork;\n  currentlyRenderingFiber$1 = null;\n\n  currentHook = null;\n  nextCurrentHook = null;\n  firstWorkInProgressHook = null;\n  workInProgressHook = null;\n  nextWorkInProgressHook = null;\n\n  {\n    currentHookNameInDev = null;\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n  }\n\n  remainingExpirationTime = NoWork;\n  componentUpdateQueue = null;\n  sideEffectTag = 0;\n\n  // These were reset above\n  // didScheduleRenderPhaseUpdate = false;\n  // renderPhaseUpdates = null;\n  // numberOfReRenders = 0;\n\n  !!didRenderTooFewHooks ? invariant(false, 'Rendered fewer hooks than expected. This may be caused by an accidental early return statement.') : void 0;\n\n  return children;\n}\n\nfunction bailoutHooks(current, workInProgress, expirationTime) {\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.effectTag &= ~(Passive | Update);\n  if (current.expirationTime <= expirationTime) {\n    current.expirationTime = NoWork;\n  }\n}\n\nfunction resetHooks() {\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrancy.\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n\n  // This is used to reset the state of this module when a component throws.\n  // It's also called inside mountIndeterminateComponent if we determine the\n  // component is a module-style component.\n  renderExpirationTime = NoWork;\n  currentlyRenderingFiber$1 = null;\n\n  currentHook = null;\n  nextCurrentHook = null;\n  firstWorkInProgressHook = null;\n  workInProgressHook = null;\n  nextWorkInProgressHook = null;\n\n  {\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n\n    currentHookNameInDev = null;\n  }\n\n  remainingExpirationTime = NoWork;\n  componentUpdateQueue = null;\n  sideEffectTag = 0;\n\n  didScheduleRenderPhaseUpdate = false;\n  renderPhaseUpdates = null;\n  numberOfReRenders = 0;\n}\n\nfunction mountWorkInProgressHook() {\n  var hook = {\n    memoizedState: null,\n\n    baseState: null,\n    queue: null,\n    baseUpdate: null,\n\n    next: null\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    firstWorkInProgressHook = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n  return workInProgressHook;\n}\n\nfunction updateWorkInProgressHook() {\n  // This function is used both for updates and for re-renders triggered by a\n  // render phase update. It assumes there is either a current hook we can\n  // clone, or a work-in-progress hook from a previous render pass that we can\n  // use as a base. When we reach the end of the base list, we must switch to\n  // the dispatcher used for mounts.\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n\n    currentHook = nextCurrentHook;\n    nextCurrentHook = currentHook !== null ? currentHook.next : null;\n  } else {\n    // Clone from the current hook.\n    !(nextCurrentHook !== null) ? invariant(false, 'Rendered more hooks than during the previous render.') : void 0;\n    currentHook = nextCurrentHook;\n\n    var newHook = {\n      memoizedState: currentHook.memoizedState,\n\n      baseState: currentHook.baseState,\n      queue: currentHook.queue,\n      baseUpdate: currentHook.baseUpdate,\n\n      next: null\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      workInProgressHook = firstWorkInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n    nextCurrentHook = currentHook.next;\n  }\n  return workInProgressHook;\n}\n\nfunction createFunctionComponentUpdateQueue() {\n  return {\n    lastEffect: null\n  };\n}\n\nfunction basicStateReducer(state, action) {\n  return typeof action === 'function' ? action(state) : action;\n}\n\nfunction mountReducer(reducer, initialArg, init) {\n  var hook = mountWorkInProgressHook();\n  var initialState = void 0;\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = initialArg;\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  var queue = hook.queue = {\n    last: null,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: initialState\n  };\n  var dispatch = queue.dispatch = dispatchAction.bind(null,\n  // Flow doesn't know this is non-null, but we do.\n  currentlyRenderingFiber$1, queue);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer(reducer, initialArg, init) {\n  var hook = updateWorkInProgressHook();\n  var queue = hook.queue;\n  !(queue !== null) ? invariant(false, 'Should have a queue. This is likely a bug in React. Please file an issue.') : void 0;\n\n  queue.lastRenderedReducer = reducer;\n\n  if (numberOfReRenders > 0) {\n    // This is a re-render. Apply the new render phase updates to the previous\n    var _dispatch = queue.dispatch;\n    if (renderPhaseUpdates !== null) {\n      // Render phase updates are stored in a map of queue -> linked list\n      var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);\n      if (firstRenderPhaseUpdate !== undefined) {\n        renderPhaseUpdates.delete(queue);\n        var newState = hook.memoizedState;\n        var update = firstRenderPhaseUpdate;\n        do {\n          // Process this render phase update. We don't have to check the\n          // priority because it will always be the same as the current\n          // render's.\n          var _action = update.action;\n          newState = reducer(newState, _action);\n          update = update.next;\n        } while (update !== null);\n\n        // Mark that the fiber performed work, but only if the new state is\n        // different from the current state.\n        if (!is(newState, hook.memoizedState)) {\n          markWorkInProgressReceivedUpdate();\n        }\n\n        hook.memoizedState = newState;\n        // Don't persist the state accumlated from the render phase updates to\n        // the base state unless the queue is empty.\n        // TODO: Not sure if this is the desired semantics, but it's what we\n        // do for gDSFP. I can't remember why.\n        if (hook.baseUpdate === queue.last) {\n          hook.baseState = newState;\n        }\n\n        queue.lastRenderedState = newState;\n\n        return [newState, _dispatch];\n      }\n    }\n    return [hook.memoizedState, _dispatch];\n  }\n\n  // The last update in the entire queue\n  var last = queue.last;\n  // The last update that is part of the base state.\n  var baseUpdate = hook.baseUpdate;\n  var baseState = hook.baseState;\n\n  // Find the first unprocessed update.\n  var first = void 0;\n  if (baseUpdate !== null) {\n    if (last !== null) {\n      // For the first update, the queue is a circular linked list where\n      // `queue.last.next = queue.first`. Once the first update commits, and\n      // the `baseUpdate` is no longer empty, we can unravel the list.\n      last.next = null;\n    }\n    first = baseUpdate.next;\n  } else {\n    first = last !== null ? last.next : null;\n  }\n  if (first !== null) {\n    var _newState = baseState;\n    var newBaseState = null;\n    var newBaseUpdate = null;\n    var prevUpdate = baseUpdate;\n    var _update = first;\n    var didSkip = false;\n    do {\n      var updateExpirationTime = _update.expirationTime;\n      if (updateExpirationTime < renderExpirationTime) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        if (!didSkip) {\n          didSkip = true;\n          newBaseUpdate = prevUpdate;\n          newBaseState = _newState;\n        }\n        // Update the remaining priority in the queue.\n        if (updateExpirationTime > remainingExpirationTime) {\n          remainingExpirationTime = updateExpirationTime;\n        }\n      } else {\n        // Process this update.\n        if (_update.eagerReducer === reducer) {\n          // If this update was processed eagerly, and its reducer matches the\n          // current reducer, we can use the eagerly computed state.\n          _newState = _update.eagerState;\n        } else {\n          var _action2 = _update.action;\n          _newState = reducer(_newState, _action2);\n        }\n      }\n      prevUpdate = _update;\n      _update = _update.next;\n    } while (_update !== null && _update !== first);\n\n    if (!didSkip) {\n      newBaseUpdate = prevUpdate;\n      newBaseState = _newState;\n    }\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(_newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = _newState;\n    hook.baseUpdate = newBaseUpdate;\n    hook.baseState = newBaseState;\n\n    queue.lastRenderedState = _newState;\n  }\n\n  var dispatch = queue.dispatch;\n  return [hook.memoizedState, dispatch];\n}\n\nfunction mountState(initialState) {\n  var hook = mountWorkInProgressHook();\n  if (typeof initialState === 'function') {\n    initialState = initialState();\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  var queue = hook.queue = {\n    last: null,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: initialState\n  };\n  var dispatch = queue.dispatch = dispatchAction.bind(null,\n  // Flow doesn't know this is non-null, but we do.\n  currentlyRenderingFiber$1, queue);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState(initialState) {\n  return updateReducer(basicStateReducer, initialState);\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  var effect = {\n    tag: tag,\n    create: create,\n    destroy: destroy,\n    deps: deps,\n    // Circular\n    next: null\n  };\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    var _lastEffect = componentUpdateQueue.lastEffect;\n    if (_lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      var firstEffect = _lastEffect.next;\n      _lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n  return effect;\n}\n\nfunction mountRef(initialValue) {\n  var hook = mountWorkInProgressHook();\n  var ref = { current: initialValue };\n  {\n    Object.seal(ref);\n  }\n  hook.memoizedState = ref;\n  return ref;\n}\n\nfunction updateRef(initialValue) {\n  var hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  sideEffectTag |= fiberEffectTag;\n  hook.memoizedState = pushEffect(hookEffectTag, create, undefined, nextDeps);\n}\n\nfunction updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var destroy = undefined;\n\n  if (currentHook !== null) {\n    var prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n    if (nextDeps !== null) {\n      var prevDeps = prevEffect.deps;\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        pushEffect(NoEffect$1, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  sideEffectTag |= fiberEffectTag;\n  hook.memoizedState = pushEffect(hookEffectTag, create, destroy, nextDeps);\n}\n\nfunction mountEffect(create, deps) {\n  return mountEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);\n}\n\nfunction updateEffect(create, deps) {\n  return updateEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);\n}\n\nfunction mountLayoutEffect(create, deps) {\n  return mountEffectImpl(Update, UnmountMutation | MountLayout, create, deps);\n}\n\nfunction updateLayoutEffect(create, deps) {\n  return updateEffectImpl(Update, UnmountMutation | MountLayout, create, deps);\n}\n\nfunction imperativeHandleEffect(create, ref) {\n  if (typeof ref === 'function') {\n    var refCallback = ref;\n    var _inst = create();\n    refCallback(_inst);\n    return function () {\n      refCallback(null);\n    };\n  } else if (ref !== null && ref !== undefined) {\n    var refObject = ref;\n    {\n      !refObject.hasOwnProperty('current') ? warning$1(false, 'Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}') : void 0;\n    }\n    var _inst2 = create();\n    refObject.current = _inst2;\n    return function () {\n      refObject.current = null;\n    };\n  }\n}\n\nfunction mountImperativeHandle(ref, create, deps) {\n  {\n    !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  return mountEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n}\n\nfunction updateImperativeHandle(ref, create, deps) {\n  {\n    !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  return updateEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n}\n\nfunction mountDebugValue(value, formatterFn) {\n  // This hook is normally a no-op.\n  // The react-debug-hooks package injects its own implementation\n  // so that e.g. DevTools can display custom hook values.\n}\n\nvar updateDebugValue = mountDebugValue;\n\nfunction mountCallback(callback, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback(callback, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var prevState = hook.memoizedState;\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      var prevDeps = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction mountMemo(nextCreate, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo(nextCreate, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var prevState = hook.memoizedState;\n  if (prevState !== null) {\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\n    if (nextDeps !== null) {\n      var prevDeps = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  var nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\n// in a test-like environment, we want to warn if dispatchAction()\n// is called outside of a batchedUpdates/TestUtils.act(...) call.\nvar shouldWarnForUnbatchedSetState = false;\n\n{\n  // jest isn't a 'global', it's just exposed to tests via a wrapped function\n  // further, this isn't a test file, so flow doesn't recognize the symbol. So...\n  // $FlowExpectedError - because requirements don't give a damn about your type sigs.\n  if ('undefined' !== typeof jest) {\n    shouldWarnForUnbatchedSetState = true;\n  }\n}\n\nfunction dispatchAction(fiber, queue, action) {\n  !(numberOfReRenders < RE_RENDER_LIMIT) ? invariant(false, 'Too many re-renders. React limits the number of renders to prevent an infinite loop.') : void 0;\n\n  {\n    !(arguments.length <= 3) ? warning$1(false, \"State updates from the useState() and useReducer() Hooks don't support the \" + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().') : void 0;\n  }\n\n  var alternate = fiber.alternate;\n  if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {\n    // This is a render phase update. Stash it in a lazily-created map of\n    // queue -> linked list of updates. After this render pass, we'll restart\n    // and apply the stashed updates on top of the work-in-progress hook.\n    didScheduleRenderPhaseUpdate = true;\n    var update = {\n      expirationTime: renderExpirationTime,\n      action: action,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    };\n    if (renderPhaseUpdates === null) {\n      renderPhaseUpdates = new Map();\n    }\n    var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);\n    if (firstRenderPhaseUpdate === undefined) {\n      renderPhaseUpdates.set(queue, update);\n    } else {\n      // Append the update to the end of the list.\n      var lastRenderPhaseUpdate = firstRenderPhaseUpdate;\n      while (lastRenderPhaseUpdate.next !== null) {\n        lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n      }\n      lastRenderPhaseUpdate.next = update;\n    }\n  } else {\n    flushPassiveEffects();\n\n    var currentTime = requestCurrentTime();\n    var _expirationTime = computeExpirationForFiber(currentTime, fiber);\n\n    var _update2 = {\n      expirationTime: _expirationTime,\n      action: action,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    };\n\n    // Append the update to the end of the list.\n    var _last = queue.last;\n    if (_last === null) {\n      // This is the first update. Create a circular list.\n      _update2.next = _update2;\n    } else {\n      var first = _last.next;\n      if (first !== null) {\n        // Still circular.\n        _update2.next = first;\n      }\n      _last.next = _update2;\n    }\n    queue.last = _update2;\n\n    if (fiber.expirationTime === NoWork && (alternate === null || alternate.expirationTime === NoWork)) {\n      // The queue is currently empty, which means we can eagerly compute the\n      // next state before entering the render phase. If the new state is the\n      // same as the current state, we may be able to bail out entirely.\n      var _lastRenderedReducer = queue.lastRenderedReducer;\n      if (_lastRenderedReducer !== null) {\n        var prevDispatcher = void 0;\n        {\n          prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        }\n        try {\n          var currentState = queue.lastRenderedState;\n          var _eagerState = _lastRenderedReducer(currentState, action);\n          // Stash the eagerly computed state, and the reducer used to compute\n          // it, on the update object. If the reducer hasn't changed by the\n          // time we enter the render phase, then the eager state can be used\n          // without calling the reducer again.\n          _update2.eagerReducer = _lastRenderedReducer;\n          _update2.eagerState = _eagerState;\n          if (is(_eagerState, currentState)) {\n            // Fast path. We can bail out without scheduling React to re-render.\n            // It's still possible that we'll need to rebase this update later,\n            // if the component re-renders for a different reason and by that\n            // time the reducer has changed.\n            return;\n          }\n        } catch (error) {\n          // Suppress the error. It will throw again in the render phase.\n        } finally {\n          {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        }\n      }\n    }\n    {\n      if (shouldWarnForUnbatchedSetState === true) {\n        warnIfNotCurrentlyBatchingInDev(fiber);\n      }\n    }\n    scheduleWork(fiber, _expirationTime);\n  }\n}\n\nvar ContextOnlyDispatcher = {\n  readContext: readContext,\n\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError\n};\n\nvar HooksDispatcherOnMountInDEV = null;\nvar HooksDispatcherOnMountWithHookTypesInDEV = null;\nvar HooksDispatcherOnUpdateInDEV = null;\nvar InvalidNestedHooksDispatcherOnMountInDEV = null;\nvar InvalidNestedHooksDispatcherOnUpdateInDEV = null;\n\n{\n  var warnInvalidContextAccess = function () {\n    warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');\n  };\n\n  var warnInvalidHookAccess = function () {\n    warning$1(false, 'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://fb.me/rules-of-hooks');\n  };\n\n  HooksDispatcherOnMountInDEV = {\n    readContext: function (context, observedBits) {\n      return readContext(context, observedBits);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext: function (context, observedBits) {\n      currentHookNameInDev = 'useContext';\n      mountHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    }\n  };\n\n  HooksDispatcherOnMountWithHookTypesInDEV = {\n    readContext: function (context, observedBits) {\n      return readContext(context, observedBits);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext: function (context, observedBits) {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    }\n  };\n\n  HooksDispatcherOnUpdateInDEV = {\n    readContext: function (context, observedBits) {\n      return readContext(context, observedBits);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function (context, observedBits) {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    }\n  };\n\n  InvalidNestedHooksDispatcherOnMountInDEV = {\n    readContext: function (context, observedBits) {\n      warnInvalidContextAccess();\n      return readContext(context, observedBits);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext: function (context, observedBits) {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    }\n  };\n\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\n    readContext: function (context, observedBits) {\n      warnInvalidContextAccess();\n      return readContext(context, observedBits);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function (context, observedBits) {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    }\n  };\n}\n\nvar commitTime = 0;\nvar profilerStartTime = -1;\n\nfunction getCommitTime() {\n  return commitTime;\n}\n\nfunction recordCommitTime() {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  commitTime = scheduler.unstable_now();\n}\n\nfunction startProfilerTimer(fiber) {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  profilerStartTime = scheduler.unstable_now();\n\n  if (fiber.actualStartTime < 0) {\n    fiber.actualStartTime = scheduler.unstable_now();\n  }\n}\n\nfunction stopProfilerTimerIfRunning(fiber) {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  profilerStartTime = -1;\n}\n\nfunction stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  if (profilerStartTime >= 0) {\n    var elapsedTime = scheduler.unstable_now() - profilerStartTime;\n    fiber.actualDuration += elapsedTime;\n    if (overrideBaseTime) {\n      fiber.selfBaseDuration = elapsedTime;\n    }\n    profilerStartTime = -1;\n  }\n}\n\n// The deepest Fiber on the stack involved in a hydration context.\n// This may have been an insertion or a hydration.\nvar hydrationParentFiber = null;\nvar nextHydratableInstance = null;\nvar isHydrating = false;\n\nfunction enterHydrationState(fiber) {\n  if (!supportsHydration) {\n    return false;\n  }\n\n  var parentInstance = fiber.stateNode.containerInfo;\n  nextHydratableInstance = getFirstHydratableChild(parentInstance);\n  hydrationParentFiber = fiber;\n  isHydrating = true;\n  return true;\n}\n\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(fiber) {\n  if (!supportsHydration) {\n    return false;\n  }\n\n  var suspenseInstance = fiber.stateNode;\n  nextHydratableInstance = getNextHydratableSibling(suspenseInstance);\n  popToNextHostParent(fiber);\n  isHydrating = true;\n  return true;\n}\n\nfunction deleteHydratableInstance(returnFiber, instance) {\n  {\n    switch (returnFiber.tag) {\n      case HostRoot:\n        didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);\n        break;\n      case HostComponent:\n        didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);\n        break;\n    }\n  }\n\n  var childToDelete = createFiberFromHostInstanceForDeletion();\n  childToDelete.stateNode = instance;\n  childToDelete.return = returnFiber;\n  childToDelete.effectTag = Deletion;\n\n  // This might seem like it belongs on progressedFirstDeletion. However,\n  // these children are not part of the reconciliation list of children.\n  // Even if we abort and rereconcile the children, that will try to hydrate\n  // again and the nodes are still in the host tree so these will be\n  // recreated.\n  if (returnFiber.lastEffect !== null) {\n    returnFiber.lastEffect.nextEffect = childToDelete;\n    returnFiber.lastEffect = childToDelete;\n  } else {\n    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\n  }\n}\n\nfunction insertNonHydratedInstance(returnFiber, fiber) {\n  fiber.effectTag |= Placement;\n  {\n    switch (returnFiber.tag) {\n      case HostRoot:\n        {\n          var parentContainer = returnFiber.stateNode.containerInfo;\n          switch (fiber.tag) {\n            case HostComponent:\n              var type = fiber.type;\n              var props = fiber.pendingProps;\n              didNotFindHydratableContainerInstance(parentContainer, type, props);\n              break;\n            case HostText:\n              var text = fiber.pendingProps;\n              didNotFindHydratableContainerTextInstance(parentContainer, text);\n              break;\n            case SuspenseComponent:\n              \n              break;\n          }\n          break;\n        }\n      case HostComponent:\n        {\n          var parentType = returnFiber.type;\n          var parentProps = returnFiber.memoizedProps;\n          var parentInstance = returnFiber.stateNode;\n          switch (fiber.tag) {\n            case HostComponent:\n              var _type = fiber.type;\n              var _props = fiber.pendingProps;\n              didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);\n              break;\n            case HostText:\n              var _text = fiber.pendingProps;\n              didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);\n              break;\n            case SuspenseComponent:\n              didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance);\n              break;\n          }\n          break;\n        }\n      default:\n        return;\n    }\n  }\n}\n\nfunction tryHydrate(fiber, nextInstance) {\n  switch (fiber.tag) {\n    case HostComponent:\n      {\n        var type = fiber.type;\n        var props = fiber.pendingProps;\n        var instance = canHydrateInstance(nextInstance, type, props);\n        if (instance !== null) {\n          fiber.stateNode = instance;\n          return true;\n        }\n        return false;\n      }\n    case HostText:\n      {\n        var text = fiber.pendingProps;\n        var textInstance = canHydrateTextInstance(nextInstance, text);\n        if (textInstance !== null) {\n          fiber.stateNode = textInstance;\n          return true;\n        }\n        return false;\n      }\n    case SuspenseComponent:\n      {\n        if (enableSuspenseServerRenderer) {\n          var suspenseInstance = canHydrateSuspenseInstance(nextInstance);\n          if (suspenseInstance !== null) {\n            // Downgrade the tag to a dehydrated component until we've hydrated it.\n            fiber.tag = DehydratedSuspenseComponent;\n            fiber.stateNode = suspenseInstance;\n            return true;\n          }\n        }\n        return false;\n      }\n    default:\n      return false;\n  }\n}\n\nfunction tryToClaimNextHydratableInstance(fiber) {\n  if (!isHydrating) {\n    return;\n  }\n  var nextInstance = nextHydratableInstance;\n  if (!nextInstance) {\n    // Nothing to hydrate. Make it an insertion.\n    insertNonHydratedInstance(hydrationParentFiber, fiber);\n    isHydrating = false;\n    hydrationParentFiber = fiber;\n    return;\n  }\n  var firstAttemptedInstance = nextInstance;\n  if (!tryHydrate(fiber, nextInstance)) {\n    // If we can't hydrate this instance let's try the next one.\n    // We use this as a heuristic. It's based on intuition and not data so it\n    // might be flawed or unnecessary.\n    nextInstance = getNextHydratableSibling(firstAttemptedInstance);\n    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {\n      // Nothing to hydrate. Make it an insertion.\n      insertNonHydratedInstance(hydrationParentFiber, fiber);\n      isHydrating = false;\n      hydrationParentFiber = fiber;\n      return;\n    }\n    // We matched the next one, we'll now assume that the first one was\n    // superfluous and we'll delete it. Since we can't eagerly delete it\n    // we'll have to schedule a deletion. To do that, this node needs a dummy\n    // fiber associated with it.\n    deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);\n  }\n  hydrationParentFiber = fiber;\n  nextHydratableInstance = getFirstHydratableChild(nextInstance);\n}\n\nfunction prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {\n  if (!supportsHydration) {\n    invariant(false, 'Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');\n  }\n\n  var instance = fiber.stateNode;\n  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);\n  // TODO: Type this specific to this type of component.\n  fiber.updateQueue = updatePayload;\n  // If the update payload indicates that there is a change or if there\n  // is a new ref we mark this as an update.\n  if (updatePayload !== null) {\n    return true;\n  }\n  return false;\n}\n\nfunction prepareToHydrateHostTextInstance(fiber) {\n  if (!supportsHydration) {\n    invariant(false, 'Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');\n  }\n\n  var textInstance = fiber.stateNode;\n  var textContent = fiber.memoizedProps;\n  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);\n  {\n    if (shouldUpdate) {\n      // We assume that prepareToHydrateHostTextInstance is called in a context where the\n      // hydration parent is the parent host component of this host text.\n      var returnFiber = hydrationParentFiber;\n      if (returnFiber !== null) {\n        switch (returnFiber.tag) {\n          case HostRoot:\n            {\n              var parentContainer = returnFiber.stateNode.containerInfo;\n              didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);\n              break;\n            }\n          case HostComponent:\n            {\n              var parentType = returnFiber.type;\n              var parentProps = returnFiber.memoizedProps;\n              var parentInstance = returnFiber.stateNode;\n              didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);\n              break;\n            }\n        }\n      }\n    }\n  }\n  return shouldUpdate;\n}\n\nfunction skipPastDehydratedSuspenseInstance(fiber) {\n  if (!supportsHydration) {\n    invariant(false, 'Expected skipPastDehydratedSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');\n  }\n  var suspenseInstance = fiber.stateNode;\n  !suspenseInstance ? invariant(false, 'Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n  nextHydratableInstance = getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);\n}\n\nfunction popToNextHostParent(fiber) {\n  var parent = fiber.return;\n  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== DehydratedSuspenseComponent) {\n    parent = parent.return;\n  }\n  hydrationParentFiber = parent;\n}\n\nfunction popHydrationState(fiber) {\n  if (!supportsHydration) {\n    return false;\n  }\n  if (fiber !== hydrationParentFiber) {\n    // We're deeper than the current hydration context, inside an inserted\n    // tree.\n    return false;\n  }\n  if (!isHydrating) {\n    // If we're not currently hydrating but we're in a hydration context, then\n    // we were an insertion and now need to pop up reenter hydration of our\n    // siblings.\n    popToNextHostParent(fiber);\n    isHydrating = true;\n    return false;\n  }\n\n  var type = fiber.type;\n\n  // If we have any remaining hydratable nodes, we need to delete them now.\n  // We only do this deeper than head and body since they tend to have random\n  // other nodes in them. We also ignore components with pure text content in\n  // side of them.\n  // TODO: Better heuristic.\n  if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {\n    var nextInstance = nextHydratableInstance;\n    while (nextInstance) {\n      deleteHydratableInstance(fiber, nextInstance);\n      nextInstance = getNextHydratableSibling(nextInstance);\n    }\n  }\n\n  popToNextHostParent(fiber);\n  nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;\n  return true;\n}\n\nfunction resetHydrationState() {\n  if (!supportsHydration) {\n    return;\n  }\n\n  hydrationParentFiber = null;\n  nextHydratableInstance = null;\n  isHydrating = false;\n}\n\nvar ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;\n\nvar didReceiveUpdate = false;\n\nvar didWarnAboutBadClass = void 0;\nvar didWarnAboutContextTypeOnFunctionComponent = void 0;\nvar didWarnAboutGetDerivedStateOnFunctionComponent = void 0;\nvar didWarnAboutFunctionRefs = void 0;\nvar didWarnAboutReassigningProps = void 0;\n\n{\n  didWarnAboutBadClass = {};\n  didWarnAboutContextTypeOnFunctionComponent = {};\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\n  didWarnAboutFunctionRefs = {};\n  didWarnAboutReassigningProps = false;\n}\n\nfunction reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {\n  if (current$$1 === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);\n  }\n}\n\nfunction forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime) {\n  // This function is fork of reconcileChildren. It's used in cases where we\n  // want to reconcile without matching against the existing set. This has the\n  // effect of all current children being unmounted; even if the type and key\n  // are the same, the old child is unmounted and a new child is created.\n  //\n  // To do this, we're going to go through the reconcile algorithm twice. In\n  // the first pass, we schedule a deletion for all the current children by\n  // passing null.\n  workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime);\n  // In the second pass, we mount the new children. The trick here is that we\n  // pass null in place of where we usually pass the current child set. This has\n  // the effect of remounting all children regardless of whether their their\n  // identity matches.\n  workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);\n}\n\nfunction updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\n        'prop', getComponentName(Component), getCurrentFiberStackInDev);\n      }\n    }\n  }\n\n  var render = Component.render;\n  var ref = workInProgress.ref;\n\n  // The rest is a fork of updateFunctionComponent\n  var nextChildren = void 0;\n  prepareToReadContext(workInProgress, renderExpirationTime);\n  {\n    ReactCurrentOwner$3.current = workInProgress;\n    setCurrentPhase('render');\n    nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);\n    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\n      // Only double-render components with Hooks\n      if (workInProgress.memoizedState !== null) {\n        nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);\n      }\n    }\n    setCurrentPhase(null);\n  }\n\n  if (current$$1 !== null && !didReceiveUpdate) {\n    bailoutHooks(current$$1, workInProgress, renderExpirationTime);\n    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n  return workInProgress.child;\n}\n\nfunction updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {\n  if (current$$1 === null) {\n    var type = Component.type;\n    if (isSimpleFunctionComponent(type) && Component.compare === null &&\n    // SimpleMemoComponent codepath doesn't resolve outer props either.\n    Component.defaultProps === undefined) {\n      // If this is a plain function component without default props,\n      // and with only the default shallow comparison, we upgrade it\n      // to a SimpleMemoComponent to allow fast path updates.\n      workInProgress.tag = SimpleMemoComponent;\n      workInProgress.type = type;\n      {\n        validateFunctionComponentInDev(workInProgress, type);\n      }\n      return updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);\n    }\n    {\n      var innerPropTypes = type.propTypes;\n      if (innerPropTypes) {\n        // Inner memo component props aren't currently validated in createElement.\n        // We could move it there, but we'd still need this for lazy code path.\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\n        'prop', getComponentName(type), getCurrentFiberStackInDev);\n      }\n    }\n    var child = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);\n    child.ref = workInProgress.ref;\n    child.return = workInProgress;\n    workInProgress.child = child;\n    return child;\n  }\n  {\n    var _type = Component.type;\n    var _innerPropTypes = _type.propTypes;\n    if (_innerPropTypes) {\n      // Inner memo component props aren't currently validated in createElement.\n      // We could move it there, but we'd still need this for lazy code path.\n      checkPropTypes(_innerPropTypes, nextProps, // Resolved props\n      'prop', getComponentName(_type), getCurrentFiberStackInDev);\n    }\n  }\n  var currentChild = current$$1.child; // This is always exactly one child\n  if (updateExpirationTime < renderExpirationTime) {\n    // This will be the props with resolved defaultProps,\n    // unlike current.memoizedProps which will be the unresolved ones.\n    var prevProps = currentChild.memoizedProps;\n    // Default to shallow comparison\n    var compare = Component.compare;\n    compare = compare !== null ? compare : shallowEqual;\n    if (compare(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {\n      return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\n    }\n  }\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n  var newChild = createWorkInProgress(currentChild, nextProps, renderExpirationTime);\n  newChild.ref = workInProgress.ref;\n  newChild.return = workInProgress;\n  workInProgress.child = newChild;\n  return newChild;\n}\n\nfunction updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens when the inner render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var outerMemoType = workInProgress.elementType;\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n        // We warn when you define propTypes on lazy()\n        // so let's just skip over it to find memo() outer wrapper.\n        // Inner props for memo are validated later.\n        outerMemoType = refineResolvedLazyComponent(outerMemoType);\n      }\n      var outerPropTypes = outerMemoType && outerMemoType.propTypes;\n      if (outerPropTypes) {\n        checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\n        'prop', getComponentName(outerMemoType), getCurrentFiberStackInDev);\n      }\n      // Inner propTypes will be validated in the function component path.\n    }\n  }\n  if (current$$1 !== null) {\n    var prevProps = current$$1.memoizedProps;\n    if (shallowEqual(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {\n      didReceiveUpdate = false;\n      if (updateExpirationTime < renderExpirationTime) {\n        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\n      }\n    }\n  }\n  return updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);\n}\n\nfunction updateFragment(current$$1, workInProgress, renderExpirationTime) {\n  var nextChildren = workInProgress.pendingProps;\n  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n  return workInProgress.child;\n}\n\nfunction updateMode(current$$1, workInProgress, renderExpirationTime) {\n  var nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n  return workInProgress.child;\n}\n\nfunction updateProfiler(current$$1, workInProgress, renderExpirationTime) {\n  if (enableProfilerTimer) {\n    workInProgress.effectTag |= Update;\n  }\n  var nextProps = workInProgress.pendingProps;\n  var nextChildren = nextProps.children;\n  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n  return workInProgress.child;\n}\n\nfunction markRef(current$$1, workInProgress) {\n  var ref = workInProgress.ref;\n  if (current$$1 === null && ref !== null || current$$1 !== null && current$$1.ref !== ref) {\n    // Schedule a Ref effect\n    workInProgress.effectTag |= Ref;\n  }\n}\n\nfunction updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\n        'prop', getComponentName(Component), getCurrentFiberStackInDev);\n      }\n    }\n  }\n\n  var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n  var context = getMaskedContext(workInProgress, unmaskedContext);\n\n  var nextChildren = void 0;\n  prepareToReadContext(workInProgress, renderExpirationTime);\n  {\n    ReactCurrentOwner$3.current = workInProgress;\n    setCurrentPhase('render');\n    nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);\n    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\n      // Only double-render components with Hooks\n      if (workInProgress.memoizedState !== null) {\n        nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);\n      }\n    }\n    setCurrentPhase(null);\n  }\n\n  if (current$$1 !== null && !didReceiveUpdate) {\n    bailoutHooks(current$$1, workInProgress, renderExpirationTime);\n    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n  return workInProgress.child;\n}\n\nfunction updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\n        'prop', getComponentName(Component), getCurrentFiberStackInDev);\n      }\n    }\n  }\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  var hasContext = void 0;\n  if (isContextProvider(Component)) {\n    hasContext = true;\n    pushContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderExpirationTime);\n\n  var instance = workInProgress.stateNode;\n  var shouldUpdate = void 0;\n  if (instance === null) {\n    if (current$$1 !== null) {\n      // An class component without an instance only mounts if it suspended\n      // inside a non- concurrent tree, in an inconsistent state. We want to\n      // tree it like a new mount, even though an empty version of it already\n      // committed. Disconnect the alternate pointers.\n      current$$1.alternate = null;\n      workInProgress.alternate = null;\n      // Since this is conceptually a new fiber, schedule a Placement effect\n      workInProgress.effectTag |= Placement;\n    }\n    // In the initial pass we might need to construct the instance.\n    constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);\n    mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);\n    shouldUpdate = true;\n  } else if (current$$1 === null) {\n    // In a resume, we'll already have an instance we can reuse.\n    shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);\n  } else {\n    shouldUpdate = updateClassInstance(current$$1, workInProgress, Component, nextProps, renderExpirationTime);\n  }\n  var nextUnitOfWork = finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime);\n  {\n    var inst = workInProgress.stateNode;\n    if (inst.props !== nextProps) {\n      !didWarnAboutReassigningProps ? warning$1(false, 'It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentName(workInProgress.type) || 'a component') : void 0;\n      didWarnAboutReassigningProps = true;\n    }\n  }\n  return nextUnitOfWork;\n}\n\nfunction finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {\n  // Refs should update even if shouldComponentUpdate returns false\n  markRef(current$$1, workInProgress);\n\n  var didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;\n\n  if (!shouldUpdate && !didCaptureError) {\n    // Context providers should defer to sCU for rendering\n    if (hasContext) {\n      invalidateContextProvider(workInProgress, Component, false);\n    }\n\n    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\n  }\n\n  var instance = workInProgress.stateNode;\n\n  // Rerender\n  ReactCurrentOwner$3.current = workInProgress;\n  var nextChildren = void 0;\n  if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {\n    // If we captured an error, but getDerivedStateFrom catch is not defined,\n    // unmount all the children. componentDidCatch will schedule an update to\n    // re-render a fallback. This is temporary until we migrate everyone to\n    // the new API.\n    // TODO: Warn in a future release.\n    nextChildren = null;\n\n    if (enableProfilerTimer) {\n      stopProfilerTimerIfRunning(workInProgress);\n    }\n  } else {\n    {\n      setCurrentPhase('render');\n      nextChildren = instance.render();\n      if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\n        instance.render();\n      }\n      setCurrentPhase(null);\n    }\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n  if (current$$1 !== null && didCaptureError) {\n    // If we're recovering from an error, reconcile without reusing any of\n    // the existing children. Conceptually, the normal children and the children\n    // that are shown on error are two different sets, so we shouldn't reuse\n    // normal children even if their identities match.\n    forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime);\n  } else {\n    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n  }\n\n  // Memoize state using the values we just used to render.\n  // TODO: Restructure so we never read values from the instance.\n  workInProgress.memoizedState = instance.state;\n\n  // The context might have changed so we need to recalculate it.\n  if (hasContext) {\n    invalidateContextProvider(workInProgress, Component, true);\n  }\n\n  return workInProgress.child;\n}\n\nfunction pushHostRootContext(workInProgress) {\n  var root = workInProgress.stateNode;\n  if (root.pendingContext) {\n    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);\n  } else if (root.context) {\n    // Should always be set\n    pushTopLevelContextObject(workInProgress, root.context, false);\n  }\n  pushHostContainer(workInProgress, root.containerInfo);\n}\n\nfunction updateHostRoot(current$$1, workInProgress, renderExpirationTime) {\n  pushHostRootContext(workInProgress);\n  var updateQueue = workInProgress.updateQueue;\n  !(updateQueue !== null) ? invariant(false, 'If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n  var nextProps = workInProgress.pendingProps;\n  var prevState = workInProgress.memoizedState;\n  var prevChildren = prevState !== null ? prevState.element : null;\n  processUpdateQueue(workInProgress, updateQueue, nextProps, null, renderExpirationTime);\n  var nextState = workInProgress.memoizedState;\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  var nextChildren = nextState.element;\n  if (nextChildren === prevChildren) {\n    // If the state is the same as before, that's a bailout because we had\n    // no work that expires at this time.\n    resetHydrationState();\n    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\n  }\n  var root = workInProgress.stateNode;\n  if ((current$$1 === null || current$$1.child === null) && root.hydrate && enterHydrationState(workInProgress)) {\n    // If we don't have any current children this might be the first pass.\n    // We always try to hydrate. If this isn't a hydration pass there won't\n    // be any children to hydrate which is effectively the same thing as\n    // not hydrating.\n\n    // This is a bit of a hack. We track the host root as a placement to\n    // know that we're currently in a mounting state. That way isMounted\n    // works as expected. We must reset this before committing.\n    // TODO: Delete this when we delete isMounted and findDOMNode.\n    workInProgress.effectTag |= Placement;\n\n    // Ensure that children mount into this root without tracking\n    // side-effects. This ensures that we don't store Placement effects on\n    // nodes that will be hydrated.\n    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);\n  } else {\n    // Otherwise reset hydration state in case we aborted and resumed another\n    // root.\n    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n    resetHydrationState();\n  }\n  return workInProgress.child;\n}\n\nfunction updateHostComponent(current$$1, workInProgress, renderExpirationTime) {\n  pushHostContext(workInProgress);\n\n  if (current$$1 === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n\n  var type = workInProgress.type;\n  var nextProps = workInProgress.pendingProps;\n  var prevProps = current$$1 !== null ? current$$1.memoizedProps : null;\n\n  var nextChildren = nextProps.children;\n  var isDirectTextChild = shouldSetTextContent(type, nextProps);\n\n  if (isDirectTextChild) {\n    // We special case a direct text child of a host node. This is a common\n    // case. We won't handle it as a reified child. We will instead handle\n    // this in the host environment that also have access to this prop. That\n    // avoids allocating another HostText fiber and traversing it.\n    nextChildren = null;\n  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.effectTag |= ContentReset;\n  }\n\n  markRef(current$$1, workInProgress);\n\n  // Check the host config to see if the children are offscreen/hidden.\n  if (renderExpirationTime !== Never && workInProgress.mode & ConcurrentMode && shouldDeprioritizeSubtree(type, nextProps)) {\n    // Schedule this fiber to re-render at offscreen priority. Then bailout.\n    workInProgress.expirationTime = workInProgress.childExpirationTime = Never;\n    return null;\n  }\n\n  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n  return workInProgress.child;\n}\n\nfunction updateHostText(current$$1, workInProgress) {\n  if (current$$1 === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n  // Nothing to do here. This is terminal. We'll do the completion step\n  // immediately after.\n  return null;\n}\n\nfunction mountLazyComponent(_current, workInProgress, elementType, updateExpirationTime, renderExpirationTime) {\n  if (_current !== null) {\n    // An lazy component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.effectTag |= Placement;\n  }\n\n  var props = workInProgress.pendingProps;\n  // We can't start a User Timing measurement with correct label yet.\n  // Cancel and resume right after we know the tag.\n  cancelWorkTimer(workInProgress);\n  var Component = readLazyComponentType(elementType);\n  // Store the unwrapped component in the type.\n  workInProgress.type = Component;\n  var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);\n  startWorkTimer(workInProgress);\n  var resolvedProps = resolveDefaultProps(Component, props);\n  var child = void 0;\n  switch (resolvedTag) {\n    case FunctionComponent:\n      {\n        {\n          validateFunctionComponentInDev(workInProgress, Component);\n        }\n        child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);\n        break;\n      }\n    case ClassComponent:\n      {\n        child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);\n        break;\n      }\n    case ForwardRef:\n      {\n        child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderExpirationTime);\n        break;\n      }\n    case MemoComponent:\n      {\n        {\n          if (workInProgress.type !== workInProgress.elementType) {\n            var outerPropTypes = Component.propTypes;\n            if (outerPropTypes) {\n              checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only\n              'prop', getComponentName(Component), getCurrentFiberStackInDev);\n            }\n          }\n        }\n        child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n        updateExpirationTime, renderExpirationTime);\n        break;\n      }\n    default:\n      {\n        var hint = '';\n        {\n          if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {\n            hint = ' Did you wrap a component in React.lazy() more than once?';\n          }\n        }\n        // This message intentionally doesn't mention ForwardRef or MemoComponent\n        // because the fact that it's a separate type of work is an\n        // implementation detail.\n        invariant(false, 'Element type is invalid. Received a promise that resolves to: %s. Lazy element type must resolve to a class or function.%s', Component, hint);\n      }\n  }\n  return child;\n}\n\nfunction mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderExpirationTime) {\n  if (_current !== null) {\n    // An incomplete component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.effectTag |= Placement;\n  }\n\n  // Promote the fiber to a class and try rendering again.\n  workInProgress.tag = ClassComponent;\n\n  // The rest of this function is a fork of `updateClassComponent`\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  var hasContext = void 0;\n  if (isContextProvider(Component)) {\n    hasContext = true;\n    pushContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderExpirationTime);\n\n  constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);\n  mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);\n\n  return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);\n}\n\nfunction mountIndeterminateComponent(_current, workInProgress, Component, renderExpirationTime) {\n  if (_current !== null) {\n    // An indeterminate component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.effectTag |= Placement;\n  }\n\n  var props = workInProgress.pendingProps;\n  var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);\n  var context = getMaskedContext(workInProgress, unmaskedContext);\n\n  prepareToReadContext(workInProgress, renderExpirationTime);\n\n  var value = void 0;\n\n  {\n    if (Component.prototype && typeof Component.prototype.render === 'function') {\n      var componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutBadClass[componentName]) {\n        warningWithoutStack$1(false, \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n\n    if (workInProgress.mode & StrictMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n    }\n\n    ReactCurrentOwner$3.current = workInProgress;\n    value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);\n  }\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n\n  if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {\n    // Proceed under the assumption that this is a class instance\n    workInProgress.tag = ClassComponent;\n\n    // Throw out any hooks that were used.\n    resetHooks();\n\n    // Push context providers early to prevent context stack mismatches.\n    // During mounting we don't know the child context yet as the instance doesn't exist.\n    // We will invalidate the child context in finishClassComponent() right after rendering.\n    var hasContext = false;\n    if (isContextProvider(Component)) {\n      hasContext = true;\n      pushContextProvider(workInProgress);\n    } else {\n      hasContext = false;\n    }\n\n    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;\n\n    var getDerivedStateFromProps = Component.getDerivedStateFromProps;\n    if (typeof getDerivedStateFromProps === 'function') {\n      applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);\n    }\n\n    adoptClassInstance(workInProgress, value);\n    mountClassInstance(workInProgress, Component, props, renderExpirationTime);\n    return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);\n  } else {\n    // Proceed under the assumption that this is a function component\n    workInProgress.tag = FunctionComponent;\n    {\n      if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\n        // Only double-render components with Hooks\n        if (workInProgress.memoizedState !== null) {\n          value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);\n        }\n      }\n    }\n    reconcileChildren(null, workInProgress, value, renderExpirationTime);\n    {\n      validateFunctionComponentInDev(workInProgress, Component);\n    }\n    return workInProgress.child;\n  }\n}\n\nfunction validateFunctionComponentInDev(workInProgress, Component) {\n  if (Component) {\n    !!Component.childContextTypes ? warningWithoutStack$1(false, '%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component') : void 0;\n  }\n  if (workInProgress.ref !== null) {\n    var info = '';\n    var ownerName = getCurrentFiberOwnerNameInDevOrNull();\n    if (ownerName) {\n      info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n    }\n\n    var warningKey = ownerName || workInProgress._debugID || '';\n    var debugSource = workInProgress._debugSource;\n    if (debugSource) {\n      warningKey = debugSource.fileName + ':' + debugSource.lineNumber;\n    }\n    if (!didWarnAboutFunctionRefs[warningKey]) {\n      didWarnAboutFunctionRefs[warningKey] = true;\n      warning$1(false, 'Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);\n    }\n  }\n\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    var componentName = getComponentName(Component) || 'Unknown';\n\n    if (!didWarnAboutGetDerivedStateOnFunctionComponent[componentName]) {\n      warningWithoutStack$1(false, '%s: Function components do not support getDerivedStateFromProps.', componentName);\n      didWarnAboutGetDerivedStateOnFunctionComponent[componentName] = true;\n    }\n  }\n\n  if (typeof Component.contextType === 'object' && Component.contextType !== null) {\n    var _componentName = getComponentName(Component) || 'Unknown';\n\n    if (!didWarnAboutContextTypeOnFunctionComponent[_componentName]) {\n      warningWithoutStack$1(false, '%s: Function components do not support contextType.', _componentName);\n      didWarnAboutContextTypeOnFunctionComponent[_componentName] = true;\n    }\n  }\n}\n\nfunction updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {\n  var mode = workInProgress.mode;\n  var nextProps = workInProgress.pendingProps;\n\n  // We should attempt to render the primary children unless this boundary\n  // already suspended during this render (`alreadyCaptured` is true).\n  var nextState = workInProgress.memoizedState;\n\n  var nextDidTimeout = void 0;\n  if ((workInProgress.effectTag & DidCapture) === NoEffect) {\n    // This is the first attempt.\n    nextState = null;\n    nextDidTimeout = false;\n  } else {\n    // Something in this boundary's subtree already suspended. Switch to\n    // rendering the fallback children.\n    nextState = {\n      timedOutAt: nextState !== null ? nextState.timedOutAt : NoWork\n    };\n    nextDidTimeout = true;\n    workInProgress.effectTag &= ~DidCapture;\n  }\n\n  // This next part is a bit confusing. If the children timeout, we switch to\n  // showing the fallback children in place of the \"primary\" children.\n  // However, we don't want to delete the primary children because then their\n  // state will be lost (both the React state and the host state, e.g.\n  // uncontrolled form inputs). Instead we keep them mounted and hide them.\n  // Both the fallback children AND the primary children are rendered at the\n  // same time. Once the primary children are un-suspended, we can delete\n  // the fallback children — don't need to preserve their state.\n  //\n  // The two sets of children are siblings in the host environment, but\n  // semantically, for purposes of reconciliation, they are two separate sets.\n  // So we store them using two fragment fibers.\n  //\n  // However, we want to avoid allocating extra fibers for every placeholder.\n  // They're only necessary when the children time out, because that's the\n  // only time when both sets are mounted.\n  //\n  // So, the extra fragment fibers are only used if the children time out.\n  // Otherwise, we render the primary children directly. This requires some\n  // custom reconciliation logic to preserve the state of the primary\n  // children. It's essentially a very basic form of re-parenting.\n\n  // `child` points to the child fiber. In the normal case, this is the first\n  // fiber of the primary children set. In the timed-out case, it's a\n  // a fragment fiber containing the primary children.\n  var child = void 0;\n  // `next` points to the next fiber React should render. In the normal case,\n  // it's the same as `child`: the first fiber of the primary children set.\n  // In the timed-out case, it's a fragment fiber containing the *fallback*\n  // children -- we skip over the primary children entirely.\n  var next = void 0;\n  if (current$$1 === null) {\n    if (enableSuspenseServerRenderer) {\n      // If we're currently hydrating, try to hydrate this boundary.\n      // But only if this has a fallback.\n      if (nextProps.fallback !== undefined) {\n        tryToClaimNextHydratableInstance(workInProgress);\n        // This could've changed the tag if this was a dehydrated suspense component.\n        if (workInProgress.tag === DehydratedSuspenseComponent) {\n          return updateDehydratedSuspenseComponent(null, workInProgress, renderExpirationTime);\n        }\n      }\n    }\n\n    // This is the initial mount. This branch is pretty simple because there's\n    // no previous state that needs to be preserved.\n    if (nextDidTimeout) {\n      // Mount separate fragments for primary and fallback children.\n      var nextFallbackChildren = nextProps.fallback;\n      var primaryChildFragment = createFiberFromFragment(null, mode, NoWork, null);\n\n      if ((workInProgress.mode & ConcurrentMode) === NoContext) {\n        // Outside of concurrent mode, we commit the effects from the\n        var progressedState = workInProgress.memoizedState;\n        var progressedPrimaryChild = progressedState !== null ? workInProgress.child.child : workInProgress.child;\n        primaryChildFragment.child = progressedPrimaryChild;\n      }\n\n      var fallbackChildFragment = createFiberFromFragment(nextFallbackChildren, mode, renderExpirationTime, null);\n      primaryChildFragment.sibling = fallbackChildFragment;\n      child = primaryChildFragment;\n      // Skip the primary children, and continue working on the\n      // fallback children.\n      next = fallbackChildFragment;\n      child.return = next.return = workInProgress;\n    } else {\n      // Mount the primary children without an intermediate fragment fiber.\n      var nextPrimaryChildren = nextProps.children;\n      child = next = mountChildFibers(workInProgress, null, nextPrimaryChildren, renderExpirationTime);\n    }\n  } else {\n    // This is an update. This branch is more complicated because we need to\n    // ensure the state of the primary children is preserved.\n    var prevState = current$$1.memoizedState;\n    var prevDidTimeout = prevState !== null;\n    if (prevDidTimeout) {\n      // The current tree already timed out. That means each child set is\n      var currentPrimaryChildFragment = current$$1.child;\n      var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n      if (nextDidTimeout) {\n        // Still timed out. Reuse the current primary children by cloning\n        // its fragment. We're going to skip over these entirely.\n        var _nextFallbackChildren = nextProps.fallback;\n        var _primaryChildFragment = createWorkInProgress(currentPrimaryChildFragment, currentPrimaryChildFragment.pendingProps, NoWork);\n\n        if ((workInProgress.mode & ConcurrentMode) === NoContext) {\n          // Outside of concurrent mode, we commit the effects from the\n          var _progressedState = workInProgress.memoizedState;\n          var _progressedPrimaryChild = _progressedState !== null ? workInProgress.child.child : workInProgress.child;\n          if (_progressedPrimaryChild !== currentPrimaryChildFragment.child) {\n            _primaryChildFragment.child = _progressedPrimaryChild;\n          }\n        }\n\n        // Because primaryChildFragment is a new fiber that we're inserting as the\n        // parent of a new tree, we need to set its treeBaseDuration.\n        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n          // treeBaseDuration is the sum of all the child tree base durations.\n          var treeBaseDuration = 0;\n          var hiddenChild = _primaryChildFragment.child;\n          while (hiddenChild !== null) {\n            treeBaseDuration += hiddenChild.treeBaseDuration;\n            hiddenChild = hiddenChild.sibling;\n          }\n          _primaryChildFragment.treeBaseDuration = treeBaseDuration;\n        }\n\n        // Clone the fallback child fragment, too. These we'll continue\n        // working on.\n        var _fallbackChildFragment = _primaryChildFragment.sibling = createWorkInProgress(currentFallbackChildFragment, _nextFallbackChildren, currentFallbackChildFragment.expirationTime);\n        child = _primaryChildFragment;\n        _primaryChildFragment.childExpirationTime = NoWork;\n        // Skip the primary children, and continue working on the\n        // fallback children.\n        next = _fallbackChildFragment;\n        child.return = next.return = workInProgress;\n      } else {\n        // No longer suspended. Switch back to showing the primary children,\n        // and remove the intermediate fragment fiber.\n        var _nextPrimaryChildren = nextProps.children;\n        var currentPrimaryChild = currentPrimaryChildFragment.child;\n        var primaryChild = reconcileChildFibers(workInProgress, currentPrimaryChild, _nextPrimaryChildren, renderExpirationTime);\n\n        // If this render doesn't suspend, we need to delete the fallback\n        // children. Wait until the complete phase, after we've confirmed the\n        // fallback is no longer needed.\n        // TODO: Would it be better to store the fallback fragment on\n        // the stateNode?\n\n        // Continue rendering the children, like we normally do.\n        child = next = primaryChild;\n      }\n    } else {\n      // The current tree has not already timed out. That means the primary\n      // children are not wrapped in a fragment fiber.\n      var _currentPrimaryChild = current$$1.child;\n      if (nextDidTimeout) {\n        // Timed out. Wrap the children in a fragment fiber to keep them\n        // separate from the fallback children.\n        var _nextFallbackChildren2 = nextProps.fallback;\n        var _primaryChildFragment2 = createFiberFromFragment(\n        // It shouldn't matter what the pending props are because we aren't\n        // going to render this fragment.\n        null, mode, NoWork, null);\n        _primaryChildFragment2.child = _currentPrimaryChild;\n\n        // Even though we're creating a new fiber, there are no new children,\n        // because we're reusing an already mounted tree. So we don't need to\n        // schedule a placement.\n        // primaryChildFragment.effectTag |= Placement;\n\n        if ((workInProgress.mode & ConcurrentMode) === NoContext) {\n          // Outside of concurrent mode, we commit the effects from the\n          var _progressedState2 = workInProgress.memoizedState;\n          var _progressedPrimaryChild2 = _progressedState2 !== null ? workInProgress.child.child : workInProgress.child;\n          _primaryChildFragment2.child = _progressedPrimaryChild2;\n        }\n\n        // Because primaryChildFragment is a new fiber that we're inserting as the\n        // parent of a new tree, we need to set its treeBaseDuration.\n        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n          // treeBaseDuration is the sum of all the child tree base durations.\n          var _treeBaseDuration = 0;\n          var _hiddenChild = _primaryChildFragment2.child;\n          while (_hiddenChild !== null) {\n            _treeBaseDuration += _hiddenChild.treeBaseDuration;\n            _hiddenChild = _hiddenChild.sibling;\n          }\n          _primaryChildFragment2.treeBaseDuration = _treeBaseDuration;\n        }\n\n        // Create a fragment from the fallback children, too.\n        var _fallbackChildFragment2 = _primaryChildFragment2.sibling = createFiberFromFragment(_nextFallbackChildren2, mode, renderExpirationTime, null);\n        _fallbackChildFragment2.effectTag |= Placement;\n        child = _primaryChildFragment2;\n        _primaryChildFragment2.childExpirationTime = NoWork;\n        // Skip the primary children, and continue working on the\n        // fallback children.\n        next = _fallbackChildFragment2;\n        child.return = next.return = workInProgress;\n      } else {\n        // Still haven't timed out.  Continue rendering the children, like we\n        // normally do.\n        var _nextPrimaryChildren2 = nextProps.children;\n        next = child = reconcileChildFibers(workInProgress, _currentPrimaryChild, _nextPrimaryChildren2, renderExpirationTime);\n      }\n    }\n    workInProgress.stateNode = current$$1.stateNode;\n  }\n\n  workInProgress.memoizedState = nextState;\n  workInProgress.child = child;\n  return next;\n}\n\nfunction updateDehydratedSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {\n  if (current$$1 === null) {\n    // During the first pass, we'll bail out and not drill into the children.\n    // Instead, we'll leave the content in place and try to hydrate it later.\n    workInProgress.expirationTime = Never;\n    return null;\n  }\n  // We use childExpirationTime to indicate that a child might depend on context, so if\n  // any context has changed, we need to treat is as if the input might have changed.\n  var hasContextChanged$$1 = current$$1.childExpirationTime >= renderExpirationTime;\n  if (didReceiveUpdate || hasContextChanged$$1) {\n    // This boundary has changed since the first render. This means that we are now unable to\n    // hydrate it. We might still be able to hydrate it using an earlier expiration time but\n    // during this render we can't. Instead, we're going to delete the whole subtree and\n    // instead inject a new real Suspense boundary to take its place, which may render content\n    // or fallback. The real Suspense boundary will suspend for a while so we have some time\n    // to ensure it can produce real content, but all state and pending events will be lost.\n\n    // Detach from the current dehydrated boundary.\n    current$$1.alternate = null;\n    workInProgress.alternate = null;\n\n    // Insert a deletion in the effect list.\n    var returnFiber = workInProgress.return;\n    !(returnFiber !== null) ? invariant(false, 'Suspense boundaries are never on the root. This is probably a bug in React.') : void 0;\n    var last = returnFiber.lastEffect;\n    if (last !== null) {\n      last.nextEffect = current$$1;\n      returnFiber.lastEffect = current$$1;\n    } else {\n      returnFiber.firstEffect = returnFiber.lastEffect = current$$1;\n    }\n    current$$1.nextEffect = null;\n    current$$1.effectTag = Deletion;\n\n    // Upgrade this work in progress to a real Suspense component.\n    workInProgress.tag = SuspenseComponent;\n    workInProgress.stateNode = null;\n    workInProgress.memoizedState = null;\n    // This is now an insertion.\n    workInProgress.effectTag |= Placement;\n    // Retry as a real Suspense component.\n    return updateSuspenseComponent(null, workInProgress, renderExpirationTime);\n  }\n  if ((workInProgress.effectTag & DidCapture) === NoEffect) {\n    // This is the first attempt.\n    reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress);\n    var nextProps = workInProgress.pendingProps;\n    var nextChildren = nextProps.children;\n    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);\n    return workInProgress.child;\n  } else {\n    // Something suspended. Leave the existing children in place.\n    // TODO: In non-concurrent mode, should we commit the nodes we have hydrated so far?\n    workInProgress.child = null;\n    return null;\n  }\n}\n\nfunction updatePortalComponent(current$$1, workInProgress, renderExpirationTime) {\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n  var nextChildren = workInProgress.pendingProps;\n  if (current$$1 === null) {\n    // Portals are special because we don't append the children during mount\n    // but at commit. Therefore we need to track insertions which the normal\n    // flow doesn't do during mount. This doesn't happen at the root because\n    // the root always starts with a \"current\" with a null child.\n    // TODO: Consider unifying this with how the root works.\n    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);\n  } else {\n    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n  }\n  return workInProgress.child;\n}\n\nfunction updateContextProvider(current$$1, workInProgress, renderExpirationTime) {\n  var providerType = workInProgress.type;\n  var context = providerType._context;\n\n  var newProps = workInProgress.pendingProps;\n  var oldProps = workInProgress.memoizedProps;\n\n  var newValue = newProps.value;\n\n  {\n    var providerPropTypes = workInProgress.type.propTypes;\n\n    if (providerPropTypes) {\n      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider', getCurrentFiberStackInDev);\n    }\n  }\n\n  pushProvider(workInProgress, newValue);\n\n  if (oldProps !== null) {\n    var oldValue = oldProps.value;\n    var changedBits = calculateChangedBits(context, newValue, oldValue);\n    if (changedBits === 0) {\n      // No change. Bailout early if children are the same.\n      if (oldProps.children === newProps.children && !hasContextChanged()) {\n        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\n      }\n    } else {\n      // The context value changed. Search for matching consumers and schedule\n      // them to update.\n      propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);\n    }\n  }\n\n  var newChildren = newProps.children;\n  reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);\n  return workInProgress.child;\n}\n\nvar hasWarnedAboutUsingContextAsConsumer = false;\n\nfunction updateContextConsumer(current$$1, workInProgress, renderExpirationTime) {\n  var context = workInProgress.type;\n  // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n  {\n    if (context._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n          warning$1(false, 'Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n        }\n      }\n    } else {\n      context = context._context;\n    }\n  }\n  var newProps = workInProgress.pendingProps;\n  var render = newProps.children;\n\n  {\n    !(typeof render === 'function') ? warningWithoutStack$1(false, 'A context consumer was rendered with multiple children, or a child ' + \"that isn't a function. A context consumer expects a single child \" + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.') : void 0;\n  }\n\n  prepareToReadContext(workInProgress, renderExpirationTime);\n  var newValue = readContext(context, newProps.unstable_observedBits);\n  var newChildren = void 0;\n  {\n    ReactCurrentOwner$3.current = workInProgress;\n    setCurrentPhase('render');\n    newChildren = render(newValue);\n    setCurrentPhase(null);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n  reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);\n  return workInProgress.child;\n}\n\nfunction markWorkInProgressReceivedUpdate() {\n  didReceiveUpdate = true;\n}\n\nfunction bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {\n  cancelWorkTimer(workInProgress);\n\n  if (current$$1 !== null) {\n    // Reuse previous context list\n    workInProgress.contextDependencies = current$$1.contextDependencies;\n  }\n\n  if (enableProfilerTimer) {\n    // Don't update \"base\" render times for bailouts.\n    stopProfilerTimerIfRunning(workInProgress);\n  }\n\n  // Check if the children have any pending work.\n  var childExpirationTime = workInProgress.childExpirationTime;\n  if (childExpirationTime < renderExpirationTime) {\n    // The children don't have any work either. We can skip them.\n    // TODO: Once we add back resuming, we should check if the children are\n    // a work-in-progress set. If so, we need to transfer their effects.\n    return null;\n  } else {\n    // This fiber doesn't have work, but its subtree does. Clone the child\n    // fibers and continue.\n    cloneChildFibers(current$$1, workInProgress);\n    return workInProgress.child;\n  }\n}\n\nfunction beginWork(current$$1, workInProgress, renderExpirationTime) {\n  var updateExpirationTime = workInProgress.expirationTime;\n\n  if (current$$1 !== null) {\n    var oldProps = current$$1.memoizedProps;\n    var newProps = workInProgress.pendingProps;\n\n    if (oldProps !== newProps || hasContextChanged()) {\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n    } else if (updateExpirationTime < renderExpirationTime) {\n      didReceiveUpdate = false;\n      // This fiber does not have any pending work. Bailout without entering\n      // the begin phase. There's still some bookkeeping we that needs to be done\n      // in this optimized path, mostly pushing stuff onto the stack.\n      switch (workInProgress.tag) {\n        case HostRoot:\n          pushHostRootContext(workInProgress);\n          resetHydrationState();\n          break;\n        case HostComponent:\n          pushHostContext(workInProgress);\n          break;\n        case ClassComponent:\n          {\n            var Component = workInProgress.type;\n            if (isContextProvider(Component)) {\n              pushContextProvider(workInProgress);\n            }\n            break;\n          }\n        case HostPortal:\n          pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n          break;\n        case ContextProvider:\n          {\n            var newValue = workInProgress.memoizedProps.value;\n            pushProvider(workInProgress, newValue);\n            break;\n          }\n        case Profiler:\n          if (enableProfilerTimer) {\n            workInProgress.effectTag |= Update;\n          }\n          break;\n        case SuspenseComponent:\n          {\n            var state = workInProgress.memoizedState;\n            var didTimeout = state !== null;\n            if (didTimeout) {\n              // If this boundary is currently timed out, we need to decide\n              // whether to retry the primary children, or to skip over it and\n              // go straight to the fallback. Check the priority of the primary\n              var primaryChildFragment = workInProgress.child;\n              var primaryChildExpirationTime = primaryChildFragment.childExpirationTime;\n              if (primaryChildExpirationTime !== NoWork && primaryChildExpirationTime >= renderExpirationTime) {\n                // The primary children have pending work. Use the normal path\n                // to attempt to render the primary children again.\n                return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);\n              } else {\n                // The primary children do not have pending work with sufficient\n                // priority. Bailout.\n                var child = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\n                if (child !== null) {\n                  // The fallback children have pending work. Skip over the\n                  // primary children and work on the fallback.\n                  return child.sibling;\n                } else {\n                  return null;\n                }\n              }\n            }\n            break;\n          }\n        case DehydratedSuspenseComponent:\n          {\n            if (enableSuspenseServerRenderer) {\n              // We know that this component will suspend again because if it has\n              // been unsuspended it has committed as a regular Suspense component.\n              // If it needs to be retried, it should have work scheduled on it.\n              workInProgress.effectTag |= DidCapture;\n              break;\n            }\n          }\n      }\n      return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\n    }\n  } else {\n    didReceiveUpdate = false;\n  }\n\n  // Before entering the begin phase, clear the expiration time.\n  workInProgress.expirationTime = NoWork;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n      {\n        var elementType = workInProgress.elementType;\n        return mountIndeterminateComponent(current$$1, workInProgress, elementType, renderExpirationTime);\n      }\n    case LazyComponent:\n      {\n        var _elementType = workInProgress.elementType;\n        return mountLazyComponent(current$$1, workInProgress, _elementType, updateExpirationTime, renderExpirationTime);\n      }\n    case FunctionComponent:\n      {\n        var _Component = workInProgress.type;\n        var unresolvedProps = workInProgress.pendingProps;\n        var resolvedProps = workInProgress.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);\n        return updateFunctionComponent(current$$1, workInProgress, _Component, resolvedProps, renderExpirationTime);\n      }\n    case ClassComponent:\n      {\n        var _Component2 = workInProgress.type;\n        var _unresolvedProps = workInProgress.pendingProps;\n        var _resolvedProps = workInProgress.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);\n        return updateClassComponent(current$$1, workInProgress, _Component2, _resolvedProps, renderExpirationTime);\n      }\n    case HostRoot:\n      return updateHostRoot(current$$1, workInProgress, renderExpirationTime);\n    case HostComponent:\n      return updateHostComponent(current$$1, workInProgress, renderExpirationTime);\n    case HostText:\n      return updateHostText(current$$1, workInProgress);\n    case SuspenseComponent:\n      return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);\n    case HostPortal:\n      return updatePortalComponent(current$$1, workInProgress, renderExpirationTime);\n    case ForwardRef:\n      {\n        var type = workInProgress.type;\n        var _unresolvedProps2 = workInProgress.pendingProps;\n        var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);\n        return updateForwardRef(current$$1, workInProgress, type, _resolvedProps2, renderExpirationTime);\n      }\n    case Fragment:\n      return updateFragment(current$$1, workInProgress, renderExpirationTime);\n    case Mode:\n      return updateMode(current$$1, workInProgress, renderExpirationTime);\n    case Profiler:\n      return updateProfiler(current$$1, workInProgress, renderExpirationTime);\n    case ContextProvider:\n      return updateContextProvider(current$$1, workInProgress, renderExpirationTime);\n    case ContextConsumer:\n      return updateContextConsumer(current$$1, workInProgress, renderExpirationTime);\n    case MemoComponent:\n      {\n        var _type2 = workInProgress.type;\n        var _unresolvedProps3 = workInProgress.pendingProps;\n        // Resolve outer props first, then resolve inner props.\n        var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);\n        {\n          if (workInProgress.type !== workInProgress.elementType) {\n            var outerPropTypes = _type2.propTypes;\n            if (outerPropTypes) {\n              checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only\n              'prop', getComponentName(_type2), getCurrentFiberStackInDev);\n            }\n          }\n        }\n        _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);\n        return updateMemoComponent(current$$1, workInProgress, _type2, _resolvedProps3, updateExpirationTime, renderExpirationTime);\n      }\n    case SimpleMemoComponent:\n      {\n        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);\n      }\n    case IncompleteClassComponent:\n      {\n        var _Component3 = workInProgress.type;\n        var _unresolvedProps4 = workInProgress.pendingProps;\n        var _resolvedProps4 = workInProgress.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);\n        return mountIncompleteClassComponent(current$$1, workInProgress, _Component3, _resolvedProps4, renderExpirationTime);\n      }\n    case DehydratedSuspenseComponent:\n      {\n        if (enableSuspenseServerRenderer) {\n          return updateDehydratedSuspenseComponent(current$$1, workInProgress, renderExpirationTime);\n        }\n        break;\n      }\n  }\n  invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');\n}\n\nvar valueCursor = createCursor(null);\n\nvar rendererSigil = void 0;\n{\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\nvar currentlyRenderingFiber = null;\nvar lastContextDependency = null;\nvar lastContextWithAllBitsObserved = null;\n\nvar isDisallowedContextReadInDEV = false;\n\nfunction resetContextDependences() {\n  // This is called right before React yields execution, to ensure `readContext`\n  // cannot be called outside the render phase.\n  currentlyRenderingFiber = null;\n  lastContextDependency = null;\n  lastContextWithAllBitsObserved = null;\n  {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nfunction enterDisallowedContextReadInDEV() {\n  {\n    isDisallowedContextReadInDEV = true;\n  }\n}\n\nfunction exitDisallowedContextReadInDEV() {\n  {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nfunction pushProvider(providerFiber, nextValue) {\n  var context = providerFiber.type._context;\n\n  if (isPrimaryRenderer) {\n    push(valueCursor, context._currentValue, providerFiber);\n\n    context._currentValue = nextValue;\n    {\n      !(context._currentRenderer === undefined || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;\n      context._currentRenderer = rendererSigil;\n    }\n  } else {\n    push(valueCursor, context._currentValue2, providerFiber);\n\n    context._currentValue2 = nextValue;\n    {\n      !(context._currentRenderer2 === undefined || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n}\n\nfunction popProvider(providerFiber) {\n  var currentValue = valueCursor.current;\n\n  pop(valueCursor, providerFiber);\n\n  var context = providerFiber.type._context;\n  if (isPrimaryRenderer) {\n    context._currentValue = currentValue;\n  } else {\n    context._currentValue2 = currentValue;\n  }\n}\n\nfunction calculateChangedBits(context, newValue, oldValue) {\n  if (is(oldValue, newValue)) {\n    // No change\n    return 0;\n  } else {\n    var changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : maxSigned31BitInt;\n\n    {\n      !((changedBits & maxSigned31BitInt) === changedBits) ? warning$1(false, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits) : void 0;\n    }\n    return changedBits | 0;\n  }\n}\n\nfunction scheduleWorkOnParentPath(parent, renderExpirationTime) {\n  // Update the child expiration time of all the ancestors, including\n  // the alternates.\n  var node = parent;\n  while (node !== null) {\n    var alternate = node.alternate;\n    if (node.childExpirationTime < renderExpirationTime) {\n      node.childExpirationTime = renderExpirationTime;\n      if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {\n        alternate.childExpirationTime = renderExpirationTime;\n      }\n    } else if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {\n      alternate.childExpirationTime = renderExpirationTime;\n    } else {\n      // Neither alternate was updated, which means the rest of the\n      // ancestor path already has sufficient priority.\n      break;\n    }\n    node = node.return;\n  }\n}\n\nfunction propagateContextChange(workInProgress, context, changedBits, renderExpirationTime) {\n  var fiber = workInProgress.child;\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n  while (fiber !== null) {\n    var nextFiber = void 0;\n\n    // Visit this fiber.\n    var list = fiber.contextDependencies;\n    if (list !== null) {\n      nextFiber = fiber.child;\n\n      var dependency = list.first;\n      while (dependency !== null) {\n        // Check if the context matches.\n        if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {\n          // Match! Schedule an update on this fiber.\n\n          if (fiber.tag === ClassComponent) {\n            // Schedule a force update on the work-in-progress.\n            var update = createUpdate(renderExpirationTime);\n            update.tag = ForceUpdate;\n            // TODO: Because we don't have a work-in-progress, this will add the\n            // update to the current fiber, too, which means it will persist even if\n            // this render is thrown away. Since it's a race condition, not sure it's\n            // worth fixing.\n            enqueueUpdate(fiber, update);\n          }\n\n          if (fiber.expirationTime < renderExpirationTime) {\n            fiber.expirationTime = renderExpirationTime;\n          }\n          var alternate = fiber.alternate;\n          if (alternate !== null && alternate.expirationTime < renderExpirationTime) {\n            alternate.expirationTime = renderExpirationTime;\n          }\n\n          scheduleWorkOnParentPath(fiber.return, renderExpirationTime);\n\n          // Mark the expiration time on the list, too.\n          if (list.expirationTime < renderExpirationTime) {\n            list.expirationTime = renderExpirationTime;\n          }\n\n          // Since we already found a match, we can stop traversing the\n          // dependency list.\n          break;\n        }\n        dependency = dependency.next;\n      }\n    } else if (fiber.tag === ContextProvider) {\n      // Don't scan deeper if this is a matching provider\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n    } else if (enableSuspenseServerRenderer && fiber.tag === DehydratedSuspenseComponent) {\n      // If a dehydrated suspense component is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates on its children.\n      if (fiber.expirationTime < renderExpirationTime) {\n        fiber.expirationTime = renderExpirationTime;\n      }\n      var _alternate = fiber.alternate;\n      if (_alternate !== null && _alternate.expirationTime < renderExpirationTime) {\n        _alternate.expirationTime = renderExpirationTime;\n      }\n      // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childExpirationTime on\n      // this fiber to indicate that a context has changed.\n      scheduleWorkOnParentPath(fiber, renderExpirationTime);\n      nextFiber = fiber.sibling;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n        var sibling = nextFiber.sibling;\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        }\n        // No more siblings. Traverse up.\n        nextFiber = nextFiber.return;\n      }\n    }\n    fiber = nextFiber;\n  }\n}\n\nfunction prepareToReadContext(workInProgress, renderExpirationTime) {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastContextWithAllBitsObserved = null;\n\n  var currentDependencies = workInProgress.contextDependencies;\n  if (currentDependencies !== null && currentDependencies.expirationTime >= renderExpirationTime) {\n    // Context list has a pending update. Mark that this fiber performed work.\n    markWorkInProgressReceivedUpdate();\n  }\n\n  // Reset the work-in-progress list\n  workInProgress.contextDependencies = null;\n}\n\nfunction readContext(context, observedBits) {\n  {\n    // This warning would fire if you read context inside a Hook like useMemo.\n    // Unlike the class check below, it's not enforced in production for perf.\n    !!isDisallowedContextReadInDEV ? warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().') : void 0;\n  }\n\n  if (lastContextWithAllBitsObserved === context) {\n    // Nothing to do. We already observe everything in this context.\n  } else if (observedBits === false || observedBits === 0) {\n    // Do not observe any updates.\n  } else {\n    var resolvedObservedBits = void 0; // Avoid deopting on observable arguments or heterogeneous types.\n    if (typeof observedBits !== 'number' || observedBits === maxSigned31BitInt) {\n      // Observe all updates.\n      lastContextWithAllBitsObserved = context;\n      resolvedObservedBits = maxSigned31BitInt;\n    } else {\n      resolvedObservedBits = observedBits;\n    }\n\n    var contextItem = {\n      context: context,\n      observedBits: resolvedObservedBits,\n      next: null\n    };\n\n    if (lastContextDependency === null) {\n      !(currentlyRenderingFiber !== null) ? invariant(false, 'Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().') : void 0;\n\n      // This is the first dependency for this component. Create a new list.\n      lastContextDependency = contextItem;\n      currentlyRenderingFiber.contextDependencies = {\n        first: contextItem,\n        expirationTime: NoWork\n      };\n    } else {\n      // Append a new context item.\n      lastContextDependency = lastContextDependency.next = contextItem;\n    }\n  }\n  return isPrimaryRenderer ? context._currentValue : context._currentValue2;\n}\n\n// UpdateQueue is a linked list of prioritized updates.\n//\n// Like fibers, update queues come in pairs: a current queue, which represents\n// the visible state of the screen, and a work-in-progress queue, which can be\n// mutated and processed asynchronously before it is committed — a form of\n// double buffering. If a work-in-progress render is discarded before finishing,\n// we create a new work-in-progress by cloning the current queue.\n//\n// Both queues share a persistent, singly-linked list structure. To schedule an\n// update, we append it to the end of both queues. Each queue maintains a\n// pointer to first update in the persistent list that hasn't been processed.\n// The work-in-progress pointer always has a position equal to or greater than\n// the current queue, since we always work on that one. The current queue's\n// pointer is only updated during the commit phase, when we swap in the\n// work-in-progress.\n//\n// For example:\n//\n//   Current pointer:           A - B - C - D - E - F\n//   Work-in-progress pointer:              D - E - F\n//                                          ^\n//                                          The work-in-progress queue has\n//                                          processed more updates than current.\n//\n// The reason we append to both queues is because otherwise we might drop\n// updates without ever processing them. For example, if we only add updates to\n// the work-in-progress queue, some updates could be lost whenever a work-in\n// -progress render restarts by cloning from current. Similarly, if we only add\n// updates to the current queue, the updates will be lost whenever an already\n// in-progress queue commits and swaps with the current queue. However, by\n// adding to both queues, we guarantee that the update will be part of the next\n// work-in-progress. (And because the work-in-progress queue becomes the\n// current queue once it commits, there's no danger of applying the same\n// update twice.)\n//\n// Prioritization\n// --------------\n//\n// Updates are not sorted by priority, but by insertion; new updates are always\n// appended to the end of the list.\n//\n// The priority is still important, though. When processing the update queue\n// during the render phase, only the updates with sufficient priority are\n// included in the result. If we skip an update because it has insufficient\n// priority, it remains in the queue to be processed later, during a lower\n// priority render. Crucially, all updates subsequent to a skipped update also\n// remain in the queue *regardless of their priority*. That means high priority\n// updates are sometimes processed twice, at two separate priorities. We also\n// keep track of a base state, that represents the state before the first\n// update in the queue is applied.\n//\n// For example:\n//\n//   Given a base state of '', and the following queue of updates\n//\n//     A1 - B2 - C1 - D2\n//\n//   where the number indicates the priority, and the update is applied to the\n//   previous state by appending a letter, React will process these updates as\n//   two separate renders, one per distinct priority level:\n//\n//   First render, at priority 1:\n//     Base state: ''\n//     Updates: [A1, C1]\n//     Result state: 'AC'\n//\n//   Second render, at priority 2:\n//     Base state: 'A'            <-  The base state does not include C1,\n//                                    because B2 was skipped.\n//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2\n//     Result state: 'ABCD'\n//\n// Because we process updates in insertion order, and rebase high priority\n// updates when preceding updates are skipped, the final result is deterministic\n// regardless of priority. Intermediate state may vary according to system\n// resources, but the final state is always the same.\n\nvar UpdateState = 0;\nvar ReplaceState = 1;\nvar ForceUpdate = 2;\nvar CaptureUpdate = 3;\n\n// Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\nvar hasForceUpdate = false;\n\nvar didWarnUpdateInsideUpdate = void 0;\nvar currentlyProcessingQueue = void 0;\nvar resetCurrentlyProcessingQueue = void 0;\n{\n  didWarnUpdateInsideUpdate = false;\n  currentlyProcessingQueue = null;\n  resetCurrentlyProcessingQueue = function () {\n    currentlyProcessingQueue = null;\n  };\n}\n\nfunction createUpdateQueue(baseState) {\n  var queue = {\n    baseState: baseState,\n    firstUpdate: null,\n    lastUpdate: null,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n  return queue;\n}\n\nfunction cloneUpdateQueue(currentQueue) {\n  var queue = {\n    baseState: currentQueue.baseState,\n    firstUpdate: currentQueue.firstUpdate,\n    lastUpdate: currentQueue.lastUpdate,\n\n    // TODO: With resuming, if we bail out and resuse the child tree, we should\n    // keep these effects.\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n\n    firstEffect: null,\n    lastEffect: null,\n\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n  return queue;\n}\n\nfunction createUpdate(expirationTime) {\n  return {\n    expirationTime: expirationTime,\n\n    tag: UpdateState,\n    payload: null,\n    callback: null,\n\n    next: null,\n    nextEffect: null\n  };\n}\n\nfunction appendUpdateToQueue(queue, update) {\n  // Append the update to the end of the list.\n  if (queue.lastUpdate === null) {\n    // Queue is empty\n    queue.firstUpdate = queue.lastUpdate = update;\n  } else {\n    queue.lastUpdate.next = update;\n    queue.lastUpdate = update;\n  }\n}\n\nfunction enqueueUpdate(fiber, update) {\n  // Update queues are created lazily.\n  var alternate = fiber.alternate;\n  var queue1 = void 0;\n  var queue2 = void 0;\n  if (alternate === null) {\n    // There's only one fiber.\n    queue1 = fiber.updateQueue;\n    queue2 = null;\n    if (queue1 === null) {\n      queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);\n    }\n  } else {\n    // There are two owners.\n    queue1 = fiber.updateQueue;\n    queue2 = alternate.updateQueue;\n    if (queue1 === null) {\n      if (queue2 === null) {\n        // Neither fiber has an update queue. Create new ones.\n        queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);\n        queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);\n      } else {\n        // Only one fiber has an update queue. Clone to create a new one.\n        queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);\n      }\n    } else {\n      if (queue2 === null) {\n        // Only one fiber has an update queue. Clone to create a new one.\n        queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);\n      } else {\n        // Both owners have an update queue.\n      }\n    }\n  }\n  if (queue2 === null || queue1 === queue2) {\n    // There's only a single queue.\n    appendUpdateToQueue(queue1, update);\n  } else {\n    // There are two queues. We need to append the update to both queues,\n    // while accounting for the persistent structure of the list — we don't\n    // want the same update to be added multiple times.\n    if (queue1.lastUpdate === null || queue2.lastUpdate === null) {\n      // One of the queues is not empty. We must add the update to both queues.\n      appendUpdateToQueue(queue1, update);\n      appendUpdateToQueue(queue2, update);\n    } else {\n      // Both queues are non-empty. The last update is the same in both lists,\n      // because of structural sharing. So, only append to one of the lists.\n      appendUpdateToQueue(queue1, update);\n      // But we still need to update the `lastUpdate` pointer of queue2.\n      queue2.lastUpdate = update;\n    }\n  }\n\n  {\n    if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {\n      warningWithoutStack$1(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');\n      didWarnUpdateInsideUpdate = true;\n    }\n  }\n}\n\nfunction enqueueCapturedUpdate(workInProgress, update) {\n  // Captured updates go into a separate list, and only on the work-in-\n  // progress queue.\n  var workInProgressQueue = workInProgress.updateQueue;\n  if (workInProgressQueue === null) {\n    workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState);\n  } else {\n    // TODO: I put this here rather than createWorkInProgress so that we don't\n    // clone the queue unnecessarily. There's probably a better way to\n    // structure this.\n    workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);\n  }\n\n  // Append the update to the end of the list.\n  if (workInProgressQueue.lastCapturedUpdate === null) {\n    // This is the first render phase update\n    workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;\n  } else {\n    workInProgressQueue.lastCapturedUpdate.next = update;\n    workInProgressQueue.lastCapturedUpdate = update;\n  }\n}\n\nfunction ensureWorkInProgressQueueIsAClone(workInProgress, queue) {\n  var current = workInProgress.alternate;\n  if (current !== null) {\n    // If the work-in-progress queue is equal to the current queue,\n    // we need to clone it first.\n    if (queue === current.updateQueue) {\n      queue = workInProgress.updateQueue = cloneUpdateQueue(queue);\n    }\n  }\n  return queue;\n}\n\nfunction getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {\n  switch (update.tag) {\n    case ReplaceState:\n      {\n        var _payload = update.payload;\n        if (typeof _payload === 'function') {\n          // Updater function\n          {\n            enterDisallowedContextReadInDEV();\n            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\n              _payload.call(instance, prevState, nextProps);\n            }\n          }\n          var nextState = _payload.call(instance, prevState, nextProps);\n          {\n            exitDisallowedContextReadInDEV();\n          }\n          return nextState;\n        }\n        // State object\n        return _payload;\n      }\n    case CaptureUpdate:\n      {\n        workInProgress.effectTag = workInProgress.effectTag & ~ShouldCapture | DidCapture;\n      }\n    // Intentional fallthrough\n    case UpdateState:\n      {\n        var _payload2 = update.payload;\n        var partialState = void 0;\n        if (typeof _payload2 === 'function') {\n          // Updater function\n          {\n            enterDisallowedContextReadInDEV();\n            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\n              _payload2.call(instance, prevState, nextProps);\n            }\n          }\n          partialState = _payload2.call(instance, prevState, nextProps);\n          {\n            exitDisallowedContextReadInDEV();\n          }\n        } else {\n          // Partial state object\n          partialState = _payload2;\n        }\n        if (partialState === null || partialState === undefined) {\n          // Null and undefined are treated as no-ops.\n          return prevState;\n        }\n        // Merge the partial state and the previous state.\n        return _assign({}, prevState, partialState);\n      }\n    case ForceUpdate:\n      {\n        hasForceUpdate = true;\n        return prevState;\n      }\n  }\n  return prevState;\n}\n\nfunction processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {\n  hasForceUpdate = false;\n\n  queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);\n\n  {\n    currentlyProcessingQueue = queue;\n  }\n\n  // These values may change as we process the queue.\n  var newBaseState = queue.baseState;\n  var newFirstUpdate = null;\n  var newExpirationTime = NoWork;\n\n  // Iterate through the list of updates to compute the result.\n  var update = queue.firstUpdate;\n  var resultState = newBaseState;\n  while (update !== null) {\n    var updateExpirationTime = update.expirationTime;\n    if (updateExpirationTime < renderExpirationTime) {\n      // This update does not have sufficient priority. Skip it.\n      if (newFirstUpdate === null) {\n        // This is the first skipped update. It will be the first update in\n        // the new list.\n        newFirstUpdate = update;\n        // Since this is the first update that was skipped, the current result\n        // is the new base state.\n        newBaseState = resultState;\n      }\n      // Since this update will remain in the list, update the remaining\n      // expiration time.\n      if (newExpirationTime < updateExpirationTime) {\n        newExpirationTime = updateExpirationTime;\n      }\n    } else {\n      // This update does have sufficient priority. Process it and compute\n      // a new result.\n      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);\n      var _callback = update.callback;\n      if (_callback !== null) {\n        workInProgress.effectTag |= Callback;\n        // Set this to null, in case it was mutated during an aborted render.\n        update.nextEffect = null;\n        if (queue.lastEffect === null) {\n          queue.firstEffect = queue.lastEffect = update;\n        } else {\n          queue.lastEffect.nextEffect = update;\n          queue.lastEffect = update;\n        }\n      }\n    }\n    // Continue to the next update.\n    update = update.next;\n  }\n\n  // Separately, iterate though the list of captured updates.\n  var newFirstCapturedUpdate = null;\n  update = queue.firstCapturedUpdate;\n  while (update !== null) {\n    var _updateExpirationTime = update.expirationTime;\n    if (_updateExpirationTime < renderExpirationTime) {\n      // This update does not have sufficient priority. Skip it.\n      if (newFirstCapturedUpdate === null) {\n        // This is the first skipped captured update. It will be the first\n        // update in the new list.\n        newFirstCapturedUpdate = update;\n        // If this is the first update that was skipped, the current result is\n        // the new base state.\n        if (newFirstUpdate === null) {\n          newBaseState = resultState;\n        }\n      }\n      // Since this update will remain in the list, update the remaining\n      // expiration time.\n      if (newExpirationTime < _updateExpirationTime) {\n        newExpirationTime = _updateExpirationTime;\n      }\n    } else {\n      // This update does have sufficient priority. Process it and compute\n      // a new result.\n      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);\n      var _callback2 = update.callback;\n      if (_callback2 !== null) {\n        workInProgress.effectTag |= Callback;\n        // Set this to null, in case it was mutated during an aborted render.\n        update.nextEffect = null;\n        if (queue.lastCapturedEffect === null) {\n          queue.firstCapturedEffect = queue.lastCapturedEffect = update;\n        } else {\n          queue.lastCapturedEffect.nextEffect = update;\n          queue.lastCapturedEffect = update;\n        }\n      }\n    }\n    update = update.next;\n  }\n\n  if (newFirstUpdate === null) {\n    queue.lastUpdate = null;\n  }\n  if (newFirstCapturedUpdate === null) {\n    queue.lastCapturedUpdate = null;\n  } else {\n    workInProgress.effectTag |= Callback;\n  }\n  if (newFirstUpdate === null && newFirstCapturedUpdate === null) {\n    // We processed every update, without skipping. That means the new base\n    // state is the same as the result state.\n    newBaseState = resultState;\n  }\n\n  queue.baseState = newBaseState;\n  queue.firstUpdate = newFirstUpdate;\n  queue.firstCapturedUpdate = newFirstCapturedUpdate;\n\n  // Set the remaining expiration time to be whatever is remaining in the queue.\n  // This should be fine because the only two other things that contribute to\n  // expiration time are props and context. We're already in the middle of the\n  // begin phase by the time we start processing the queue, so we've already\n  // dealt with the props. Context in components that specify\n  // shouldComponentUpdate is tricky; but we'll have to account for\n  // that regardless.\n  workInProgress.expirationTime = newExpirationTime;\n  workInProgress.memoizedState = resultState;\n\n  {\n    currentlyProcessingQueue = null;\n  }\n}\n\nfunction callCallback(callback, context) {\n  !(typeof callback === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', callback) : void 0;\n  callback.call(context);\n}\n\nfunction resetHasForceUpdateBeforeProcessing() {\n  hasForceUpdate = false;\n}\n\nfunction checkHasForceUpdateAfterProcessing() {\n  return hasForceUpdate;\n}\n\nfunction commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime) {\n  // If the finished render included captured updates, and there are still\n  // lower priority updates left over, we need to keep the captured updates\n  // in the queue so that they are rebased and not dropped once we process the\n  // queue again at the lower priority.\n  if (finishedQueue.firstCapturedUpdate !== null) {\n    // Join the captured update list to the end of the normal list.\n    if (finishedQueue.lastUpdate !== null) {\n      finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;\n      finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;\n    }\n    // Clear the list of captured updates.\n    finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;\n  }\n\n  // Commit the effects\n  commitUpdateEffects(finishedQueue.firstEffect, instance);\n  finishedQueue.firstEffect = finishedQueue.lastEffect = null;\n\n  commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);\n  finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;\n}\n\nfunction commitUpdateEffects(effect, instance) {\n  while (effect !== null) {\n    var _callback3 = effect.callback;\n    if (_callback3 !== null) {\n      effect.callback = null;\n      callCallback(_callback3, instance);\n    }\n    effect = effect.nextEffect;\n  }\n}\n\nfunction createCapturedValue(value, source) {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value: value,\n    source: source,\n    stack: getStackByFiberInDevAndProd(source)\n  };\n}\n\nfunction markUpdate(workInProgress) {\n  // Tag the fiber with an update effect. This turns a Placement into\n  // a PlacementAndUpdate.\n  workInProgress.effectTag |= Update;\n}\n\nfunction markRef$1(workInProgress) {\n  workInProgress.effectTag |= Ref;\n}\n\nvar appendAllChildren = void 0;\nvar updateHostContainer = void 0;\nvar updateHostComponent$1 = void 0;\nvar updateHostText$1 = void 0;\nif (supportsMutation) {\n  // Mutation mode\n\n  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    var node = workInProgress.child;\n    while (node !== null) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        appendInitialChild(parent, node.stateNode);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  updateHostContainer = function (workInProgress) {\n    // Noop\n  };\n  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {\n    // If we have an alternate, that means this is an update and we need to\n    // schedule a side-effect to do the updates.\n    var oldProps = current.memoizedProps;\n    if (oldProps === newProps) {\n      // In mutation mode, this is sufficient for a bailout because\n      // we won't touch this node even if children changed.\n      return;\n    }\n\n    // If we get updated because one of our children updated, we don't\n    // have newProps so we'll have to reuse them.\n    // TODO: Split the update API as separate for the props vs. children.\n    // Even better would be if children weren't special cased at all tho.\n    var instance = workInProgress.stateNode;\n    var currentHostContext = getHostContext();\n    // TODO: Experiencing an error where oldProps is null. Suggests a host\n    // component is hitting the resume path. Figure out why. Possibly\n    // related to `hidden`.\n    var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);\n    // TODO: Type this specific to this type of component.\n    workInProgress.updateQueue = updatePayload;\n    // If the update payload indicates that there is a change or if there\n    // is a new ref we mark this as an update. All the work is done in commitWork.\n    if (updatePayload) {\n      markUpdate(workInProgress);\n    }\n  };\n  updateHostText$1 = function (current, workInProgress, oldText, newText) {\n    // If the text differs, mark it as an update. All the work in done in commitWork.\n    if (oldText !== newText) {\n      markUpdate(workInProgress);\n    }\n  };\n} else if (supportsPersistence) {\n  // Persistent host tree mode\n\n  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    var node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        var instance = node.stateNode;\n        if (needsVisibilityToggle) {\n          var props = node.memoizedProps;\n          var type = node.type;\n          if (isHidden) {\n            // This child is inside a timed out tree. Hide it.\n            instance = cloneHiddenInstance(instance, type, props, node);\n          } else {\n            // This child was previously inside a timed out tree. If it was not\n            // updated during this render, it may need to be unhidden. Clone\n            // again to be sure.\n            instance = cloneUnhiddenInstance(instance, type, props, node);\n          }\n          node.stateNode = instance;\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostText) {\n        var _instance = node.stateNode;\n        if (needsVisibilityToggle) {\n          var text = node.memoizedProps;\n          var rootContainerInstance = getRootHostContainer();\n          var currentHostContext = getHostContext();\n          if (isHidden) {\n            _instance = createHiddenTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);\n          } else {\n            _instance = createTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);\n          }\n          node.stateNode = _instance;\n        }\n        appendInitialChild(parent, _instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.tag === SuspenseComponent) {\n        var current = node.alternate;\n        if (current !== null) {\n          var oldState = current.memoizedState;\n          var newState = node.memoizedState;\n          var oldIsHidden = oldState !== null;\n          var newIsHidden = newState !== null;\n          if (oldIsHidden !== newIsHidden) {\n            // The placeholder either just timed out or switched back to the normal\n            // children after having previously timed out. Toggle the visibility of\n            // the direct host children.\n            var primaryChildParent = newIsHidden ? node.child : node;\n            if (primaryChildParent !== null) {\n              appendAllChildren(parent, primaryChildParent, true, newIsHidden);\n            }\n            // eslint-disable-next-line no-labels\n            break branches;\n          }\n        }\n        if (node.child !== null) {\n          // Continue traversing like normal\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = node;\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  // An unfortunate fork of appendAllChildren because we have two different parent types.\n  var appendAllChildrenToContainer = function (containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    var node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        var instance = node.stateNode;\n        if (needsVisibilityToggle) {\n          var props = node.memoizedProps;\n          var type = node.type;\n          if (isHidden) {\n            // This child is inside a timed out tree. Hide it.\n            instance = cloneHiddenInstance(instance, type, props, node);\n          } else {\n            // This child was previously inside a timed out tree. If it was not\n            // updated during this render, it may need to be unhidden. Clone\n            // again to be sure.\n            instance = cloneUnhiddenInstance(instance, type, props, node);\n          }\n          node.stateNode = instance;\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostText) {\n        var _instance2 = node.stateNode;\n        if (needsVisibilityToggle) {\n          var text = node.memoizedProps;\n          var rootContainerInstance = getRootHostContainer();\n          var currentHostContext = getHostContext();\n          if (isHidden) {\n            _instance2 = createHiddenTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);\n          } else {\n            _instance2 = createTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);\n          }\n          node.stateNode = _instance2;\n        }\n        appendChildToContainerChildSet(containerChildSet, _instance2);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.tag === SuspenseComponent) {\n        var current = node.alternate;\n        if (current !== null) {\n          var oldState = current.memoizedState;\n          var newState = node.memoizedState;\n          var oldIsHidden = oldState !== null;\n          var newIsHidden = newState !== null;\n          if (oldIsHidden !== newIsHidden) {\n            // The placeholder either just timed out or switched back to the normal\n            // children after having previously timed out. Toggle the visibility of\n            // the direct host children.\n            var primaryChildParent = newIsHidden ? node.child : node;\n            if (primaryChildParent !== null) {\n              appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, newIsHidden);\n            }\n            // eslint-disable-next-line no-labels\n            break branches;\n          }\n        }\n        if (node.child !== null) {\n          // Continue traversing like normal\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = node;\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n  updateHostContainer = function (workInProgress) {\n    var portalOrRoot = workInProgress.stateNode;\n    var childrenUnchanged = workInProgress.firstEffect === null;\n    if (childrenUnchanged) {\n      // No changes, just reuse the existing instance.\n    } else {\n      var container = portalOrRoot.containerInfo;\n      var newChildSet = createContainerChildSet(container);\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);\n      portalOrRoot.pendingChildren = newChildSet;\n      // Schedule an update on the container to swap out the container.\n      markUpdate(workInProgress);\n      finalizeContainerChildren(container, newChildSet);\n    }\n  };\n  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {\n    var currentInstance = current.stateNode;\n    var oldProps = current.memoizedProps;\n    // If there are no effects associated with this node, then none of our children had any updates.\n    // This guarantees that we can reuse all of them.\n    var childrenUnchanged = workInProgress.firstEffect === null;\n    if (childrenUnchanged && oldProps === newProps) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    var recyclableInstance = workInProgress.stateNode;\n    var currentHostContext = getHostContext();\n    var updatePayload = null;\n    if (oldProps !== newProps) {\n      updatePayload = prepareUpdate(recyclableInstance, type, oldProps, newProps, rootContainerInstance, currentHostContext);\n    }\n    if (childrenUnchanged && updatePayload === null) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);\n    if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {\n      markUpdate(workInProgress);\n    }\n    workInProgress.stateNode = newInstance;\n    if (childrenUnchanged) {\n      // If there are no other effects in this tree, we need to flag this node as having one.\n      // Even though we're not going to use it for anything.\n      // Otherwise parents won't know that there are new children to propagate upwards.\n      markUpdate(workInProgress);\n    } else {\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildren(newInstance, workInProgress, false, false);\n    }\n  };\n  updateHostText$1 = function (current, workInProgress, oldText, newText) {\n    if (oldText !== newText) {\n      // If the text content differs, we'll create a new text instance for it.\n      var rootContainerInstance = getRootHostContainer();\n      var currentHostContext = getHostContext();\n      workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress);\n      // We'll have to mark it as having an effect, even though we won't use the effect for anything.\n      // This lets the parents know that at least one of their children has changed.\n      markUpdate(workInProgress);\n    }\n  };\n} else {\n  // No host operations\n  updateHostContainer = function (workInProgress) {\n    // Noop\n  };\n  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {\n    // Noop\n  };\n  updateHostText$1 = function (current, workInProgress, oldText, newText) {\n    // Noop\n  };\n}\n\nfunction completeWork(current, workInProgress, renderExpirationTime) {\n  var newProps = workInProgress.pendingProps;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n      break;\n    case LazyComponent:\n      break;\n    case SimpleMemoComponent:\n    case FunctionComponent:\n      break;\n    case ClassComponent:\n      {\n        var Component = workInProgress.type;\n        if (isContextProvider(Component)) {\n          popContext(workInProgress);\n        }\n        break;\n      }\n    case HostRoot:\n      {\n        popHostContainer(workInProgress);\n        popTopLevelContextObject(workInProgress);\n        var fiberRoot = workInProgress.stateNode;\n        if (fiberRoot.pendingContext) {\n          fiberRoot.context = fiberRoot.pendingContext;\n          fiberRoot.pendingContext = null;\n        }\n        if (current === null || current.child === null) {\n          // If we hydrated, pop so that we can delete any remaining children\n          // that weren't hydrated.\n          popHydrationState(workInProgress);\n          // This resets the hacky state to fix isMounted before committing.\n          // TODO: Delete this when we delete isMounted and findDOMNode.\n          workInProgress.effectTag &= ~Placement;\n        }\n        updateHostContainer(workInProgress);\n        break;\n      }\n    case HostComponent:\n      {\n        popHostContext(workInProgress);\n        var rootContainerInstance = getRootHostContainer();\n        var type = workInProgress.type;\n        if (current !== null && workInProgress.stateNode != null) {\n          updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);\n\n          if (current.ref !== workInProgress.ref) {\n            markRef$1(workInProgress);\n          }\n        } else {\n          if (!newProps) {\n            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n            // This can happen when we abort work.\n            break;\n          }\n\n          var currentHostContext = getHostContext();\n          // TODO: Move createInstance to beginWork and keep it on a context\n          // \"stack\" as the parent. Then append children as we go in beginWork\n          // or completeWork depending on we want to add then top->down or\n          // bottom->up. Top->down is faster in IE11.\n          var wasHydrated = popHydrationState(workInProgress);\n          if (wasHydrated) {\n            // TODO: Move this and createInstance step into the beginPhase\n            // to consolidate.\n            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {\n              // If changes to the hydrated node needs to be applied at the\n              // commit-phase we mark this as such.\n              markUpdate(workInProgress);\n            }\n          } else {\n            var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);\n\n            appendAllChildren(instance, workInProgress, false, false);\n\n            // Certain renderers require commit-time effects for initial mount.\n            // (eg DOM renderer supports auto-focus for certain elements).\n            // Make sure such renderers get scheduled for later work.\n            if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance, currentHostContext)) {\n              markUpdate(workInProgress);\n            }\n            workInProgress.stateNode = instance;\n          }\n\n          if (workInProgress.ref !== null) {\n            // If there is a ref on a host node we need to schedule a callback\n            markRef$1(workInProgress);\n          }\n        }\n        break;\n      }\n    case HostText:\n      {\n        var newText = newProps;\n        if (current && workInProgress.stateNode != null) {\n          var oldText = current.memoizedProps;\n          // If we have an alternate, that means this is an update and we need\n          // to schedule a side-effect to do the updates.\n          updateHostText$1(current, workInProgress, oldText, newText);\n        } else {\n          if (typeof newText !== 'string') {\n            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n            // This can happen when we abort work.\n          }\n          var _rootContainerInstance = getRootHostContainer();\n          var _currentHostContext = getHostContext();\n          var _wasHydrated = popHydrationState(workInProgress);\n          if (_wasHydrated) {\n            if (prepareToHydrateHostTextInstance(workInProgress)) {\n              markUpdate(workInProgress);\n            }\n          } else {\n            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);\n          }\n        }\n        break;\n      }\n    case ForwardRef:\n      break;\n    case SuspenseComponent:\n      {\n        var nextState = workInProgress.memoizedState;\n        if ((workInProgress.effectTag & DidCapture) !== NoEffect) {\n          // Something suspended. Re-render with the fallback children.\n          workInProgress.expirationTime = renderExpirationTime;\n          // Do not reset the effect list.\n          return workInProgress;\n        }\n\n        var nextDidTimeout = nextState !== null;\n        var prevDidTimeout = current !== null && current.memoizedState !== null;\n\n        if (current !== null && !nextDidTimeout && prevDidTimeout) {\n          // We just switched from the fallback to the normal children. Delete\n          // the fallback.\n          // TODO: Would it be better to store the fallback fragment on\n          var currentFallbackChild = current.child.sibling;\n          if (currentFallbackChild !== null) {\n            // Deletions go at the beginning of the return fiber's effect list\n            var first = workInProgress.firstEffect;\n            if (first !== null) {\n              workInProgress.firstEffect = currentFallbackChild;\n              currentFallbackChild.nextEffect = first;\n            } else {\n              workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChild;\n              currentFallbackChild.nextEffect = null;\n            }\n            currentFallbackChild.effectTag = Deletion;\n          }\n        }\n\n        if (nextDidTimeout || prevDidTimeout) {\n          // If the children are hidden, or if they were previous hidden, schedule\n          // an effect to toggle their visibility. This is also used to attach a\n          // retry listener to the promise.\n          workInProgress.effectTag |= Update;\n        }\n        break;\n      }\n    case Fragment:\n      break;\n    case Mode:\n      break;\n    case Profiler:\n      break;\n    case HostPortal:\n      popHostContainer(workInProgress);\n      updateHostContainer(workInProgress);\n      break;\n    case ContextProvider:\n      // Pop provider fiber\n      popProvider(workInProgress);\n      break;\n    case ContextConsumer:\n      break;\n    case MemoComponent:\n      break;\n    case IncompleteClassComponent:\n      {\n        // Same as class component case. I put it down here so that the tags are\n        // sequential to ensure this switch is compiled to a jump table.\n        var _Component = workInProgress.type;\n        if (isContextProvider(_Component)) {\n          popContext(workInProgress);\n        }\n        break;\n      }\n    case DehydratedSuspenseComponent:\n      {\n        if (enableSuspenseServerRenderer) {\n          if (current === null) {\n            var _wasHydrated2 = popHydrationState(workInProgress);\n            !_wasHydrated2 ? invariant(false, 'A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.') : void 0;\n            skipPastDehydratedSuspenseInstance(workInProgress);\n          } else if ((workInProgress.effectTag & DidCapture) === NoEffect) {\n            // This boundary did not suspend so it's now hydrated.\n            // To handle any future suspense cases, we're going to now upgrade it\n            // to a Suspense component. We detach it from the existing current fiber.\n            current.alternate = null;\n            workInProgress.alternate = null;\n            workInProgress.tag = SuspenseComponent;\n            workInProgress.memoizedState = null;\n            workInProgress.stateNode = null;\n          }\n        }\n        break;\n      }\n    default:\n      invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');\n  }\n\n  return null;\n}\n\nfunction shouldCaptureSuspense(workInProgress) {\n  // In order to capture, the Suspense component must have a fallback prop.\n  if (workInProgress.memoizedProps.fallback === undefined) {\n    return false;\n  }\n  // If it was the primary children that just suspended, capture and render the\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\n  var nextState = workInProgress.memoizedState;\n  return nextState === null;\n}\n\n// This module is forked in different environments.\n// By default, return `true` to log errors to the console.\n// Forks can return `false` if this isn't desirable.\nfunction showErrorDialog(capturedError) {\n  return true;\n}\n\nfunction logCapturedError(capturedError) {\n  var logError = showErrorDialog(capturedError);\n\n  // Allow injected showErrorDialog() to prevent default console.error logging.\n  // This enables renderers like ReactNative to better manage redbox behavior.\n  if (logError === false) {\n    return;\n  }\n\n  var error = capturedError.error;\n  {\n    var componentName = capturedError.componentName,\n        componentStack = capturedError.componentStack,\n        errorBoundaryName = capturedError.errorBoundaryName,\n        errorBoundaryFound = capturedError.errorBoundaryFound,\n        willRetry = capturedError.willRetry;\n\n    // Browsers support silencing uncaught errors by calling\n    // `preventDefault()` in window `error` handler.\n    // We record this information as an expando on the error.\n\n    if (error != null && error._suppressLogging) {\n      if (errorBoundaryFound && willRetry) {\n        // The error is recoverable and was silenced.\n        // Ignore it and don't print the stack addendum.\n        // This is handy for testing error boundaries without noise.\n        return;\n      }\n      // The error is fatal. Since the silencing might have\n      // been accidental, we'll surface it anyway.\n      // However, the browser would have silenced the original error\n      // so we'll print it first, and then print the stack addendum.\n      console.error(error);\n      // For a more detailed description of this block, see:\n      // https://github.com/facebook/react/pull/13384\n    }\n\n    var componentNameMessage = componentName ? 'The above error occurred in the <' + componentName + '> component:' : 'The above error occurred in one of your React components:';\n\n    var errorBoundaryMessage = void 0;\n    // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.\n    if (errorBoundaryFound && errorBoundaryName) {\n      if (willRetry) {\n        errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');\n      } else {\n        errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '.\\n' + 'Recreating the tree from scratch failed so React will unmount the tree.';\n      }\n    } else {\n      errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';\n    }\n    var combinedMessage = '' + componentNameMessage + componentStack + '\\n\\n' + ('' + errorBoundaryMessage);\n\n    // In development, we provide our own message with just the component stack.\n    // We don't include the original error message and JS stack because the browser\n    // has already printed it. Even if the application swallows the error, it is still\n    // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n    console.error(combinedMessage);\n  }\n}\n\nvar didWarnAboutUndefinedSnapshotBeforeUpdate = null;\n{\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n}\n\nvar PossiblyWeakSet$1 = typeof WeakSet === 'function' ? WeakSet : Set;\n\nfunction logError(boundary, errorInfo) {\n  var source = errorInfo.source;\n  var stack = errorInfo.stack;\n  if (stack === null && source !== null) {\n    stack = getStackByFiberInDevAndProd(source);\n  }\n\n  var capturedError = {\n    componentName: source !== null ? getComponentName(source.type) : null,\n    componentStack: stack !== null ? stack : '',\n    error: errorInfo.value,\n    errorBoundary: null,\n    errorBoundaryName: null,\n    errorBoundaryFound: false,\n    willRetry: false\n  };\n\n  if (boundary !== null && boundary.tag === ClassComponent) {\n    capturedError.errorBoundary = boundary.stateNode;\n    capturedError.errorBoundaryName = getComponentName(boundary.type);\n    capturedError.errorBoundaryFound = true;\n    capturedError.willRetry = true;\n  }\n\n  try {\n    logCapturedError(capturedError);\n  } catch (e) {\n    // This method must not throw, or React internal state will get messed up.\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n    // we want to report this error outside of the normal stack as a last resort.\n    // https://github.com/facebook/react/issues/13188\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nvar callComponentWillUnmountWithTimer = function (current$$1, instance) {\n  startPhaseTimer(current$$1, 'componentWillUnmount');\n  instance.props = current$$1.memoizedProps;\n  instance.state = current$$1.memoizedState;\n  instance.componentWillUnmount();\n  stopPhaseTimer();\n};\n\n// Capture errors so they don't interrupt unmounting.\nfunction safelyCallComponentWillUnmount(current$$1, instance) {\n  {\n    invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current$$1, instance);\n    if (hasCaughtError()) {\n      var unmountError = clearCaughtError();\n      captureCommitPhaseError(current$$1, unmountError);\n    }\n  }\n}\n\nfunction safelyDetachRef(current$$1) {\n  var ref = current$$1.ref;\n  if (ref !== null) {\n    if (typeof ref === 'function') {\n      {\n        invokeGuardedCallback(null, ref, null, null);\n        if (hasCaughtError()) {\n          var refError = clearCaughtError();\n          captureCommitPhaseError(current$$1, refError);\n        }\n      }\n    } else {\n      ref.current = null;\n    }\n  }\n}\n\nfunction safelyCallDestroy(current$$1, destroy) {\n  {\n    invokeGuardedCallback(null, destroy, null);\n    if (hasCaughtError()) {\n      var error = clearCaughtError();\n      captureCommitPhaseError(current$$1, error);\n    }\n  }\n}\n\nfunction commitBeforeMutationLifeCycles(current$$1, finishedWork) {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n      {\n        commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork);\n        return;\n      }\n    case ClassComponent:\n      {\n        if (finishedWork.effectTag & Snapshot) {\n          if (current$$1 !== null) {\n            var prevProps = current$$1.memoizedProps;\n            var prevState = current$$1.memoizedState;\n            startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');\n            var instance = finishedWork.stateNode;\n            // We could update instance props and state here,\n            // but instead we rely on them being set during last render.\n            // TODO: revisit this when we implement resuming.\n            {\n              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\n                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\n              }\n            }\n            var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);\n            {\n              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;\n              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n                didWarnSet.add(finishedWork.type);\n                warningWithoutStack$1(false, '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork.type));\n              }\n            }\n            instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n            stopPhaseTimer();\n          }\n        }\n        return;\n      }\n    case HostRoot:\n    case HostComponent:\n    case HostText:\n    case HostPortal:\n    case IncompleteClassComponent:\n      // Nothing to do for these component types\n      return;\n    default:\n      {\n        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');\n      }\n  }\n}\n\nfunction commitHookEffectList(unmountTag, mountTag, finishedWork) {\n  var updateQueue = finishedWork.updateQueue;\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    var firstEffect = lastEffect.next;\n    var effect = firstEffect;\n    do {\n      if ((effect.tag & unmountTag) !== NoEffect$1) {\n        // Unmount\n        var destroy = effect.destroy;\n        effect.destroy = undefined;\n        if (destroy !== undefined) {\n          destroy();\n        }\n      }\n      if ((effect.tag & mountTag) !== NoEffect$1) {\n        // Mount\n        var create = effect.create;\n        effect.destroy = create();\n\n        {\n          var _destroy = effect.destroy;\n          if (_destroy !== undefined && typeof _destroy !== 'function') {\n            var addendum = void 0;\n            if (_destroy === null) {\n              addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';\n            } else if (typeof _destroy.then === 'function') {\n              addendum = '\\n\\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\\n\\n' + 'useEffect(() => {\\n' + '  async function fetchData() {\\n' + '    // You can await here\\n' + '    const response = await MyAPI.getData(someId);\\n' + '    // ...\\n' + '  }\\n' + '  fetchData();\\n' + '}, [someId]); // Or [] if effect doesn\\'t need props or state\\n\\n' + 'Learn more about data fetching with Hooks: https://fb.me/react-hooks-data-fetching';\n            } else {\n              addendum = ' You returned: ' + _destroy;\n            }\n            warningWithoutStack$1(false, 'An effect function must not return anything besides a function, ' + 'which is used for clean-up.%s%s', addendum, getStackByFiberInDevAndProd(finishedWork));\n          }\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitPassiveHookEffects(finishedWork) {\n  commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork);\n  commitHookEffectList(NoEffect$1, MountPassive, finishedWork);\n}\n\nfunction commitLifeCycles(finishedRoot, current$$1, finishedWork, committedExpirationTime) {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n      {\n        commitHookEffectList(UnmountLayout, MountLayout, finishedWork);\n        break;\n      }\n    case ClassComponent:\n      {\n        var instance = finishedWork.stateNode;\n        if (finishedWork.effectTag & Update) {\n          if (current$$1 === null) {\n            startPhaseTimer(finishedWork, 'componentDidMount');\n            // We could update instance props and state here,\n            // but instead we rely on them being set during last render.\n            // TODO: revisit this when we implement resuming.\n            {\n              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\n                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\n              }\n            }\n            instance.componentDidMount();\n            stopPhaseTimer();\n          } else {\n            var prevProps = finishedWork.elementType === finishedWork.type ? current$$1.memoizedProps : resolveDefaultProps(finishedWork.type, current$$1.memoizedProps);\n            var prevState = current$$1.memoizedState;\n            startPhaseTimer(finishedWork, 'componentDidUpdate');\n            // We could update instance props and state here,\n            // but instead we rely on them being set during last render.\n            // TODO: revisit this when we implement resuming.\n            {\n              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\n                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\n              }\n            }\n            instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\n            stopPhaseTimer();\n          }\n        }\n        var updateQueue = finishedWork.updateQueue;\n        if (updateQueue !== null) {\n          {\n            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n              !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\n              !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\n            }\n          }\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);\n        }\n        return;\n      }\n    case HostRoot:\n      {\n        var _updateQueue = finishedWork.updateQueue;\n        if (_updateQueue !== null) {\n          var _instance = null;\n          if (finishedWork.child !== null) {\n            switch (finishedWork.child.tag) {\n              case HostComponent:\n                _instance = getPublicInstance(finishedWork.child.stateNode);\n                break;\n              case ClassComponent:\n                _instance = finishedWork.child.stateNode;\n                break;\n            }\n          }\n          commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);\n        }\n        return;\n      }\n    case HostComponent:\n      {\n        var _instance2 = finishedWork.stateNode;\n\n        // Renderers may schedule work to be done after host components are mounted\n        // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n        // These effects should only be committed when components are first mounted,\n        // aka when there is no current/alternate.\n        if (current$$1 === null && finishedWork.effectTag & Update) {\n          var type = finishedWork.type;\n          var props = finishedWork.memoizedProps;\n          commitMount(_instance2, type, props, finishedWork);\n        }\n\n        return;\n      }\n    case HostText:\n      {\n        // We have no life-cycles associated with text.\n        return;\n      }\n    case HostPortal:\n      {\n        // We have no life-cycles associated with portals.\n        return;\n      }\n    case Profiler:\n      {\n        if (enableProfilerTimer) {\n          var onRender = finishedWork.memoizedProps.onRender;\n\n          if (enableSchedulerTracing) {\n            onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime(), finishedRoot.memoizedInteractions);\n          } else {\n            onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime());\n          }\n        }\n        return;\n      }\n    case SuspenseComponent:\n      break;\n    case IncompleteClassComponent:\n      break;\n    default:\n      {\n        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');\n      }\n  }\n}\n\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\n  if (supportsMutation) {\n    // We only have the top Fiber that was inserted but we need to recurse down its\n    var node = finishedWork;\n    while (true) {\n      if (node.tag === HostComponent) {\n        var instance = node.stateNode;\n        if (isHidden) {\n          hideInstance(instance);\n        } else {\n          unhideInstance(node.stateNode, node.memoizedProps);\n        }\n      } else if (node.tag === HostText) {\n        var _instance3 = node.stateNode;\n        if (isHidden) {\n          hideTextInstance(_instance3);\n        } else {\n          unhideTextInstance(_instance3, node.memoizedProps);\n        }\n      } else if (node.tag === SuspenseComponent && node.memoizedState !== null) {\n        // Found a nested Suspense component that timed out. Skip over the\n        var fallbackChildFragment = node.child.sibling;\n        fallbackChildFragment.return = node;\n        node = fallbackChildFragment;\n        continue;\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === finishedWork) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === finishedWork) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n}\n\nfunction commitAttachRef(finishedWork) {\n  var ref = finishedWork.ref;\n  if (ref !== null) {\n    var instance = finishedWork.stateNode;\n    var instanceToUse = void 0;\n    switch (finishedWork.tag) {\n      case HostComponent:\n        instanceToUse = getPublicInstance(instance);\n        break;\n      default:\n        instanceToUse = instance;\n    }\n    if (typeof ref === 'function') {\n      ref(instanceToUse);\n    } else {\n      {\n        if (!ref.hasOwnProperty('current')) {\n          warningWithoutStack$1(false, 'Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().%s', getComponentName(finishedWork.type), getStackByFiberInDevAndProd(finishedWork));\n        }\n      }\n\n      ref.current = instanceToUse;\n    }\n  }\n}\n\nfunction commitDetachRef(current$$1) {\n  var currentRef = current$$1.ref;\n  if (currentRef !== null) {\n    if (typeof currentRef === 'function') {\n      currentRef(null);\n    } else {\n      currentRef.current = null;\n    }\n  }\n}\n\n// User-originating errors (lifecycles and refs) should not interrupt\n// deletion, so don't let them throw. Host-originating errors should\n// interrupt deletion, so it's okay\nfunction commitUnmount(current$$1) {\n  onCommitUnmount(current$$1);\n\n  switch (current$$1.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      {\n        var updateQueue = current$$1.updateQueue;\n        if (updateQueue !== null) {\n          var lastEffect = updateQueue.lastEffect;\n          if (lastEffect !== null) {\n            var firstEffect = lastEffect.next;\n            var effect = firstEffect;\n            do {\n              var destroy = effect.destroy;\n              if (destroy !== undefined) {\n                safelyCallDestroy(current$$1, destroy);\n              }\n              effect = effect.next;\n            } while (effect !== firstEffect);\n          }\n        }\n        break;\n      }\n    case ClassComponent:\n      {\n        safelyDetachRef(current$$1);\n        var instance = current$$1.stateNode;\n        if (typeof instance.componentWillUnmount === 'function') {\n          safelyCallComponentWillUnmount(current$$1, instance);\n        }\n        return;\n      }\n    case HostComponent:\n      {\n        safelyDetachRef(current$$1);\n        return;\n      }\n    case HostPortal:\n      {\n        // TODO: this is recursive.\n        // We are also not using this parent because\n        // the portal will get pushed immediately.\n        if (supportsMutation) {\n          unmountHostComponents(current$$1);\n        } else if (supportsPersistence) {\n          emptyPortalContainer(current$$1);\n        }\n        return;\n      }\n  }\n}\n\nfunction commitNestedUnmounts(root) {\n  // While we're inside a removed host node we don't want to call\n  // removeChild on the inner nodes because they're removed by the top\n  // call anyway. We also want to call componentWillUnmount on all\n  // composites before this host node is removed from the tree. Therefore\n  var node = root;\n  while (true) {\n    commitUnmount(node);\n    // Visit children because they may contain more composite or host nodes.\n    // Skip portals because commitUnmount() currently visits them recursively.\n    if (node.child !== null && (\n    // If we use mutation we drill down into portals using commitUnmount above.\n    // If we don't use mutation we drill down into portals here instead.\n    !supportsMutation || node.tag !== HostPortal)) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === root) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === root) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction detachFiber(current$$1) {\n  // Cut off the return pointers to disconnect it from the tree. Ideally, we\n  // should clear the child pointer of the parent alternate to let this\n  // get GC:ed but we don't know which for sure which parent is the current\n  // one so we'll settle for GC:ing the subtree of this child. This child\n  // itself will be GC:ed when the parent updates the next time.\n  current$$1.return = null;\n  current$$1.child = null;\n  current$$1.memoizedState = null;\n  current$$1.updateQueue = null;\n  var alternate = current$$1.alternate;\n  if (alternate !== null) {\n    alternate.return = null;\n    alternate.child = null;\n    alternate.memoizedState = null;\n    alternate.updateQueue = null;\n  }\n}\n\nfunction emptyPortalContainer(current$$1) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  var portal = current$$1.stateNode;\n  var containerInfo = portal.containerInfo;\n\n  var emptyChildSet = createContainerChildSet(containerInfo);\n  replaceContainerChildren(containerInfo, emptyChildSet);\n}\n\nfunction commitContainer(finishedWork) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  switch (finishedWork.tag) {\n    case ClassComponent:\n      {\n        return;\n      }\n    case HostComponent:\n      {\n        return;\n      }\n    case HostText:\n      {\n        return;\n      }\n    case HostRoot:\n    case HostPortal:\n      {\n        var portalOrRoot = finishedWork.stateNode;\n        var containerInfo = portalOrRoot.containerInfo,\n            _pendingChildren = portalOrRoot.pendingChildren;\n\n        replaceContainerChildren(containerInfo, _pendingChildren);\n        return;\n      }\n    default:\n      {\n        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');\n      }\n  }\n}\n\nfunction getHostParentFiber(fiber) {\n  var parent = fiber.return;\n  while (parent !== null) {\n    if (isHostParent(parent)) {\n      return parent;\n    }\n    parent = parent.return;\n  }\n  invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.');\n}\n\nfunction isHostParent(fiber) {\n  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;\n}\n\nfunction getHostSibling(fiber) {\n  // We're going to search forward into the tree until we find a sibling host\n  // node. Unfortunately, if multiple insertions are done in a row we have to\n  // search past them. This leads to exponential search for the next sibling.\n  var node = fiber;\n  siblings: while (true) {\n    // If we didn't find anything, let's try the next sibling.\n    while (node.sibling === null) {\n      if (node.return === null || isHostParent(node.return)) {\n        // If we pop out of the root or hit the parent the fiber we are the\n        // last sibling.\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n    while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedSuspenseComponent) {\n      // If it is not host node and, we might have a host node inside it.\n      // Try to search down until we find one.\n      if (node.effectTag & Placement) {\n        // If we don't have a child, try the siblings instead.\n        continue siblings;\n      }\n      // If we don't have a child, try the siblings instead.\n      // We also skip portals because they are not part of this host tree.\n      if (node.child === null || node.tag === HostPortal) {\n        continue siblings;\n      } else {\n        node.child.return = node;\n        node = node.child;\n      }\n    }\n    // Check if this host node is stable or about to be placed.\n    if (!(node.effectTag & Placement)) {\n      // Found it!\n      return node.stateNode;\n    }\n  }\n}\n\nfunction commitPlacement(finishedWork) {\n  if (!supportsMutation) {\n    return;\n  }\n\n  // Recursively insert all host nodes into the parent.\n  var parentFiber = getHostParentFiber(finishedWork);\n\n  // Note: these two variables *must* always be updated together.\n  var parent = void 0;\n  var isContainer = void 0;\n\n  switch (parentFiber.tag) {\n    case HostComponent:\n      parent = parentFiber.stateNode;\n      isContainer = false;\n      break;\n    case HostRoot:\n      parent = parentFiber.stateNode.containerInfo;\n      isContainer = true;\n      break;\n    case HostPortal:\n      parent = parentFiber.stateNode.containerInfo;\n      isContainer = true;\n      break;\n    default:\n      invariant(false, 'Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.');\n  }\n  if (parentFiber.effectTag & ContentReset) {\n    // Reset the text content of the parent before doing any insertions\n    resetTextContent(parent);\n    // Clear ContentReset from the effect tag\n    parentFiber.effectTag &= ~ContentReset;\n  }\n\n  var before = getHostSibling(finishedWork);\n  // We only have the top Fiber that was inserted but we need to recurse down its\n  // children to find all the terminal nodes.\n  var node = finishedWork;\n  while (true) {\n    if (node.tag === HostComponent || node.tag === HostText) {\n      if (before) {\n        if (isContainer) {\n          insertInContainerBefore(parent, node.stateNode, before);\n        } else {\n          insertBefore(parent, node.stateNode, before);\n        }\n      } else {\n        if (isContainer) {\n          appendChildToContainer(parent, node.stateNode);\n        } else {\n          appendChild(parent, node.stateNode);\n        }\n      }\n    } else if (node.tag === HostPortal) {\n      // If the insertion itself is a portal, then we don't want to traverse\n      // down its children. Instead, we'll get insertions from each child in\n      // the portal directly.\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === finishedWork) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === finishedWork) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction unmountHostComponents(current$$1) {\n  // We only have the top Fiber that was deleted but we need to recurse down its\n  var node = current$$1;\n\n  // Each iteration, currentParent is populated with node's host parent if not\n  // currentParentIsValid.\n  var currentParentIsValid = false;\n\n  // Note: these two variables *must* always be updated together.\n  var currentParent = void 0;\n  var currentParentIsContainer = void 0;\n\n  while (true) {\n    if (!currentParentIsValid) {\n      var parent = node.return;\n      findParent: while (true) {\n        !(parent !== null) ? invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n        switch (parent.tag) {\n          case HostComponent:\n            currentParent = parent.stateNode;\n            currentParentIsContainer = false;\n            break findParent;\n          case HostRoot:\n            currentParent = parent.stateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n          case HostPortal:\n            currentParent = parent.stateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n        }\n        parent = parent.return;\n      }\n      currentParentIsValid = true;\n    }\n\n    if (node.tag === HostComponent || node.tag === HostText) {\n      commitNestedUnmounts(node);\n      // After all the children have unmounted, it is now safe to remove the\n      // node from the tree.\n      if (currentParentIsContainer) {\n        removeChildFromContainer(currentParent, node.stateNode);\n      } else {\n        removeChild(currentParent, node.stateNode);\n      }\n      // Don't visit children because we already visited them.\n    } else if (enableSuspenseServerRenderer && node.tag === DehydratedSuspenseComponent) {\n      // Delete the dehydrated suspense boundary and all of its content.\n      if (currentParentIsContainer) {\n        clearSuspenseBoundaryFromContainer(currentParent, node.stateNode);\n      } else {\n        clearSuspenseBoundary(currentParent, node.stateNode);\n      }\n    } else if (node.tag === HostPortal) {\n      if (node.child !== null) {\n        // When we go into a portal, it becomes the parent to remove from.\n        // We will reassign it back when we pop the portal on the way up.\n        currentParent = node.stateNode.containerInfo;\n        currentParentIsContainer = true;\n        // Visit children because portals might contain host components.\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    } else {\n      commitUnmount(node);\n      // Visit children because we may find more host components below.\n      if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    }\n    if (node === current$$1) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === current$$1) {\n        return;\n      }\n      node = node.return;\n      if (node.tag === HostPortal) {\n        // When we go out of the portal, we need to restore the parent.\n        // Since we don't keep a stack of them, we will search for it.\n        currentParentIsValid = false;\n      }\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction commitDeletion(current$$1) {\n  if (supportsMutation) {\n    // Recursively delete all host nodes from the parent.\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    unmountHostComponents(current$$1);\n  } else {\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    commitNestedUnmounts(current$$1);\n  }\n  detachFiber(current$$1);\n}\n\nfunction commitWork(current$$1, finishedWork) {\n  if (!supportsMutation) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case MemoComponent:\n      case SimpleMemoComponent:\n        {\n          // Note: We currently never use MountMutation, but useLayout uses\n          // UnmountMutation.\n          commitHookEffectList(UnmountMutation, MountMutation, finishedWork);\n          return;\n        }\n    }\n\n    commitContainer(finishedWork);\n    return;\n  }\n\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      {\n        // Note: We currently never use MountMutation, but useLayout uses\n        // UnmountMutation.\n        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);\n        return;\n      }\n    case ClassComponent:\n      {\n        return;\n      }\n    case HostComponent:\n      {\n        var instance = finishedWork.stateNode;\n        if (instance != null) {\n          // Commit the work prepared earlier.\n          var newProps = finishedWork.memoizedProps;\n          // For hydration we reuse the update path but we treat the oldProps\n          // as the newProps. The updatePayload will contain the real change in\n          // this case.\n          var oldProps = current$$1 !== null ? current$$1.memoizedProps : newProps;\n          var type = finishedWork.type;\n          // TODO: Type the updateQueue to be specific to host components.\n          var updatePayload = finishedWork.updateQueue;\n          finishedWork.updateQueue = null;\n          if (updatePayload !== null) {\n            commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);\n          }\n        }\n        return;\n      }\n    case HostText:\n      {\n        !(finishedWork.stateNode !== null) ? invariant(false, 'This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n        var textInstance = finishedWork.stateNode;\n        var newText = finishedWork.memoizedProps;\n        // For hydration we reuse the update path but we treat the oldProps\n        // as the newProps. The updatePayload will contain the real change in\n        // this case.\n        var oldText = current$$1 !== null ? current$$1.memoizedProps : newText;\n        commitTextUpdate(textInstance, oldText, newText);\n        return;\n      }\n    case HostRoot:\n      {\n        return;\n      }\n    case Profiler:\n      {\n        return;\n      }\n    case SuspenseComponent:\n      {\n        var newState = finishedWork.memoizedState;\n\n        var newDidTimeout = void 0;\n        var primaryChildParent = finishedWork;\n        if (newState === null) {\n          newDidTimeout = false;\n        } else {\n          newDidTimeout = true;\n          primaryChildParent = finishedWork.child;\n          if (newState.timedOutAt === NoWork) {\n            // If the children had not already timed out, record the time.\n            // This is used to compute the elapsed time during subsequent\n            // attempts to render the children.\n            newState.timedOutAt = requestCurrentTime();\n          }\n        }\n\n        if (primaryChildParent !== null) {\n          hideOrUnhideAllChildren(primaryChildParent, newDidTimeout);\n        }\n\n        // If this boundary just timed out, then it will have a set of thenables.\n        // For each thenable, attach a listener so that when it resolves, React\n        // attempts to re-render the boundary in the primary (pre-timeout) state.\n        var thenables = finishedWork.updateQueue;\n        if (thenables !== null) {\n          finishedWork.updateQueue = null;\n          var retryCache = finishedWork.stateNode;\n          if (retryCache === null) {\n            retryCache = finishedWork.stateNode = new PossiblyWeakSet$1();\n          }\n          thenables.forEach(function (thenable) {\n            // Memoize using the boundary fiber to prevent redundant listeners.\n            var retry = retryTimedOutBoundary.bind(null, finishedWork, thenable);\n            if (enableSchedulerTracing) {\n              retry = tracing.unstable_wrap(retry);\n            }\n            if (!retryCache.has(thenable)) {\n              retryCache.add(thenable);\n              thenable.then(retry, retry);\n            }\n          });\n        }\n\n        return;\n      }\n    case IncompleteClassComponent:\n      {\n        return;\n      }\n    default:\n      {\n        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');\n      }\n  }\n}\n\nfunction commitResetTextContent(current$$1) {\n  if (!supportsMutation) {\n    return;\n  }\n  resetTextContent(current$$1.stateNode);\n}\n\nvar PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\nvar PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n\nfunction createRootErrorUpdate(fiber, errorInfo, expirationTime) {\n  var update = createUpdate(expirationTime);\n  // Unmount the root by rendering null.\n  update.tag = CaptureUpdate;\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = { element: null };\n  var error = errorInfo.value;\n  update.callback = function () {\n    onUncaughtError(error);\n    logError(fiber, errorInfo);\n  };\n  return update;\n}\n\nfunction createClassErrorUpdate(fiber, errorInfo, expirationTime) {\n  var update = createUpdate(expirationTime);\n  update.tag = CaptureUpdate;\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (typeof getDerivedStateFromError === 'function') {\n    var error = errorInfo.value;\n    update.payload = function () {\n      return getDerivedStateFromError(error);\n    };\n  }\n\n  var inst = fiber.stateNode;\n  if (inst !== null && typeof inst.componentDidCatch === 'function') {\n    update.callback = function callback() {\n      if (typeof getDerivedStateFromError !== 'function') {\n        // To preserve the preexisting retry behavior of error boundaries,\n        // we keep track of which ones already failed during this batch.\n        // This gets reset before we yield back to the browser.\n        // TODO: Warn in strict mode if getDerivedStateFromError is\n        // not defined.\n        markLegacyErrorBoundaryAsFailed(this);\n      }\n      var error = errorInfo.value;\n      var stack = errorInfo.stack;\n      logError(fiber, errorInfo);\n      this.componentDidCatch(error, {\n        componentStack: stack !== null ? stack : ''\n      });\n      {\n        if (typeof getDerivedStateFromError !== 'function') {\n          // If componentDidCatch is the only error boundary method defined,\n          // then it needs to call setState to recover from errors.\n          // If no state update is scheduled then the boundary will swallow the error.\n          !(fiber.expirationTime === Sync) ? warningWithoutStack$1(false, '%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentName(fiber.type) || 'Unknown') : void 0;\n        }\n      }\n    };\n  }\n  return update;\n}\n\nfunction attachPingListener(root, renderExpirationTime, thenable) {\n  // Attach a listener to the promise to \"ping\" the root and retry. But\n  // only if one does not already exist for the current render expiration\n  // time (which acts like a \"thread ID\" here).\n  var pingCache = root.pingCache;\n  var threadIDs = void 0;\n  if (pingCache === null) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    threadIDs = new Set();\n    pingCache.set(thenable, threadIDs);\n  } else {\n    threadIDs = pingCache.get(thenable);\n    if (threadIDs === undefined) {\n      threadIDs = new Set();\n      pingCache.set(thenable, threadIDs);\n    }\n  }\n  if (!threadIDs.has(renderExpirationTime)) {\n    // Memoize using the thread ID to prevent redundant listeners.\n    threadIDs.add(renderExpirationTime);\n    var ping = pingSuspendedRoot.bind(null, root, thenable, renderExpirationTime);\n    if (enableSchedulerTracing) {\n      ping = tracing.unstable_wrap(ping);\n    }\n    thenable.then(ping, ping);\n  }\n}\n\nfunction throwException(root, returnFiber, sourceFiber, value, renderExpirationTime) {\n  // The source fiber did not complete.\n  sourceFiber.effectTag |= Incomplete;\n  // Its effect list is no longer valid.\n  sourceFiber.firstEffect = sourceFiber.lastEffect = null;\n\n  if (value !== null && typeof value === 'object' && typeof value.then === 'function') {\n    // This is a thenable.\n    var thenable = value;\n\n    // Find the earliest timeout threshold of all the placeholders in the\n    // ancestor path. We could avoid this traversal by storing the thresholds on\n    // the stack, but we choose not to because we only hit this path if we're\n    // IO-bound (i.e. if something suspends). Whereas the stack is used even in\n    // the non-IO- bound case.\n    var _workInProgress = returnFiber;\n    var earliestTimeoutMs = -1;\n    var startTimeMs = -1;\n    do {\n      if (_workInProgress.tag === SuspenseComponent) {\n        var current$$1 = _workInProgress.alternate;\n        if (current$$1 !== null) {\n          var currentState = current$$1.memoizedState;\n          if (currentState !== null) {\n            // Reached a boundary that already timed out. Do not search\n            // any further.\n            var timedOutAt = currentState.timedOutAt;\n            startTimeMs = expirationTimeToMs(timedOutAt);\n            // Do not search any further.\n            break;\n          }\n        }\n        var timeoutPropMs = _workInProgress.pendingProps.maxDuration;\n        if (typeof timeoutPropMs === 'number') {\n          if (timeoutPropMs <= 0) {\n            earliestTimeoutMs = 0;\n          } else if (earliestTimeoutMs === -1 || timeoutPropMs < earliestTimeoutMs) {\n            earliestTimeoutMs = timeoutPropMs;\n          }\n        }\n      }\n      // If there is a DehydratedSuspenseComponent we don't have to do anything because\n      // if something suspends inside it, we will simply leave that as dehydrated. It\n      // will never timeout.\n      _workInProgress = _workInProgress.return;\n    } while (_workInProgress !== null);\n\n    // Schedule the nearest Suspense to re-render the timed out view.\n    _workInProgress = returnFiber;\n    do {\n      if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress)) {\n        // Found the nearest boundary.\n\n        // Stash the promise on the boundary fiber. If the boundary times out, we'll\n        var thenables = _workInProgress.updateQueue;\n        if (thenables === null) {\n          var updateQueue = new Set();\n          updateQueue.add(thenable);\n          _workInProgress.updateQueue = updateQueue;\n        } else {\n          thenables.add(thenable);\n        }\n\n        // If the boundary is outside of concurrent mode, we should *not*\n        // suspend the commit. Pretend as if the suspended component rendered\n        // null and keep rendering. In the commit phase, we'll schedule a\n        // subsequent synchronous update to re-render the Suspense.\n        //\n        // Note: It doesn't matter whether the component that suspended was\n        // inside a concurrent mode tree. If the Suspense is outside of it, we\n        // should *not* suspend the commit.\n        if ((_workInProgress.mode & ConcurrentMode) === NoEffect) {\n          _workInProgress.effectTag |= DidCapture;\n\n          // We're going to commit this fiber even though it didn't complete.\n          // But we shouldn't call any lifecycle methods or callbacks. Remove\n          // all lifecycle effect tags.\n          sourceFiber.effectTag &= ~(LifecycleEffectMask | Incomplete);\n\n          if (sourceFiber.tag === ClassComponent) {\n            var currentSourceFiber = sourceFiber.alternate;\n            if (currentSourceFiber === null) {\n              // This is a new mount. Change the tag so it's not mistaken for a\n              // completed class component. For example, we should not call\n              // componentWillUnmount if it is deleted.\n              sourceFiber.tag = IncompleteClassComponent;\n            } else {\n              // When we try rendering again, we should not reuse the current fiber,\n              // since it's known to be in an inconsistent state. Use a force updte to\n              // prevent a bail out.\n              var update = createUpdate(Sync);\n              update.tag = ForceUpdate;\n              enqueueUpdate(sourceFiber, update);\n            }\n          }\n\n          // The source fiber did not complete. Mark it with Sync priority to\n          // indicate that it still has pending work.\n          sourceFiber.expirationTime = Sync;\n\n          // Exit without suspending.\n          return;\n        }\n\n        // Confirmed that the boundary is in a concurrent mode tree. Continue\n        // with the normal suspend path.\n\n        attachPingListener(root, renderExpirationTime, thenable);\n\n        var absoluteTimeoutMs = void 0;\n        if (earliestTimeoutMs === -1) {\n          // If no explicit threshold is given, default to an arbitrarily large\n          // value. The actual size doesn't matter because the threshold for the\n          // whole tree will be clamped to the expiration time.\n          absoluteTimeoutMs = maxSigned31BitInt;\n        } else {\n          if (startTimeMs === -1) {\n            // This suspend happened outside of any already timed-out\n            // placeholders. We don't know exactly when the update was\n            // scheduled, but we can infer an approximate start time from the\n            // expiration time. First, find the earliest uncommitted expiration\n            // time in the tree, including work that is suspended. Then subtract\n            // the offset used to compute an async update's expiration time.\n            // This will cause high priority (interactive) work to expire\n            // earlier than necessary, but we can account for this by adjusting\n            // for the Just Noticeable Difference.\n            var earliestExpirationTime = findEarliestOutstandingPriorityLevel(root, renderExpirationTime);\n            var earliestExpirationTimeMs = expirationTimeToMs(earliestExpirationTime);\n            startTimeMs = earliestExpirationTimeMs - LOW_PRIORITY_EXPIRATION;\n          }\n          absoluteTimeoutMs = startTimeMs + earliestTimeoutMs;\n        }\n\n        // Mark the earliest timeout in the suspended fiber's ancestor path.\n        // After completing the root, we'll take the largest of all the\n        // suspended fiber's timeouts and use it to compute a timeout for the\n        // whole tree.\n        renderDidSuspend(root, absoluteTimeoutMs, renderExpirationTime);\n\n        _workInProgress.effectTag |= ShouldCapture;\n        _workInProgress.expirationTime = renderExpirationTime;\n        return;\n      } else if (enableSuspenseServerRenderer && _workInProgress.tag === DehydratedSuspenseComponent) {\n        attachPingListener(root, renderExpirationTime, thenable);\n\n        // Since we already have a current fiber, we can eagerly add a retry listener.\n        var retryCache = _workInProgress.memoizedState;\n        if (retryCache === null) {\n          retryCache = _workInProgress.memoizedState = new PossiblyWeakSet();\n          var _current = _workInProgress.alternate;\n          !_current ? invariant(false, 'A dehydrated suspense boundary must commit before trying to render. This is probably a bug in React.') : void 0;\n          _current.memoizedState = retryCache;\n        }\n        // Memoize using the boundary fiber to prevent redundant listeners.\n        if (!retryCache.has(thenable)) {\n          retryCache.add(thenable);\n          var retry = retryTimedOutBoundary.bind(null, _workInProgress, thenable);\n          if (enableSchedulerTracing) {\n            retry = tracing.unstable_wrap(retry);\n          }\n          thenable.then(retry, retry);\n        }\n        _workInProgress.effectTag |= ShouldCapture;\n        _workInProgress.expirationTime = renderExpirationTime;\n        return;\n      }\n      // This boundary already captured during this render. Continue to the next\n      // boundary.\n      _workInProgress = _workInProgress.return;\n    } while (_workInProgress !== null);\n    // No boundary was found. Fallthrough to error mode.\n    // TODO: Use invariant so the message is stripped in prod?\n    value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\\n' + '\\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.' + getStackByFiberInDevAndProd(sourceFiber));\n  }\n\n  // We didn't find a boundary that could handle this type of exception. Start\n  // over and traverse parent path again, this time treating the exception\n  // as an error.\n  renderDidError();\n  value = createCapturedValue(value, sourceFiber);\n  var workInProgress = returnFiber;\n  do {\n    switch (workInProgress.tag) {\n      case HostRoot:\n        {\n          var _errorInfo = value;\n          workInProgress.effectTag |= ShouldCapture;\n          workInProgress.expirationTime = renderExpirationTime;\n          var _update = createRootErrorUpdate(workInProgress, _errorInfo, renderExpirationTime);\n          enqueueCapturedUpdate(workInProgress, _update);\n          return;\n        }\n      case ClassComponent:\n        // Capture and retry\n        var errorInfo = value;\n        var ctor = workInProgress.type;\n        var instance = workInProgress.stateNode;\n        if ((workInProgress.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {\n          workInProgress.effectTag |= ShouldCapture;\n          workInProgress.expirationTime = renderExpirationTime;\n          // Schedule the error boundary to re-render using updated state\n          var _update2 = createClassErrorUpdate(workInProgress, errorInfo, renderExpirationTime);\n          enqueueCapturedUpdate(workInProgress, _update2);\n          return;\n        }\n        break;\n      default:\n        break;\n    }\n    workInProgress = workInProgress.return;\n  } while (workInProgress !== null);\n}\n\nfunction unwindWork(workInProgress, renderExpirationTime) {\n  switch (workInProgress.tag) {\n    case ClassComponent:\n      {\n        var Component = workInProgress.type;\n        if (isContextProvider(Component)) {\n          popContext(workInProgress);\n        }\n        var effectTag = workInProgress.effectTag;\n        if (effectTag & ShouldCapture) {\n          workInProgress.effectTag = effectTag & ~ShouldCapture | DidCapture;\n          return workInProgress;\n        }\n        return null;\n      }\n    case HostRoot:\n      {\n        popHostContainer(workInProgress);\n        popTopLevelContextObject(workInProgress);\n        var _effectTag = workInProgress.effectTag;\n        !((_effectTag & DidCapture) === NoEffect) ? invariant(false, 'The root failed to unmount after an error. This is likely a bug in React. Please file an issue.') : void 0;\n        workInProgress.effectTag = _effectTag & ~ShouldCapture | DidCapture;\n        return workInProgress;\n      }\n    case HostComponent:\n      {\n        // TODO: popHydrationState\n        popHostContext(workInProgress);\n        return null;\n      }\n    case SuspenseComponent:\n      {\n        var _effectTag2 = workInProgress.effectTag;\n        if (_effectTag2 & ShouldCapture) {\n          workInProgress.effectTag = _effectTag2 & ~ShouldCapture | DidCapture;\n          // Captured a suspense effect. Re-render the boundary.\n          return workInProgress;\n        }\n        return null;\n      }\n    case DehydratedSuspenseComponent:\n      {\n        if (enableSuspenseServerRenderer) {\n          // TODO: popHydrationState\n          var _effectTag3 = workInProgress.effectTag;\n          if (_effectTag3 & ShouldCapture) {\n            workInProgress.effectTag = _effectTag3 & ~ShouldCapture | DidCapture;\n            // Captured a suspense effect. Re-render the boundary.\n            return workInProgress;\n          }\n        }\n        return null;\n      }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      return null;\n    case ContextProvider:\n      popProvider(workInProgress);\n      return null;\n    default:\n      return null;\n  }\n}\n\nfunction unwindInterruptedWork(interruptedWork) {\n  switch (interruptedWork.tag) {\n    case ClassComponent:\n      {\n        var childContextTypes = interruptedWork.type.childContextTypes;\n        if (childContextTypes !== null && childContextTypes !== undefined) {\n          popContext(interruptedWork);\n        }\n        break;\n      }\n    case HostRoot:\n      {\n        popHostContainer(interruptedWork);\n        popTopLevelContextObject(interruptedWork);\n        break;\n      }\n    case HostComponent:\n      {\n        popHostContext(interruptedWork);\n        break;\n      }\n    case HostPortal:\n      popHostContainer(interruptedWork);\n      break;\n    case ContextProvider:\n      popProvider(interruptedWork);\n      break;\n    default:\n      break;\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner;\n\n\nvar didWarnAboutStateTransition = void 0;\nvar didWarnSetStateChildContext = void 0;\nvar warnAboutUpdateOnUnmounted = void 0;\nvar warnAboutInvalidUpdates = void 0;\n\nif (enableSchedulerTracing) {\n  // Provide explicit error message when production+profiling bundle of e.g. react-dom\n  // is used with production (non-profiling) bundle of scheduler/tracing\n  !(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null) ? invariant(false, 'It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling') : void 0;\n}\n\n{\n  didWarnAboutStateTransition = false;\n  didWarnSetStateChildContext = false;\n  var didWarnStateUpdateForUnmountedComponent = {};\n\n  warnAboutUpdateOnUnmounted = function (fiber, isClass) {\n    // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n    var componentName = getComponentName(fiber.type) || 'ReactComponent';\n    if (didWarnStateUpdateForUnmountedComponent[componentName]) {\n      return;\n    }\n    warningWithoutStack$1(false, \"Can't perform a React state update on an unmounted component. This \" + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in %s.%s', isClass ? 'the componentWillUnmount method' : 'a useEffect cleanup function', getStackByFiberInDevAndProd(fiber));\n    didWarnStateUpdateForUnmountedComponent[componentName] = true;\n  };\n\n  warnAboutInvalidUpdates = function (instance) {\n    switch (phase) {\n      case 'getChildContext':\n        if (didWarnSetStateChildContext) {\n          return;\n        }\n        warningWithoutStack$1(false, 'setState(...): Cannot call setState() inside getChildContext()');\n        didWarnSetStateChildContext = true;\n        break;\n      case 'render':\n        if (didWarnAboutStateTransition) {\n          return;\n        }\n        warningWithoutStack$1(false, 'Cannot update during an existing state transition (such as within ' + '`render`). Render methods should be a pure function of props and state.');\n        didWarnAboutStateTransition = true;\n        break;\n    }\n  };\n}\n\n// Used to ensure computeUniqueAsyncExpiration is monotonically decreasing.\nvar lastUniqueAsyncExpiration = Sync - 1;\n\nvar isWorking = false;\n\n// The next work in progress fiber that we're currently working on.\nvar nextUnitOfWork = null;\nvar nextRoot = null;\n// The time at which we're currently rendering work.\nvar nextRenderExpirationTime = NoWork;\nvar nextLatestAbsoluteTimeoutMs = -1;\nvar nextRenderDidError = false;\n\n// The next fiber with an effect that we're currently committing.\nvar nextEffect = null;\n\nvar isCommitting$1 = false;\nvar rootWithPendingPassiveEffects = null;\nvar passiveEffectCallbackHandle = null;\nvar passiveEffectCallback = null;\n\nvar legacyErrorBoundariesThatAlreadyFailed = null;\n\n// Used for performance tracking.\nvar interruptedBy = null;\n\nvar stashedWorkInProgressProperties = void 0;\nvar replayUnitOfWork = void 0;\nvar mayReplayFailedUnitOfWork = void 0;\nvar isReplayingFailedUnitOfWork = void 0;\nvar originalReplayError = void 0;\nvar rethrowOriginalError = void 0;\nif ( true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n  stashedWorkInProgressProperties = null;\n  mayReplayFailedUnitOfWork = true;\n  isReplayingFailedUnitOfWork = false;\n  originalReplayError = null;\n  replayUnitOfWork = function (failedUnitOfWork, thrownValue, isYieldy) {\n    if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {\n      // Don't replay promises. Treat everything else like an error.\n      // TODO: Need to figure out a different strategy if/when we add\n      // support for catching other types.\n      return;\n    }\n\n    // Restore the original state of the work-in-progress\n    if (stashedWorkInProgressProperties === null) {\n      // This should never happen. Don't throw because this code is DEV-only.\n      warningWithoutStack$1(false, 'Could not replay rendering after an error. This is likely a bug in React. ' + 'Please file an issue.');\n      return;\n    }\n    assignFiberPropertiesInDEV(failedUnitOfWork, stashedWorkInProgressProperties);\n\n    switch (failedUnitOfWork.tag) {\n      case HostRoot:\n        popHostContainer(failedUnitOfWork);\n        popTopLevelContextObject(failedUnitOfWork);\n        break;\n      case HostComponent:\n        popHostContext(failedUnitOfWork);\n        break;\n      case ClassComponent:\n        {\n          var Component = failedUnitOfWork.type;\n          if (isContextProvider(Component)) {\n            popContext(failedUnitOfWork);\n          }\n          break;\n        }\n      case HostPortal:\n        popHostContainer(failedUnitOfWork);\n        break;\n      case ContextProvider:\n        popProvider(failedUnitOfWork);\n        break;\n    }\n    // Replay the begin phase.\n    isReplayingFailedUnitOfWork = true;\n    originalReplayError = thrownValue;\n    invokeGuardedCallback(null, workLoop, null, isYieldy);\n    isReplayingFailedUnitOfWork = false;\n    originalReplayError = null;\n    if (hasCaughtError()) {\n      var replayError = clearCaughtError();\n      if (replayError != null && thrownValue != null) {\n        try {\n          // Reading the expando property is intentionally\n          // inside `try` because it might be a getter or Proxy.\n          if (replayError._suppressLogging) {\n            // Also suppress logging for the original error.\n            thrownValue._suppressLogging = true;\n          }\n        } catch (inner) {\n          // Ignore.\n        }\n      }\n    } else {\n      // If the begin phase did not fail the second time, set this pointer\n      // back to the original value.\n      nextUnitOfWork = failedUnitOfWork;\n    }\n  };\n  rethrowOriginalError = function () {\n    throw originalReplayError;\n  };\n}\n\nfunction resetStack() {\n  if (nextUnitOfWork !== null) {\n    var interruptedWork = nextUnitOfWork.return;\n    while (interruptedWork !== null) {\n      unwindInterruptedWork(interruptedWork);\n      interruptedWork = interruptedWork.return;\n    }\n  }\n\n  {\n    ReactStrictModeWarnings.discardPendingWarnings();\n    checkThatStackIsEmpty();\n  }\n\n  nextRoot = null;\n  nextRenderExpirationTime = NoWork;\n  nextLatestAbsoluteTimeoutMs = -1;\n  nextRenderDidError = false;\n  nextUnitOfWork = null;\n}\n\nfunction commitAllHostEffects() {\n  while (nextEffect !== null) {\n    {\n      setCurrentFiber(nextEffect);\n    }\n    recordEffect();\n\n    var effectTag = nextEffect.effectTag;\n\n    if (effectTag & ContentReset) {\n      commitResetTextContent(nextEffect);\n    }\n\n    if (effectTag & Ref) {\n      var current$$1 = nextEffect.alternate;\n      if (current$$1 !== null) {\n        commitDetachRef(current$$1);\n      }\n    }\n\n    // The following switch statement is only concerned about placement,\n    // updates, and deletions. To avoid needing to add a case for every\n    // possible bitmap value, we remove the secondary effects from the\n    // effect tag and switch on that value.\n    var primaryEffectTag = effectTag & (Placement | Update | Deletion);\n    switch (primaryEffectTag) {\n      case Placement:\n        {\n          commitPlacement(nextEffect);\n          // Clear the \"placement\" from effect tag so that we know that this is inserted, before\n          // any life-cycles like componentDidMount gets called.\n          // TODO: findDOMNode doesn't rely on this any more but isMounted\n          // does and isMounted is deprecated anyway so we should be able\n          // to kill this.\n          nextEffect.effectTag &= ~Placement;\n          break;\n        }\n      case PlacementAndUpdate:\n        {\n          // Placement\n          commitPlacement(nextEffect);\n          // Clear the \"placement\" from effect tag so that we know that this is inserted, before\n          // any life-cycles like componentDidMount gets called.\n          nextEffect.effectTag &= ~Placement;\n\n          // Update\n          var _current = nextEffect.alternate;\n          commitWork(_current, nextEffect);\n          break;\n        }\n      case Update:\n        {\n          var _current2 = nextEffect.alternate;\n          commitWork(_current2, nextEffect);\n          break;\n        }\n      case Deletion:\n        {\n          commitDeletion(nextEffect);\n          break;\n        }\n    }\n    nextEffect = nextEffect.nextEffect;\n  }\n\n  {\n    resetCurrentFiber();\n  }\n}\n\nfunction commitBeforeMutationLifecycles() {\n  while (nextEffect !== null) {\n    {\n      setCurrentFiber(nextEffect);\n    }\n\n    var effectTag = nextEffect.effectTag;\n    if (effectTag & Snapshot) {\n      recordEffect();\n      var current$$1 = nextEffect.alternate;\n      commitBeforeMutationLifeCycles(current$$1, nextEffect);\n    }\n\n    nextEffect = nextEffect.nextEffect;\n  }\n\n  {\n    resetCurrentFiber();\n  }\n}\n\nfunction commitAllLifeCycles(finishedRoot, committedExpirationTime) {\n  {\n    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n    ReactStrictModeWarnings.flushLegacyContextWarning();\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.flushPendingDeprecationWarnings();\n    }\n  }\n  while (nextEffect !== null) {\n    {\n      setCurrentFiber(nextEffect);\n    }\n    var effectTag = nextEffect.effectTag;\n\n    if (effectTag & (Update | Callback)) {\n      recordEffect();\n      var current$$1 = nextEffect.alternate;\n      commitLifeCycles(finishedRoot, current$$1, nextEffect, committedExpirationTime);\n    }\n\n    if (effectTag & Ref) {\n      recordEffect();\n      commitAttachRef(nextEffect);\n    }\n\n    if (effectTag & Passive) {\n      rootWithPendingPassiveEffects = finishedRoot;\n    }\n\n    nextEffect = nextEffect.nextEffect;\n  }\n  {\n    resetCurrentFiber();\n  }\n}\n\nfunction commitPassiveEffects(root, firstEffect) {\n  rootWithPendingPassiveEffects = null;\n  passiveEffectCallbackHandle = null;\n  passiveEffectCallback = null;\n\n  // Set this to true to prevent re-entrancy\n  var previousIsRendering = isRendering;\n  isRendering = true;\n\n  var effect = firstEffect;\n  do {\n    {\n      setCurrentFiber(effect);\n    }\n\n    if (effect.effectTag & Passive) {\n      var didError = false;\n      var error = void 0;\n      {\n        invokeGuardedCallback(null, commitPassiveHookEffects, null, effect);\n        if (hasCaughtError()) {\n          didError = true;\n          error = clearCaughtError();\n        }\n      }\n      if (didError) {\n        captureCommitPhaseError(effect, error);\n      }\n    }\n    effect = effect.nextEffect;\n  } while (effect !== null);\n  {\n    resetCurrentFiber();\n  }\n\n  isRendering = previousIsRendering;\n\n  // Check if work was scheduled by one of the effects\n  var rootExpirationTime = root.expirationTime;\n  if (rootExpirationTime !== NoWork) {\n    requestWork(root, rootExpirationTime);\n  }\n  // Flush any sync work that was scheduled by effects\n  if (!isBatchingUpdates && !isRendering) {\n    performSyncWork();\n  }\n}\n\nfunction isAlreadyFailedLegacyErrorBoundary(instance) {\n  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);\n}\n\nfunction markLegacyErrorBoundaryAsFailed(instance) {\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n  } else {\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\n  }\n}\n\nfunction flushPassiveEffects() {\n  if (passiveEffectCallbackHandle !== null) {\n    cancelPassiveEffects(passiveEffectCallbackHandle);\n  }\n  if (passiveEffectCallback !== null) {\n    // We call the scheduled callback instead of commitPassiveEffects directly\n    // to ensure tracing works correctly.\n    passiveEffectCallback();\n  }\n}\n\nfunction commitRoot(root, finishedWork) {\n  isWorking = true;\n  isCommitting$1 = true;\n  startCommitTimer();\n\n  !(root.current !== finishedWork) ? invariant(false, 'Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n  var committedExpirationTime = root.pendingCommitExpirationTime;\n  !(committedExpirationTime !== NoWork) ? invariant(false, 'Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n  root.pendingCommitExpirationTime = NoWork;\n\n  // Update the pending priority levels to account for the work that we are\n  // about to commit. This needs to happen before calling the lifecycles, since\n  // they may schedule additional updates.\n  var updateExpirationTimeBeforeCommit = finishedWork.expirationTime;\n  var childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;\n  var earliestRemainingTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;\n  markCommittedPriorityLevels(root, earliestRemainingTimeBeforeCommit);\n\n  var prevInteractions = null;\n  if (enableSchedulerTracing) {\n    // Restore any pending interactions at this point,\n    // So that cascading work triggered during the render phase will be accounted for.\n    prevInteractions = tracing.__interactionsRef.current;\n    tracing.__interactionsRef.current = root.memoizedInteractions;\n  }\n\n  // Reset this to null before calling lifecycles\n  ReactCurrentOwner$2.current = null;\n\n  var firstEffect = void 0;\n  if (finishedWork.effectTag > PerformedWork) {\n    // A fiber's effect list consists only of its children, not itself. So if\n    // the root has an effect, we need to add it to the end of the list. The\n    // resulting list is the set that would belong to the root's parent, if\n    // it had one; that is, all the effects in the tree including the root.\n    if (finishedWork.lastEffect !== null) {\n      finishedWork.lastEffect.nextEffect = finishedWork;\n      firstEffect = finishedWork.firstEffect;\n    } else {\n      firstEffect = finishedWork;\n    }\n  } else {\n    // There is no effect on the root.\n    firstEffect = finishedWork.firstEffect;\n  }\n\n  prepareForCommit(root.containerInfo);\n\n  // Invoke instances of getSnapshotBeforeUpdate before mutation.\n  nextEffect = firstEffect;\n  startCommitSnapshotEffectsTimer();\n  while (nextEffect !== null) {\n    var didError = false;\n    var error = void 0;\n    {\n      invokeGuardedCallback(null, commitBeforeMutationLifecycles, null);\n      if (hasCaughtError()) {\n        didError = true;\n        error = clearCaughtError();\n      }\n    }\n    if (didError) {\n      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n      captureCommitPhaseError(nextEffect, error);\n      // Clean-up\n      if (nextEffect !== null) {\n        nextEffect = nextEffect.nextEffect;\n      }\n    }\n  }\n  stopCommitSnapshotEffectsTimer();\n\n  if (enableProfilerTimer) {\n    // Mark the current commit time to be shared by all Profilers in this batch.\n    // This enables them to be grouped later.\n    recordCommitTime();\n  }\n\n  // Commit all the side-effects within a tree. We'll do this in two passes.\n  // The first pass performs all the host insertions, updates, deletions and\n  // ref unmounts.\n  nextEffect = firstEffect;\n  startCommitHostEffectsTimer();\n  while (nextEffect !== null) {\n    var _didError = false;\n    var _error = void 0;\n    {\n      invokeGuardedCallback(null, commitAllHostEffects, null);\n      if (hasCaughtError()) {\n        _didError = true;\n        _error = clearCaughtError();\n      }\n    }\n    if (_didError) {\n      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n      captureCommitPhaseError(nextEffect, _error);\n      // Clean-up\n      if (nextEffect !== null) {\n        nextEffect = nextEffect.nextEffect;\n      }\n    }\n  }\n  stopCommitHostEffectsTimer();\n\n  resetAfterCommit(root.containerInfo);\n\n  // The work-in-progress tree is now the current tree. This must come after\n  // the first pass of the commit phase, so that the previous tree is still\n  // current during componentWillUnmount, but before the second pass, so that\n  // the finished work is current during componentDidMount/Update.\n  root.current = finishedWork;\n\n  // In the second pass we'll perform all life-cycles and ref callbacks.\n  // Life-cycles happen as a separate pass so that all placements, updates,\n  // and deletions in the entire tree have already been invoked.\n  // This pass also triggers any renderer-specific initial effects.\n  nextEffect = firstEffect;\n  startCommitLifeCyclesTimer();\n  while (nextEffect !== null) {\n    var _didError2 = false;\n    var _error2 = void 0;\n    {\n      invokeGuardedCallback(null, commitAllLifeCycles, null, root, committedExpirationTime);\n      if (hasCaughtError()) {\n        _didError2 = true;\n        _error2 = clearCaughtError();\n      }\n    }\n    if (_didError2) {\n      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n      captureCommitPhaseError(nextEffect, _error2);\n      if (nextEffect !== null) {\n        nextEffect = nextEffect.nextEffect;\n      }\n    }\n  }\n\n  if (firstEffect !== null && rootWithPendingPassiveEffects !== null) {\n    // This commit included a passive effect. These do not need to fire until\n    // after the next paint. Schedule an callback to fire them in an async\n    // event. To ensure serial execution, the callback will be flushed early if\n    // we enter rootWithPendingPassiveEffects commit phase before then.\n    var callback = commitPassiveEffects.bind(null, root, firstEffect);\n    if (enableSchedulerTracing) {\n      // TODO: Avoid this extra callback by mutating the tracing ref directly,\n      // like we do at the beginning of commitRoot. I've opted not to do that\n      // here because that code is still in flux.\n      callback = tracing.unstable_wrap(callback);\n    }\n    passiveEffectCallbackHandle = scheduler.unstable_runWithPriority(scheduler.unstable_NormalPriority, function () {\n      return schedulePassiveEffects(callback);\n    });\n    passiveEffectCallback = callback;\n  }\n\n  isCommitting$1 = false;\n  isWorking = false;\n  stopCommitLifeCyclesTimer();\n  stopCommitTimer();\n  onCommitRoot(finishedWork.stateNode);\n  if ( true && ReactFiberInstrumentation_1.debugTool) {\n    ReactFiberInstrumentation_1.debugTool.onCommitWork(finishedWork);\n  }\n\n  var updateExpirationTimeAfterCommit = finishedWork.expirationTime;\n  var childExpirationTimeAfterCommit = finishedWork.childExpirationTime;\n  var earliestRemainingTimeAfterCommit = childExpirationTimeAfterCommit > updateExpirationTimeAfterCommit ? childExpirationTimeAfterCommit : updateExpirationTimeAfterCommit;\n  if (earliestRemainingTimeAfterCommit === NoWork) {\n    // If there's no remaining work, we can clear the set of already failed\n    // error boundaries.\n    legacyErrorBoundariesThatAlreadyFailed = null;\n  }\n  onCommit(root, earliestRemainingTimeAfterCommit);\n\n  if (enableSchedulerTracing) {\n    tracing.__interactionsRef.current = prevInteractions;\n\n    var subscriber = void 0;\n\n    try {\n      subscriber = tracing.__subscriberRef.current;\n      if (subscriber !== null && root.memoizedInteractions.size > 0) {\n        var threadID = computeThreadID(committedExpirationTime, root.interactionThreadID);\n        subscriber.onWorkStopped(root.memoizedInteractions, threadID);\n      }\n    } catch (error) {\n      // It's not safe for commitRoot() to throw.\n      // Store the error for now and we'll re-throw in finishRendering().\n      if (!hasUnhandledError) {\n        hasUnhandledError = true;\n        unhandledError = error;\n      }\n    } finally {\n      // Clear completed interactions from the pending Map.\n      // Unless the render was suspended or cascading work was scheduled,\n      // In which case– leave pending interactions until the subsequent render.\n      var pendingInteractionMap = root.pendingInteractionMap;\n      pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {\n        // Only decrement the pending interaction count if we're done.\n        // If there's still work at the current priority,\n        // That indicates that we are waiting for suspense data.\n        if (scheduledExpirationTime > earliestRemainingTimeAfterCommit) {\n          pendingInteractionMap.delete(scheduledExpirationTime);\n\n          scheduledInteractions.forEach(function (interaction) {\n            interaction.__count--;\n\n            if (subscriber !== null && interaction.__count === 0) {\n              try {\n                subscriber.onInteractionScheduledWorkCompleted(interaction);\n              } catch (error) {\n                // It's not safe for commitRoot() to throw.\n                // Store the error for now and we'll re-throw in finishRendering().\n                if (!hasUnhandledError) {\n                  hasUnhandledError = true;\n                  unhandledError = error;\n                }\n              }\n            }\n          });\n        }\n      });\n    }\n  }\n}\n\nfunction resetChildExpirationTime(workInProgress, renderTime) {\n  if (renderTime !== Never && workInProgress.childExpirationTime === Never) {\n    // The children of this component are hidden. Don't bubble their\n    // expiration times.\n    return;\n  }\n\n  var newChildExpirationTime = NoWork;\n\n  // Bubble up the earliest expiration time.\n  if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n    // We're in profiling mode.\n    // Let's use this same traversal to update the render durations.\n    var actualDuration = workInProgress.actualDuration;\n    var treeBaseDuration = workInProgress.selfBaseDuration;\n\n    // When a fiber is cloned, its actualDuration is reset to 0.\n    // This value will only be updated if work is done on the fiber (i.e. it doesn't bailout).\n    // When work is done, it should bubble to the parent's actualDuration.\n    // If the fiber has not been cloned though, (meaning no work was done),\n    // Then this value will reflect the amount of time spent working on a previous render.\n    // In that case it should not bubble.\n    // We determine whether it was cloned by comparing the child pointer.\n    var shouldBubbleActualDurations = workInProgress.alternate === null || workInProgress.child !== workInProgress.alternate.child;\n\n    var child = workInProgress.child;\n    while (child !== null) {\n      var childUpdateExpirationTime = child.expirationTime;\n      var childChildExpirationTime = child.childExpirationTime;\n      if (childUpdateExpirationTime > newChildExpirationTime) {\n        newChildExpirationTime = childUpdateExpirationTime;\n      }\n      if (childChildExpirationTime > newChildExpirationTime) {\n        newChildExpirationTime = childChildExpirationTime;\n      }\n      if (shouldBubbleActualDurations) {\n        actualDuration += child.actualDuration;\n      }\n      treeBaseDuration += child.treeBaseDuration;\n      child = child.sibling;\n    }\n    workInProgress.actualDuration = actualDuration;\n    workInProgress.treeBaseDuration = treeBaseDuration;\n  } else {\n    var _child = workInProgress.child;\n    while (_child !== null) {\n      var _childUpdateExpirationTime = _child.expirationTime;\n      var _childChildExpirationTime = _child.childExpirationTime;\n      if (_childUpdateExpirationTime > newChildExpirationTime) {\n        newChildExpirationTime = _childUpdateExpirationTime;\n      }\n      if (_childChildExpirationTime > newChildExpirationTime) {\n        newChildExpirationTime = _childChildExpirationTime;\n      }\n      _child = _child.sibling;\n    }\n  }\n\n  workInProgress.childExpirationTime = newChildExpirationTime;\n}\n\nfunction completeUnitOfWork(workInProgress) {\n  // Attempt to complete the current unit of work, then move to the\n  // next sibling. If there are no more siblings, return to the\n  // parent fiber.\n  while (true) {\n    // The current, flushed, state of this fiber is the alternate.\n    // Ideally nothing should rely on this, but relying on it here\n    // means that we don't need an additional field on the work in\n    // progress.\n    var current$$1 = workInProgress.alternate;\n    {\n      setCurrentFiber(workInProgress);\n    }\n\n    var returnFiber = workInProgress.return;\n    var siblingFiber = workInProgress.sibling;\n\n    if ((workInProgress.effectTag & Incomplete) === NoEffect) {\n      if ( true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n        // Don't replay if it fails during completion phase.\n        mayReplayFailedUnitOfWork = false;\n      }\n      // This fiber completed.\n      // Remember we're completing this unit so we can find a boundary if it fails.\n      nextUnitOfWork = workInProgress;\n      if (enableProfilerTimer) {\n        if (workInProgress.mode & ProfileMode) {\n          startProfilerTimer(workInProgress);\n        }\n        nextUnitOfWork = completeWork(current$$1, workInProgress, nextRenderExpirationTime);\n        if (workInProgress.mode & ProfileMode) {\n          // Update render duration assuming we didn't error.\n          stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);\n        }\n      } else {\n        nextUnitOfWork = completeWork(current$$1, workInProgress, nextRenderExpirationTime);\n      }\n      if ( true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n        // We're out of completion phase so replaying is fine now.\n        mayReplayFailedUnitOfWork = true;\n      }\n      stopWorkTimer(workInProgress);\n      resetChildExpirationTime(workInProgress, nextRenderExpirationTime);\n      {\n        resetCurrentFiber();\n      }\n\n      if (nextUnitOfWork !== null) {\n        // Completing this fiber spawned new work. Work on that next.\n        return nextUnitOfWork;\n      }\n\n      if (returnFiber !== null &&\n      // Do not append effects to parents if a sibling failed to complete\n      (returnFiber.effectTag & Incomplete) === NoEffect) {\n        // Append all the effects of the subtree and this fiber onto the effect\n        // list of the parent. The completion order of the children affects the\n        // side-effect order.\n        if (returnFiber.firstEffect === null) {\n          returnFiber.firstEffect = workInProgress.firstEffect;\n        }\n        if (workInProgress.lastEffect !== null) {\n          if (returnFiber.lastEffect !== null) {\n            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;\n          }\n          returnFiber.lastEffect = workInProgress.lastEffect;\n        }\n\n        // If this fiber had side-effects, we append it AFTER the children's\n        // side-effects. We can perform certain side-effects earlier if\n        // needed, by doing multiple passes over the effect list. We don't want\n        // to schedule our own side-effect on our own list because if end up\n        // reusing children we'll schedule this effect onto itself since we're\n        // at the end.\n        var effectTag = workInProgress.effectTag;\n        // Skip both NoWork and PerformedWork tags when creating the effect list.\n        // PerformedWork effect is read by React DevTools but shouldn't be committed.\n        if (effectTag > PerformedWork) {\n          if (returnFiber.lastEffect !== null) {\n            returnFiber.lastEffect.nextEffect = workInProgress;\n          } else {\n            returnFiber.firstEffect = workInProgress;\n          }\n          returnFiber.lastEffect = workInProgress;\n        }\n      }\n\n      if ( true && ReactFiberInstrumentation_1.debugTool) {\n        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);\n      }\n\n      if (siblingFiber !== null) {\n        // If there is more work to do in this returnFiber, do that next.\n        return siblingFiber;\n      } else if (returnFiber !== null) {\n        // If there's no more work in this returnFiber. Complete the returnFiber.\n        workInProgress = returnFiber;\n        continue;\n      } else {\n        // We've reached the root.\n        return null;\n      }\n    } else {\n      if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);\n\n        // Include the time spent working on failed children before continuing.\n        var actualDuration = workInProgress.actualDuration;\n        var child = workInProgress.child;\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n        workInProgress.actualDuration = actualDuration;\n      }\n\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      var next = unwindWork(workInProgress, nextRenderExpirationTime);\n      // Because this fiber did not complete, don't reset its expiration time.\n      if (workInProgress.effectTag & DidCapture) {\n        // Restarting an error boundary\n        stopFailedWorkTimer(workInProgress);\n      } else {\n        stopWorkTimer(workInProgress);\n      }\n\n      {\n        resetCurrentFiber();\n      }\n\n      if (next !== null) {\n        stopWorkTimer(workInProgress);\n        if ( true && ReactFiberInstrumentation_1.debugTool) {\n          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);\n        }\n\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        next.effectTag &= HostEffectMask;\n        return next;\n      }\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its effect list.\n        returnFiber.firstEffect = returnFiber.lastEffect = null;\n        returnFiber.effectTag |= Incomplete;\n      }\n\n      if ( true && ReactFiberInstrumentation_1.debugTool) {\n        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);\n      }\n\n      if (siblingFiber !== null) {\n        // If there is more work to do in this returnFiber, do that next.\n        return siblingFiber;\n      } else if (returnFiber !== null) {\n        // If there's no more work in this returnFiber. Complete the returnFiber.\n        workInProgress = returnFiber;\n        continue;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  // Without this explicit null return Flow complains of invalid return type\n  // TODO Remove the above while(true) loop\n  // eslint-disable-next-line no-unreachable\n  return null;\n}\n\nfunction performUnitOfWork(workInProgress) {\n  // The current, flushed, state of this fiber is the alternate.\n  // Ideally nothing should rely on this, but relying on it here\n  // means that we don't need an additional field on the work in\n  // progress.\n  var current$$1 = workInProgress.alternate;\n\n  // See if beginning this work spawns more work.\n  startWorkTimer(workInProgress);\n  {\n    setCurrentFiber(workInProgress);\n  }\n\n  if ( true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n    stashedWorkInProgressProperties = assignFiberPropertiesInDEV(stashedWorkInProgressProperties, workInProgress);\n  }\n\n  var next = void 0;\n  if (enableProfilerTimer) {\n    if (workInProgress.mode & ProfileMode) {\n      startProfilerTimer(workInProgress);\n    }\n\n    next = beginWork(current$$1, workInProgress, nextRenderExpirationTime);\n    workInProgress.memoizedProps = workInProgress.pendingProps;\n\n    if (workInProgress.mode & ProfileMode) {\n      // Record the render duration assuming we didn't bailout (or error).\n      stopProfilerTimerIfRunningAndRecordDelta(workInProgress, true);\n    }\n  } else {\n    next = beginWork(current$$1, workInProgress, nextRenderExpirationTime);\n    workInProgress.memoizedProps = workInProgress.pendingProps;\n  }\n\n  {\n    resetCurrentFiber();\n    if (isReplayingFailedUnitOfWork) {\n      // Currently replaying a failed unit of work. This should be unreachable,\n      // because the render phase is meant to be idempotent, and it should\n      // have thrown again. Since it didn't, rethrow the original error, so\n      // React's internal stack is not misaligned.\n      rethrowOriginalError();\n    }\n  }\n  if ( true && ReactFiberInstrumentation_1.debugTool) {\n    ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);\n  }\n\n  if (next === null) {\n    // If this doesn't spawn new work, complete the current work.\n    next = completeUnitOfWork(workInProgress);\n  }\n\n  ReactCurrentOwner$2.current = null;\n\n  return next;\n}\n\nfunction workLoop(isYieldy) {\n  if (!isYieldy) {\n    // Flush work without yielding\n    while (nextUnitOfWork !== null) {\n      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n    }\n  } else {\n    // Flush asynchronous work until there's a higher priority event\n    while (nextUnitOfWork !== null && !shouldYieldToRenderer()) {\n      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n    }\n  }\n}\n\nfunction renderRoot(root, isYieldy) {\n  !!isWorking ? invariant(false, 'renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n\n  flushPassiveEffects();\n\n  isWorking = true;\n  var previousDispatcher = ReactCurrentDispatcher.current;\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  var expirationTime = root.nextExpirationTimeToWorkOn;\n\n  // Check if we're starting from a fresh stack, or if we're resuming from\n  // previously yielded work.\n  if (expirationTime !== nextRenderExpirationTime || root !== nextRoot || nextUnitOfWork === null) {\n    // Reset the stack and start working from the root.\n    resetStack();\n    nextRoot = root;\n    nextRenderExpirationTime = expirationTime;\n    nextUnitOfWork = createWorkInProgress(nextRoot.current, null, nextRenderExpirationTime);\n    root.pendingCommitExpirationTime = NoWork;\n\n    if (enableSchedulerTracing) {\n      // Determine which interactions this batch of work currently includes,\n      // So that we can accurately attribute time spent working on it,\n      var interactions = new Set();\n      root.pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {\n        if (scheduledExpirationTime >= expirationTime) {\n          scheduledInteractions.forEach(function (interaction) {\n            return interactions.add(interaction);\n          });\n        }\n      });\n\n      // Store the current set of interactions on the FiberRoot for a few reasons:\n      // We can re-use it in hot functions like renderRoot() without having to recalculate it.\n      // We will also use it in commitWork() to pass to any Profiler onRender() hooks.\n      // This also provides DevTools with a way to access it when the onCommitRoot() hook is called.\n      root.memoizedInteractions = interactions;\n\n      if (interactions.size > 0) {\n        var subscriber = tracing.__subscriberRef.current;\n        if (subscriber !== null) {\n          var threadID = computeThreadID(expirationTime, root.interactionThreadID);\n          try {\n            subscriber.onWorkStarted(interactions, threadID);\n          } catch (error) {\n            // Work thrown by an interaction tracing subscriber should be rethrown,\n            // But only once it's safe (to avoid leaving the scheduler in an invalid state).\n            // Store the error for now and we'll re-throw in finishRendering().\n            if (!hasUnhandledError) {\n              hasUnhandledError = true;\n              unhandledError = error;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  var prevInteractions = null;\n  if (enableSchedulerTracing) {\n    // We're about to start new traced work.\n    // Restore pending interactions so cascading work triggered during the render phase will be accounted for.\n    prevInteractions = tracing.__interactionsRef.current;\n    tracing.__interactionsRef.current = root.memoizedInteractions;\n  }\n\n  var didFatal = false;\n\n  startWorkLoopTimer(nextUnitOfWork);\n\n  do {\n    try {\n      workLoop(isYieldy);\n    } catch (thrownValue) {\n      resetContextDependences();\n      resetHooks();\n\n      // Reset in case completion throws.\n      // This is only used in DEV and when replaying is on.\n      var mayReplay = void 0;\n      if ( true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n        mayReplay = mayReplayFailedUnitOfWork;\n        mayReplayFailedUnitOfWork = true;\n      }\n\n      if (nextUnitOfWork === null) {\n        // This is a fatal error.\n        didFatal = true;\n        onUncaughtError(thrownValue);\n      } else {\n        if (enableProfilerTimer && nextUnitOfWork.mode & ProfileMode) {\n          // Record the time spent rendering before an error was thrown.\n          // This avoids inaccurate Profiler durations in the case of a suspended render.\n          stopProfilerTimerIfRunningAndRecordDelta(nextUnitOfWork, true);\n        }\n\n        {\n          // Reset global debug state\n          // We assume this is defined in DEV\n          resetCurrentlyProcessingQueue();\n        }\n\n        if ( true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n          if (mayReplay) {\n            var failedUnitOfWork = nextUnitOfWork;\n            replayUnitOfWork(failedUnitOfWork, thrownValue, isYieldy);\n          }\n        }\n\n        // TODO: we already know this isn't true in some cases.\n        // At least this shows a nicer error message until we figure out the cause.\n        // https://github.com/facebook/react/issues/12449#issuecomment-386727431\n        !(nextUnitOfWork !== null) ? invariant(false, 'Failed to replay rendering after an error. This is likely caused by a bug in React. Please file an issue with a reproducing case to help us find it.') : void 0;\n\n        var sourceFiber = nextUnitOfWork;\n        var returnFiber = sourceFiber.return;\n        if (returnFiber === null) {\n          // This is the root. The root could capture its own errors. However,\n          // we don't know if it errors before or after we pushed the host\n          // context. This information is needed to avoid a stack mismatch.\n          // Because we're not sure, treat this as a fatal error. We could track\n          // which phase it fails in, but doesn't seem worth it. At least\n          // for now.\n          didFatal = true;\n          onUncaughtError(thrownValue);\n        } else {\n          throwException(root, returnFiber, sourceFiber, thrownValue, nextRenderExpirationTime);\n          nextUnitOfWork = completeUnitOfWork(sourceFiber);\n          continue;\n        }\n      }\n    }\n    break;\n  } while (true);\n\n  if (enableSchedulerTracing) {\n    // Traced work is done for now; restore the previous interactions.\n    tracing.__interactionsRef.current = prevInteractions;\n  }\n\n  // We're done performing work. Time to clean up.\n  isWorking = false;\n  ReactCurrentDispatcher.current = previousDispatcher;\n  resetContextDependences();\n  resetHooks();\n\n  // Yield back to main thread.\n  if (didFatal) {\n    var _didCompleteRoot = false;\n    stopWorkLoopTimer(interruptedBy, _didCompleteRoot);\n    interruptedBy = null;\n    // There was a fatal error.\n    {\n      resetStackAfterFatalErrorInDev();\n    }\n    // `nextRoot` points to the in-progress root. A non-null value indicates\n    // that we're in the middle of an async render. Set it to null to indicate\n    // there's no more work to be done in the current batch.\n    nextRoot = null;\n    onFatal(root);\n    return;\n  }\n\n  if (nextUnitOfWork !== null) {\n    // There's still remaining async work in this tree, but we ran out of time\n    // in the current frame. Yield back to the renderer. Unless we're\n    // interrupted by a higher priority update, we'll continue later from where\n    // we left off.\n    var _didCompleteRoot2 = false;\n    stopWorkLoopTimer(interruptedBy, _didCompleteRoot2);\n    interruptedBy = null;\n    onYield(root);\n    return;\n  }\n\n  // We completed the whole tree.\n  var didCompleteRoot = true;\n  stopWorkLoopTimer(interruptedBy, didCompleteRoot);\n  var rootWorkInProgress = root.current.alternate;\n  !(rootWorkInProgress !== null) ? invariant(false, 'Finished root should have a work-in-progress. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n\n  // `nextRoot` points to the in-progress root. A non-null value indicates\n  // that we're in the middle of an async render. Set it to null to indicate\n  // there's no more work to be done in the current batch.\n  nextRoot = null;\n  interruptedBy = null;\n\n  if (nextRenderDidError) {\n    // There was an error\n    if (hasLowerPriorityWork(root, expirationTime)) {\n      // There's lower priority work. If so, it may have the effect of fixing\n      // the exception that was just thrown. Exit without committing. This is\n      // similar to a suspend, but without a timeout because we're not waiting\n      // for a promise to resolve. React will restart at the lower\n      // priority level.\n      markSuspendedPriorityLevel(root, expirationTime);\n      var suspendedExpirationTime = expirationTime;\n      var rootExpirationTime = root.expirationTime;\n      onSuspend(root, rootWorkInProgress, suspendedExpirationTime, rootExpirationTime, -1 // Indicates no timeout\n      );\n      return;\n    } else if (\n    // There's no lower priority work, but we're rendering asynchronously.\n    // Synchronously attempt to render the same level one more time. This is\n    // similar to a suspend, but without a timeout because we're not waiting\n    // for a promise to resolve.\n    !root.didError && isYieldy) {\n      root.didError = true;\n      var _suspendedExpirationTime = root.nextExpirationTimeToWorkOn = expirationTime;\n      var _rootExpirationTime = root.expirationTime = Sync;\n      onSuspend(root, rootWorkInProgress, _suspendedExpirationTime, _rootExpirationTime, -1 // Indicates no timeout\n      );\n      return;\n    }\n  }\n\n  if (isYieldy && nextLatestAbsoluteTimeoutMs !== -1) {\n    // The tree was suspended.\n    var _suspendedExpirationTime2 = expirationTime;\n    markSuspendedPriorityLevel(root, _suspendedExpirationTime2);\n\n    // Find the earliest uncommitted expiration time in the tree, including\n    // work that is suspended. The timeout threshold cannot be longer than\n    // the overall expiration.\n    var earliestExpirationTime = findEarliestOutstandingPriorityLevel(root, expirationTime);\n    var earliestExpirationTimeMs = expirationTimeToMs(earliestExpirationTime);\n    if (earliestExpirationTimeMs < nextLatestAbsoluteTimeoutMs) {\n      nextLatestAbsoluteTimeoutMs = earliestExpirationTimeMs;\n    }\n\n    // Subtract the current time from the absolute timeout to get the number\n    // of milliseconds until the timeout. In other words, convert an absolute\n    // timestamp to a relative time. This is the value that is passed\n    // to `setTimeout`.\n    var currentTimeMs = expirationTimeToMs(requestCurrentTime());\n    var msUntilTimeout = nextLatestAbsoluteTimeoutMs - currentTimeMs;\n    msUntilTimeout = msUntilTimeout < 0 ? 0 : msUntilTimeout;\n\n    // TODO: Account for the Just Noticeable Difference\n\n    var _rootExpirationTime2 = root.expirationTime;\n    onSuspend(root, rootWorkInProgress, _suspendedExpirationTime2, _rootExpirationTime2, msUntilTimeout);\n    return;\n  }\n\n  // Ready to commit.\n  onComplete(root, rootWorkInProgress, expirationTime);\n}\n\nfunction captureCommitPhaseError(sourceFiber, value) {\n  var expirationTime = Sync;\n  var fiber = sourceFiber.return;\n  while (fiber !== null) {\n    switch (fiber.tag) {\n      case ClassComponent:\n        var ctor = fiber.type;\n        var instance = fiber.stateNode;\n        if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {\n          var errorInfo = createCapturedValue(value, sourceFiber);\n          var update = createClassErrorUpdate(fiber, errorInfo, expirationTime);\n          enqueueUpdate(fiber, update);\n          scheduleWork(fiber, expirationTime);\n          return;\n        }\n        break;\n      case HostRoot:\n        {\n          var _errorInfo = createCapturedValue(value, sourceFiber);\n          var _update = createRootErrorUpdate(fiber, _errorInfo, expirationTime);\n          enqueueUpdate(fiber, _update);\n          scheduleWork(fiber, expirationTime);\n          return;\n        }\n    }\n    fiber = fiber.return;\n  }\n\n  if (sourceFiber.tag === HostRoot) {\n    // Error was thrown at the root. There is no parent, so the root\n    // itself should capture it.\n    var rootFiber = sourceFiber;\n    var _errorInfo2 = createCapturedValue(value, rootFiber);\n    var _update2 = createRootErrorUpdate(rootFiber, _errorInfo2, expirationTime);\n    enqueueUpdate(rootFiber, _update2);\n    scheduleWork(rootFiber, expirationTime);\n  }\n}\n\nfunction computeThreadID(expirationTime, interactionThreadID) {\n  // Interaction threads are unique per root and expiration time.\n  return expirationTime * 1000 + interactionThreadID;\n}\n\n// Creates a unique async expiration time.\nfunction computeUniqueAsyncExpiration() {\n  var currentTime = requestCurrentTime();\n  var result = computeAsyncExpiration(currentTime);\n  if (result >= lastUniqueAsyncExpiration) {\n    // Since we assume the current time monotonically increases, we only hit\n    // this branch when computeUniqueAsyncExpiration is fired multiple times\n    // within a 200ms window (or whatever the async bucket size is).\n    result = lastUniqueAsyncExpiration - 1;\n  }\n  lastUniqueAsyncExpiration = result;\n  return lastUniqueAsyncExpiration;\n}\n\nfunction computeExpirationForFiber(currentTime, fiber) {\n  var priorityLevel = scheduler.unstable_getCurrentPriorityLevel();\n\n  var expirationTime = void 0;\n  if ((fiber.mode & ConcurrentMode) === NoContext) {\n    // Outside of concurrent mode, updates are always synchronous.\n    expirationTime = Sync;\n  } else if (isWorking && !isCommitting$1) {\n    // During render phase, updates expire during as the current render.\n    expirationTime = nextRenderExpirationTime;\n  } else {\n    switch (priorityLevel) {\n      case scheduler.unstable_ImmediatePriority:\n        expirationTime = Sync;\n        break;\n      case scheduler.unstable_UserBlockingPriority:\n        expirationTime = computeInteractiveExpiration(currentTime);\n        break;\n      case scheduler.unstable_NormalPriority:\n        // This is a normal, concurrent update\n        expirationTime = computeAsyncExpiration(currentTime);\n        break;\n      case scheduler.unstable_LowPriority:\n      case scheduler.unstable_IdlePriority:\n        expirationTime = Never;\n        break;\n      default:\n        invariant(false, 'Unknown priority level. This error is likely caused by a bug in React. Please file an issue.');\n    }\n\n    // If we're in the middle of rendering a tree, do not update at the same\n    // expiration time that is already rendering.\n    if (nextRoot !== null && expirationTime === nextRenderExpirationTime) {\n      expirationTime -= 1;\n    }\n  }\n\n  // Keep track of the lowest pending interactive expiration time. This\n  // allows us to synchronously flush all interactive updates\n  // when needed.\n  // TODO: Move this to renderer?\n  if (priorityLevel === scheduler.unstable_UserBlockingPriority && (lowestPriorityPendingInteractiveExpirationTime === NoWork || expirationTime < lowestPriorityPendingInteractiveExpirationTime)) {\n    lowestPriorityPendingInteractiveExpirationTime = expirationTime;\n  }\n\n  return expirationTime;\n}\n\nfunction renderDidSuspend(root, absoluteTimeoutMs, suspendedTime) {\n  // Schedule the timeout.\n  if (absoluteTimeoutMs >= 0 && nextLatestAbsoluteTimeoutMs < absoluteTimeoutMs) {\n    nextLatestAbsoluteTimeoutMs = absoluteTimeoutMs;\n  }\n}\n\nfunction renderDidError() {\n  nextRenderDidError = true;\n}\n\nfunction pingSuspendedRoot(root, thenable, pingTime) {\n  // A promise that previously suspended React from committing has resolved.\n  // If React is still suspended, try again at the previous level (pingTime).\n\n  var pingCache = root.pingCache;\n  if (pingCache !== null) {\n    // The thenable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    pingCache.delete(thenable);\n  }\n\n  if (nextRoot !== null && nextRenderExpirationTime === pingTime) {\n    // Received a ping at the same priority level at which we're currently\n    // rendering. Restart from the root.\n    nextRoot = null;\n  } else {\n    // Confirm that the root is still suspended at this level. Otherwise exit.\n    if (isPriorityLevelSuspended(root, pingTime)) {\n      // Ping at the original level\n      markPingedPriorityLevel(root, pingTime);\n      var rootExpirationTime = root.expirationTime;\n      if (rootExpirationTime !== NoWork) {\n        requestWork(root, rootExpirationTime);\n      }\n    }\n  }\n}\n\nfunction retryTimedOutBoundary(boundaryFiber, thenable) {\n  // The boundary fiber (a Suspense component) previously timed out and was\n  // rendered in its fallback state. One of the promises that suspended it has\n  // resolved, which means at least part of the tree was likely unblocked. Try\n  var retryCache = void 0;\n  if (enableSuspenseServerRenderer) {\n    switch (boundaryFiber.tag) {\n      case SuspenseComponent:\n        retryCache = boundaryFiber.stateNode;\n        break;\n      case DehydratedSuspenseComponent:\n        retryCache = boundaryFiber.memoizedState;\n        break;\n      default:\n        invariant(false, 'Pinged unknown suspense boundary type. This is probably a bug in React.');\n    }\n  } else {\n    retryCache = boundaryFiber.stateNode;\n  }\n  if (retryCache !== null) {\n    // The thenable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    retryCache.delete(thenable);\n  }\n\n  var currentTime = requestCurrentTime();\n  var retryTime = computeExpirationForFiber(currentTime, boundaryFiber);\n  var root = scheduleWorkToRoot(boundaryFiber, retryTime);\n  if (root !== null) {\n    markPendingPriorityLevel(root, retryTime);\n    var rootExpirationTime = root.expirationTime;\n    if (rootExpirationTime !== NoWork) {\n      requestWork(root, rootExpirationTime);\n    }\n  }\n}\n\nfunction scheduleWorkToRoot(fiber, expirationTime) {\n  recordScheduleUpdate();\n\n  {\n    if (fiber.tag === ClassComponent) {\n      var instance = fiber.stateNode;\n      warnAboutInvalidUpdates(instance);\n    }\n  }\n\n  // Update the source fiber's expiration time\n  if (fiber.expirationTime < expirationTime) {\n    fiber.expirationTime = expirationTime;\n  }\n  var alternate = fiber.alternate;\n  if (alternate !== null && alternate.expirationTime < expirationTime) {\n    alternate.expirationTime = expirationTime;\n  }\n  // Walk the parent path to the root and update the child expiration time.\n  var node = fiber.return;\n  var root = null;\n  if (node === null && fiber.tag === HostRoot) {\n    root = fiber.stateNode;\n  } else {\n    while (node !== null) {\n      alternate = node.alternate;\n      if (node.childExpirationTime < expirationTime) {\n        node.childExpirationTime = expirationTime;\n        if (alternate !== null && alternate.childExpirationTime < expirationTime) {\n          alternate.childExpirationTime = expirationTime;\n        }\n      } else if (alternate !== null && alternate.childExpirationTime < expirationTime) {\n        alternate.childExpirationTime = expirationTime;\n      }\n      if (node.return === null && node.tag === HostRoot) {\n        root = node.stateNode;\n        break;\n      }\n      node = node.return;\n    }\n  }\n\n  if (enableSchedulerTracing) {\n    if (root !== null) {\n      var interactions = tracing.__interactionsRef.current;\n      if (interactions.size > 0) {\n        var pendingInteractionMap = root.pendingInteractionMap;\n        var pendingInteractions = pendingInteractionMap.get(expirationTime);\n        if (pendingInteractions != null) {\n          interactions.forEach(function (interaction) {\n            if (!pendingInteractions.has(interaction)) {\n              // Update the pending async work count for previously unscheduled interaction.\n              interaction.__count++;\n            }\n\n            pendingInteractions.add(interaction);\n          });\n        } else {\n          pendingInteractionMap.set(expirationTime, new Set(interactions));\n\n          // Update the pending async work count for the current interactions.\n          interactions.forEach(function (interaction) {\n            interaction.__count++;\n          });\n        }\n\n        var subscriber = tracing.__subscriberRef.current;\n        if (subscriber !== null) {\n          var threadID = computeThreadID(expirationTime, root.interactionThreadID);\n          subscriber.onWorkScheduled(interactions, threadID);\n        }\n      }\n    }\n  }\n  return root;\n}\n\nfunction warnIfNotCurrentlyBatchingInDev(fiber) {\n  {\n    if (isRendering === false && isBatchingUpdates === false) {\n      warningWithoutStack$1(false, 'An update to %s inside a test was not wrapped in act(...).\\n\\n' + 'When testing, code that causes React state updates should be wrapped into act(...):\\n\\n' + 'act(() => {\\n' + '  /* fire events that update state */\\n' + '});\\n' + '/* assert on the output */\\n\\n' + \"This ensures that you're testing the behavior the user would see in the browser.\" + ' Learn more at https://fb.me/react-wrap-tests-with-act' + '%s', getComponentName(fiber.type), getStackByFiberInDevAndProd(fiber));\n    }\n  }\n}\n\nfunction scheduleWork(fiber, expirationTime) {\n  var root = scheduleWorkToRoot(fiber, expirationTime);\n  if (root === null) {\n    {\n      switch (fiber.tag) {\n        case ClassComponent:\n          warnAboutUpdateOnUnmounted(fiber, true);\n          break;\n        case FunctionComponent:\n        case ForwardRef:\n        case MemoComponent:\n        case SimpleMemoComponent:\n          warnAboutUpdateOnUnmounted(fiber, false);\n          break;\n      }\n    }\n    return;\n  }\n\n  if (!isWorking && nextRenderExpirationTime !== NoWork && expirationTime > nextRenderExpirationTime) {\n    // This is an interruption. (Used for performance tracking.)\n    interruptedBy = fiber;\n    resetStack();\n  }\n  markPendingPriorityLevel(root, expirationTime);\n  if (\n  // If we're in the render phase, we don't need to schedule this root\n  // for an update, because we'll do it before we exit...\n  !isWorking || isCommitting$1 ||\n  // ...unless this is a different root than the one we're rendering.\n  nextRoot !== root) {\n    var rootExpirationTime = root.expirationTime;\n    requestWork(root, rootExpirationTime);\n  }\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n    // Reset this back to zero so subsequent updates don't throw.\n    nestedUpdateCount = 0;\n    invariant(false, 'Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.');\n  }\n}\n\nfunction syncUpdates(fn, a, b, c, d) {\n  return scheduler.unstable_runWithPriority(scheduler.unstable_ImmediatePriority, function () {\n    return fn(a, b, c, d);\n  });\n}\n\n// TODO: Everything below this is written as if it has been lifted to the\n// renderers. I'll do this in a follow-up.\n\n// Linked-list of roots\nvar firstScheduledRoot = null;\nvar lastScheduledRoot = null;\n\nvar callbackExpirationTime = NoWork;\nvar callbackID = void 0;\nvar isRendering = false;\nvar nextFlushedRoot = null;\nvar nextFlushedExpirationTime = NoWork;\nvar lowestPriorityPendingInteractiveExpirationTime = NoWork;\nvar hasUnhandledError = false;\nvar unhandledError = null;\n\nvar isBatchingUpdates = false;\nvar isUnbatchingUpdates = false;\n\nvar completedBatches = null;\n\nvar originalStartTimeMs = scheduler.unstable_now();\nvar currentRendererTime = msToExpirationTime(originalStartTimeMs);\nvar currentSchedulerTime = currentRendererTime;\n\n// Use these to prevent an infinite loop of nested updates\nvar NESTED_UPDATE_LIMIT = 50;\nvar nestedUpdateCount = 0;\nvar lastCommittedRootDuringThisBatch = null;\n\nfunction recomputeCurrentRendererTime() {\n  var currentTimeMs = scheduler.unstable_now() - originalStartTimeMs;\n  currentRendererTime = msToExpirationTime(currentTimeMs);\n}\n\nfunction scheduleCallbackWithExpirationTime(root, expirationTime) {\n  if (callbackExpirationTime !== NoWork) {\n    // A callback is already scheduled. Check its expiration time (timeout).\n    if (expirationTime < callbackExpirationTime) {\n      // Existing callback has sufficient timeout. Exit.\n      return;\n    } else {\n      if (callbackID !== null) {\n        // Existing callback has insufficient timeout. Cancel and schedule a\n        // new one.\n        scheduler.unstable_cancelCallback(callbackID);\n      }\n    }\n    // The request callback timer is already running. Don't start a new one.\n  } else {\n    startRequestCallbackTimer();\n  }\n\n  callbackExpirationTime = expirationTime;\n  var currentMs = scheduler.unstable_now() - originalStartTimeMs;\n  var expirationTimeMs = expirationTimeToMs(expirationTime);\n  var timeout = expirationTimeMs - currentMs;\n  callbackID = scheduler.unstable_scheduleCallback(performAsyncWork, { timeout: timeout });\n}\n\n// For every call to renderRoot, one of onFatal, onComplete, onSuspend, and\n// onYield is called upon exiting. We use these in lieu of returning a tuple.\n// I've also chosen not to inline them into renderRoot because these will\n// eventually be lifted into the renderer.\nfunction onFatal(root) {\n  root.finishedWork = null;\n}\n\nfunction onComplete(root, finishedWork, expirationTime) {\n  root.pendingCommitExpirationTime = expirationTime;\n  root.finishedWork = finishedWork;\n}\n\nfunction onSuspend(root, finishedWork, suspendedExpirationTime, rootExpirationTime, msUntilTimeout) {\n  root.expirationTime = rootExpirationTime;\n  if (msUntilTimeout === 0 && !shouldYieldToRenderer()) {\n    // Don't wait an additional tick. Commit the tree immediately.\n    root.pendingCommitExpirationTime = suspendedExpirationTime;\n    root.finishedWork = finishedWork;\n  } else if (msUntilTimeout > 0) {\n    // Wait `msUntilTimeout` milliseconds before committing.\n    root.timeoutHandle = scheduleTimeout(onTimeout.bind(null, root, finishedWork, suspendedExpirationTime), msUntilTimeout);\n  }\n}\n\nfunction onYield(root) {\n  root.finishedWork = null;\n}\n\nfunction onTimeout(root, finishedWork, suspendedExpirationTime) {\n  // The root timed out. Commit it.\n  root.pendingCommitExpirationTime = suspendedExpirationTime;\n  root.finishedWork = finishedWork;\n  // Read the current time before entering the commit phase. We can be\n  // certain this won't cause tearing related to batching of event updates\n  // because we're at the top of a timer event.\n  recomputeCurrentRendererTime();\n  currentSchedulerTime = currentRendererTime;\n  flushRoot(root, suspendedExpirationTime);\n}\n\nfunction onCommit(root, expirationTime) {\n  root.expirationTime = expirationTime;\n  root.finishedWork = null;\n}\n\nfunction requestCurrentTime() {\n  // requestCurrentTime is called by the scheduler to compute an expiration\n  // time.\n  //\n  // Expiration times are computed by adding to the current time (the start\n  // time). However, if two updates are scheduled within the same event, we\n  // should treat their start times as simultaneous, even if the actual clock\n  // time has advanced between the first and second call.\n\n  // In other words, because expiration times determine how updates are batched,\n  // we want all updates of like priority that occur within the same event to\n  // receive the same expiration time. Otherwise we get tearing.\n  //\n  // We keep track of two separate times: the current \"renderer\" time and the\n  // current \"scheduler\" time. The renderer time can be updated whenever; it\n  // only exists to minimize the calls performance.now.\n  //\n  // But the scheduler time can only be updated if there's no pending work, or\n  // if we know for certain that we're not in the middle of an event.\n\n  if (isRendering) {\n    // We're already rendering. Return the most recently read time.\n    return currentSchedulerTime;\n  }\n  // Check if there's pending work.\n  findHighestPriorityRoot();\n  if (nextFlushedExpirationTime === NoWork || nextFlushedExpirationTime === Never) {\n    // If there's no pending work, or if the pending work is offscreen, we can\n    // read the current time without risk of tearing.\n    recomputeCurrentRendererTime();\n    currentSchedulerTime = currentRendererTime;\n    return currentSchedulerTime;\n  }\n  // There's already pending work. We might be in the middle of a browser\n  // event. If we were to read the current time, it could cause multiple updates\n  // within the same event to receive different expiration times, leading to\n  // tearing. Return the last read time. During the next idle callback, the\n  // time will be updated.\n  return currentSchedulerTime;\n}\n\n// requestWork is called by the scheduler whenever a root receives an update.\n// It's up to the renderer to call renderRoot at some point in the future.\nfunction requestWork(root, expirationTime) {\n  addRootToSchedule(root, expirationTime);\n  if (isRendering) {\n    // Prevent reentrancy. Remaining work will be scheduled at the end of\n    // the currently rendering batch.\n    return;\n  }\n\n  if (isBatchingUpdates) {\n    // Flush work at the end of the batch.\n    if (isUnbatchingUpdates) {\n      // ...unless we're inside unbatchedUpdates, in which case we should\n      // flush it now.\n      nextFlushedRoot = root;\n      nextFlushedExpirationTime = Sync;\n      performWorkOnRoot(root, Sync, false);\n    }\n    return;\n  }\n\n  // TODO: Get rid of Sync and use current time?\n  if (expirationTime === Sync) {\n    performSyncWork();\n  } else {\n    scheduleCallbackWithExpirationTime(root, expirationTime);\n  }\n}\n\nfunction addRootToSchedule(root, expirationTime) {\n  // Add the root to the schedule.\n  // Check if this root is already part of the schedule.\n  if (root.nextScheduledRoot === null) {\n    // This root is not already scheduled. Add it.\n    root.expirationTime = expirationTime;\n    if (lastScheduledRoot === null) {\n      firstScheduledRoot = lastScheduledRoot = root;\n      root.nextScheduledRoot = root;\n    } else {\n      lastScheduledRoot.nextScheduledRoot = root;\n      lastScheduledRoot = root;\n      lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;\n    }\n  } else {\n    // This root is already scheduled, but its priority may have increased.\n    var remainingExpirationTime = root.expirationTime;\n    if (expirationTime > remainingExpirationTime) {\n      // Update the priority.\n      root.expirationTime = expirationTime;\n    }\n  }\n}\n\nfunction findHighestPriorityRoot() {\n  var highestPriorityWork = NoWork;\n  var highestPriorityRoot = null;\n  if (lastScheduledRoot !== null) {\n    var previousScheduledRoot = lastScheduledRoot;\n    var root = firstScheduledRoot;\n    while (root !== null) {\n      var remainingExpirationTime = root.expirationTime;\n      if (remainingExpirationTime === NoWork) {\n        // This root no longer has work. Remove it from the scheduler.\n\n        // TODO: This check is redudant, but Flow is confused by the branch\n        // below where we set lastScheduledRoot to null, even though we break\n        // from the loop right after.\n        !(previousScheduledRoot !== null && lastScheduledRoot !== null) ? invariant(false, 'Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n        if (root === root.nextScheduledRoot) {\n          // This is the only root in the list.\n          root.nextScheduledRoot = null;\n          firstScheduledRoot = lastScheduledRoot = null;\n          break;\n        } else if (root === firstScheduledRoot) {\n          // This is the first root in the list.\n          var next = root.nextScheduledRoot;\n          firstScheduledRoot = next;\n          lastScheduledRoot.nextScheduledRoot = next;\n          root.nextScheduledRoot = null;\n        } else if (root === lastScheduledRoot) {\n          // This is the last root in the list.\n          lastScheduledRoot = previousScheduledRoot;\n          lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;\n          root.nextScheduledRoot = null;\n          break;\n        } else {\n          previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot;\n          root.nextScheduledRoot = null;\n        }\n        root = previousScheduledRoot.nextScheduledRoot;\n      } else {\n        if (remainingExpirationTime > highestPriorityWork) {\n          // Update the priority, if it's higher\n          highestPriorityWork = remainingExpirationTime;\n          highestPriorityRoot = root;\n        }\n        if (root === lastScheduledRoot) {\n          break;\n        }\n        if (highestPriorityWork === Sync) {\n          // Sync is highest priority by definition so\n          // we can stop searching.\n          break;\n        }\n        previousScheduledRoot = root;\n        root = root.nextScheduledRoot;\n      }\n    }\n  }\n\n  nextFlushedRoot = highestPriorityRoot;\n  nextFlushedExpirationTime = highestPriorityWork;\n}\n\n// TODO: This wrapper exists because many of the older tests (the ones that use\n// flushDeferredPri) rely on the number of times `shouldYield` is called. We\n// should get rid of it.\nvar didYield = false;\nfunction shouldYieldToRenderer() {\n  if (didYield) {\n    return true;\n  }\n  if (scheduler.unstable_shouldYield()) {\n    didYield = true;\n    return true;\n  }\n  return false;\n}\n\nfunction performAsyncWork() {\n  try {\n    if (!shouldYieldToRenderer()) {\n      // The callback timed out. That means at least one update has expired.\n      // Iterate through the root schedule. If they contain expired work, set\n      // the next render expiration time to the current time. This has the effect\n      // of flushing all expired work in a single batch, instead of flushing each\n      // level one at a time.\n      if (firstScheduledRoot !== null) {\n        recomputeCurrentRendererTime();\n        var root = firstScheduledRoot;\n        do {\n          didExpireAtExpirationTime(root, currentRendererTime);\n          // The root schedule is circular, so this is never null.\n          root = root.nextScheduledRoot;\n        } while (root !== firstScheduledRoot);\n      }\n    }\n    performWork(NoWork, true);\n  } finally {\n    didYield = false;\n  }\n}\n\nfunction performSyncWork() {\n  performWork(Sync, false);\n}\n\nfunction performWork(minExpirationTime, isYieldy) {\n  // Keep working on roots until there's no more work, or until there's a higher\n  // priority event.\n  findHighestPriorityRoot();\n\n  if (isYieldy) {\n    recomputeCurrentRendererTime();\n    currentSchedulerTime = currentRendererTime;\n\n    if (enableUserTimingAPI) {\n      var didExpire = nextFlushedExpirationTime > currentRendererTime;\n      var timeout = expirationTimeToMs(nextFlushedExpirationTime);\n      stopRequestCallbackTimer(didExpire, timeout);\n    }\n\n    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && minExpirationTime <= nextFlushedExpirationTime && !(didYield && currentRendererTime > nextFlushedExpirationTime)) {\n      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, currentRendererTime > nextFlushedExpirationTime);\n      findHighestPriorityRoot();\n      recomputeCurrentRendererTime();\n      currentSchedulerTime = currentRendererTime;\n    }\n  } else {\n    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && minExpirationTime <= nextFlushedExpirationTime) {\n      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, false);\n      findHighestPriorityRoot();\n    }\n  }\n\n  // We're done flushing work. Either we ran out of time in this callback,\n  // or there's no more work left with sufficient priority.\n\n  // If we're inside a callback, set this to false since we just completed it.\n  if (isYieldy) {\n    callbackExpirationTime = NoWork;\n    callbackID = null;\n  }\n  // If there's work left over, schedule a new callback.\n  if (nextFlushedExpirationTime !== NoWork) {\n    scheduleCallbackWithExpirationTime(nextFlushedRoot, nextFlushedExpirationTime);\n  }\n\n  // Clean-up.\n  finishRendering();\n}\n\nfunction flushRoot(root, expirationTime) {\n  !!isRendering ? invariant(false, 'work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.') : void 0;\n  // Perform work on root as if the given expiration time is the current time.\n  // This has the effect of synchronously flushing all work up to and\n  // including the given time.\n  nextFlushedRoot = root;\n  nextFlushedExpirationTime = expirationTime;\n  performWorkOnRoot(root, expirationTime, false);\n  // Flush any sync work that was scheduled by lifecycles\n  performSyncWork();\n}\n\nfunction finishRendering() {\n  nestedUpdateCount = 0;\n  lastCommittedRootDuringThisBatch = null;\n\n  if (completedBatches !== null) {\n    var batches = completedBatches;\n    completedBatches = null;\n    for (var i = 0; i < batches.length; i++) {\n      var batch = batches[i];\n      try {\n        batch._onComplete();\n      } catch (error) {\n        if (!hasUnhandledError) {\n          hasUnhandledError = true;\n          unhandledError = error;\n        }\n      }\n    }\n  }\n\n  if (hasUnhandledError) {\n    var error = unhandledError;\n    unhandledError = null;\n    hasUnhandledError = false;\n    throw error;\n  }\n}\n\nfunction performWorkOnRoot(root, expirationTime, isYieldy) {\n  !!isRendering ? invariant(false, 'performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n\n  isRendering = true;\n\n  // Check if this is async work or sync/expired work.\n  if (!isYieldy) {\n    // Flush work without yielding.\n    // TODO: Non-yieldy work does not necessarily imply expired work. A renderer\n    // may want to perform some work without yielding, but also without\n    // requiring the root to complete (by triggering placeholders).\n\n    var finishedWork = root.finishedWork;\n    if (finishedWork !== null) {\n      // This root is already complete. We can commit it.\n      completeRoot(root, finishedWork, expirationTime);\n    } else {\n      root.finishedWork = null;\n      // If this root previously suspended, clear its existing timeout, since\n      // we're about to try rendering again.\n      var timeoutHandle = root.timeoutHandle;\n      if (timeoutHandle !== noTimeout) {\n        root.timeoutHandle = noTimeout;\n        // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n        cancelTimeout(timeoutHandle);\n      }\n      renderRoot(root, isYieldy);\n      finishedWork = root.finishedWork;\n      if (finishedWork !== null) {\n        // We've completed the root. Commit it.\n        completeRoot(root, finishedWork, expirationTime);\n      }\n    }\n  } else {\n    // Flush async work.\n    var _finishedWork = root.finishedWork;\n    if (_finishedWork !== null) {\n      // This root is already complete. We can commit it.\n      completeRoot(root, _finishedWork, expirationTime);\n    } else {\n      root.finishedWork = null;\n      // If this root previously suspended, clear its existing timeout, since\n      // we're about to try rendering again.\n      var _timeoutHandle = root.timeoutHandle;\n      if (_timeoutHandle !== noTimeout) {\n        root.timeoutHandle = noTimeout;\n        // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n        cancelTimeout(_timeoutHandle);\n      }\n      renderRoot(root, isYieldy);\n      _finishedWork = root.finishedWork;\n      if (_finishedWork !== null) {\n        // We've completed the root. Check the if we should yield one more time\n        // before committing.\n        if (!shouldYieldToRenderer()) {\n          // Still time left. Commit the root.\n          completeRoot(root, _finishedWork, expirationTime);\n        } else {\n          // There's no time left. Mark this root as complete. We'll come\n          // back and commit it later.\n          root.finishedWork = _finishedWork;\n        }\n      }\n    }\n  }\n\n  isRendering = false;\n}\n\nfunction completeRoot(root, finishedWork, expirationTime) {\n  // Check if there's a batch that matches this expiration time.\n  var firstBatch = root.firstBatch;\n  if (firstBatch !== null && firstBatch._expirationTime >= expirationTime) {\n    if (completedBatches === null) {\n      completedBatches = [firstBatch];\n    } else {\n      completedBatches.push(firstBatch);\n    }\n    if (firstBatch._defer) {\n      // This root is blocked from committing by a batch. Unschedule it until\n      // we receive another update.\n      root.finishedWork = finishedWork;\n      root.expirationTime = NoWork;\n      return;\n    }\n  }\n\n  // Commit the root.\n  root.finishedWork = null;\n\n  // Check if this is a nested update (a sync update scheduled during the\n  // commit phase).\n  if (root === lastCommittedRootDuringThisBatch) {\n    // If the next root is the same as the previous root, this is a nested\n    // update. To prevent an infinite loop, increment the nested update count.\n    nestedUpdateCount++;\n  } else {\n    // Reset whenever we switch roots.\n    lastCommittedRootDuringThisBatch = root;\n    nestedUpdateCount = 0;\n  }\n  scheduler.unstable_runWithPriority(scheduler.unstable_ImmediatePriority, function () {\n    commitRoot(root, finishedWork);\n  });\n}\n\nfunction onUncaughtError(error) {\n  !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n  // Unschedule this root so we don't work on it again until there's\n  // another update.\n  nextFlushedRoot.expirationTime = NoWork;\n  if (!hasUnhandledError) {\n    hasUnhandledError = true;\n    unhandledError = error;\n  }\n}\n\n// TODO: Batching should be implemented at the renderer level, not inside\n// the reconciler.\nfunction batchedUpdates$1(fn, a) {\n  var previousIsBatchingUpdates = isBatchingUpdates;\n  isBatchingUpdates = true;\n  try {\n    return fn(a);\n  } finally {\n    isBatchingUpdates = previousIsBatchingUpdates;\n    if (!isBatchingUpdates && !isRendering) {\n      performSyncWork();\n    }\n  }\n}\n\n// TODO: Batching should be implemented at the renderer level, not inside\n// the reconciler.\nfunction unbatchedUpdates(fn, a) {\n  if (isBatchingUpdates && !isUnbatchingUpdates) {\n    isUnbatchingUpdates = true;\n    try {\n      return fn(a);\n    } finally {\n      isUnbatchingUpdates = false;\n    }\n  }\n  return fn(a);\n}\n\n// TODO: Batching should be implemented at the renderer level, not within\n// the reconciler.\nfunction flushSync(fn, a) {\n  !!isRendering ? invariant(false, 'flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.') : void 0;\n  var previousIsBatchingUpdates = isBatchingUpdates;\n  isBatchingUpdates = true;\n  try {\n    return syncUpdates(fn, a);\n  } finally {\n    isBatchingUpdates = previousIsBatchingUpdates;\n    performSyncWork();\n  }\n}\n\nfunction interactiveUpdates$1(fn, a, b) {\n  // If there are any pending interactive updates, synchronously flush them.\n  // This needs to happen before we read any handlers, because the effect of\n  // the previous event may influence which handlers are called during\n  // this event.\n  if (!isBatchingUpdates && !isRendering && lowestPriorityPendingInteractiveExpirationTime !== NoWork) {\n    // Synchronously flush pending interactive updates.\n    performWork(lowestPriorityPendingInteractiveExpirationTime, false);\n    lowestPriorityPendingInteractiveExpirationTime = NoWork;\n  }\n  var previousIsBatchingUpdates = isBatchingUpdates;\n  isBatchingUpdates = true;\n  try {\n    return scheduler.unstable_runWithPriority(scheduler.unstable_UserBlockingPriority, function () {\n      return fn(a, b);\n    });\n  } finally {\n    isBatchingUpdates = previousIsBatchingUpdates;\n    if (!isBatchingUpdates && !isRendering) {\n      performSyncWork();\n    }\n  }\n}\n\nfunction flushInteractiveUpdates$1() {\n  if (!isRendering && lowestPriorityPendingInteractiveExpirationTime !== NoWork) {\n    // Synchronously flush pending interactive updates.\n    performWork(lowestPriorityPendingInteractiveExpirationTime, false);\n    lowestPriorityPendingInteractiveExpirationTime = NoWork;\n  }\n}\n\nfunction flushControlled(fn) {\n  var previousIsBatchingUpdates = isBatchingUpdates;\n  isBatchingUpdates = true;\n  try {\n    syncUpdates(fn);\n  } finally {\n    isBatchingUpdates = previousIsBatchingUpdates;\n    if (!isBatchingUpdates && !isRendering) {\n      performSyncWork();\n    }\n  }\n}\n\n// 0 is PROD, 1 is DEV.\n// Might add PROFILE later.\n\n\nvar didWarnAboutNestedUpdates = void 0;\nvar didWarnAboutFindNodeInStrictMode = void 0;\n\n{\n  didWarnAboutNestedUpdates = false;\n  didWarnAboutFindNodeInStrictMode = {};\n}\n\nfunction getContextForSubtree(parentComponent) {\n  if (!parentComponent) {\n    return emptyContextObject;\n  }\n\n  var fiber = get(parentComponent);\n  var parentContext = findCurrentUnmaskedContext(fiber);\n\n  if (fiber.tag === ClassComponent) {\n    var Component = fiber.type;\n    if (isContextProvider(Component)) {\n      return processChildContext(fiber, Component, parentContext);\n    }\n  }\n\n  return parentContext;\n}\n\nfunction scheduleRootUpdate(current$$1, element, expirationTime, callback) {\n  {\n    if (phase === 'render' && current !== null && !didWarnAboutNestedUpdates) {\n      didWarnAboutNestedUpdates = true;\n      warningWithoutStack$1(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\\n\\n' + 'Check the render method of %s.', getComponentName(current.type) || 'Unknown');\n    }\n  }\n\n  var update = createUpdate(expirationTime);\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = { element: element };\n\n  callback = callback === undefined ? null : callback;\n  if (callback !== null) {\n    !(typeof callback === 'function') ? warningWithoutStack$1(false, 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback) : void 0;\n    update.callback = callback;\n  }\n\n  flushPassiveEffects();\n  enqueueUpdate(current$$1, update);\n  scheduleWork(current$$1, expirationTime);\n\n  return expirationTime;\n}\n\nfunction updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback) {\n  // TODO: If this is a nested container, this won't be the root.\n  var current$$1 = container.current;\n\n  {\n    if (ReactFiberInstrumentation_1.debugTool) {\n      if (current$$1.alternate === null) {\n        ReactFiberInstrumentation_1.debugTool.onMountContainer(container);\n      } else if (element === null) {\n        ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);\n      } else {\n        ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);\n      }\n    }\n  }\n\n  var context = getContextForSubtree(parentComponent);\n  if (container.context === null) {\n    container.context = context;\n  } else {\n    container.pendingContext = context;\n  }\n\n  return scheduleRootUpdate(current$$1, element, expirationTime, callback);\n}\n\nfunction findHostInstance(component) {\n  var fiber = get(component);\n  if (fiber === undefined) {\n    if (typeof component.render === 'function') {\n      invariant(false, 'Unable to find node on an unmounted component.');\n    } else {\n      invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));\n    }\n  }\n  var hostFiber = findCurrentHostFiber(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nfunction findHostInstanceWithWarning(component, methodName) {\n  {\n    var fiber = get(component);\n    if (fiber === undefined) {\n      if (typeof component.render === 'function') {\n        invariant(false, 'Unable to find node on an unmounted component.');\n      } else {\n        invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));\n      }\n    }\n    var hostFiber = findCurrentHostFiber(fiber);\n    if (hostFiber === null) {\n      return null;\n    }\n    if (hostFiber.mode & StrictMode) {\n      var componentName = getComponentName(fiber.type) || 'Component';\n      if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n        didWarnAboutFindNodeInStrictMode[componentName] = true;\n        if (fiber.mode & StrictMode) {\n          warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference.' + '\\n%s' + '\\n\\nLearn more about using refs safely here:' + '\\nhttps://fb.me/react-strict-mode-find-node', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));\n        } else {\n          warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference.' + '\\n%s' + '\\n\\nLearn more about using refs safely here:' + '\\nhttps://fb.me/react-strict-mode-find-node', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));\n        }\n      }\n    }\n    return hostFiber.stateNode;\n  }\n  return findHostInstance(component);\n}\n\nfunction createContainer(containerInfo, isConcurrent, hydrate) {\n  return createFiberRoot(containerInfo, isConcurrent, hydrate);\n}\n\nfunction updateContainer(element, container, parentComponent, callback) {\n  var current$$1 = container.current;\n  var currentTime = requestCurrentTime();\n  var expirationTime = computeExpirationForFiber(currentTime, current$$1);\n  return updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback);\n}\n\nfunction getPublicRootInstance(container) {\n  var containerFiber = container.current;\n  if (!containerFiber.child) {\n    return null;\n  }\n  switch (containerFiber.child.tag) {\n    case HostComponent:\n      return getPublicInstance(containerFiber.child.stateNode);\n    default:\n      return containerFiber.child.stateNode;\n  }\n}\n\nfunction findHostInstanceWithNoPortals(fiber) {\n  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nvar overrideProps = null;\n\n{\n  var copyWithSetImpl = function (obj, path, idx, value) {\n    if (idx >= path.length) {\n      return value;\n    }\n    var key = path[idx];\n    var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);\n    // $FlowFixMe number or string is fine here\n    updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value);\n    return updated;\n  };\n\n  var copyWithSet = function (obj, path, value) {\n    return copyWithSetImpl(obj, path, 0, value);\n  };\n\n  // Support DevTools props for function components, forwardRef, memo, host components, etc.\n  overrideProps = function (fiber, path, value) {\n    flushPassiveEffects();\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleWork(fiber, Sync);\n  };\n}\n\nfunction injectIntoDevTools(devToolsConfig) {\n  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;\n  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n\n\n  return injectInternals(_assign({}, devToolsConfig, {\n    overrideProps: overrideProps,\n    currentDispatcherRef: ReactCurrentDispatcher,\n    findHostInstanceByFiber: function (fiber) {\n      var hostFiber = findCurrentHostFiber(fiber);\n      if (hostFiber === null) {\n        return null;\n      }\n      return hostFiber.stateNode;\n    },\n    findFiberByHostInstance: function (instance) {\n      if (!findFiberByHostInstance) {\n        // Might not be implemented by the renderer.\n        return null;\n      }\n      return findFiberByHostInstance(instance);\n    }\n  }));\n}\n\n// This file intentionally does *not* have the Flow annotation.\n// Don't add it. See `./inline-typed.js` for an explanation.\n\nfunction createPortal$1(children, containerInfo,\n// TODO: figure out the API for cross-renderer implementation.\nimplementation) {\n  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  return {\n    // This tag allow us to uniquely identify this as a React Portal\n    $$typeof: REACT_PORTAL_TYPE,\n    key: key == null ? null : '' + key,\n    children: children,\n    containerInfo: containerInfo,\n    implementation: implementation\n  };\n}\n\n// TODO: this is special because it gets imported during build.\n\nvar ReactVersion = '16.8.6';\n\n// TODO: This type is shared between the reconciler and ReactDOM, but will\n// eventually be lifted out to the renderer.\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nvar topLevelUpdateWarnings = void 0;\nvar warnOnInvalidCallback = void 0;\nvar didWarnAboutUnstableCreatePortal = false;\n\n{\n  if (typeof Map !== 'function' ||\n  // $FlowIssue Flow incorrectly thinks Map has no prototype\n  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' ||\n  // $FlowIssue Flow incorrectly thinks Set has no prototype\n  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {\n    warningWithoutStack$1(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');\n  }\n\n  topLevelUpdateWarnings = function (container) {\n    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {\n      var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);\n      if (hostInstance) {\n        !(hostInstance.parentNode === container) ? warningWithoutStack$1(false, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.') : void 0;\n      }\n    }\n\n    var isRootRenderedBySomeReact = !!container._reactRootContainer;\n    var rootEl = getReactRootElementInContainer(container);\n    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));\n\n    !(!hasNonRootReactChild || isRootRenderedBySomeReact) ? warningWithoutStack$1(false, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;\n\n    !(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY') ? warningWithoutStack$1(false, 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;\n  };\n\n  warnOnInvalidCallback = function (callback, callerName) {\n    !(callback === null || typeof callback === 'function') ? warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback) : void 0;\n  };\n}\n\nsetRestoreImplementation(restoreControlledState$1);\n\nfunction ReactBatch(root) {\n  var expirationTime = computeUniqueAsyncExpiration();\n  this._expirationTime = expirationTime;\n  this._root = root;\n  this._next = null;\n  this._callbacks = null;\n  this._didComplete = false;\n  this._hasChildren = false;\n  this._children = null;\n  this._defer = true;\n}\nReactBatch.prototype.render = function (children) {\n  !this._defer ? invariant(false, 'batch.render: Cannot render a batch that already committed.') : void 0;\n  this._hasChildren = true;\n  this._children = children;\n  var internalRoot = this._root._internalRoot;\n  var expirationTime = this._expirationTime;\n  var work = new ReactWork();\n  updateContainerAtExpirationTime(children, internalRoot, null, expirationTime, work._onCommit);\n  return work;\n};\nReactBatch.prototype.then = function (onComplete) {\n  if (this._didComplete) {\n    onComplete();\n    return;\n  }\n  var callbacks = this._callbacks;\n  if (callbacks === null) {\n    callbacks = this._callbacks = [];\n  }\n  callbacks.push(onComplete);\n};\nReactBatch.prototype.commit = function () {\n  var internalRoot = this._root._internalRoot;\n  var firstBatch = internalRoot.firstBatch;\n  !(this._defer && firstBatch !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;\n\n  if (!this._hasChildren) {\n    // This batch is empty. Return.\n    this._next = null;\n    this._defer = false;\n    return;\n  }\n\n  var expirationTime = this._expirationTime;\n\n  // Ensure this is the first batch in the list.\n  if (firstBatch !== this) {\n    // This batch is not the earliest batch. We need to move it to the front.\n    // Update its expiration time to be the expiration time of the earliest\n    // batch, so that we can flush it without flushing the other batches.\n    if (this._hasChildren) {\n      expirationTime = this._expirationTime = firstBatch._expirationTime;\n      // Rendering this batch again ensures its children will be the final state\n      // when we flush (updates are processed in insertion order: last\n      // update wins).\n      // TODO: This forces a restart. Should we print a warning?\n      this.render(this._children);\n    }\n\n    // Remove the batch from the list.\n    var previous = null;\n    var batch = firstBatch;\n    while (batch !== this) {\n      previous = batch;\n      batch = batch._next;\n    }\n    !(previous !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;\n    previous._next = batch._next;\n\n    // Add it to the front.\n    this._next = firstBatch;\n    firstBatch = internalRoot.firstBatch = this;\n  }\n\n  // Synchronously flush all the work up to this batch's expiration time.\n  this._defer = false;\n  flushRoot(internalRoot, expirationTime);\n\n  // Pop the batch from the list.\n  var next = this._next;\n  this._next = null;\n  firstBatch = internalRoot.firstBatch = next;\n\n  // Append the next earliest batch's children to the update queue.\n  if (firstBatch !== null && firstBatch._hasChildren) {\n    firstBatch.render(firstBatch._children);\n  }\n};\nReactBatch.prototype._onComplete = function () {\n  if (this._didComplete) {\n    return;\n  }\n  this._didComplete = true;\n  var callbacks = this._callbacks;\n  if (callbacks === null) {\n    return;\n  }\n  // TODO: Error handling.\n  for (var i = 0; i < callbacks.length; i++) {\n    var _callback = callbacks[i];\n    _callback();\n  }\n};\n\nfunction ReactWork() {\n  this._callbacks = null;\n  this._didCommit = false;\n  // TODO: Avoid need to bind by replacing callbacks in the update queue with\n  // list of Work objects.\n  this._onCommit = this._onCommit.bind(this);\n}\nReactWork.prototype.then = function (onCommit) {\n  if (this._didCommit) {\n    onCommit();\n    return;\n  }\n  var callbacks = this._callbacks;\n  if (callbacks === null) {\n    callbacks = this._callbacks = [];\n  }\n  callbacks.push(onCommit);\n};\nReactWork.prototype._onCommit = function () {\n  if (this._didCommit) {\n    return;\n  }\n  this._didCommit = true;\n  var callbacks = this._callbacks;\n  if (callbacks === null) {\n    return;\n  }\n  // TODO: Error handling.\n  for (var i = 0; i < callbacks.length; i++) {\n    var _callback2 = callbacks[i];\n    !(typeof _callback2 === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', _callback2) : void 0;\n    _callback2();\n  }\n};\n\nfunction ReactRoot(container, isConcurrent, hydrate) {\n  var root = createContainer(container, isConcurrent, hydrate);\n  this._internalRoot = root;\n}\nReactRoot.prototype.render = function (children, callback) {\n  var root = this._internalRoot;\n  var work = new ReactWork();\n  callback = callback === undefined ? null : callback;\n  {\n    warnOnInvalidCallback(callback, 'render');\n  }\n  if (callback !== null) {\n    work.then(callback);\n  }\n  updateContainer(children, root, null, work._onCommit);\n  return work;\n};\nReactRoot.prototype.unmount = function (callback) {\n  var root = this._internalRoot;\n  var work = new ReactWork();\n  callback = callback === undefined ? null : callback;\n  {\n    warnOnInvalidCallback(callback, 'render');\n  }\n  if (callback !== null) {\n    work.then(callback);\n  }\n  updateContainer(null, root, null, work._onCommit);\n  return work;\n};\nReactRoot.prototype.legacy_renderSubtreeIntoContainer = function (parentComponent, children, callback) {\n  var root = this._internalRoot;\n  var work = new ReactWork();\n  callback = callback === undefined ? null : callback;\n  {\n    warnOnInvalidCallback(callback, 'render');\n  }\n  if (callback !== null) {\n    work.then(callback);\n  }\n  updateContainer(children, root, parentComponent, work._onCommit);\n  return work;\n};\nReactRoot.prototype.createBatch = function () {\n  var batch = new ReactBatch(this);\n  var expirationTime = batch._expirationTime;\n\n  var internalRoot = this._internalRoot;\n  var firstBatch = internalRoot.firstBatch;\n  if (firstBatch === null) {\n    internalRoot.firstBatch = batch;\n    batch._next = null;\n  } else {\n    // Insert sorted by expiration time then insertion order\n    var insertAfter = null;\n    var insertBefore = firstBatch;\n    while (insertBefore !== null && insertBefore._expirationTime >= expirationTime) {\n      insertAfter = insertBefore;\n      insertBefore = insertBefore._next;\n    }\n    batch._next = insertBefore;\n    if (insertAfter !== null) {\n      insertAfter._next = batch;\n    }\n  }\n\n  return batch;\n};\n\n/**\n * True if the supplied DOM node is a valid node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid DOM node.\n * @internal\n */\nfunction isValidContainer(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));\n}\n\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOCUMENT_NODE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction shouldHydrateDueToLegacyHeuristic(container) {\n  var rootElement = getReactRootElementInContainer(container);\n  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));\n}\n\nsetBatchingImplementation(batchedUpdates$1, interactiveUpdates$1, flushInteractiveUpdates$1);\n\nvar warnedAboutHydrateAPI = false;\n\nfunction legacyCreateRootFromDOMContainer(container, forceHydrate) {\n  var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);\n  // First clear any existing content.\n  if (!shouldHydrate) {\n    var warned = false;\n    var rootSibling = void 0;\n    while (rootSibling = container.lastChild) {\n      {\n        if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {\n          warned = true;\n          warningWithoutStack$1(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');\n        }\n      }\n      container.removeChild(rootSibling);\n    }\n  }\n  {\n    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {\n      warnedAboutHydrateAPI = true;\n      lowPriorityWarning$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');\n    }\n  }\n  // Legacy roots are not async by default.\n  var isConcurrent = false;\n  return new ReactRoot(container, isConcurrent, shouldHydrate);\n}\n\nfunction legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {\n  {\n    topLevelUpdateWarnings(container);\n  }\n\n  // TODO: Without `any` type, Flow says \"Property cannot be accessed on any\n  // member of intersection type.\" Whyyyyyy.\n  var root = container._reactRootContainer;\n  if (!root) {\n    // Initial mount\n    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);\n    if (typeof callback === 'function') {\n      var originalCallback = callback;\n      callback = function () {\n        var instance = getPublicRootInstance(root._internalRoot);\n        originalCallback.call(instance);\n      };\n    }\n    // Initial mount should not be batched.\n    unbatchedUpdates(function () {\n      if (parentComponent != null) {\n        root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);\n      } else {\n        root.render(children, callback);\n      }\n    });\n  } else {\n    if (typeof callback === 'function') {\n      var _originalCallback = callback;\n      callback = function () {\n        var instance = getPublicRootInstance(root._internalRoot);\n        _originalCallback.call(instance);\n      };\n    }\n    // Update\n    if (parentComponent != null) {\n      root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);\n    } else {\n      root.render(children, callback);\n    }\n  }\n  return getPublicRootInstance(root._internalRoot);\n}\n\nfunction createPortal$$1(children, container) {\n  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;\n  // TODO: pass ReactDOM portal implementation as third argument\n  return createPortal$1(children, container, null, key);\n}\n\nvar ReactDOM = {\n  createPortal: createPortal$$1,\n\n  findDOMNode: function (componentOrElement) {\n    {\n      var owner = ReactCurrentOwner.current;\n      if (owner !== null && owner.stateNode !== null) {\n        var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;\n        !warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner.type) || 'A component') : void 0;\n        owner.stateNode._warnedAboutRefsInRender = true;\n      }\n    }\n    if (componentOrElement == null) {\n      return null;\n    }\n    if (componentOrElement.nodeType === ELEMENT_NODE) {\n      return componentOrElement;\n    }\n    {\n      return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');\n    }\n    return findHostInstance(componentOrElement);\n  },\n  hydrate: function (element, container, callback) {\n    !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;\n    {\n      !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. ' + 'Did you mean to call createRoot(container, {hydrate: true}).render(element)?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;\n    }\n    // TODO: throw or warn if we couldn't hydrate?\n    return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);\n  },\n  render: function (element, container, callback) {\n    !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;\n    {\n      !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. ' + 'Did you mean to call root.render(element)?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;\n    }\n    return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);\n  },\n  unstable_renderSubtreeIntoContainer: function (parentComponent, element, containerNode, callback) {\n    !isValidContainer(containerNode) ? invariant(false, 'Target container is not a DOM element.') : void 0;\n    !(parentComponent != null && has(parentComponent)) ? invariant(false, 'parentComponent must be a valid React Component') : void 0;\n    return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);\n  },\n  unmountComponentAtNode: function (container) {\n    !isValidContainer(container) ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : void 0;\n\n    {\n      !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. Did you mean to call root.unmount()?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;\n    }\n\n    if (container._reactRootContainer) {\n      {\n        var rootEl = getReactRootElementInContainer(container);\n        var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);\n        !!renderedByDifferentReact ? warningWithoutStack$1(false, \"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by another copy of React.') : void 0;\n      }\n\n      // Unmount should not be batched.\n      unbatchedUpdates(function () {\n        legacyRenderSubtreeIntoContainer(null, null, container, false, function () {\n          container._reactRootContainer = null;\n        });\n      });\n      // If you call unmountComponentAtNode twice in quick succession, you'll\n      // get `true` twice. That's probably fine?\n      return true;\n    } else {\n      {\n        var _rootEl = getReactRootElementInContainer(container);\n        var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl));\n\n        // Check if the container itself is a React root node.\n        var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;\n\n        !!hasNonRootReactChild ? warningWithoutStack$1(false, \"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;\n      }\n\n      return false;\n    }\n  },\n\n\n  // Temporary alias since we already shipped React 16 RC with it.\n  // TODO: remove in React 17.\n  unstable_createPortal: function () {\n    if (!didWarnAboutUnstableCreatePortal) {\n      didWarnAboutUnstableCreatePortal = true;\n      lowPriorityWarning$1(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the \"unstable_\" prefix.');\n    }\n    return createPortal$$1.apply(undefined, arguments);\n  },\n\n\n  unstable_batchedUpdates: batchedUpdates$1,\n\n  unstable_interactiveUpdates: interactiveUpdates$1,\n\n  flushSync: flushSync,\n\n  unstable_createRoot: createRoot,\n  unstable_flushControlled: flushControlled,\n\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    // Keep in sync with ReactDOMUnstableNativeDependencies.js\n    // and ReactTestUtils.js. This is an array for better minification.\n    Events: [getInstanceFromNode$1, getNodeFromInstance$1, getFiberCurrentPropsFromNode$1, injection.injectEventPluginsByName, eventNameDispatchConfigs, accumulateTwoPhaseDispatches, accumulateDirectDispatches, enqueueStateRestore, restoreStateIfNeeded, dispatchEvent, runEventsInBatch]\n  }\n};\n\nfunction createRoot(container, options) {\n  var functionName = enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot';\n  !isValidContainer(container) ? invariant(false, '%s(...): Target container is not a DOM element.', functionName) : void 0;\n  {\n    !!container._reactRootContainer ? warningWithoutStack$1(false, 'You are calling ReactDOM.%s() on a container that was previously ' + 'passed to ReactDOM.render(). This is not supported.', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;\n    container._reactHasBeenPassedToCreateRootDEV = true;\n  }\n  var hydrate = options != null && options.hydrate === true;\n  return new ReactRoot(container, true, hydrate);\n}\n\nif (enableStableConcurrentModeAPIs) {\n  ReactDOM.createRoot = createRoot;\n  ReactDOM.unstable_createRoot = undefined;\n}\n\nvar foundDevTools = injectIntoDevTools({\n  findFiberByHostInstance: getClosestInstanceFromNode,\n  bundleType: 1,\n  version: ReactVersion,\n  rendererPackageName: 'react-dom'\n});\n\n{\n  if (!foundDevTools && canUseDOM && window.top === window.self) {\n    // If we're in Chrome or Firefox, provide a download link if not installed.\n    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n      var protocol = window.location.protocol;\n      // Don't warn in exotic cases like chrome-extension://.\n      if (/^(https?|file):$/.test(protocol)) {\n        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');\n      }\n    }\n  }\n}\n\n\n\nvar ReactDOM$2 = Object.freeze({\n\tdefault: ReactDOM\n});\n\nvar ReactDOM$3 = ( ReactDOM$2 && ReactDOM ) || ReactDOM$2;\n\n// TODO: decide on the top-level export form.\n// This is hacky but makes it work with both Rollup and Jest.\nvar reactDom = ReactDOM$3.default || ReactDOM$3;\n\nmodule.exports = reactDom;\n  })();\n}\n\n\n//# sourceURL=webpack:///./node_modules/react-dom/cjs/react-dom.development.js?");

/***/ }),

/***/ "./node_modules/react-dom/index.js":
/*!*****************************************!*\
  !*** ./node_modules/react-dom/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (true) {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-dom.development.js */ \"./node_modules/react-dom/cjs/react-dom.development.js\");\n}\n\n\n//# sourceURL=webpack:///./node_modules/react-dom/index.js?");

/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v16.8.6\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar _assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\nvar checkPropTypes = __webpack_require__(/*! prop-types/checkPropTypes */ \"./node_modules/prop-types/checkPropTypes.js\");\n\n// TODO: this is special because it gets imported during build.\n\nvar ReactVersion = '16.8.6';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\n\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function () {};\n\n{\n  validateFormat = function (format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error = void 0;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\n// Relying on the `invariant()` implementation lets us\n// preserve the format and params in the www builds.\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar lowPriorityWarning = function () {};\n\n{\n  var printWarning = function (format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nvar lowPriorityWarning$1 = lowPriorityWarning;\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warningWithoutStack = function () {};\n\n{\n  warningWithoutStack = function (condition, format) {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    if (format === undefined) {\n      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (args.length > 8) {\n      // Check before the condition to catch violations early.\n      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');\n    }\n    if (condition) {\n      return;\n    }\n    if (typeof console !== 'undefined') {\n      var argsWithFormat = args.map(function (item) {\n        return '' + item;\n      });\n      argsWithFormat.unshift('Warning: ' + format);\n\n      // We intentionally don't use spread (or .apply) directly because it\n      // breaks IE9: https://github.com/facebook/react/issues/13610\n      Function.prototype.apply.call(console.error, console, argsWithFormat);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nvar warningWithoutStack$1 = warningWithoutStack;\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + '.' + callerName;\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n    warningWithoutStack$1(false, \"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar emptyObject = {};\n{\n  Object.freeze(emptyObject);\n}\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n        return undefined;\n      }\n    });\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\n\n/**\n * Convenience component with default shallow equality check for sCU.\n */\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n  {\n    Object.seal(refObject);\n  }\n  return refObject;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nvar describeComponentFrame = function (name, source, ownerName) {\n  var sourceInfo = '';\n  if (source) {\n    var path = source.fileName;\n    var fileName = path.replace(BEFORE_SLASH_RE, '');\n    {\n      // In DEV, include code for a common special case:\n      // prefer \"folder/index.js\" instead of just \"index.js\".\n      if (/^index\\./.test(fileName)) {\n        var match = path.match(BEFORE_SLASH_RE);\n        if (match) {\n          var pathBeforeSlash = match[1];\n          if (pathBeforeSlash) {\n            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n            fileName = folderName + '/' + fileName;\n          }\n        }\n      }\n    }\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n};\n\nvar Resolved = 1;\n\n\nfunction refineResolvedLazyComponent(lazyComponent) {\n  return lazyComponent._status === Resolved ? lazyComponent._result : null;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + '(' + functionName + ')' : wrapperName);\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  {\n    if (typeof type.tag === 'number') {\n      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_CONCURRENT_MODE_TYPE:\n      return 'ConcurrentMode';\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n      case REACT_LAZY_TYPE:\n        {\n          var thenable = type;\n          var resolvedThenable = refineResolvedLazyComponent(thenable);\n          if (resolvedThenable) {\n            return getComponentName(resolvedThenable);\n          }\n        }\n    }\n  }\n  return null;\n}\n\nvar ReactDebugCurrentFrame = {};\n\nvar currentlyValidatingElement = null;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    currentlyValidatingElement = element;\n  }\n}\n\n{\n  // Stack implementation injected by the current renderer.\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = '';\n\n    // Add an extra top frame while an element is being validated\n    if (currentlyValidatingElement) {\n      var name = getComponentName(currentlyValidatingElement.type);\n      var owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));\n    }\n\n    // Delegate to the injected renderer-specific implementation\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentOwner: ReactCurrentOwner,\n  // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n  assign: _assign\n};\n\n{\n  _assign(ReactSharedInternals, {\n    // These should not be included in production.\n    ReactDebugCurrentFrame: ReactDebugCurrentFrame,\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n    // TODO: remove in React 17.0.\n    ReactComponentTreeHook: {}\n  });\n}\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = warningWithoutStack$1;\n\n{\n  warning = function (condition, format) {\n    if (condition) {\n      return;\n    }\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n    // eslint-disable-next-line react-internal/warning-and-invariant-args\n\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));\n  };\n}\n\nvar warning$1 = warning;\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\nvar specialPropKeyWarningShown = void 0;\nvar specialPropRefWarningShown = void 0;\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n      warningWithoutStack$1(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n      warningWithoutStack$1(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    });\n    // self and source are DEV only properties.\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    });\n    // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\nfunction createElement(type, config, children) {\n  var propName = void 0;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://reactjs.org/docs/react-api.html#createfactory\n */\n\n\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n}\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\nfunction cloneElement(element, config, children) {\n  !!(element === null || element === undefined) ? invariant(false, 'React.cloneElement(...): The argument must be a React element, but you passed %s.', element) : void 0;\n\n  var propName = void 0;\n\n  // Original props are copied\n  var props = _assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    var defaultProps = void 0;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\nvar POOL_SIZE = 10;\nvar traverseContextPool = [];\nfunction getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\n  if (traverseContextPool.length) {\n    var traverseContext = traverseContextPool.pop();\n    traverseContext.result = mapResult;\n    traverseContext.keyPrefix = keyPrefix;\n    traverseContext.func = mapFunction;\n    traverseContext.context = mapContext;\n    traverseContext.count = 0;\n    return traverseContext;\n  } else {\n    return {\n      result: mapResult,\n      keyPrefix: keyPrefix,\n      func: mapFunction,\n      context: mapContext,\n      count: 0\n    };\n  }\n}\n\nfunction releaseTraverseContext(traverseContext) {\n  traverseContext.result = null;\n  traverseContext.keyPrefix = null;\n  traverseContext.func = null;\n  traverseContext.context = null;\n  traverseContext.count = 0;\n  if (traverseContextPool.length < POOL_SIZE) {\n    traverseContextPool.push(traverseContext);\n  }\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n    }\n  }\n\n  if (invokeCallback) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child = void 0;\n  var nextName = void 0;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (typeof iteratorFn === 'function') {\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(children);\n      var step = void 0;\n      var ii = 0;\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\n      }\n      var childrenString = '' + children;\n      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof component === 'object' && component !== null && component.key != null) {\n    // Explicit key\n    return escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {\n      return c;\n    });\n  } else if (mappedChild != null) {\n    if (isValidElement(mappedChild)) {\n      mappedChild = cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children) {\n  return traverseAllChildren(children, function () {\n    return null;\n  }, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {\n    return child;\n  });\n  return result;\n}\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;\n  return children;\n}\n\nfunction createContext(defaultValue, calculateChangedBits) {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  } else {\n    {\n      !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warningWithoutStack$1(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;\n    }\n  }\n\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null\n  };\n\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context,\n      _calculateChangedBits: context._calculateChangedBits\n    };\n    // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n            warning$1(false, 'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n            warning$1(false, 'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n          return context.Consumer;\n        }\n      }\n    });\n    // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nfunction lazy(ctor) {\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _ctor: ctor,\n    // React uses these fields to store the result.\n    _status: -1,\n    _result: null\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps = void 0;\n    var propTypes = void 0;\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          warning$1(false, 'React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n          defaultProps = newDefaultProps;\n          // Match production behavior more closely:\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          warning$1(false, 'React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n          propTypes = newPropTypes;\n          // Match production behavior more closely:\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      warningWithoutStack$1(false, 'forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      warningWithoutStack$1(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      !(\n      // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object\n      render.length === 0 || render.length === 2) ? warningWithoutStack$1(false, 'forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.') : void 0;\n    }\n\n    if (render != null) {\n      !(render.defaultProps == null && render.propTypes == null) ? warningWithoutStack$1(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;\n    }\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n}\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' ||\n  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      warningWithoutStack$1(false, 'memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n  !(dispatcher !== null) ? invariant(false, 'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.') : void 0;\n  return dispatcher;\n}\n\nfunction useContext(Context, unstable_observedBits) {\n  var dispatcher = resolveDispatcher();\n  {\n    !(unstable_observedBits === undefined) ? warning$1(false, 'useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\\n\\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '') : void 0;\n\n    // TODO: add a more generic warning for invalid values.\n    if (Context._context !== undefined) {\n      var realContext = Context._context;\n      // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n      if (realContext.Consumer === Context) {\n        warning$1(false, 'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        warning$1(false, 'Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n  return dispatcher.useContext(Context, unstable_observedBits);\n}\n\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\n\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\n\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\n\nfunction useEffect(create, inputs) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, inputs);\n}\n\nfunction useLayoutEffect(create, inputs) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, inputs);\n}\n\nfunction useCallback(callback, inputs) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, inputs);\n}\n\nfunction useMemo(create, inputs) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, inputs);\n}\n\nfunction useImperativeHandle(ref, create, inputs) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, inputs);\n}\n\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\nvar propTypesMisspellWarningShown = void 0;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentName(ReactCurrentOwner.current.type);\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(elementProps) {\n  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {\n    var source = elementProps.__source;\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n    if (parentName) {\n      info = '\\n\\nCheck the top-level render call using <' + parentName + '>.';\n    }\n  }\n  return info;\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwner = '';\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = ' It was passed a child from ' + getComponentName(element._owner.type) + '.';\n  }\n\n  setCurrentlyValidatingElement(element);\n  {\n    warning$1(false, 'Each child in a list should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);\n  }\n  setCurrentlyValidatingElement(null);\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step = void 0;\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  var type = element.type;\n  if (type === null || type === undefined || typeof type === 'string') {\n    return;\n  }\n  var name = getComponentName(type);\n  var propTypes = void 0;\n  if (typeof type === 'function') {\n    propTypes = type.propTypes;\n  } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE ||\n  // Note: Memo only checks outer props here.\n  // Inner props are checked in the reconciler.\n  type.$$typeof === REACT_MEMO_TYPE)) {\n    propTypes = type.propTypes;\n  } else {\n    return;\n  }\n  if (propTypes) {\n    setCurrentlyValidatingElement(element);\n    checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);\n    setCurrentlyValidatingElement(null);\n  } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n    propTypesMisspellWarningShown = true;\n    warningWithoutStack$1(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n  }\n  if (typeof type.getDefaultProps === 'function') {\n    !type.getDefaultProps.isReactClassApproved ? warningWithoutStack$1(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;\n  }\n}\n\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\nfunction validateFragmentProps(fragment) {\n  setCurrentlyValidatingElement(fragment);\n\n  var keys = Object.keys(fragment.props);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (key !== 'children' && key !== 'key') {\n      warning$1(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n      break;\n    }\n  }\n\n  if (fragment.ref !== null) {\n    warning$1(false, 'Invalid attribute `ref` supplied to `React.Fragment`.');\n  }\n\n  setCurrentlyValidatingElement(null);\n}\n\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type);\n\n  // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n  if (!validType) {\n    var info = '';\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendum(props);\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString = void 0;\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = '<' + (getComponentName(type.type) || 'Unknown') + ' />';\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    warning$1(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n  }\n\n  var element = createElement.apply(this, arguments);\n\n  // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n  if (element == null) {\n    return element;\n  }\n\n  // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\n\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n  // Legacy hook: remove it\n  {\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\n\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n  validatePropTypes(newElement);\n  return newElement;\n}\n\n// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\n\n\n// In some cases, StrictMode should also double-render lifecycles.\n// This can be confusing for tests though,\n// And it can be bad for performance in production.\n// This feature flag can be used to control the behavior:\n\n\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\n\n\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\n\n\n// Gather advanced timing metrics for Profiler subtrees.\n\n\n// Trace which interactions trigger each commit.\n\n\n// Only used in www builds.\n // TODO: true? Here it might just be false.\n\n// Only used in www builds.\n\n\n// Only used in www builds.\n\n\n// React Fire: prevent the value and checked attributes from syncing\n// with their related DOM properties\n\n\n// These APIs will no longer be \"unstable\" in the upcoming 16.7 release,\n// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.\nvar enableStableConcurrentModeAPIs = false;\n\nvar React = {\n  Children: {\n    map: mapChildren,\n    forEach: forEachChildren,\n    count: countChildren,\n    toArray: toArray,\n    only: onlyChild\n  },\n\n  createRef: createRef,\n  Component: Component,\n  PureComponent: PureComponent,\n\n  createContext: createContext,\n  forwardRef: forwardRef,\n  lazy: lazy,\n  memo: memo,\n\n  useCallback: useCallback,\n  useContext: useContext,\n  useEffect: useEffect,\n  useImperativeHandle: useImperativeHandle,\n  useDebugValue: useDebugValue,\n  useLayoutEffect: useLayoutEffect,\n  useMemo: useMemo,\n  useReducer: useReducer,\n  useRef: useRef,\n  useState: useState,\n\n  Fragment: REACT_FRAGMENT_TYPE,\n  StrictMode: REACT_STRICT_MODE_TYPE,\n  Suspense: REACT_SUSPENSE_TYPE,\n\n  createElement: createElementWithValidation,\n  cloneElement: cloneElementWithValidation,\n  createFactory: createFactoryWithValidation,\n  isValidElement: isValidElement,\n\n  version: ReactVersion,\n\n  unstable_ConcurrentMode: REACT_CONCURRENT_MODE_TYPE,\n  unstable_Profiler: REACT_PROFILER_TYPE,\n\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals\n};\n\n// Note: some APIs are added with feature flags.\n// Make sure that stable builds for open source\n// don't modify the React object to avoid deopts.\n// Also let's not expose their names in stable builds.\n\nif (enableStableConcurrentModeAPIs) {\n  React.ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\n  React.Profiler = REACT_PROFILER_TYPE;\n  React.unstable_ConcurrentMode = undefined;\n  React.unstable_Profiler = undefined;\n}\n\n\n\nvar React$2 = Object.freeze({\n\tdefault: React\n});\n\nvar React$3 = ( React$2 && React ) || React$2;\n\n// TODO: decide on the top-level export form.\n// This is hacky but makes it work with both Rollup and Jest.\nvar react = React$3.default || React$3;\n\nmodule.exports = react;\n  })();\n}\n\n\n//# sourceURL=webpack:///./node_modules/react/cjs/react.development.js?");

/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"./node_modules/react/cjs/react.development.js\");\n}\n\n\n//# sourceURL=webpack:///./node_modules/react/index.js?");

/***/ }),

/***/ "./node_modules/scheduler/cjs/scheduler-tracing.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/scheduler/cjs/scheduler-tracing.development.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v0.13.6\n * scheduler-tracing.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\n\n\n// In some cases, StrictMode should also double-render lifecycles.\n// This can be confusing for tests though,\n// And it can be bad for performance in production.\n// This feature flag can be used to control the behavior:\n\n\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\n\n\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\n\n\n// Gather advanced timing metrics for Profiler subtrees.\n\n\n// Trace which interactions trigger each commit.\nvar enableSchedulerTracing = true;\n\n// Only used in www builds.\n // TODO: true? Here it might just be false.\n\n// Only used in www builds.\n\n\n// Only used in www builds.\n\n\n// React Fire: prevent the value and checked attributes from syncing\n// with their related DOM properties\n\n\n// These APIs will no longer be \"unstable\" in the upcoming 16.7 release,\n// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.\n\nvar DEFAULT_THREAD_ID = 0;\n\n// Counters used to generate unique IDs.\nvar interactionIDCounter = 0;\nvar threadIDCounter = 0;\n\n// Set of currently traced interactions.\n// Interactions \"stack\"–\n// Meaning that newly traced interactions are appended to the previously active set.\n// When an interaction goes out of scope, the previous set (if any) is restored.\nexports.__interactionsRef = null;\n\n// Listener(s) to notify when interactions begin and end.\nexports.__subscriberRef = null;\n\nif (enableSchedulerTracing) {\n  exports.__interactionsRef = {\n    current: new Set()\n  };\n  exports.__subscriberRef = {\n    current: null\n  };\n}\n\nfunction unstable_clear(callback) {\n  if (!enableSchedulerTracing) {\n    return callback();\n  }\n\n  var prevInteractions = exports.__interactionsRef.current;\n  exports.__interactionsRef.current = new Set();\n\n  try {\n    return callback();\n  } finally {\n    exports.__interactionsRef.current = prevInteractions;\n  }\n}\n\nfunction unstable_getCurrent() {\n  if (!enableSchedulerTracing) {\n    return null;\n  } else {\n    return exports.__interactionsRef.current;\n  }\n}\n\nfunction unstable_getThreadID() {\n  return ++threadIDCounter;\n}\n\nfunction unstable_trace(name, timestamp, callback) {\n  var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;\n\n  if (!enableSchedulerTracing) {\n    return callback();\n  }\n\n  var interaction = {\n    __count: 1,\n    id: interactionIDCounter++,\n    name: name,\n    timestamp: timestamp\n  };\n\n  var prevInteractions = exports.__interactionsRef.current;\n\n  // Traced interactions should stack/accumulate.\n  // To do that, clone the current interactions.\n  // The previous set will be restored upon completion.\n  var interactions = new Set(prevInteractions);\n  interactions.add(interaction);\n  exports.__interactionsRef.current = interactions;\n\n  var subscriber = exports.__subscriberRef.current;\n  var returnValue = void 0;\n\n  try {\n    if (subscriber !== null) {\n      subscriber.onInteractionTraced(interaction);\n    }\n  } finally {\n    try {\n      if (subscriber !== null) {\n        subscriber.onWorkStarted(interactions, threadID);\n      }\n    } finally {\n      try {\n        returnValue = callback();\n      } finally {\n        exports.__interactionsRef.current = prevInteractions;\n\n        try {\n          if (subscriber !== null) {\n            subscriber.onWorkStopped(interactions, threadID);\n          }\n        } finally {\n          interaction.__count--;\n\n          // If no async work was scheduled for this interaction,\n          // Notify subscribers that it's completed.\n          if (subscriber !== null && interaction.__count === 0) {\n            subscriber.onInteractionScheduledWorkCompleted(interaction);\n          }\n        }\n      }\n    }\n  }\n\n  return returnValue;\n}\n\nfunction unstable_wrap(callback) {\n  var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;\n\n  if (!enableSchedulerTracing) {\n    return callback;\n  }\n\n  var wrappedInteractions = exports.__interactionsRef.current;\n\n  var subscriber = exports.__subscriberRef.current;\n  if (subscriber !== null) {\n    subscriber.onWorkScheduled(wrappedInteractions, threadID);\n  }\n\n  // Update the pending async work count for the current interactions.\n  // Update after calling subscribers in case of error.\n  wrappedInteractions.forEach(function (interaction) {\n    interaction.__count++;\n  });\n\n  var hasRun = false;\n\n  function wrapped() {\n    var prevInteractions = exports.__interactionsRef.current;\n    exports.__interactionsRef.current = wrappedInteractions;\n\n    subscriber = exports.__subscriberRef.current;\n\n    try {\n      var returnValue = void 0;\n\n      try {\n        if (subscriber !== null) {\n          subscriber.onWorkStarted(wrappedInteractions, threadID);\n        }\n      } finally {\n        try {\n          returnValue = callback.apply(undefined, arguments);\n        } finally {\n          exports.__interactionsRef.current = prevInteractions;\n\n          if (subscriber !== null) {\n            subscriber.onWorkStopped(wrappedInteractions, threadID);\n          }\n        }\n      }\n\n      return returnValue;\n    } finally {\n      if (!hasRun) {\n        // We only expect a wrapped function to be executed once,\n        // But in the event that it's executed more than once–\n        // Only decrement the outstanding interaction counts once.\n        hasRun = true;\n\n        // Update pending async counts for all wrapped interactions.\n        // If this was the last scheduled async work for any of them,\n        // Mark them as completed.\n        wrappedInteractions.forEach(function (interaction) {\n          interaction.__count--;\n\n          if (subscriber !== null && interaction.__count === 0) {\n            subscriber.onInteractionScheduledWorkCompleted(interaction);\n          }\n        });\n      }\n    }\n  }\n\n  wrapped.cancel = function cancel() {\n    subscriber = exports.__subscriberRef.current;\n\n    try {\n      if (subscriber !== null) {\n        subscriber.onWorkCanceled(wrappedInteractions, threadID);\n      }\n    } finally {\n      // Update pending async counts for all wrapped interactions.\n      // If this was the last scheduled async work for any of them,\n      // Mark them as completed.\n      wrappedInteractions.forEach(function (interaction) {\n        interaction.__count--;\n\n        if (subscriber && interaction.__count === 0) {\n          subscriber.onInteractionScheduledWorkCompleted(interaction);\n        }\n      });\n    }\n  };\n\n  return wrapped;\n}\n\nvar subscribers = null;\nif (enableSchedulerTracing) {\n  subscribers = new Set();\n}\n\nfunction unstable_subscribe(subscriber) {\n  if (enableSchedulerTracing) {\n    subscribers.add(subscriber);\n\n    if (subscribers.size === 1) {\n      exports.__subscriberRef.current = {\n        onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,\n        onInteractionTraced: onInteractionTraced,\n        onWorkCanceled: onWorkCanceled,\n        onWorkScheduled: onWorkScheduled,\n        onWorkStarted: onWorkStarted,\n        onWorkStopped: onWorkStopped\n      };\n    }\n  }\n}\n\nfunction unstable_unsubscribe(subscriber) {\n  if (enableSchedulerTracing) {\n    subscribers.delete(subscriber);\n\n    if (subscribers.size === 0) {\n      exports.__subscriberRef.current = null;\n    }\n  }\n}\n\nfunction onInteractionTraced(interaction) {\n  var didCatchError = false;\n  var caughtError = null;\n\n  subscribers.forEach(function (subscriber) {\n    try {\n      subscriber.onInteractionTraced(interaction);\n    } catch (error) {\n      if (!didCatchError) {\n        didCatchError = true;\n        caughtError = error;\n      }\n    }\n  });\n\n  if (didCatchError) {\n    throw caughtError;\n  }\n}\n\nfunction onInteractionScheduledWorkCompleted(interaction) {\n  var didCatchError = false;\n  var caughtError = null;\n\n  subscribers.forEach(function (subscriber) {\n    try {\n      subscriber.onInteractionScheduledWorkCompleted(interaction);\n    } catch (error) {\n      if (!didCatchError) {\n        didCatchError = true;\n        caughtError = error;\n      }\n    }\n  });\n\n  if (didCatchError) {\n    throw caughtError;\n  }\n}\n\nfunction onWorkScheduled(interactions, threadID) {\n  var didCatchError = false;\n  var caughtError = null;\n\n  subscribers.forEach(function (subscriber) {\n    try {\n      subscriber.onWorkScheduled(interactions, threadID);\n    } catch (error) {\n      if (!didCatchError) {\n        didCatchError = true;\n        caughtError = error;\n      }\n    }\n  });\n\n  if (didCatchError) {\n    throw caughtError;\n  }\n}\n\nfunction onWorkStarted(interactions, threadID) {\n  var didCatchError = false;\n  var caughtError = null;\n\n  subscribers.forEach(function (subscriber) {\n    try {\n      subscriber.onWorkStarted(interactions, threadID);\n    } catch (error) {\n      if (!didCatchError) {\n        didCatchError = true;\n        caughtError = error;\n      }\n    }\n  });\n\n  if (didCatchError) {\n    throw caughtError;\n  }\n}\n\nfunction onWorkStopped(interactions, threadID) {\n  var didCatchError = false;\n  var caughtError = null;\n\n  subscribers.forEach(function (subscriber) {\n    try {\n      subscriber.onWorkStopped(interactions, threadID);\n    } catch (error) {\n      if (!didCatchError) {\n        didCatchError = true;\n        caughtError = error;\n      }\n    }\n  });\n\n  if (didCatchError) {\n    throw caughtError;\n  }\n}\n\nfunction onWorkCanceled(interactions, threadID) {\n  var didCatchError = false;\n  var caughtError = null;\n\n  subscribers.forEach(function (subscriber) {\n    try {\n      subscriber.onWorkCanceled(interactions, threadID);\n    } catch (error) {\n      if (!didCatchError) {\n        didCatchError = true;\n        caughtError = error;\n      }\n    }\n  });\n\n  if (didCatchError) {\n    throw caughtError;\n  }\n}\n\nexports.unstable_clear = unstable_clear;\nexports.unstable_getCurrent = unstable_getCurrent;\nexports.unstable_getThreadID = unstable_getThreadID;\nexports.unstable_trace = unstable_trace;\nexports.unstable_wrap = unstable_wrap;\nexports.unstable_subscribe = unstable_subscribe;\nexports.unstable_unsubscribe = unstable_unsubscribe;\n  })();\n}\n\n\n//# sourceURL=webpack:///./node_modules/scheduler/cjs/scheduler-tracing.development.js?");

/***/ }),

/***/ "./node_modules/scheduler/cjs/scheduler.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/scheduler/cjs/scheduler.development.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/** @license React v0.13.6\n * scheduler.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar enableSchedulerDebugging = false;\n\n/* eslint-disable no-var */\n\n// TODO: Use symbols?\nvar ImmediatePriority = 1;\nvar UserBlockingPriority = 2;\nvar NormalPriority = 3;\nvar LowPriority = 4;\nvar IdlePriority = 5;\n\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\nvar maxSigned31BitInt = 1073741823;\n\n// Times out immediately\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1;\n// Eventually times out\nvar USER_BLOCKING_PRIORITY = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000;\n// Never times out\nvar IDLE_PRIORITY = maxSigned31BitInt;\n\n// Callbacks are stored as a circular, doubly linked list.\nvar firstCallbackNode = null;\n\nvar currentDidTimeout = false;\n// Pausing the scheduler is useful for debugging.\nvar isSchedulerPaused = false;\n\nvar currentPriorityLevel = NormalPriority;\nvar currentEventStartTime = -1;\nvar currentExpirationTime = -1;\n\n// This is set when a callback is being executed, to prevent re-entrancy.\nvar isExecutingCallback = false;\n\nvar isHostCallbackScheduled = false;\n\nvar hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\n\nfunction ensureHostCallbackIsScheduled() {\n  if (isExecutingCallback) {\n    // Don't schedule work yet; wait until the next time we yield.\n    return;\n  }\n  // Schedule the host callback using the earliest expiration in the list.\n  var expirationTime = firstCallbackNode.expirationTime;\n  if (!isHostCallbackScheduled) {\n    isHostCallbackScheduled = true;\n  } else {\n    // Cancel the existing host callback.\n    cancelHostCallback();\n  }\n  requestHostCallback(flushWork, expirationTime);\n}\n\nfunction flushFirstCallback() {\n  var flushedNode = firstCallbackNode;\n\n  // Remove the node from the list before calling the callback. That way the\n  // list is in a consistent state even if the callback throws.\n  var next = firstCallbackNode.next;\n  if (firstCallbackNode === next) {\n    // This is the last callback in the list.\n    firstCallbackNode = null;\n    next = null;\n  } else {\n    var lastCallbackNode = firstCallbackNode.previous;\n    firstCallbackNode = lastCallbackNode.next = next;\n    next.previous = lastCallbackNode;\n  }\n\n  flushedNode.next = flushedNode.previous = null;\n\n  // Now it's safe to call the callback.\n  var callback = flushedNode.callback;\n  var expirationTime = flushedNode.expirationTime;\n  var priorityLevel = flushedNode.priorityLevel;\n  var previousPriorityLevel = currentPriorityLevel;\n  var previousExpirationTime = currentExpirationTime;\n  currentPriorityLevel = priorityLevel;\n  currentExpirationTime = expirationTime;\n  var continuationCallback;\n  try {\n    continuationCallback = callback();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n    currentExpirationTime = previousExpirationTime;\n  }\n\n  // A callback may return a continuation. The continuation should be scheduled\n  // with the same priority and expiration as the just-finished callback.\n  if (typeof continuationCallback === 'function') {\n    var continuationNode = {\n      callback: continuationCallback,\n      priorityLevel: priorityLevel,\n      expirationTime: expirationTime,\n      next: null,\n      previous: null\n    };\n\n    // Insert the new callback into the list, sorted by its expiration. This is\n    // almost the same as the code in `scheduleCallback`, except the callback\n    // is inserted into the list *before* callbacks of equal expiration instead\n    // of after.\n    if (firstCallbackNode === null) {\n      // This is the first callback in the list.\n      firstCallbackNode = continuationNode.next = continuationNode.previous = continuationNode;\n    } else {\n      var nextAfterContinuation = null;\n      var node = firstCallbackNode;\n      do {\n        if (node.expirationTime >= expirationTime) {\n          // This callback expires at or after the continuation. We will insert\n          // the continuation *before* this callback.\n          nextAfterContinuation = node;\n          break;\n        }\n        node = node.next;\n      } while (node !== firstCallbackNode);\n\n      if (nextAfterContinuation === null) {\n        // No equal or lower priority callback was found, which means the new\n        // callback is the lowest priority callback in the list.\n        nextAfterContinuation = firstCallbackNode;\n      } else if (nextAfterContinuation === firstCallbackNode) {\n        // The new callback is the highest priority callback in the list.\n        firstCallbackNode = continuationNode;\n        ensureHostCallbackIsScheduled();\n      }\n\n      var previous = nextAfterContinuation.previous;\n      previous.next = nextAfterContinuation.previous = continuationNode;\n      continuationNode.next = nextAfterContinuation;\n      continuationNode.previous = previous;\n    }\n  }\n}\n\nfunction flushImmediateWork() {\n  if (\n  // Confirm we've exited the outer most event handler\n  currentEventStartTime === -1 && firstCallbackNode !== null && firstCallbackNode.priorityLevel === ImmediatePriority) {\n    isExecutingCallback = true;\n    try {\n      do {\n        flushFirstCallback();\n      } while (\n      // Keep flushing until there are no more immediate callbacks\n      firstCallbackNode !== null && firstCallbackNode.priorityLevel === ImmediatePriority);\n    } finally {\n      isExecutingCallback = false;\n      if (firstCallbackNode !== null) {\n        // There's still work remaining. Request another callback.\n        ensureHostCallbackIsScheduled();\n      } else {\n        isHostCallbackScheduled = false;\n      }\n    }\n  }\n}\n\nfunction flushWork(didTimeout) {\n  // Exit right away if we're currently paused\n\n  if (enableSchedulerDebugging && isSchedulerPaused) {\n    return;\n  }\n\n  isExecutingCallback = true;\n  var previousDidTimeout = currentDidTimeout;\n  currentDidTimeout = didTimeout;\n  try {\n    if (didTimeout) {\n      // Flush all the expired callbacks without yielding.\n      while (firstCallbackNode !== null && !(enableSchedulerDebugging && isSchedulerPaused)) {\n        // TODO Wrap in feature flag\n        // Read the current time. Flush all the callbacks that expire at or\n        // earlier than that time. Then read the current time again and repeat.\n        // This optimizes for as few performance.now calls as possible.\n        var currentTime = exports.unstable_now();\n        if (firstCallbackNode.expirationTime <= currentTime) {\n          do {\n            flushFirstCallback();\n          } while (firstCallbackNode !== null && firstCallbackNode.expirationTime <= currentTime && !(enableSchedulerDebugging && isSchedulerPaused));\n          continue;\n        }\n        break;\n      }\n    } else {\n      // Keep flushing callbacks until we run out of time in the frame.\n      if (firstCallbackNode !== null) {\n        do {\n          if (enableSchedulerDebugging && isSchedulerPaused) {\n            break;\n          }\n          flushFirstCallback();\n        } while (firstCallbackNode !== null && !shouldYieldToHost());\n      }\n    }\n  } finally {\n    isExecutingCallback = false;\n    currentDidTimeout = previousDidTimeout;\n    if (firstCallbackNode !== null) {\n      // There's still work remaining. Request another callback.\n      ensureHostCallbackIsScheduled();\n    } else {\n      isHostCallbackScheduled = false;\n    }\n    // Before exiting, flush all the immediate work that was scheduled.\n    flushImmediateWork();\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  var previousEventStartTime = currentEventStartTime;\n  currentPriorityLevel = priorityLevel;\n  currentEventStartTime = exports.unstable_now();\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n    currentEventStartTime = previousEventStartTime;\n\n    // Before exiting, flush all the immediate work that was scheduled.\n    flushImmediateWork();\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel = void 0;\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  var previousEventStartTime = currentEventStartTime;\n  currentPriorityLevel = priorityLevel;\n  currentEventStartTime = exports.unstable_now();\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n    currentEventStartTime = previousEventStartTime;\n\n    // Before exiting, flush all the immediate work that was scheduled.\n    flushImmediateWork();\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    var previousEventStartTime = currentEventStartTime;\n    currentPriorityLevel = parentPriorityLevel;\n    currentEventStartTime = exports.unstable_now();\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n      currentEventStartTime = previousEventStartTime;\n      flushImmediateWork();\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(callback, deprecated_options) {\n  var startTime = currentEventStartTime !== -1 ? currentEventStartTime : exports.unstable_now();\n\n  var expirationTime;\n  if (typeof deprecated_options === 'object' && deprecated_options !== null && typeof deprecated_options.timeout === 'number') {\n    // FIXME: Remove this branch once we lift expiration times out of React.\n    expirationTime = startTime + deprecated_options.timeout;\n  } else {\n    switch (currentPriorityLevel) {\n      case ImmediatePriority:\n        expirationTime = startTime + IMMEDIATE_PRIORITY_TIMEOUT;\n        break;\n      case UserBlockingPriority:\n        expirationTime = startTime + USER_BLOCKING_PRIORITY;\n        break;\n      case IdlePriority:\n        expirationTime = startTime + IDLE_PRIORITY;\n        break;\n      case LowPriority:\n        expirationTime = startTime + LOW_PRIORITY_TIMEOUT;\n        break;\n      case NormalPriority:\n      default:\n        expirationTime = startTime + NORMAL_PRIORITY_TIMEOUT;\n    }\n  }\n\n  var newNode = {\n    callback: callback,\n    priorityLevel: currentPriorityLevel,\n    expirationTime: expirationTime,\n    next: null,\n    previous: null\n  };\n\n  // Insert the new callback into the list, ordered first by expiration, then\n  // by insertion. So the new callback is inserted any other callback with\n  // equal expiration.\n  if (firstCallbackNode === null) {\n    // This is the first callback in the list.\n    firstCallbackNode = newNode.next = newNode.previous = newNode;\n    ensureHostCallbackIsScheduled();\n  } else {\n    var next = null;\n    var node = firstCallbackNode;\n    do {\n      if (node.expirationTime > expirationTime) {\n        // The new callback expires before this one.\n        next = node;\n        break;\n      }\n      node = node.next;\n    } while (node !== firstCallbackNode);\n\n    if (next === null) {\n      // No callback with a later expiration was found, which means the new\n      // callback has the latest expiration in the list.\n      next = firstCallbackNode;\n    } else if (next === firstCallbackNode) {\n      // The new callback has the earliest expiration in the entire list.\n      firstCallbackNode = newNode;\n      ensureHostCallbackIsScheduled();\n    }\n\n    var previous = next.previous;\n    previous.next = next.previous = newNode;\n    newNode.next = next;\n    newNode.previous = previous;\n  }\n\n  return newNode;\n}\n\nfunction unstable_pauseExecution() {\n  isSchedulerPaused = true;\n}\n\nfunction unstable_continueExecution() {\n  isSchedulerPaused = false;\n  if (firstCallbackNode !== null) {\n    ensureHostCallbackIsScheduled();\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return firstCallbackNode;\n}\n\nfunction unstable_cancelCallback(callbackNode) {\n  var next = callbackNode.next;\n  if (next === null) {\n    // Already cancelled.\n    return;\n  }\n\n  if (next === callbackNode) {\n    // This is the only scheduled callback. Clear the list.\n    firstCallbackNode = null;\n  } else {\n    // Remove the callback from its position in the list.\n    if (callbackNode === firstCallbackNode) {\n      firstCallbackNode = next;\n    }\n    var previous = callbackNode.previous;\n    previous.next = next;\n    next.previous = previous;\n  }\n\n  callbackNode.next = callbackNode.previous = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nfunction unstable_shouldYield() {\n  return !currentDidTimeout && (firstCallbackNode !== null && firstCallbackNode.expirationTime < currentExpirationTime || shouldYieldToHost());\n}\n\n// The remaining code is essentially a polyfill for requestIdleCallback. It\n// works by scheduling a requestAnimationFrame, storing the time for the start\n// of the frame, then scheduling a postMessage which gets scheduled after paint.\n// Within the postMessage handler do as much work as possible until time + frame\n// rate. By separating the idle call into a separate event tick we ensure that\n// layout, paint and other browser work is counted against the available time.\n// The frame rate is dynamically adjusted.\n\n// We capture a local reference to any global, in case it gets polyfilled after\n// this module is initially evaluated. We want to be using a\n// consistent implementation.\nvar localDate = Date;\n\n// This initialization code may run even on server environments if a component\n// just imports ReactDOM (e.g. for findDOMNode). Some environments might not\n// have setTimeout or clearTimeout. However, we always expect them to be defined\n// on the client. https://github.com/facebook/react/pull/13088\nvar localSetTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;\nvar localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;\n\n// We don't expect either of these to necessarily be defined, but we will error\n// later if they are missing on the client.\nvar localRequestAnimationFrame = typeof requestAnimationFrame === 'function' ? requestAnimationFrame : undefined;\nvar localCancelAnimationFrame = typeof cancelAnimationFrame === 'function' ? cancelAnimationFrame : undefined;\n\n// requestAnimationFrame does not run when the tab is in the background. If\n// we're backgrounded we prefer for that work to happen so that the page\n// continues to load in the background. So we also schedule a 'setTimeout' as\n// a fallback.\n// TODO: Need a better heuristic for backgrounded work.\nvar ANIMATION_FRAME_TIMEOUT = 100;\nvar rAFID;\nvar rAFTimeoutID;\nvar requestAnimationFrameWithTimeout = function (callback) {\n  // schedule rAF and also a setTimeout\n  rAFID = localRequestAnimationFrame(function (timestamp) {\n    // cancel the setTimeout\n    localClearTimeout(rAFTimeoutID);\n    callback(timestamp);\n  });\n  rAFTimeoutID = localSetTimeout(function () {\n    // cancel the requestAnimationFrame\n    localCancelAnimationFrame(rAFID);\n    callback(exports.unstable_now());\n  }, ANIMATION_FRAME_TIMEOUT);\n};\n\nif (hasNativePerformanceNow) {\n  var Performance = performance;\n  exports.unstable_now = function () {\n    return Performance.now();\n  };\n} else {\n  exports.unstable_now = function () {\n    return localDate.now();\n  };\n}\n\nvar requestHostCallback;\nvar cancelHostCallback;\nvar shouldYieldToHost;\n\nvar globalValue = null;\nif (typeof window !== 'undefined') {\n  globalValue = window;\n} else if (typeof global !== 'undefined') {\n  globalValue = global;\n}\n\nif (globalValue && globalValue._schedMock) {\n  // Dynamic injection, only for testing purposes.\n  var globalImpl = globalValue._schedMock;\n  requestHostCallback = globalImpl[0];\n  cancelHostCallback = globalImpl[1];\n  shouldYieldToHost = globalImpl[2];\n  exports.unstable_now = globalImpl[3];\n} else if (\n// If Scheduler runs in a non-DOM environment, it falls back to a naive\n// implementation using setTimeout.\ntypeof window === 'undefined' ||\n// Check if MessageChannel is supported, too.\ntypeof MessageChannel !== 'function') {\n  // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,\n  // fallback to a naive implementation.\n  var _callback = null;\n  var _flushCallback = function (didTimeout) {\n    if (_callback !== null) {\n      try {\n        _callback(didTimeout);\n      } finally {\n        _callback = null;\n      }\n    }\n  };\n  requestHostCallback = function (cb, ms) {\n    if (_callback !== null) {\n      // Protect against re-entrancy.\n      setTimeout(requestHostCallback, 0, cb);\n    } else {\n      _callback = cb;\n      setTimeout(_flushCallback, 0, false);\n    }\n  };\n  cancelHostCallback = function () {\n    _callback = null;\n  };\n  shouldYieldToHost = function () {\n    return false;\n  };\n} else {\n  if (typeof console !== 'undefined') {\n    // TODO: Remove fb.me link\n    if (typeof localRequestAnimationFrame !== 'function') {\n      console.error(\"This browser doesn't support requestAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');\n    }\n    if (typeof localCancelAnimationFrame !== 'function') {\n      console.error(\"This browser doesn't support cancelAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');\n    }\n  }\n\n  var scheduledHostCallback = null;\n  var isMessageEventScheduled = false;\n  var timeoutTime = -1;\n\n  var isAnimationFrameScheduled = false;\n\n  var isFlushingHostCallback = false;\n\n  var frameDeadline = 0;\n  // We start out assuming that we run at 30fps but then the heuristic tracking\n  // will adjust this value to a faster fps if we get more frequent animation\n  // frames.\n  var previousFrameTime = 33;\n  var activeFrameTime = 33;\n\n  shouldYieldToHost = function () {\n    return frameDeadline <= exports.unstable_now();\n  };\n\n  // We use the postMessage trick to defer idle work until after the repaint.\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = function (event) {\n    isMessageEventScheduled = false;\n\n    var prevScheduledCallback = scheduledHostCallback;\n    var prevTimeoutTime = timeoutTime;\n    scheduledHostCallback = null;\n    timeoutTime = -1;\n\n    var currentTime = exports.unstable_now();\n\n    var didTimeout = false;\n    if (frameDeadline - currentTime <= 0) {\n      // There's no time left in this idle period. Check if the callback has\n      // a timeout and whether it's been exceeded.\n      if (prevTimeoutTime !== -1 && prevTimeoutTime <= currentTime) {\n        // Exceeded the timeout. Invoke the callback even though there's no\n        // time left.\n        didTimeout = true;\n      } else {\n        // No timeout.\n        if (!isAnimationFrameScheduled) {\n          // Schedule another animation callback so we retry later.\n          isAnimationFrameScheduled = true;\n          requestAnimationFrameWithTimeout(animationTick);\n        }\n        // Exit without invoking the callback.\n        scheduledHostCallback = prevScheduledCallback;\n        timeoutTime = prevTimeoutTime;\n        return;\n      }\n    }\n\n    if (prevScheduledCallback !== null) {\n      isFlushingHostCallback = true;\n      try {\n        prevScheduledCallback(didTimeout);\n      } finally {\n        isFlushingHostCallback = false;\n      }\n    }\n  };\n\n  var animationTick = function (rafTime) {\n    if (scheduledHostCallback !== null) {\n      // Eagerly schedule the next animation callback at the beginning of the\n      // frame. If the scheduler queue is not empty at the end of the frame, it\n      // will continue flushing inside that callback. If the queue *is* empty,\n      // then it will exit immediately. Posting the callback at the start of the\n      // frame ensures it's fired within the earliest possible frame. If we\n      // waited until the end of the frame to post the callback, we risk the\n      // browser skipping a frame and not firing the callback until the frame\n      // after that.\n      requestAnimationFrameWithTimeout(animationTick);\n    } else {\n      // No pending work. Exit.\n      isAnimationFrameScheduled = false;\n      return;\n    }\n\n    var nextFrameTime = rafTime - frameDeadline + activeFrameTime;\n    if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {\n      if (nextFrameTime < 8) {\n        // Defensive coding. We don't support higher frame rates than 120hz.\n        // If the calculated frame time gets lower than 8, it is probably a bug.\n        nextFrameTime = 8;\n      }\n      // If one frame goes long, then the next one can be short to catch up.\n      // If two frames are short in a row, then that's an indication that we\n      // actually have a higher frame rate than what we're currently optimizing.\n      // We adjust our heuristic dynamically accordingly. For example, if we're\n      // running on 120hz display or 90hz VR display.\n      // Take the max of the two in case one of them was an anomaly due to\n      // missed frame deadlines.\n      activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;\n    } else {\n      previousFrameTime = nextFrameTime;\n    }\n    frameDeadline = rafTime + activeFrameTime;\n    if (!isMessageEventScheduled) {\n      isMessageEventScheduled = true;\n      port.postMessage(undefined);\n    }\n  };\n\n  requestHostCallback = function (callback, absoluteTimeout) {\n    scheduledHostCallback = callback;\n    timeoutTime = absoluteTimeout;\n    if (isFlushingHostCallback || absoluteTimeout < 0) {\n      // Don't wait for the next frame. Continue working ASAP, in a new event.\n      port.postMessage(undefined);\n    } else if (!isAnimationFrameScheduled) {\n      // If rAF didn't already schedule one, we need to schedule a frame.\n      // TODO: If this rAF doesn't materialize because the browser throttles, we\n      // might want to still have setTimeout trigger rIC as a backup to ensure\n      // that we keep performing work.\n      isAnimationFrameScheduled = true;\n      requestAnimationFrameWithTimeout(animationTick);\n    }\n  };\n\n  cancelHostCallback = function () {\n    scheduledHostCallback = null;\n    isMessageEventScheduled = false;\n    timeoutTime = -1;\n  };\n}\n\nexports.unstable_ImmediatePriority = ImmediatePriority;\nexports.unstable_UserBlockingPriority = UserBlockingPriority;\nexports.unstable_NormalPriority = NormalPriority;\nexports.unstable_IdlePriority = IdlePriority;\nexports.unstable_LowPriority = LowPriority;\nexports.unstable_runWithPriority = unstable_runWithPriority;\nexports.unstable_next = unstable_next;\nexports.unstable_scheduleCallback = unstable_scheduleCallback;\nexports.unstable_cancelCallback = unstable_cancelCallback;\nexports.unstable_wrapCallback = unstable_wrapCallback;\nexports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;\nexports.unstable_shouldYield = unstable_shouldYield;\nexports.unstable_continueExecution = unstable_continueExecution;\nexports.unstable_pauseExecution = unstable_pauseExecution;\nexports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;\n  })();\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/scheduler/cjs/scheduler.development.js?");

/***/ }),

/***/ "./node_modules/scheduler/index.js":
/*!*****************************************!*\
  !*** ./node_modules/scheduler/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/scheduler.development.js */ \"./node_modules/scheduler/cjs/scheduler.development.js\");\n}\n\n\n//# sourceURL=webpack:///./node_modules/scheduler/index.js?");

/***/ }),

/***/ "./node_modules/scheduler/tracing.js":
/*!*******************************************!*\
  !*** ./node_modules/scheduler/tracing.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/scheduler-tracing.development.js */ \"./node_modules/scheduler/cjs/scheduler-tracing.development.js\");\n}\n\n\n//# sourceURL=webpack:///./node_modules/scheduler/tracing.js?");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/setimmediate/setImmediate.js?");

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/timers-browserify/main.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./src/catalog.tsx":
/*!*************************!*\
  !*** ./src/catalog.tsx ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Catalog; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! immutable */ \"./node_modules/immutable/dist/immutable.es.js\");\n/* harmony import */ var _schema_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schema/index */ \"./src/schema/index.ts\");\n/* harmony import */ var _schema_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./schema/constants */ \"./src/schema/constants.ts\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nvar Catalog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Catalog, _React$Component);\n\n  _createClass(Catalog, null, [{\n    key: \"expandRoot\",\n    value: function expandRoot(state, props) {\n      var focus = state.focus,\n          entries = state.entries;\n      var entry = entries.get(focus);\n      var id = entry === undefined ? undefined : entry.last(undefined);\n\n      if (id !== undefined && entry !== undefined && entries.get(focus + 1, entry).size <= entry.size) {\n        var children = _schema_index__WEBPACK_IMPORTED_MODULE_2__[\"trees\"][props.catalog][id];\n\n        if (children.size > 0) {\n          var args = [focus + 1, 0];\n          children.forEach(function (child) {\n            return args.push(entry.push(child));\n          });\n          return {\n            entries: entries.splice.apply(entries, args),\n            focus: focus + 1\n          };\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"collapseRoot\",\n    value: function collapseRoot(state) {\n      var focus = state.focus,\n          entries = state.entries;\n      var entry = entries.get(focus);\n\n      if (entry !== undefined && entry.size > 1) {\n        var size = entry.size - 1;\n        var previous = 0;\n\n        for (var i = focus; i--; i >= 0) {\n          var e = entries.get(i, null);\n\n          if (e !== null && e.size <= size) {\n            previous = i + 1;\n            break;\n          }\n        }\n\n        var next = entries.size;\n\n        for (var _i = focus + 1; _i < entries.size; _i++) {\n          var _e = entries.get(_i, null);\n\n          if (_e !== null && _e.size <= size) {\n            next = _i;\n            break;\n          }\n        }\n\n        return {\n          entries: entries.splice(previous, next - previous),\n          focus: previous - 1\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  function Catalog(props) {\n    var _this;\n\n    _classCallCheck(this, Catalog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Catalog).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      _this.setState({\n        value: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (event) {\n      if (event.keyCode > 36 && event.keyCode < 41) {\n        event.preventDefault();\n\n        if (event.keyCode === 37) {\n          // left\n          _this.setState(Catalog.collapseRoot);\n        } else if (event.keyCode === 38) {\n          // up\n          _this.setState(function (state) {\n            var size = state.entries.size;\n            var focus = (state.focus + size - 1) % size;\n            return {\n              focus: focus\n            };\n          });\n        } else if (event.keyCode === 39) {\n          // right\n          _this.setState(Catalog.expandRoot);\n        } else if (event.keyCode === 40) {\n          // down\n          _this.setState(function (state) {\n            var size = state.entries.size;\n            var focus = (state.focus + 1) % size;\n            return {\n              focus: focus\n            };\n          });\n        }\n      } else if (event.keyCode === 27) {\n        // escape\n        event.currentTarget.blur();\n\n        _this.setState(function (state) {\n          return state.open ? {\n            open: false\n          } : null;\n        });\n      } else if (event.keyCode === 13) {\n        // enter\n        event.preventDefault();\n        var _this$state = _this.state,\n            entries = _this$state.entries,\n            focus = _this$state.focus;\n        var entry = entries.get(focus, null);\n\n        if (entry !== null) {\n          var _id = entry.last(null);\n\n          if (_id !== null) {\n            event.currentTarget.blur();\n\n            _this.setState(function (state) {\n              return state.open ? {\n                open: false\n              } : null;\n            }, function () {\n              return _this.props.onSelect(_id);\n            });\n          }\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFocus\", function (_) {\n      _this.setState(function (state) {\n        return state.open ? null : {\n          open: true\n        };\n      });\n    });\n\n    var _state = {\n      open: props.autoFocus,\n      value: \"\",\n      focus: 0,\n      entries: props.roots.map(function (root) {\n        return Object(immutable__WEBPACK_IMPORTED_MODULE_1__[\"List\"])([root]);\n      })\n    };\n    _this.state = _objectSpread({}, _state, Catalog.expandRoot(_state, props), {\n      focus: 0\n    });\n    return _this;\n  }\n\n  _createClass(Catalog, [{\n    key: \"render\",\n    value: function render() {\n      var autoFocus = this.props.autoFocus;\n      var _this$state2 = this.state,\n          open = _this$state2.open,\n          value = _this$state2.value;\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"catalog\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"search\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n        type: \"text\",\n        autoFocus: autoFocus,\n        value: value,\n        onKeyDown: this.handleKeyDown,\n        onChange: this.handleChange,\n        onFocus: this.handleFocus\n      })), open ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"content\"\n      }, this.renderTree(), this.renderDescription()) : null);\n    }\n  }, {\n    key: \"renderTree\",\n    value: function renderTree() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          entries = _this$state3.entries,\n          focus = _this$state3.focus;\n      var tree = _schema_index__WEBPACK_IMPORTED_MODULE_2__[\"trees\"][this.props.catalog];\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"tree\"\n      }, entries.map(function (root, index) {\n        return _this2.renderEntry(root, index, entries.get(index + 1, root).size > root.size, index === focus, tree);\n      }));\n    }\n  }, {\n    key: \"renderEntry\",\n    value: function renderEntry(entry, index, expanded, focused, tree) {\n      var id = entry.last(undefined);\n\n      if (id !== undefined) {\n        var prefix;\n        var dot = tree[id].size > 0 ? expanded ? Catalog.Expanded : Catalog.Collapsed : Catalog.Empty;\n\n        if (this.props.catalog === _schema_constants__WEBPACK_IMPORTED_MODULE_3__[\"CLASS\"]) {\n          prefix = entry.size > 1 ? dot.padStart((entry.size - 1) * Catalog.Spacing) : \"\";\n        } else {\n          prefix = dot.padStart(entry.size * Catalog.Spacing);\n        }\n\n        var className = [\"entry\"];\n\n        if (focused) {\n          className.push(\"focused\");\n        }\n\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          key: index,\n          className: className.join(\" \")\n        }, prefix, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, _schema_index__WEBPACK_IMPORTED_MODULE_2__[\"nodes\"][id][_schema_constants__WEBPACK_IMPORTED_MODULE_3__[\"LABEL\"]]));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderDescription\",\n    value: function renderDescription() {\n      var _this$state4 = this.state,\n          entries = _this$state4.entries,\n          focus = _this$state4.focus;\n      var entry = entries.get(focus, null);\n\n      if (entry !== null) {\n        var _id2 = entry.last(_schema_constants__WEBPACK_IMPORTED_MODULE_3__[\"THING\"]);\n\n        var _nodes$_id = _schema_index__WEBPACK_IMPORTED_MODULE_2__[\"nodes\"][_id2],\n            label = _nodes$_id[_schema_constants__WEBPACK_IMPORTED_MODULE_3__[\"LABEL\"]],\n            __html = _nodes$_id[_schema_constants__WEBPACK_IMPORTED_MODULE_3__[\"COMMENT\"]];\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"documentation\"\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h1\", null, label), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"hr\", null)), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"description\",\n          dangerouslySetInnerHTML: {\n            __html: __html\n          }\n        }));\n      }\n\n      return null;\n    }\n  }]);\n\n  return Catalog;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n_defineProperty(Catalog, \"Spacing\", 2);\n\n_defineProperty(Catalog, \"Space\", \" \");\n\n_defineProperty(Catalog, \"Expanded\", \"○ \");\n\n_defineProperty(Catalog, \"Collapsed\", \"● \");\n\n_defineProperty(Catalog, \"Empty\", \"- \");\n\n\n\n//# sourceURL=webpack:///./src/catalog.tsx?");

/***/ }),

/***/ "./src/graph.tsx":
/*!***********************!*\
  !*** ./src/graph.tsx ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _catalog__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./catalog */ \"./src/catalog.tsx\");\n/* harmony import */ var _schema_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schema/constants */ \"./src/schema/constants.ts\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! immutable */ \"./node_modules/immutable/dist/immutable.es.js\");\n/// <reference path=\"jsonld.d.ts\" />\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (_ref) {\n  var graph = _ref.graph;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"section\", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h1\", null, \"This is a graph\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_catalog__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n    roots: Object(immutable__WEBPACK_IMPORTED_MODULE_3__[\"List\"])([_schema_constants__WEBPACK_IMPORTED_MODULE_2__[\"THING\"]]),\n    catalog: _schema_constants__WEBPACK_IMPORTED_MODULE_2__[\"CLASS\"],\n    autoFocus: true,\n    onSelect: function onSelect(id) {\n      return console.log(id);\n    }\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"pre\", null, JSON.stringify(graph, null, 2)));\n});\n\n//# sourceURL=webpack:///./src/graph.tsx?");

/***/ }),

/***/ "./src/index.tsx":
/*!***********************!*\
  !*** ./src/index.tsx ***!
  \***********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var jsonld__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jsonld */ \"./node_modules/jsonld/lib/jsonld.js\");\n/* harmony import */ var jsonld__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jsonld__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _graph__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./graph */ \"./src/graph.tsx\");\n/// <reference path=\"jsonld.d.ts\" />\n\n\n\n\nvar graph = {\n  \"@context\": {\n    name: \"http://schema.org/name\",\n    description: \"http://schema.org/description\",\n    image: {\n      \"@id\": \"http://schema.org/image\",\n      \"@type\": \"@id\"\n    },\n    geo: \"http://schema.org/geo\",\n    latitude: {\n      \"@id\": \"http://schema.org/latitude\",\n      \"@type\": \"xsd:float\"\n    },\n    longitude: {\n      \"@id\": \"http://schema.org/longitude\",\n      \"@type\": \"xsd:float\"\n    },\n    xsd: \"http://www.w3.org/2001/XMLSchema#\"\n  },\n  name: \"The Empire State Building\",\n  description: \"The Empire State Building is a 102-story landmark in New York City.\",\n  image: \"http://www.civil.usherbrooke.ca/cours/gci215a/empire-state-building.jpg\",\n  geo: {\n    latitude: \"40.75\",\n    longitude: \"73.98\"\n  }\n};\nvar main = document.querySelector(\"main\");\njsonld__WEBPACK_IMPORTED_MODULE_2___default.a.flatten(graph, null).then(function (g) {\n  return react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.render(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_graph__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    graph: g\n  }), main);\n});\n\n//# sourceURL=webpack:///./src/index.tsx?");

/***/ }),

/***/ "./src/schema/constants.ts":
/*!*********************************!*\
  !*** ./src/schema/constants.ts ***!
  \*********************************/
/*! exports provided: ID, TYPE, DATA, VALUE, CONTEXT, GRAPH, LABEL, COMMENT, SUBPROPERTY, SUBCLASS, PROPERTY, CLASS, DOMAIN, RANGE, INVERSE, ENUMERATION, THING, SUPERCEDED, SAME, CATEGORY, SOURCE, EQUIVALENT_CLASS, EQUIVALENT_PROPERTY, context */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ID\", function() { return ID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TYPE\", function() { return TYPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DATA\", function() { return DATA; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VALUE\", function() { return VALUE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CONTEXT\", function() { return CONTEXT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GRAPH\", function() { return GRAPH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LABEL\", function() { return LABEL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COMMENT\", function() { return COMMENT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SUBPROPERTY\", function() { return SUBPROPERTY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SUBCLASS\", function() { return SUBCLASS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PROPERTY\", function() { return PROPERTY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CLASS\", function() { return CLASS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DOMAIN\", function() { return DOMAIN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RANGE\", function() { return RANGE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"INVERSE\", function() { return INVERSE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ENUMERATION\", function() { return ENUMERATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"THING\", function() { return THING; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SUPERCEDED\", function() { return SUPERCEDED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SAME\", function() { return SAME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CATEGORY\", function() { return CATEGORY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SOURCE\", function() { return SOURCE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EQUIVALENT_CLASS\", function() { return EQUIVALENT_CLASS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EQUIVALENT_PROPERTY\", function() { return EQUIVALENT_PROPERTY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"context\", function() { return context; });\nvar ID = \"@id\";\nvar TYPE = \"@type\";\nvar DATA = \"@data\";\nvar VALUE = \"@value\";\nvar CONTEXT = \"@context\";\nvar GRAPH = \"@graph\";\nvar LABEL = \"rdfs:label\";\nvar COMMENT = \"rdfs:comment\";\nvar SUBPROPERTY = \"rdfs:subPropertyOf\";\nvar SUBCLASS = \"rdfs:subClassOf\";\nvar PROPERTY = \"rdf:Property\";\nvar CLASS = \"rdfs:Class\";\nvar DOMAIN = \"http://schema.org/domainIncludes\";\nvar RANGE = \"http://schema.org/rangeIncludes\";\nvar INVERSE = \"http://schema.org/inverseOf\";\nvar ENUMERATION = \"http://schema.org/Enumeration\";\nvar THING = \"http://schema.org/Thing\";\nvar SUPERCEDED = \"http://schema.org/supersededBy\";\nvar SAME = \"http://schema.org/sameAs\";\nvar CATEGORY = \"http://schema.org/category\";\nvar SOURCE = \"http://purl.org/dc/terms/source\";\nvar EQUIVALENT_CLASS = \"http://www.w3.org/2002/07/owl#equivalentClass\";\nvar EQUIVALENT_PROPERTY = \"http://www.w3.org/2002/07/owl#equivalentProperty\";\nvar context = {\n  \"@vocab\": \"http://schema.org/\"\n};\n\n//# sourceURL=webpack:///./src/schema/constants.ts?");

/***/ }),

/***/ "./src/schema/index.ts":
/*!*****************************!*\
  !*** ./src/schema/index.ts ***!
  \*****************************/
/*! exports provided: nodes, classes, searchAncestry, enumerateAncestry, classTree, propertyTree, trees, roots, enumerations, domainMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"nodes\", function() { return nodes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"classes\", function() { return classes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"searchAncestry\", function() { return searchAncestry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enumerateAncestry\", function() { return enumerateAncestry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"classTree\", function() { return classTree; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"propertyTree\", function() { return propertyTree; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trees\", function() { return trees; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"roots\", function() { return roots; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enumerations\", function() { return enumerations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"domainMap\", function() { return domainMap; });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/schema/constants.ts\");\n/* harmony import */ var _schema_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schema.json */ \"./src/schema/schema.json\");\nvar _schema_json__WEBPACK_IMPORTED_MODULE_1___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./schema.json */ \"./src/schema/schema.json\", 1);\nvar _trees, _roots;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n // schema is the raw JSON object\n\nvar schema = _schema_json__WEBPACK_IMPORTED_MODULE_1__;\nwindow.schema = schema;\n\nfunction wrap(container) {\n  if (Array.isArray(container)) {\n    return container;\n  } else if (container !== undefined) {\n    return [container];\n  } else {\n    return [];\n  }\n} // nodes is an id-indexed object\n\n\nvar nodes = {};\nwindow.nodes = nodes;\nschema[_constants__WEBPACK_IMPORTED_MODULE_0__[\"GRAPH\"]].forEach(function (node) {\n  return nodes[node[_constants__WEBPACK_IMPORTED_MODULE_0__[\"ID\"]]] = node;\n});\nvar classes = new Set([_constants__WEBPACK_IMPORTED_MODULE_0__[\"THING\"]]);\nwindow.classes = classes;\n\nfunction traverseClasses(node) {\n  if (classes.has(node[_constants__WEBPACK_IMPORTED_MODULE_0__[\"ID\"]])) {\n    return true;\n  }\n\n  var isClass = false;\n  wrap(node[_constants__WEBPACK_IMPORTED_MODULE_0__[\"SUBCLASS\"]]).forEach(function (_ref) {\n    var subclass = _ref[_constants__WEBPACK_IMPORTED_MODULE_0__[\"ID\"]];\n\n    if (classes.has(subclass)) {\n      classes.add(node[_constants__WEBPACK_IMPORTED_MODULE_0__[\"ID\"]]);\n      isClass = true;\n    } else if (nodes.hasOwnProperty(subclass)) {\n      if (traverseClasses(nodes[subclass])) {\n        classes.add(node[_constants__WEBPACK_IMPORTED_MODULE_0__[\"ID\"]]);\n        isClass = true;\n      }\n    }\n  });\n  return isClass;\n}\n\nfunction searchAncestry(type, target, parent) {\n  if (type === target) {\n    return true;\n  } else if (nodes[type]) {\n    return wrap(nodes[type][parent]).some(function (_ref2) {\n      var id = _ref2[_constants__WEBPACK_IMPORTED_MODULE_0__[\"ID\"]];\n      return searchAncestry(id, target, parent);\n    });\n  } else {\n    return false;\n  }\n}\n\nfunction traverseAncestry(type, parent, ancestry) {\n  ancestry.push(type);\n\n  if (nodes[type]) {\n    wrap(nodes[type][parent]).forEach(function (_ref3) {\n      var id = _ref3[_constants__WEBPACK_IMPORTED_MODULE_0__[\"ID\"]];\n      return traverseAncestry(id, parent, ancestry);\n    });\n  }\n}\n\nfunction enumerateAncestry(type, parent) {\n  var ancestry = [];\n  traverseAncestry(type, parent, ancestry);\n  return ancestry;\n}\nvar classTree = {};\nwindow.classTree = classTree;\nvar propertyTree = {};\nwindow.propertyTree = propertyTree;\nvar trees = (_trees = {}, _defineProperty(_trees, _constants__WEBPACK_IMPORTED_MODULE_0__[\"CLASS\"], classTree), _defineProperty(_trees, _constants__WEBPACK_IMPORTED_MODULE_0__[\"PROPERTY\"], propertyTree), _trees);\nvar roots = (_roots = {}, _defineProperty(_roots, _constants__WEBPACK_IMPORTED_MODULE_0__[\"CLASS\"], []), _defineProperty(_roots, _constants__WEBPACK_IMPORTED_MODULE_0__[\"PROPERTY\"], [_constants__WEBPACK_IMPORTED_MODULE_0__[\"THING\"]]), _roots);\nvar enumerations = {};\nwindow.enumerations = enumerations; // domainMap is a map from class ids to an array of property ids\n\nvar domainMap = {};\nwindow.domainMap = domainMap;\n\nfunction get(tree, id) {\n  if (tree.hasOwnProperty(id)) {\n    return tree[id];\n  } else {\n    return tree[id] = new Set([]);\n  }\n}\n\nfunction traverse(id, tree, parent) {\n  get(tree, id);\n  wrap(nodes[id][parent]).forEach(function (node) {\n    return get(tree, node[_constants__WEBPACK_IMPORTED_MODULE_0__[\"ID\"]]).add(id);\n  });\n}\n\nschema[_constants__WEBPACK_IMPORTED_MODULE_0__[\"GRAPH\"]].forEach(function (node) {\n  var id = node[_constants__WEBPACK_IMPORTED_MODULE_0__[\"ID\"]];\n\n  if (id !== _constants__WEBPACK_IMPORTED_MODULE_0__[\"ENUMERATION\"] && searchAncestry(id, _constants__WEBPACK_IMPORTED_MODULE_0__[\"ENUMERATION\"], _constants__WEBPACK_IMPORTED_MODULE_0__[\"SUBCLASS\"])) {\n    enumerations[id] = new Set([]);\n  } else if (node[_constants__WEBPACK_IMPORTED_MODULE_0__[\"TYPE\"]] === _constants__WEBPACK_IMPORTED_MODULE_0__[\"PROPERTY\"]) {\n    traverse(id, propertyTree, _constants__WEBPACK_IMPORTED_MODULE_0__[\"SUBPROPERTY\"]);\n    wrap(node[_constants__WEBPACK_IMPORTED_MODULE_0__[\"DOMAIN\"]]).forEach(function (_ref4) {\n      var domain = _ref4[_constants__WEBPACK_IMPORTED_MODULE_0__[\"ID\"]];\n\n      if (domainMap.hasOwnProperty(domain)) {\n        domainMap[domain].push(id);\n      } else {\n        domainMap[domain] = [id];\n      }\n    });\n  } else if (traverseClasses(node)) {\n    traverse(id, classTree, _constants__WEBPACK_IMPORTED_MODULE_0__[\"SUBCLASS\"]);\n  }\n});\nschema[_constants__WEBPACK_IMPORTED_MODULE_0__[\"GRAPH\"]].forEach(function (node) {\n  var id = node[_constants__WEBPACK_IMPORTED_MODULE_0__[\"ID\"]],\n      type = node[_constants__WEBPACK_IMPORTED_MODULE_0__[\"TYPE\"]];\n  wrap(type).forEach(function (type) {\n    if (enumerations.hasOwnProperty(type)) {\n      enumerations[type].add(id);\n    }\n  });\n});\n\n//# sourceURL=webpack:///./src/schema/index.ts?");

/***/ }),

/***/ "./src/schema/schema.json":
/*!********************************!*\
  !*** ./src/schema/schema.json ***!
  \********************************/
/*! exports provided: @context, @graph, @id, default */
/***/ (function(module) {

eval("module.exports = {\"@context\":{\"rdf\":\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\"rdfs\":\"http://www.w3.org/2000/01/rdf-schema#\",\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\"@graph\":[{\"@id\":\"http://schema.org/downloadUrl\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"rdfs:comment\":\"If the file can be downloaded, URL to download the binary.\",\"rdfs:label\":\"downloadUrl\"},{\"@id\":\"http://schema.org/UserLikes\",\"@type\":\"rdfs:Class\",\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/InteractionCounter\"},\"rdfs:comment\":\"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\\\"localLink\\\" href=\\\"http://schema.org/Action\\\">Action</a>-based vocabulary, alongside types such as <a class=\\\"localLink\\\" href=\\\"http://schema.org/Comment\\\">Comment</a>.\",\"rdfs:label\":\"UserLikes\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/UserInteraction\"}},{\"@id\":\"http://schema.org/CafeOrCoffeeShop\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A cafe or coffee shop.\",\"rdfs:label\":\"CafeOrCoffeeShop\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FoodEstablishment\"}},{\"@id\":\"http://schema.org/pagination\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/PublicationIssue\"},{\"@id\":\"http://schema.org/Article\"},{\"@id\":\"http://schema.org/PublicationVolume\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"http://www.w3.org/2002/07/owl#equivalentProperty\":{\"@id\":\"http://purl.org/ontology/bibo/pages\"},\"rdfs:comment\":\"Any description of pages that is not separated into pageStart and pageEnd; for example, \\\"1-6, 9, 55\\\" or \\\"10-12, 46-49\\\".\",\"rdfs:label\":\"pagination\"},{\"@id\":\"http://schema.org/about\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/CommunicateAction\"},{\"@id\":\"http://schema.org/Event\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"rdfs:comment\":\"The subject matter of the content.\",\"rdfs:label\":\"about\"},{\"@id\":\"http://schema.org/Recipe\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A recipe. For dietary restrictions covered by the recipe, a few common restrictions are enumerated via <a class=\\\"localLink\\\" href=\\\"http://schema.org/suitableForDiet\\\">suitableForDiet</a>. The <a class=\\\"localLink\\\" href=\\\"http://schema.org/keywords\\\">keywords</a> property can also be used to add more detail.\",\"rdfs:label\":\"Recipe\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/HowTo\"}},{\"@id\":\"http://schema.org/gameItem\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Game\"},{\"@id\":\"http://schema.org/VideoGameSeries\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"rdfs:comment\":\"An item is an object within the game world that can be collected by a player or, occasionally, a non-player character.\",\"rdfs:label\":\"gameItem\"},{\"@id\":\"http://schema.org/Photograph\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A photograph.\",\"rdfs:label\":\"Photograph\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/Volcano\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A volcano, like Fuji san.\",\"rdfs:label\":\"Volcano\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Landform\"}},{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\",\"@type\":\"http://schema.org/Organization\",\"rdfs:comment\":\"This element is based on the STI Accommodation Ontology, see <a href=\\\"http://ontologies.sti-innsbruck.at/acco/ns.html\\\">http://ontologies.sti-innsbruck.at/acco/ns.html</a> for details.\\n    Many class and property definitions are inspired by or based on abstracts from Wikipedia, the free encyclopedia.\",\"rdfs:label\":\"STI Accommodation Ontology\"},{\"@id\":\"http://schema.org/departureStation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/TrainTrip\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/TrainStation\"},\"rdfs:comment\":\"The station from which the train departs.\",\"rdfs:label\":\"departureStation\"},{\"@id\":\"http://schema.org/SportsTeam\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Organization: Sports team.\",\"rdfs:label\":\"SportsTeam\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/SportsOrganization\"}},{\"@id\":\"http://schema.org/GroceryStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A grocery store.\",\"rdfs:label\":\"GroceryStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/True\",\"@type\":\"http://schema.org/Boolean\",\"rdfs:comment\":\"The boolean value true.\",\"rdfs:label\":\"True\"},{\"@id\":\"http://schema.org/Demand\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply.\",\"rdfs:label\":\"Demand\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/musicCompositionForm\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicComposition\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The type of composition (e.g. overture, sonata, symphony, etc.).\",\"rdfs:label\":\"musicCompositionForm\"},{\"@id\":\"http://schema.org/AboutPage\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Web page type: About page.\",\"rdfs:label\":\"AboutPage\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/WebPage\"}},{\"@id\":\"http://schema.org/result\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Action\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"rdfs:comment\":\"The result produced in the action. e.g. John wrote <em>a book</em>.\",\"rdfs:label\":\"result\"},{\"@id\":\"http://schema.org/isbn\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Book\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"http://www.w3.org/2002/07/owl#equivalentProperty\":{\"@id\":\"http://purl.org/ontology/bibo/isbn\"},\"rdfs:comment\":\"The ISBN of the book.\",\"rdfs:label\":\"isbn\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/identifier\"}},{\"@id\":\"http://schema.org/ExerciseAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of participating in exertive activity for the purposes of improving health and fitness.\",\"rdfs:label\":\"ExerciseAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PlayAction\"}},{\"@id\":\"http://schema.org/UserPlays\",\"@type\":\"rdfs:Class\",\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/InteractionCounter\"},\"rdfs:comment\":\"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\\\"localLink\\\" href=\\\"http://schema.org/Action\\\">Action</a>-based vocabulary, alongside types such as <a class=\\\"localLink\\\" href=\\\"http://schema.org/Comment\\\">Comment</a>.\",\"rdfs:label\":\"UserPlays\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/UserInteraction\"}},{\"@id\":\"http://schema.org/FoodService\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"rdfs:comment\":\"A food service, like breakfast, lunch, or dinner.\",\"rdfs:label\":\"FoodService\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Service\"}},{\"@id\":\"http://schema.org/EBook\",\"@type\":\"http://schema.org/BookFormatType\",\"rdfs:comment\":\"Book format: Ebook.\",\"rdfs:label\":\"EBook\"},{\"@id\":\"http://schema.org/SeaBodyOfWater\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A sea (for example, the Caspian sea).\",\"rdfs:label\":\"SeaBodyOfWater\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/BodyOfWater\"}},{\"@id\":\"http://schema.org/ConvenienceStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A convenience store.\",\"rdfs:label\":\"ConvenienceStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/orderDate\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Order\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"Date order was placed.\",\"rdfs:label\":\"orderDate\"},{\"@id\":\"http://schema.org/VeganDiet\",\"@type\":\"http://schema.org/RestrictedDiet\",\"rdfs:comment\":\"A diet exclusive of all animal products.\",\"rdfs:label\":\"VeganDiet\"},{\"@id\":\"http://schema.org/serviceArea\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Service\"},{\"@id\":\"http://schema.org/ContactPoint\"},{\"@id\":\"http://schema.org/Organization\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/GeoShape\"},{\"@id\":\"http://schema.org/AdministrativeArea\"}],\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/areaServed\"},\"rdfs:comment\":\"The geographic area where the service is provided.\",\"rdfs:label\":\"serviceArea\"},{\"@id\":\"http://schema.org/Dataset\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_DatasetClass\"},\"http://www.w3.org/2002/07/owl#equivalentClass\":[{\"@id\":\"http://www.w3.org/ns/dcat#Dataset\"},{\"@id\":\"http://rdfs.org/ns/void#Dataset\"},{\"@id\":\"http://purl.org/dc/dcmitype/Dataset\"}],\"rdfs:comment\":\"A body of structured information describing some topic(s) of interest.\",\"rdfs:label\":\"Dataset\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/DigitalAudioTapeFormat\",\"@type\":\"http://schema.org/MusicReleaseFormatType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"DigitalAudioTapeFormat.\",\"rdfs:label\":\"DigitalAudioTapeFormat\"},{\"@id\":\"http://schema.org/vehicleSpecialUsage\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Indicates whether the vehicle has been used for special purposes, like commercial rental, driving school, or as a taxi. The legislation in many countries requires this information to be revealed when offering a car for sale.\",\"rdfs:label\":\"vehicleSpecialUsage\"},{\"@id\":\"http://schema.org/OutOfStock\",\"@type\":\"http://schema.org/ItemAvailability\",\"rdfs:comment\":\"Indicates that the item is out of stock.\",\"rdfs:label\":\"OutOfStock\"},{\"@id\":\"http://schema.org/Action\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_ActionCollabClass\"},\"rdfs:comment\":\"An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.</p>\\n\\n<p>See also <a href=\\\"http://blog.schema.org/2014/04/announcing-schemaorg-actions.html\\\">blog post</a> and <a href=\\\"http://schema.org/docs/actions.html\\\">Actions overview document</a>.\",\"rdfs:label\":\"Action\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Thing\"}},{\"@id\":\"http://schema.org/InsuranceAgency\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An Insurance agency.\",\"rdfs:label\":\"InsuranceAgency\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FinancialService\"}},{\"@id\":\"http://schema.org/DamagedCondition\",\"@type\":\"http://schema.org/OfferItemCondition\",\"rdfs:comment\":\"Indicates that the item is damaged.\",\"rdfs:label\":\"DamagedCondition\"},{\"@id\":\"http://schema.org/nextItem\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ListItem\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ListItem\"},\"rdfs:comment\":\"A link to the ListItem that follows the current one.\",\"rdfs:label\":\"nextItem\"},{\"@id\":\"http://schema.org/AudioObject\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews\"},\"rdfs:comment\":\"An audio file.\",\"rdfs:label\":\"AudioObject\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/MediaObject\"}},{\"@id\":\"http://schema.org/recordingOf\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicRecording\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/recordedAs\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MusicComposition\"},\"rdfs:comment\":\"The composition this track is a recording of.\",\"rdfs:label\":\"recordingOf\"},{\"@id\":\"http://schema.org/TaxiReservation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A reservation for a taxi.</p>\\n\\n<p>Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class=\\\"localLink\\\" href=\\\"http://schema.org/Offer\\\">Offer</a>.\",\"rdfs:label\":\"TaxiReservation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Reservation\"}},{\"@id\":\"http://schema.org/audienceType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Audience\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).\",\"rdfs:label\":\"audienceType\"},{\"@id\":\"http://schema.org/Game\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The Game type represents things which are games. These are typically rule-governed recreational activities, e.g. role-playing games in which players assume the role of characters in a fictional setting.\",\"rdfs:label\":\"Game\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/AlbumRelease\",\"@type\":\"http://schema.org/MusicAlbumReleaseType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"AlbumRelease.\",\"rdfs:label\":\"AlbumRelease\"},{\"@id\":\"http://schema.org/interactionService\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/InteractionCounter\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/WebSite\"},{\"@id\":\"http://schema.org/SoftwareApplication\"}],\"rdfs:comment\":\"The WebSite or SoftwareApplication where the interactions took place.\",\"rdfs:label\":\"interactionService\"},{\"@id\":\"http://schema.org/SoldOut\",\"@type\":\"http://schema.org/ItemAvailability\",\"rdfs:comment\":\"Indicates that the item has sold out.\",\"rdfs:label\":\"SoldOut\"},{\"@id\":\"http://schema.org/targetDescription\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/AlignmentObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The description of a node in an established educational framework.\",\"rdfs:label\":\"targetDescription\"},{\"@id\":\"http://schema.org/Vehicle\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A vehicle is a device that is designed or used to transport people or cargo over land, water, air, or through space.\",\"rdfs:label\":\"Vehicle\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Product\"}},{\"@id\":\"http://schema.org/photo\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Photograph\"},{\"@id\":\"http://schema.org/ImageObject\"}],\"rdfs:comment\":\"A photograph of this place.\",\"rdfs:label\":\"photo\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/image\"}},{\"@id\":\"http://schema.org/ratingValue\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Rating\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Number\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The rating for the content.\",\"rdfs:label\":\"ratingValue\"},{\"@id\":\"http://schema.org/Permit\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A permit issued by an organization, e.g. a parking pass.\",\"rdfs:label\":\"Permit\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/educationalAlignment\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/AlignmentObject\"},\"rdfs:comment\":\"An alignment to an established educational framework.\",\"rdfs:label\":\"educationalAlignment\"},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews\",\"@type\":\"http://schema.org/Organization\",\"rdfs:comment\":\"This class contains derivatives of IPTC rNews properties. rNews is a data model of publishing metadata with serializations currently available for RDFa as well as HTML5 Microdata. More information about the IPTC and rNews can be found at <a href=\\\"http://rnews.org\\\">rnews.org</a>.\",\"rdfs:label\":\"rNews\"},{\"@id\":\"http://schema.org/spouse\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"The person's spouse.\",\"rdfs:label\":\"spouse\"},{\"@id\":\"http://schema.org/uploadDate\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MediaObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"Date when this media object was uploaded to this site.\",\"rdfs:label\":\"uploadDate\"},{\"@id\":\"http://schema.org/AutoPartsStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An auto parts store.\",\"rdfs:label\":\"AutoPartsStore\",\"rdfs:subClassOf\":[{\"@id\":\"http://schema.org/AutomotiveBusiness\"},{\"@id\":\"http://schema.org/Store\"}]},{\"@id\":\"http://schema.org/manufacturer\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Product\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"rdfs:comment\":\"The manufacturer of the product.\",\"rdfs:label\":\"manufacturer\"},{\"@id\":\"http://schema.org/Painting\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A painting.\",\"rdfs:label\":\"Painting\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/SomeProducts\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"A placeholder for multiple similar products of the same kind.\",\"rdfs:label\":\"SomeProducts\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Product\"}},{\"@id\":\"http://schema.org/urlTemplate\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/EntryPoint\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"An url template (RFC6570) that will be used to construct the target of the execution of the action.\",\"rdfs:label\":\"urlTemplate\"},{\"@id\":\"http://schema.org/MoveAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of an agent relocating to a place.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/TransferAction\\\">TransferAction</a>: Unlike TransferAction, the subject of the move is a living Person or Organization rather than an inanimate object.</li>\\n</ul>\\n\",\"rdfs:label\":\"MoveAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Action\"}},{\"@id\":\"http://schema.org/CreativeWork\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews\"},\"rdfs:comment\":\"The most generic kind of creative work, including books, movies, photographs, software programs, etc.\",\"rdfs:label\":\"CreativeWork\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Thing\"}},{\"@id\":\"http://schema.org/upvoteCount\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Comment\"},{\"@id\":\"http://schema.org/Question\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"The number of upvotes this question, answer or comment has received from the community.\",\"rdfs:label\":\"upvoteCount\"},{\"@id\":\"http://schema.org/sku\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Product\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.\",\"rdfs:label\":\"sku\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/identifier\"}},{\"@id\":\"http://schema.org/AddAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of editing by adding an object to a collection.\",\"rdfs:label\":\"AddAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/UpdateAction\"}},{\"@id\":\"http://schema.org/broadcastChannelId\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BroadcastChannel\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The unique address by which the BroadcastService can be identified in a provider lineup. In US, this is typically a number.\",\"rdfs:label\":\"broadcastChannelId\"},{\"@id\":\"http://schema.org/JewelryStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A jewelry store.\",\"rdfs:label\":\"JewelryStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/ViewAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of consuming static visual content.\",\"rdfs:label\":\"ViewAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ConsumeAction\"}},{\"@id\":\"http://schema.org/WPFooter\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The footer section of the page.\",\"rdfs:label\":\"WPFooter\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/WebPageElement\"}},{\"@id\":\"http://schema.org/associatedMedia\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MediaObject\"},\"rdfs:comment\":\"A media object that encodes this CreativeWork. This property is a synonym for encoding.\",\"rdfs:label\":\"associatedMedia\"},{\"@id\":\"http://schema.org/QAPage\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A QAPage is a WebPage focussed on a specific Question and its Answer(s), e.g. in a question answering site or documenting Frequently Asked Questions (FAQs).\",\"rdfs:label\":\"QAPage\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/WebPage\"}},{\"@id\":\"http://schema.org/exifData\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ImageObject\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/PropertyValue\"}],\"rdfs:comment\":\"exif data for this object.\",\"rdfs:label\":\"exifData\"},{\"@id\":\"http://schema.org/query\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SearchAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A sub property of instrument. The query used on this action.\",\"rdfs:label\":\"query\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/instrument\"}},{\"@id\":\"http://schema.org/sameAs\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"rdfs:comment\":\"URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.\",\"rdfs:label\":\"sameAs\"},{\"@id\":\"http://schema.org/funder\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Event\"},{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"rdfs:comment\":\"A person or organization that supports (sponsors) something through some kind of financial contribution.\",\"rdfs:label\":\"funder\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/sponsor\"}},{\"@id\":\"http://schema.org/LikeAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of expressing a positive sentiment about the object. An agent likes an object (a proposition, topic or theme) with participants.\",\"rdfs:label\":\"LikeAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ReactAction\"}},{\"@id\":\"http://schema.org/PublicationEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A PublicationEvent corresponds indifferently to the event of publication for a CreativeWork of any type e.g. a broadcast event, an on-demand event, a book/journal publication via a variety of delivery media.\",\"rdfs:label\":\"PublicationEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/Course\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A description of an educational course which may be offered as distinct instances at which take place at different times or take place at different locations, or be offered through different media or modes of study. An educational course is a sequence of one or more educational events and/or creative works which aims to build knowledge, competence or ability of learners.\",\"rdfs:label\":\"Course\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/position\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/ListItem\"},{\"@id\":\"http://schema.org/CreativeWork\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Integer\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The position of an item in a series or sequence of items.\",\"rdfs:label\":\"position\"},{\"@id\":\"http://schema.org/colleagues\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/colleague\"},\"rdfs:comment\":\"A colleague of the person.\",\"rdfs:label\":\"colleagues\"},{\"@id\":\"http://schema.org/ParcelService\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"<p>A private parcel service as the delivery mode available for a certain offer.</p>\\n\\n<p>Commonly used values:</p>\\n\\n<ul>\\n<li>http://purl.org/goodrelations/v1#DHL</li>\\n<li>http://purl.org/goodrelations/v1#FederalExpress</li>\\n<li>http://purl.org/goodrelations/v1#UPS</li>\\n</ul>\\n\",\"rdfs:label\":\"ParcelService\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/DeliveryMethod\"}},{\"@id\":\"http://schema.org/BefriendAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of forming a personal connection with someone (object) mutually/bidirectionally/symmetrically.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/FollowAction\\\">FollowAction</a>: Unlike FollowAction, BefriendAction implies that the connection is reciprocal.</li>\\n</ul>\\n\",\"rdfs:label\":\"BefriendAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/InteractAction\"}},{\"@id\":\"http://schema.org/playerType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MediaObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Player type required&#x2014;for example, Flash or Silverlight.\",\"rdfs:label\":\"playerType\"},{\"@id\":\"http://schema.org/unitCode\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/QuantitativeValue\"},{\"@id\":\"http://schema.org/UnitPriceSpecification\"},{\"@id\":\"http://schema.org/PropertyValue\"},{\"@id\":\"http://schema.org/TypeAndQuantityNode\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon.\",\"rdfs:label\":\"unitCode\"},{\"@id\":\"http://schema.org/produces\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Service\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/serviceOutput\"},\"rdfs:comment\":\"The tangible thing generated by the service, e.g. a passport, permit, etc.\",\"rdfs:label\":\"produces\"},{\"@id\":\"http://schema.org/OrderReturned\",\"@type\":\"http://schema.org/OrderStatus\",\"rdfs:comment\":\"OrderStatus representing that an order has been returned.\",\"rdfs:label\":\"OrderReturned\"},{\"@id\":\"http://schema.org/HowTo\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Instructions that explain how to achieve a result by performing a sequence of steps.\",\"rdfs:label\":\"HowTo\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/PoliceStation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A police station.\",\"rdfs:label\":\"PoliceStation\",\"rdfs:subClassOf\":[{\"@id\":\"http://schema.org/EmergencyService\"},{\"@id\":\"http://schema.org/CivicStructure\"}]},{\"@id\":\"http://schema.org/LeftHandDriving\",\"@type\":\"http://schema.org/SteeringPositionValue\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"rdfs:comment\":\"The steering position is on the left side of the vehicle (viewed from the main direction of driving).\",\"rdfs:label\":\"LeftHandDriving\"},{\"@id\":\"http://schema.org/latitude\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/GeoCoordinates\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Number\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The latitude of a location. For example <code>37.42242</code> (<a href=\\\"https://en.wikipedia.org/wiki/World_Geodetic_System\\\">WGS 84</a>).\",\"rdfs:label\":\"latitude\"},{\"@id\":\"http://schema.org/arrivalAirport\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Flight\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Airport\"},\"rdfs:comment\":\"The airport where the flight terminates.\",\"rdfs:label\":\"arrivalAirport\"},{\"@id\":\"http://schema.org/bestRating\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Rating\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Number\"}],\"rdfs:comment\":\"The highest value allowed in this rating system. If bestRating is omitted, 5 is assumed.\",\"rdfs:label\":\"bestRating\"},{\"@id\":\"http://schema.org/HealthClub\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A health club.\",\"rdfs:label\":\"HealthClub\",\"rdfs:subClassOf\":[{\"@id\":\"http://schema.org/SportsActivityLocation\"},{\"@id\":\"http://schema.org/HealthAndBeautyBusiness\"}]},{\"@id\":\"http://schema.org/DrinkAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of swallowing liquids.\",\"rdfs:label\":\"DrinkAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ConsumeAction\"}},{\"@id\":\"http://schema.org/softwareRequirements\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).\",\"rdfs:label\":\"softwareRequirements\"},{\"@id\":\"http://schema.org/DownloadAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of downloading an object.\",\"rdfs:label\":\"DownloadAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/TransferAction\"}},{\"@id\":\"http://schema.org/typeOfGood\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/TypeAndQuantityNode\"},{\"@id\":\"http://schema.org/OwnershipInfo\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Service\"},{\"@id\":\"http://schema.org/Product\"}],\"rdfs:comment\":\"The product that this structured value is referring to.\",\"rdfs:label\":\"typeOfGood\"},{\"@id\":\"http://schema.org/TireShop\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A tire shop.\",\"rdfs:label\":\"TireShop\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/Synagogue\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A synagogue.\",\"rdfs:label\":\"Synagogue\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PlaceOfWorship\"}},{\"@id\":\"http://schema.org/numberOfForwardGears\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Number\"},{\"@id\":\"http://schema.org/QuantitativeValue\"}],\"rdfs:comment\":\"The total number of forward gears available for the transmission system of the vehicle.</p>\\n\\n<p>Typical unit code(s): C62\",\"rdfs:label\":\"numberOfForwardGears\"},{\"@id\":\"http://schema.org/AnimalShelter\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Animal shelter.\",\"rdfs:label\":\"AnimalShelter\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/actionStatus\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Action\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ActionStatusType\"},\"rdfs:comment\":\"Indicates the current disposition of the Action.\",\"rdfs:label\":\"actionStatus\"},{\"@id\":\"http://schema.org/Bakery\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A bakery.\",\"rdfs:label\":\"Bakery\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FoodEstablishment\"}},{\"@id\":\"http://schema.org/audio\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/AudioObject\"},\"rdfs:comment\":\"An embedded audio object.\",\"rdfs:label\":\"audio\"},{\"@id\":\"http://schema.org/deathDate\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"Date of death.\",\"rdfs:label\":\"deathDate\"},{\"@id\":\"http://schema.org/PreOrder\",\"@type\":\"http://schema.org/ItemAvailability\",\"rdfs:comment\":\"Indicates that the item is available for pre-order, but will be delivered when generally available.\",\"rdfs:label\":\"PreOrder\"},{\"@id\":\"http://schema.org/workExample\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/exampleOfWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"rdfs:comment\":\"Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook.\",\"rdfs:label\":\"workExample\"},{\"@id\":\"http://schema.org/HowToSection\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A sub-grouping of steps in the instructions for how to achieve a result (e.g. steps for making a pie crust within a pie recipe).\",\"rdfs:label\":\"HowToSection\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ItemList\"}},{\"@id\":\"http://schema.org/seasons\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/TVSeries\"},{\"@id\":\"http://schema.org/VideoGameSeries\"},{\"@id\":\"http://schema.org/RadioSeries\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWorkSeason\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/season\"},\"rdfs:comment\":\"A season in a media series.\",\"rdfs:label\":\"seasons\"},{\"@id\":\"http://schema.org/MusicAlbum\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A collection of music tracks.\",\"rdfs:label\":\"MusicAlbum\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/MusicPlaylist\"}},{\"@id\":\"http://schema.org/mileageFromOdometer\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"The total distance travelled by the particular vehicle since its initial production, as read from its odometer.</p>\\n\\n<p>Typical unit code(s): KMT for kilometers, SMI for statute miles\",\"rdfs:label\":\"mileageFromOdometer\"},{\"@id\":\"http://schema.org/Person\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews\"},\"http://www.w3.org/2002/07/owl#equivalentClass\":{\"@id\":\"http://xmlns.com/foaf/0.1/Person\"},\"rdfs:comment\":\"A person (alive, dead, undead, or fictional).\",\"rdfs:label\":\"Person\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Thing\"}},{\"@id\":\"http://schema.org/permissions\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi).\",\"rdfs:label\":\"permissions\"},{\"@id\":\"http://schema.org/RsvpResponseYes\",\"@type\":\"http://schema.org/RsvpResponseType\",\"rdfs:comment\":\"The invitee will attend.\",\"rdfs:label\":\"RsvpResponseYes\"},{\"@id\":\"http://schema.org/provider\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Reservation\"},{\"@id\":\"http://schema.org/Invoice\"},{\"@id\":\"http://schema.org/Flight\"},{\"@id\":\"http://schema.org/BusTrip\"},{\"@id\":\"http://schema.org/ParcelDelivery\"},{\"@id\":\"http://schema.org/Service\"},{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/TrainTrip\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.\",\"rdfs:label\":\"provider\"},{\"@id\":\"http://schema.org/DeliveryChargeSpecification\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"The price for the delivery of an offer using a particular delivery method.\",\"rdfs:label\":\"DeliveryChargeSpecification\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PriceSpecification\"}},{\"@id\":\"http://schema.org/screenCount\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MovieTheater\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"The number of screens in the movie theater.\",\"rdfs:label\":\"screenCount\"},{\"@id\":\"http://schema.org/openingHoursSpecification\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/OpeningHoursSpecification\"},\"rdfs:comment\":\"The opening hours of a certain place.\",\"rdfs:label\":\"openingHoursSpecification\"},{\"@id\":\"http://schema.org/occupancy\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Suite\"},{\"@id\":\"http://schema.org/Apartment\"},{\"@id\":\"http://schema.org/HotelRoom\"},{\"@id\":\"http://schema.org/SingleFamilyResidence\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"The allowed total occupancy for the accommodation in persons (including infants etc). For individual accommodations, this is not necessarily the legal maximum but defines the permitted usage as per the contractual agreement (e.g. a double room used by a single person).\\nTypical unit code(s): C62 for person\",\"rdfs:label\":\"occupancy\"},{\"@id\":\"http://schema.org/saturatedFatContent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/NutritionInformation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Mass\"},\"rdfs:comment\":\"The number of grams of saturated fat.\",\"rdfs:label\":\"saturatedFatContent\"},{\"@id\":\"http://schema.org/LendAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of providing an object under an agreement that it will be returned at a later date. Reciprocal of BorrowAction.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/BorrowAction\\\">BorrowAction</a>: Reciprocal of LendAction.</li>\\n</ul>\\n\",\"rdfs:label\":\"LendAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/TransferAction\"}},{\"@id\":\"http://schema.org/availabilityStarts\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Demand\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The beginning of the availability of the product or service included in the offer.\",\"rdfs:label\":\"availabilityStarts\"},{\"@id\":\"http://schema.org/FoodEstablishment\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A food-related business.\",\"rdfs:label\":\"FoodEstablishment\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/encoding\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MediaObject\"},\"rdfs:comment\":\"A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.\",\"rdfs:label\":\"encoding\"},{\"@id\":\"http://schema.org/interactivityType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.\",\"rdfs:label\":\"interactivityType\"},{\"@id\":\"http://schema.org/ListenAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of consuming audio content.\",\"rdfs:label\":\"ListenAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ConsumeAction\"}},{\"@id\":\"http://schema.org/TransferAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of transferring/moving (abstract or concrete) animate or inanimate objects from one place to another.\",\"rdfs:label\":\"TransferAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Action\"}},{\"@id\":\"http://schema.org/SoundtrackAlbum\",\"@type\":\"http://schema.org/MusicAlbumProductionType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"SoundtrackAlbum.\",\"rdfs:label\":\"SoundtrackAlbum\"},{\"@id\":\"http://schema.org/NutritionInformation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Nutritional information about the recipe.\",\"rdfs:label\":\"NutritionInformation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/StructuredValue\"}},{\"@id\":\"http://schema.org/benefits\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/jobBenefits\"},\"rdfs:comment\":\"Description of benefits associated with the job.\",\"rdfs:label\":\"benefits\"},{\"@id\":\"http://schema.org/SiteNavigationElement\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A navigation element of the page.\",\"rdfs:label\":\"SiteNavigationElement\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/WebPageElement\"}},{\"@id\":\"http://schema.org/albums\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicGroup\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MusicAlbum\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/album\"},\"rdfs:comment\":\"A collection of music albums.\",\"rdfs:label\":\"albums\"},{\"@id\":\"http://schema.org/gamePlatform\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/VideoGame\"},{\"@id\":\"http://schema.org/VideoGameSeries\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Thing\"},{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"The electronic systems used to play <a href=\\\"http://en.wikipedia.org/wiki/Category:Video_game_platforms\\\">video games</a>.\",\"rdfs:label\":\"gamePlatform\"},{\"@id\":\"http://schema.org/orderItemStatus\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/OrderItem\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/OrderStatus\"},\"rdfs:comment\":\"The current status of the order item.\",\"rdfs:label\":\"orderItemStatus\"},{\"@id\":\"http://schema.org/Organization\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An organization such as a school, NGO, corporation, club, etc.\",\"rdfs:label\":\"Organization\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Thing\"}},{\"@id\":\"http://schema.org/programMembershipUsed\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Reservation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ProgramMembership\"},\"rdfs:comment\":\"Any membership in a frequent flyer, hotel loyalty program, etc. being applied to the reservation.\",\"rdfs:label\":\"programMembershipUsed\"},{\"@id\":\"http://schema.org/DeleteAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of editing a recipient by removing one of its objects.\",\"rdfs:label\":\"DeleteAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/UpdateAction\"}},{\"@id\":\"http://schema.org/Wednesday\",\"@type\":\"http://schema.org/DayOfWeek\",\"http://schema.org/sameAs\":{\"@id\":\"http://www.wikidata.org/entity/Q128\"},\"rdfs:comment\":\"The day of the week between Tuesday and Thursday.\",\"rdfs:label\":\"Wednesday\"},{\"@id\":\"http://schema.org/trackingUrl\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ParcelDelivery\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"rdfs:comment\":\"Tracking url for the parcel delivery.\",\"rdfs:label\":\"trackingUrl\"},{\"@id\":\"http://schema.org/RefurbishedCondition\",\"@type\":\"http://schema.org/OfferItemCondition\",\"rdfs:comment\":\"Indicates that the item is refurbished.\",\"rdfs:label\":\"RefurbishedCondition\"},{\"@id\":\"http://schema.org/bookEdition\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Book\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The edition of the book.\",\"rdfs:label\":\"bookEdition\"},{\"@id\":\"http://schema.org/TradeAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of participating in an exchange of goods and services for monetary compensation. An agent trades an object, product or service with a participant in exchange for a one time or periodic payment.\",\"rdfs:label\":\"TradeAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Action\"}},{\"@id\":\"http://schema.org/processorRequirements\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Processor architecture required to run the application (e.g. IA64).\",\"rdfs:label\":\"processorRequirements\"},{\"@id\":\"http://schema.org/LegalService\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A LegalService is a business that provides legally-oriented services, advice and representation, e.g. law firms.</p>\\n\\n<p>As a <a class=\\\"localLink\\\" href=\\\"http://schema.org/LocalBusiness\\\">LocalBusiness</a> it can be described as a <a class=\\\"localLink\\\" href=\\\"http://schema.org/provider\\\">provider</a> of one or more <a class=\\\"localLink\\\" href=\\\"http://schema.org/Service\\\">Service</a>(s).\",\"rdfs:label\":\"LegalService\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/grantee\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/DigitalDocumentPermission\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Audience\"},{\"@id\":\"http://schema.org/ContactPoint\"},{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"The person, organization, contact point, or audience that has been granted this permission.\",\"rdfs:label\":\"grantee\"},{\"@id\":\"http://schema.org/RemixAlbum\",\"@type\":\"http://schema.org/MusicAlbumProductionType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"RemixAlbum.\",\"rdfs:label\":\"RemixAlbum\"},{\"@id\":\"http://schema.org/membershipNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ProgramMembership\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A unique identifier for the membership.\",\"rdfs:label\":\"membershipNumber\"},{\"@id\":\"http://schema.org/OrderProcessing\",\"@type\":\"http://schema.org/OrderStatus\",\"rdfs:comment\":\"OrderStatus representing that an order is being processed.\",\"rdfs:label\":\"OrderProcessing\"},{\"@id\":\"http://schema.org/VisualArtwork\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_VisualArtworkClass\"},\"rdfs:comment\":\"A work of art that is primarily visual in character.\",\"rdfs:label\":\"VisualArtwork\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/recipeYield\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Recipe\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/QuantitativeValue\"}],\"rdfs:comment\":\"The quantity produced by the recipe (for example, number of people served, number of servings, etc).\",\"rdfs:label\":\"recipeYield\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/yield\"}},{\"@id\":\"http://schema.org/qualifications\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Specific qualifications required for this role.\",\"rdfs:label\":\"qualifications\"},{\"@id\":\"http://schema.org/gameServer\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/VideoGame\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/game\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/GameServer\"},\"rdfs:comment\":\"The server on which  it is possible to play the game.\",\"rdfs:label\":\"gameServer\"},{\"@id\":\"http://schema.org/arrivalPlatform\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/TrainTrip\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The platform where the train arrives.\",\"rdfs:label\":\"arrivalPlatform\"},{\"@id\":\"http://schema.org/Attorney\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Professional service: Attorney. </p>\\n\\n<p>This type is deprecated - <a class=\\\"localLink\\\" href=\\\"http://schema.org/LegalService\\\">LegalService</a> is more inclusive and less ambiguous.\",\"rdfs:label\":\"Attorney\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LegalService\"}},{\"@id\":\"http://schema.org/RsvpAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of notifying an event organizer as to whether you expect to attend the event.\",\"rdfs:label\":\"RsvpAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/InformAction\"}},{\"@id\":\"http://schema.org/url\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"rdfs:comment\":\"URL of the item.\",\"rdfs:label\":\"url\"},{\"@id\":\"http://schema.org/Rating\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A rating is an evaluation on a numeric scale, such as 1 to 5 stars.\",\"rdfs:label\":\"Rating\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/bed\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Suite\"},{\"@id\":\"http://schema.org/HotelRoom\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/BedDetails\"}],\"rdfs:comment\":\"The type of bed or beds included in the accommodation. For the single case of just one bed of a certain type, you use bed directly with a text.\\n      If you want to indicate the quantity of a certain kind of bed, use an instance of BedDetails. For more detailed information, use the amenityFeature property.\",\"rdfs:label\":\"bed\"},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\",\"@type\":\"http://schema.org/Organization\",\"rdfs:comment\":\"This vocabulary was improved through collaboration with the MusicBrainz project\\n    (<a href=\\\"http://www.musicbrainz.org\\\">www.musicbrainz.org</a>), and is partially inspired by the MusicBrainz and\\n    <a href=\\\"http://musicontology.com/docs/getting-started.html\\\">Music Ontology</a> schemas.\",\"rdfs:label\":\"MBZ\"},{\"@id\":\"http://schema.org/bookFormat\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Book\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/BookFormatType\"},\"rdfs:comment\":\"The format of the book.\",\"rdfs:label\":\"bookFormat\"},{\"@id\":\"http://schema.org/Time\",\"@type\":[\"rdfs:Class\",\"http://schema.org/DataType\"],\"rdfs:comment\":\"A point in time recurring on multiple days in the form hh:mm:ss[Z|(+|-)hh:mm] (see <a href=\\\"http://www.w3.org/TR/xmlschema-2/#time\\\">XML schema for details</a>).\",\"rdfs:label\":\"Time\"},{\"@id\":\"http://schema.org/availableDeliveryMethod\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/Offer\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DeliveryMethod\"},\"rdfs:comment\":\"The delivery method(s) available for this offer.\",\"rdfs:label\":\"availableDeliveryMethod\"},{\"@id\":\"http://schema.org/VegetarianDiet\",\"@type\":\"http://schema.org/RestrictedDiet\",\"rdfs:comment\":\"A diet exclusive of animal meat.\",\"rdfs:label\":\"VegetarianDiet\"},{\"@id\":\"http://schema.org/KosherDiet\",\"@type\":\"http://schema.org/RestrictedDiet\",\"rdfs:comment\":\"A diet conforming to Jewish dietary practices.\",\"rdfs:label\":\"KosherDiet\"},{\"@id\":\"http://schema.org/ApartmentComplex\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Residence type: Apartment complex.\",\"rdfs:label\":\"ApartmentComplex\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Residence\"}},{\"@id\":\"http://schema.org/accessibilitySummary\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://github.com/schemaorg/schemaorg/issues/1100\"},\"http://schema.org/category\":\"issue-1110\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as \\\"short descriptions are present but long descriptions will be needed for non-visual users\\\" or \\\"short descriptions are present and no long descriptions are needed.\\\"\",\"rdfs:label\":\"accessibilitySummary\"},{\"@id\":\"http://schema.org/HousePainter\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A house painting service.\",\"rdfs:label\":\"HousePainter\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/HomeAndConstructionBusiness\"}},{\"@id\":\"http://schema.org/WinAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of achieving victory in a competitive activity.\",\"rdfs:label\":\"WinAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AchieveAction\"}},{\"@id\":\"http://schema.org/MovieRentalStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A movie rental store.\",\"rdfs:label\":\"MovieRentalStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/WatchAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of consuming dynamic/moving visual content.\",\"rdfs:label\":\"WatchAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ConsumeAction\"}},{\"@id\":\"http://schema.org/workFeatured\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Event\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"rdfs:comment\":\"A work featured in some event, e.g. exhibited in an ExhibitionEvent.\\n       Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).\",\"rdfs:label\":\"workFeatured\"},{\"@id\":\"http://schema.org/PropertyValueSpecification\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_ActionCollabClass\"},\"rdfs:comment\":\"A Property value specification.\",\"rdfs:label\":\"PropertyValueSpecification\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/EducationEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Event type: Education event.\",\"rdfs:label\":\"EducationEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/serviceAudience\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Service\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Audience\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/audience\"},\"rdfs:comment\":\"The audience eligible for this service.\",\"rdfs:label\":\"serviceAudience\"},{\"@id\":\"http://schema.org/recipeCategory\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Recipe\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The category of the recipe—for example, appetizer, entree, etc.\",\"rdfs:label\":\"recipeCategory\"},{\"@id\":\"http://schema.org/fatContent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/NutritionInformation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Mass\"},\"rdfs:comment\":\"The number of grams of fat.\",\"rdfs:label\":\"fatContent\"},{\"@id\":\"http://schema.org/character\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"Fictional person connected with a creative work.\",\"rdfs:label\":\"character\"},{\"@id\":\"http://schema.org/ResumeAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of resuming a device or application which was formerly paused (e.g. resume music playback or resume a timer).\",\"rdfs:label\":\"ResumeAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ControlAction\"}},{\"@id\":\"http://schema.org/ToyStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A toy store.\",\"rdfs:label\":\"ToyStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/BedAndBreakfast\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Bed and breakfast.\\n<br /><br />\\nSee also the <a href=\\\"/docs/hotels.html\\\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\",\"rdfs:label\":\"BedAndBreakfast\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LodgingBusiness\"}},{\"@id\":\"http://schema.org/Sunday\",\"@type\":\"http://schema.org/DayOfWeek\",\"http://schema.org/sameAs\":{\"@id\":\"http://www.wikidata.org/entity/Q132\"},\"rdfs:comment\":\"The day of the week between Saturday and Monday.\",\"rdfs:label\":\"Sunday\"},{\"@id\":\"http://schema.org/Suite\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"rdfs:comment\":\"A suite in a hotel or other public accommodation, denotes a class of luxury accommodations, the key feature of which is multiple rooms (Source: Wikipedia, the free encyclopedia, see <a href=\\\"http://en.wikipedia.org/wiki/Suite_(hotel)\\\">http://en.wikipedia.org/wiki/Suite_(hotel)</a>).\\n<br /><br />\\nSee also the <a href=\\\"/docs/hotels.html\\\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\",\"rdfs:label\":\"Suite\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Accommodation\"}},{\"@id\":\"http://schema.org/areaServed\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/ContactPoint\"},{\"@id\":\"http://schema.org/Service\"},{\"@id\":\"http://schema.org/DeliveryChargeSpecification\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/GeoShape\"},{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/AdministrativeArea\"}],\"rdfs:comment\":\"The geographic area where a service or offered item is provided.\",\"rdfs:label\":\"areaServed\"},{\"@id\":\"http://schema.org/postOfficeBoxNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PostalAddress\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The post office box number for PO box addresses.\",\"rdfs:label\":\"postOfficeBoxNumber\"},{\"@id\":\"http://schema.org/audience\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Service\"},{\"@id\":\"http://schema.org/PlayAction\"},{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/Event\"},{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/LodgingBusiness\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Audience\"},\"rdfs:comment\":\"An intended audience, i.e. a group for whom something was created.\",\"rdfs:label\":\"audience\"},{\"@id\":\"http://schema.org/awayTeam\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SportsEvent\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/SportsTeam\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"The away team in a sports event.\",\"rdfs:label\":\"awayTeam\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/competitor\"}},{\"@id\":\"http://schema.org/GenderType\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An enumeration of genders.\",\"rdfs:label\":\"GenderType\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/InstallAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of installing an application.\",\"rdfs:label\":\"InstallAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ConsumeAction\"}},{\"@id\":\"http://schema.org/EventVenue\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An event venue.\",\"rdfs:label\":\"EventVenue\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/providesService\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ServiceChannel\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Service\"},\"rdfs:comment\":\"The service provided by this channel.\",\"rdfs:label\":\"providesService\"},{\"@id\":\"http://schema.org/GiveAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of transferring ownership of an object to a destination. Reciprocal of TakeAction.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/TakeAction\\\">TakeAction</a>: Reciprocal of GiveAction.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/SendAction\\\">SendAction</a>: Unlike SendAction, GiveAction implies that ownership is being transferred (e.g. I may send my laptop to you, but that doesn't mean I'm giving it to you).</li>\\n</ul>\\n\",\"rdfs:label\":\"GiveAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/TransferAction\"}},{\"@id\":\"http://schema.org/instructor\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CourseInstance\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"A person assigned to instruct or provide instructional assistance for the <a class=\\\"localLink\\\" href=\\\"http://schema.org/CourseInstance\\\">CourseInstance</a>.\",\"rdfs:label\":\"instructor\"},{\"@id\":\"http://schema.org/sourceOrganization\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"rdfs:comment\":\"The Organization on whose behalf the creator was working.\",\"rdfs:label\":\"sourceOrganization\"},{\"@id\":\"http://schema.org/remainingAttendeeCapacity\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Event\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"The number of attendee places for an event that remain unallocated.\",\"rdfs:label\":\"remainingAttendeeCapacity\"},{\"@id\":\"http://schema.org/mpn\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Product\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.\",\"rdfs:label\":\"mpn\"},{\"@id\":\"http://schema.org/memberOf\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/member\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/ProgramMembership\"}],\"rdfs:comment\":\"An Organization (or ProgramMembership) to which this Person or Organization belongs.\",\"rdfs:label\":\"memberOf\"},{\"@id\":\"http://schema.org/OrderPickupAvailable\",\"@type\":\"http://schema.org/OrderStatus\",\"rdfs:comment\":\"OrderStatus representing availability of an order for pickup.\",\"rdfs:label\":\"OrderPickupAvailable\"},{\"@id\":\"http://schema.org/BuyAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of giving money to a seller in exchange for goods or services rendered. An agent buys an object, product, or service from a seller for a price. Reciprocal of SellAction.\",\"rdfs:label\":\"BuyAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/TradeAction\"}},{\"@id\":\"http://schema.org/PostOffice\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A post office.\",\"rdfs:label\":\"PostOffice\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/GovernmentOffice\"}},{\"@id\":\"http://schema.org/CheckoutPage\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Web page type: Checkout page.\",\"rdfs:label\":\"CheckoutPage\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/WebPage\"}},{\"@id\":\"http://schema.org/Accommodation\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"rdfs:comment\":\"An accommodation is a place that can accommodate human beings, e.g. a hotel room, a camping pitch, or a meeting room. Many accommodations are for overnight stays, but this is not a mandatory requirement.\\nFor more specific types of accommodations not defined in schema.org, one can use additionalType with external vocabularies.\\n<br /><br />\\nSee also the <a href=\\\"/docs/hotels.html\\\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\",\"rdfs:label\":\"Accommodation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Place\"}},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_ActionCollabClass\",\"@type\":\"http://schema.org/Organization\",\"rdfs:comment\":\"The schema.org Actions mechanism benefited from extensive discussions across the Web standards community around W3C, in particular from the <a href=\\\"http://purl.org/hydra/\\\">Hydra project</a>'s community group.\",\"rdfs:label\":\"ActionCollabClass\"},{\"@id\":\"http://schema.org/isPartOf\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/hasPart\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"rdfs:comment\":\"Indicates a CreativeWork that this CreativeWork is (in some sense) part of.\",\"rdfs:label\":\"isPartOf\"},{\"@id\":\"http://schema.org/LandmarksOrHistoricalBuildings\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An historical landmark or building.\",\"rdfs:label\":\"LandmarksOrHistoricalBuildings\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Place\"}},{\"@id\":\"http://schema.org/actor\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/VideoGame\"},{\"@id\":\"http://schema.org/Event\"},{\"@id\":\"http://schema.org/RadioSeries\"},{\"@id\":\"http://schema.org/Movie\"},{\"@id\":\"http://schema.org/VideoGameSeries\"},{\"@id\":\"http://schema.org/VideoObject\"},{\"@id\":\"http://schema.org/MovieSeries\"},{\"@id\":\"http://schema.org/Clip\"},{\"@id\":\"http://schema.org/TVSeries\"},{\"@id\":\"http://schema.org/Episode\"},{\"@id\":\"http://schema.org/CreativeWorkSeason\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"An actor, e.g. in tv, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip.\",\"rdfs:label\":\"actor\"},{\"@id\":\"http://schema.org/defaultValue\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PropertyValueSpecification\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Thing\"}],\"rdfs:comment\":\"The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.\",\"rdfs:label\":\"defaultValue\"},{\"@id\":\"http://schema.org/DiabeticDiet\",\"@type\":\"http://schema.org/RestrictedDiet\",\"rdfs:comment\":\"A diet appropriate for people with diabetes.\",\"rdfs:label\":\"DiabeticDiet\"},{\"@id\":\"http://schema.org/LiveAlbum\",\"@type\":\"http://schema.org/MusicAlbumProductionType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"LiveAlbum.\",\"rdfs:label\":\"LiveAlbum\"},{\"@id\":\"http://schema.org/beforeMedia\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/HowToDirection\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MediaObject\"},\"rdfs:comment\":\"A media object representing the circumstances before performing this direction.\",\"rdfs:label\":\"beforeMedia\"},{\"@id\":\"http://schema.org/PerformingArtsTheater\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A theater or other performing art center.\",\"rdfs:label\":\"PerformingArtsTheater\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/AggregateOffer\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"When a single product is associated with multiple offers (for example, the same pair of shoes is offered by different merchants), then AggregateOffer can be used.\",\"rdfs:label\":\"AggregateOffer\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Offer\"}},{\"@id\":\"http://schema.org/actionOption\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ChooseAction\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Thing\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"A sub property of object. The options subject to this action.\",\"rdfs:label\":\"actionOption\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/object\"}},{\"@id\":\"http://schema.org/Museum\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A museum.\",\"rdfs:label\":\"Museum\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/height\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/MediaObject\"},{\"@id\":\"http://schema.org/VisualArtwork\"},{\"@id\":\"http://schema.org/Person\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Distance\"},{\"@id\":\"http://schema.org/QuantitativeValue\"}],\"rdfs:comment\":\"The height of the item.\",\"rdfs:label\":\"height\"},{\"@id\":\"http://schema.org/PotentialActionStatus\",\"@type\":\"http://schema.org/ActionStatusType\",\"rdfs:comment\":\"A description of an action that is supported.\",\"rdfs:label\":\"PotentialActionStatus\"},{\"@id\":\"http://schema.org/HowToSupply\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A supply consumed when performing the instructions for how to achieve a result.\",\"rdfs:label\":\"HowToSupply\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/HowToItem\"}},{\"@id\":\"http://schema.org/deliveryAddress\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ParcelDelivery\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/PostalAddress\"},\"rdfs:comment\":\"Destination address.\",\"rdfs:label\":\"deliveryAddress\"},{\"@id\":\"http://schema.org/performers\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Event\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/performer\"},\"rdfs:comment\":\"The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor.\",\"rdfs:label\":\"performers\"},{\"@id\":\"http://schema.org/serialNumber\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/IndividualProduct\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.\",\"rdfs:label\":\"serialNumber\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/identifier\"}},{\"@id\":\"http://schema.org/trackingNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ParcelDelivery\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Shipper tracking number.\",\"rdfs:label\":\"trackingNumber\"},{\"@id\":\"http://schema.org/AutoRepair\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Car repair business.\",\"rdfs:label\":\"AutoRepair\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AutomotiveBusiness\"}},{\"@id\":\"http://schema.org/broadcastTimezone\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BroadcastService\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The timezone in <a href=\\\"http://en.wikipedia.org/wiki/ISO_8601\\\">ISO 8601 format</a> for which the service bases its broadcasts\",\"rdfs:label\":\"broadcastTimezone\"},{\"@id\":\"http://schema.org/ExerciseGym\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A gym.\",\"rdfs:label\":\"ExerciseGym\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/SportsActivityLocation\"}},{\"@id\":\"http://schema.org/Embassy\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An embassy.\",\"rdfs:label\":\"Embassy\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/GovernmentBuilding\"}},{\"@id\":\"http://schema.org/ProfilePage\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Web page type: Profile page.\",\"rdfs:label\":\"ProfilePage\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/WebPage\"}},{\"@id\":\"http://schema.org/DisagreeAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of expressing a difference of opinion with the object. An agent disagrees to/about an object (a proposition, topic or theme) with participants.\",\"rdfs:label\":\"DisagreeAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ReactAction\"}},{\"@id\":\"http://schema.org/partOfSeries\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/CreativeWorkSeason\"},{\"@id\":\"http://schema.org/Episode\"},{\"@id\":\"http://schema.org/Clip\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWorkSeries\"},\"rdfs:comment\":\"The series to which this episode or season belongs.\",\"rdfs:label\":\"partOfSeries\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/isPartOf\"}},{\"@id\":\"http://schema.org/childMaxAge\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ParentAudience\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"Maximal age of the child.\",\"rdfs:label\":\"childMaxAge\"},{\"@id\":\"http://schema.org/includedInDataCatalog\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Dataset\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/dataset\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DataCatalog\"},\"rdfs:comment\":\"A data catalog which contains this dataset.\",\"rdfs:label\":\"includedInDataCatalog\"},{\"@id\":\"http://schema.org/ImageObject\",\"@type\":\"rdfs:Class\",\"http://www.w3.org/2002/07/owl#equivalentClass\":{\"@id\":\"http://purl.org/dc/dcmitype/Image\"},\"rdfs:comment\":\"An image file.\",\"rdfs:label\":\"ImageObject\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/MediaObject\"}},{\"@id\":\"http://schema.org/workLocation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/ContactPoint\"}],\"rdfs:comment\":\"A contact location for a person's place of work.\",\"rdfs:label\":\"workLocation\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/location\"}},{\"@id\":\"http://schema.org/ReservationPackage\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A group of multiple reservations with common values for all sub-reservations.\",\"rdfs:label\":\"ReservationPackage\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Reservation\"}},{\"@id\":\"http://schema.org/FinancialProduct\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO\"},\"rdfs:comment\":\"A product provided to consumers and businesses by financial institutions such as banks, insurance companies, brokerage firms, consumer finance companies, and investment companies which comprise the financial services industry.\",\"rdfs:label\":\"FinancialProduct\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Service\"}},{\"@id\":\"http://schema.org/DigitalDocument\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An electronic file or document.\",\"rdfs:label\":\"DigitalDocument\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/coverageStartTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/LiveBlogPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The time when the live blog will begin covering the Event. Note that coverage may begin before the Event's start time. The LiveBlogPosting may also be created before coverage begins.\",\"rdfs:label\":\"coverageStartTime\"},{\"@id\":\"http://schema.org/HomeAndConstructionBusiness\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A construction business.</p>\\n\\n<p>A HomeAndConstructionBusiness is a <a class=\\\"localLink\\\" href=\\\"http://schema.org/LocalBusiness\\\">LocalBusiness</a> that provides services around homes and buildings.</p>\\n\\n<p>As a <a class=\\\"localLink\\\" href=\\\"http://schema.org/LocalBusiness\\\">LocalBusiness</a> it can be described as a <a class=\\\"localLink\\\" href=\\\"http://schema.org/provider\\\">provider</a> of one or more <a class=\\\"localLink\\\" href=\\\"http://schema.org/Service\\\">Service</a>(s).\",\"rdfs:label\":\"HomeAndConstructionBusiness\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/ProgramMembership\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Used to describe membership in a loyalty programs (e.g. \\\"StarAliance\\\"), traveler clubs (e.g. \\\"AAA\\\"), purchase clubs (\\\"Safeway Club\\\"), etc.\",\"rdfs:label\":\"ProgramMembership\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/ControlAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An agent controls a device or application.\",\"rdfs:label\":\"ControlAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Action\"}},{\"@id\":\"http://schema.org/CheckAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An agent inspects, determines, investigates, inquires, or examines an object's accuracy, quality, condition, or state.\",\"rdfs:label\":\"CheckAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FindAction\"}},{\"@id\":\"http://schema.org/busName\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BusTrip\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The name of the bus (e.g. Bolt Express).\",\"rdfs:label\":\"busName\"},{\"@id\":\"http://schema.org/vehicleInteriorColor\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The color or color combination of the interior of the vehicle.\",\"rdfs:label\":\"vehicleInteriorColor\"},{\"@id\":\"http://schema.org/browserRequirements\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/WebApplication\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Specifies browser requirements in human-readable text. For example, 'requires HTML5 support'.\",\"rdfs:label\":\"browserRequirements\"},{\"@id\":\"http://schema.org/floorSize\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Accommodation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"The size of the accommodation, e.g. in square meter or squarefoot.\\nTypical unit code(s): MTK for square meter, FTK for square foot, or YDK for square yard\",\"rdfs:label\":\"floorSize\"},{\"@id\":\"http://schema.org/appliesToPaymentMethod\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PaymentChargeSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/PaymentMethod\"},\"rdfs:comment\":\"The payment method(s) to which the payment charge specification applies.\",\"rdfs:label\":\"appliesToPaymentMethod\"},{\"@id\":\"http://schema.org/EPRelease\",\"@type\":\"http://schema.org/MusicAlbumReleaseType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"EPRelease.\",\"rdfs:label\":\"EPRelease\"},{\"@id\":\"http://schema.org/BroadcastRelease\",\"@type\":\"http://schema.org/MusicAlbumReleaseType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"BroadcastRelease.\",\"rdfs:label\":\"BroadcastRelease\"},{\"@id\":\"http://schema.org/departureBusStop\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BusTrip\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/BusStation\"},{\"@id\":\"http://schema.org/BusStop\"}],\"rdfs:comment\":\"The stop or station from which the bus departs.\",\"rdfs:label\":\"departureBusStop\"},{\"@id\":\"http://schema.org/DiscussionForumPosting\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A posting to a discussion forum.\",\"rdfs:label\":\"DiscussionForumPosting\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/SocialMediaPosting\"}},{\"@id\":\"http://schema.org/bitrate\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MediaObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The bitrate of the media object.\",\"rdfs:label\":\"bitrate\"},{\"@id\":\"http://schema.org/events\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Place\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Event\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/event\"},\"rdfs:comment\":\"Upcoming or past events associated with this place or organization.\",\"rdfs:label\":\"events\"},{\"@id\":\"http://schema.org/TouristAttraction\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":[{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Tourism\"},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#IIT-CNR.it\"}],\"rdfs:comment\":\"A tourist attraction.  In principle any Thing can be a <a class=\\\"localLink\\\" href=\\\"http://schema.org/TouristAttraction\\\">TouristAttraction</a>, from a <a class=\\\"localLink\\\" href=\\\"http://schema.org/Mountain\\\">Mountain</a> and <a class=\\\"localLink\\\" href=\\\"http://schema.org/LandmarksOrHistoricalBuildings\\\">LandmarksOrHistoricalBuildings</a> to a <a class=\\\"localLink\\\" href=\\\"http://schema.org/LocalBusiness\\\">LocalBusiness</a>.  This Type can be used on its own to describe a general <a class=\\\"localLink\\\" href=\\\"http://schema.org/TourstAttraction\\\">TourstAttraction</a>, or be used as an <a class=\\\"localLink\\\" href=\\\"http://schema.org/additionalType\\\">additionalType</a> to add tourist attraction properties to any other type.  (See examples below)\",\"rdfs:label\":\"TouristAttraction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Place\"}},{\"@id\":\"http://schema.org/Car\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"rdfs:comment\":\"A car is a wheeled, self-powered motor vehicle used for transportation.\",\"rdfs:label\":\"Car\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Vehicle\"}},{\"@id\":\"http://schema.org/PriceSpecification\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"A structured value representing a price or price range. Typically, only the subclasses of this type are used for markup. It is recommended to use <a class=\\\"localLink\\\" href=\\\"http://schema.org/MonetaryAmount\\\">MonetaryAmount</a> to describe independent amounts of money such as a salary, credit card limits, etc.\",\"rdfs:label\":\"PriceSpecification\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/StructuredValue\"}},{\"@id\":\"http://schema.org/netWorth\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/MonetaryAmount\"},{\"@id\":\"http://schema.org/PriceSpecification\"}],\"rdfs:comment\":\"The total financial value of the person as calculated by subtracting assets from liabilities.\",\"rdfs:label\":\"netWorth\"},{\"@id\":\"http://schema.org/videoFormat\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/BroadcastService\"},{\"@id\":\"http://schema.org/BroadcastEvent\"},{\"@id\":\"http://schema.org/ScreeningEvent\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The type of screening or video broadcast used (e.g. IMAX, 3D, SD, HD, etc.).\",\"rdfs:label\":\"videoFormat\"},{\"@id\":\"http://schema.org/Season\",\"@type\":\"rdfs:Class\",\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/CreativeWorkSeason\"},\"rdfs:comment\":\"A media season e.g. tv, radio, video game etc.\",\"rdfs:label\":\"Season\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/ineligibleRegion\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/DeliveryChargeSpecification\"},{\"@id\":\"http://schema.org/Demand\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/GeoShape\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.</p>\\n\\n<p>See also <a class=\\\"localLink\\\" href=\\\"http://schema.org/eligibleRegion\\\">eligibleRegion</a>.\",\"rdfs:label\":\"ineligibleRegion\"},{\"@id\":\"http://schema.org/servesCuisine\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/FoodEstablishment\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The cuisine of the restaurant.\",\"rdfs:label\":\"servesCuisine\"},{\"@id\":\"http://schema.org/DrawAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of producing a visual/graphical representation of an object, typically with a pen/pencil and paper as instruments.\",\"rdfs:label\":\"DrawAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreateAction\"}},{\"@id\":\"http://schema.org/paymentDue\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Order\"},{\"@id\":\"http://schema.org/Invoice\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/paymentDueDate\"},\"rdfs:comment\":\"The date that payment is due.\",\"rdfs:label\":\"paymentDue\"},{\"@id\":\"http://schema.org/PaymentCard\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO\"},\"rdfs:comment\":\"A payment method using a credit, debit, store or other card to associate the payment with an account.\",\"rdfs:label\":\"PaymentCard\",\"rdfs:subClassOf\":[{\"@id\":\"http://schema.org/FinancialProduct\"},{\"@id\":\"http://schema.org/PaymentMethod\"}]},{\"@id\":\"http://schema.org/numberOfEpisodes\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/TVSeries\"},{\"@id\":\"http://schema.org/CreativeWorkSeason\"},{\"@id\":\"http://schema.org/VideoGameSeries\"},{\"@id\":\"http://schema.org/RadioSeries\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"The number of episodes in this season or series.\",\"rdfs:label\":\"numberOfEpisodes\"},{\"@id\":\"http://schema.org/PublicationVolume\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex\"},\"rdfs:comment\":\"<p>A part of a successively published publication such as a periodical or multi-volume work, often numbered. It may represent a time span, such as a year.</p>\\n\\n<pre><code>  &lt;br/&gt;&lt;br/&gt;See also &lt;a href=\\\"http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html\\\"&gt;blog post&lt;/a&gt;.\\n</code></pre>\\n\",\"rdfs:label\":\"PublicationVolume\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/LocalBusiness\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A particular physical business or branch of an organization. Examples of LocalBusiness include a restaurant, a particular branch of a restaurant chain, a branch of a bank, a medical practice, a club, a bowling alley, etc.\",\"rdfs:label\":\"LocalBusiness\",\"rdfs:subClassOf\":[{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/Organization\"}]},{\"@id\":\"http://schema.org/requiresSubscription\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MediaObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Boolean\"},\"rdfs:comment\":\"Indicates if use of the media require a subscription  (either paid or free). Allowed values are <code>true</code> or <code>false</code> (note that an earlier version had 'yes', 'no').\",\"rdfs:label\":\"requiresSubscription\"},{\"@id\":\"http://schema.org/CancelAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of asserting that a future event/action is no longer going to happen.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/ConfirmAction\\\">ConfirmAction</a>: The antonym of CancelAction.</li>\\n</ul>\\n\",\"rdfs:label\":\"CancelAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PlanAction\"}},{\"@id\":\"http://schema.org/RsvpResponseMaybe\",\"@type\":\"http://schema.org/RsvpResponseType\",\"rdfs:comment\":\"The invitee may or may not attend.\",\"rdfs:label\":\"RsvpResponseMaybe\"},{\"@id\":\"http://schema.org/minValue\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/PropertyValue\"},{\"@id\":\"http://schema.org/MonetaryAmount\"},{\"@id\":\"http://schema.org/QuantitativeValue\"},{\"@id\":\"http://schema.org/PropertyValueSpecification\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"The lower value of some characteristic or property.\",\"rdfs:label\":\"minValue\"},{\"@id\":\"http://schema.org/actionApplication\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/EntryPoint\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"rdfs:comment\":\"An application that can complete the request.\",\"rdfs:label\":\"actionApplication\"},{\"@id\":\"http://schema.org/trailer\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Movie\"},{\"@id\":\"http://schema.org/VideoGame\"},{\"@id\":\"http://schema.org/MovieSeries\"},{\"@id\":\"http://schema.org/TVSeries\"},{\"@id\":\"http://schema.org/Episode\"},{\"@id\":\"http://schema.org/CreativeWorkSeason\"},{\"@id\":\"http://schema.org/VideoGameSeries\"},{\"@id\":\"http://schema.org/RadioSeries\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/VideoObject\"},\"rdfs:comment\":\"The trailer of a movie or tv/radio series, season, episode, etc.\",\"rdfs:label\":\"trailer\"},{\"@id\":\"http://schema.org/IgnoreAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of intentionally disregarding the object. An agent ignores an object.\",\"rdfs:label\":\"IgnoreAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AssessAction\"}},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO\",\"@type\":\"http://schema.org/Organization\",\"rdfs:comment\":\"This element is based on the work of the Financial Industry Business Ontology project (see <a href=\\\"http://www.fibo.org/schema\\\">http://www.fibo.org/schema</a> for details), in support of the W3C Financial Industry Business Ontology Community Group (<a href=\\\"http://www.fibo.org/community\\\">http://www.fibo.org/community</a>). Many class and property definitions are inspired by or based on <a href=\\\"http://www.fibo.org\\\">http://www.fibo.org</a>.\",\"rdfs:label\":\"FIBO\"},{\"@id\":\"http://schema.org/steeringPosition\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/SteeringPositionValue\"},\"rdfs:comment\":\"The position of the steering wheel or similar device (mostly for cars).\",\"rdfs:label\":\"steeringPosition\"},{\"@id\":\"http://schema.org/MusicRecording\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A music recording (track), usually a single song.\",\"rdfs:label\":\"MusicRecording\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/arrivalGate\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Flight\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Identifier of the flight's arrival gate.\",\"rdfs:label\":\"arrivalGate\"},{\"@id\":\"http://schema.org/loanTerm\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/LoanOrCredit\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"The duration of the loan or credit agreement.\",\"rdfs:label\":\"loanTerm\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/duration\"}},{\"@id\":\"http://schema.org/target\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Action\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/EntryPoint\"},\"rdfs:comment\":\"Indicates a target EntryPoint for an Action.\",\"rdfs:label\":\"target\"},{\"@id\":\"http://schema.org/includedComposition\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicComposition\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MusicComposition\"},\"rdfs:comment\":\"Smaller compositions included in this work (e.g. a movement in a symphony).\",\"rdfs:label\":\"includedComposition\"},{\"@id\":\"http://schema.org/line\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/GeoShape\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space.\",\"rdfs:label\":\"line\"},{\"@id\":\"http://schema.org/minPrice\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PriceSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"The lowest price if the price is a range.\",\"rdfs:label\":\"minPrice\"},{\"@id\":\"http://schema.org/MotorcycleDealer\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A motorcycle dealer.\",\"rdfs:label\":\"MotorcycleDealer\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AutomotiveBusiness\"}},{\"@id\":\"http://schema.org/regionsAllowed\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MediaObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"rdfs:comment\":\"The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in <a href=\\\"http://en.wikipedia.org/wiki/ISO_3166\\\">ISO 3166 format</a>.\",\"rdfs:label\":\"regionsAllowed\"},{\"@id\":\"http://schema.org/CheckOutAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of an agent communicating (service provider, social media, etc) their departure of a previously reserved service (e.g. flight check in) or place (e.g. hotel).</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/CheckInAction\\\">CheckInAction</a>: The antonym of CheckOutAction.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/DepartAction\\\">DepartAction</a>: Unlike DepartAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/CancelAction\\\">CancelAction</a>: Unlike CancelAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.</li>\\n</ul>\\n\",\"rdfs:label\":\"CheckOutAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CommunicateAction\"}},{\"@id\":\"http://schema.org/priceRange\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/LocalBusiness\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The price range of the business, for example <code>$$$</code>.\",\"rdfs:label\":\"priceRange\"},{\"@id\":\"http://schema.org/BankAccount\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO\"},\"rdfs:comment\":\"A product or service offered by a bank whereby one may deposit, withdraw or transfer money and in some cases be paid interest.\",\"rdfs:label\":\"BankAccount\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FinancialProduct\"}},{\"@id\":\"http://schema.org/Duration\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Quantity: Duration (use <a href=\\\"http://en.wikipedia.org/wiki/ISO_8601\\\">ISO 8601 duration format</a>).\",\"rdfs:label\":\"Duration\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Quantity\"}},{\"@id\":\"http://schema.org/RealEstateAgent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A real-estate agent.\",\"rdfs:label\":\"RealEstateAgent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/children\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"A child of the person.\",\"rdfs:label\":\"children\"},{\"@id\":\"http://schema.org/MapCategoryType\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An enumeration of several kinds of Map.\",\"rdfs:label\":\"MapCategoryType\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/SportsOrganization\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Represents the collection of all sports organizations, including sports teams, governing bodies, and sports associations.\",\"rdfs:label\":\"SportsOrganization\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Organization\"}},{\"@id\":\"http://schema.org/EndorseAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An agent approves/certifies/likes/supports/sanction an object.\",\"rdfs:label\":\"EndorseAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ReactAction\"}},{\"@id\":\"http://schema.org/EducationalOrganization\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An educational organization.\",\"rdfs:label\":\"EducationalOrganization\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Organization\"}},{\"@id\":\"http://schema.org/orderNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Order\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The identifier of the transaction.\",\"rdfs:label\":\"orderNumber\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/identifier\"}},{\"@id\":\"http://schema.org/gtin8\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/Offer\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The <a href=\\\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx\\\">GTIN-8</a> code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See <a href=\\\"http://www.gs1.org/barcodes/technical/idkeys/gtin\\\">GS1 GTIN Summary</a> for more details.\",\"rdfs:label\":\"gtin8\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/identifier\"}},{\"@id\":\"http://schema.org/image\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/ImageObject\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"An image of the item. This can be a <a class=\\\"localLink\\\" href=\\\"http://schema.org/URL\\\">URL</a> or a fully described <a class=\\\"localLink\\\" href=\\\"http://schema.org/ImageObject\\\">ImageObject</a>.\",\"rdfs:label\":\"image\"},{\"@id\":\"http://schema.org/CableOrSatelliteService\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A service which provides access to media programming like TV or radio. Access may be via cable or satellite.\",\"rdfs:label\":\"CableOrSatelliteService\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Service\"}},{\"@id\":\"http://schema.org/endDate\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/CreativeWorkSeries\"},{\"@id\":\"http://schema.org/DatedMoneySpecification\"},{\"@id\":\"http://schema.org/Event\"},{\"@id\":\"http://schema.org/CreativeWorkSeason\"},{\"@id\":\"http://schema.org/Role\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Date\"},{\"@id\":\"http://schema.org/DateTime\"}],\"rdfs:comment\":\"The end date and time of the item (in <a href=\\\"http://en.wikipedia.org/wiki/ISO_8601\\\">ISO 8601 date format</a>).\",\"rdfs:label\":\"endDate\"},{\"@id\":\"http://schema.org/annualPercentageRate\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/FinancialProduct\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/QuantitativeValue\"},{\"@id\":\"http://schema.org/Number\"}],\"rdfs:comment\":\"The annual rate that is charged for borrowing (or made by investing), expressed as a single percentage number that represents the actual yearly cost of funds over the term of a loan. This includes any fees or additional costs associated with the transaction.\",\"rdfs:label\":\"annualPercentageRate\"},{\"@id\":\"http://schema.org/HinduTemple\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A Hindu temple.\",\"rdfs:label\":\"HinduTemple\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PlaceOfWorship\"}},{\"@id\":\"http://schema.org/TVSeason\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Season dedicated to TV broadcast and associated online delivery.\",\"rdfs:label\":\"TVSeason\",\"rdfs:subClassOf\":[{\"@id\":\"http://schema.org/CreativeWorkSeason\"},{\"@id\":\"http://schema.org/CreativeWork\"}]},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\",\"@type\":\"http://schema.org/Organization\",\"rdfs:comment\":\"This term <a href=\\\"http://blog.schema.org/2012/11/good-relations-and-schemaorg.html\\\">uses</a> terminology from the GoodRelations Vocabulary for E-Commerce, created by Martin Hepp. GoodRelations is a data model for sharing e-commerce data on the Web. More information about GoodRelations can be found at <a href=\\\"http://purl.org/goodrelations/\\\">http://purl.org/goodrelations/</a>.\",\"rdfs:label\":\"GoodRelationsTerms\"},{\"@id\":\"http://schema.org/SearchResultsPage\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Web page type: Search results page.\",\"rdfs:label\":\"SearchResultsPage\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/WebPage\"}},{\"@id\":\"http://schema.org/UserBlocks\",\"@type\":\"rdfs:Class\",\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/InteractionCounter\"},\"rdfs:comment\":\"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\\\"localLink\\\" href=\\\"http://schema.org/Action\\\">Action</a>-based vocabulary, alongside types such as <a class=\\\"localLink\\\" href=\\\"http://schema.org/Comment\\\">Comment</a>.\",\"rdfs:label\":\"UserBlocks\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/UserInteraction\"}},{\"@id\":\"http://schema.org/hasDeliveryMethod\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/DeliveryEvent\"},{\"@id\":\"http://schema.org/ParcelDelivery\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DeliveryMethod\"},\"rdfs:comment\":\"Method used for delivery or shipping.\",\"rdfs:label\":\"hasDeliveryMethod\"},{\"@id\":\"http://schema.org/DanceEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Event type: A social dance.\",\"rdfs:label\":\"DanceEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/flightNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Flight\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The unique identifier for a flight including the airline IATA code. For example, if describing United flight 110, where the IATA code for United is 'UA', the flightNumber is 'UA110'.\",\"rdfs:label\":\"flightNumber\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/identifier\"}},{\"@id\":\"http://schema.org/season\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/RadioSeries\"},{\"@id\":\"http://schema.org/VideoGameSeries\"},{\"@id\":\"http://schema.org/TVSeries\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWorkSeason\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/containsSeason\"},\"rdfs:comment\":\"A season in a media series.\",\"rdfs:label\":\"season\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/hasPart\"}},{\"@id\":\"http://schema.org/itemListElement\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ItemList\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/ListItem\"},{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Thing\"}],\"rdfs:comment\":\"For itemListElement values, you can use simple strings (e.g. \\\"Peter\\\", \\\"Paul\\\", \\\"Mary\\\"), existing entities, or use ListItem.</p>\\n\\n<p>Text values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists.</p>\\n\\n<p>Note: The order of elements in your mark-up is not sufficient for indicating the order or elements.  Use ListItem with a 'position' property in such cases.\",\"rdfs:label\":\"itemListElement\"},{\"@id\":\"http://schema.org/paymentUrl\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Order\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"rdfs:comment\":\"The URL for sending a payment.\",\"rdfs:label\":\"paymentUrl\"},{\"@id\":\"http://schema.org/greater\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/QualitativeValue\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QualitativeValue\"},\"rdfs:comment\":\"This ordering relation for qualitative values indicates that the subject is greater than the object.\",\"rdfs:label\":\"greater\"},{\"@id\":\"http://schema.org/blogPosts\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Blog\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/BlogPosting\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/blogPost\"},\"rdfs:comment\":\"The postings that are part of this blog.\",\"rdfs:label\":\"blogPosts\"},{\"@id\":\"http://schema.org/artMedium\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/VisualArtwork\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"The material used. (e.g. Oil, Watercolour, Acrylic, Linoprint, Marble, Cyanotype, Digital, Lithograph, DryPoint, Intaglio, Pastel, Woodcut, Pencil, Mixed Media, etc.)\",\"rdfs:label\":\"artMedium\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/material\"}},{\"@id\":\"http://schema.org/partOfEpisode\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Clip\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Episode\"},\"rdfs:comment\":\"The episode to which this clip belongs.\",\"rdfs:label\":\"partOfEpisode\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/isPartOf\"}},{\"@id\":\"http://schema.org/BookStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A bookstore.\",\"rdfs:label\":\"BookStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/orderStatus\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Order\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/OrderStatus\"},\"rdfs:comment\":\"The current status of the order.\",\"rdfs:label\":\"orderStatus\"},{\"@id\":\"http://schema.org/prepTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/HowToDirection\"},{\"@id\":\"http://schema.org/HowTo\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Duration\"},\"rdfs:comment\":\"The length of time it takes to prepare the items to be used in instructions or a direction, in <a href=\\\"http://en.wikipedia.org/wiki/ISO_8601\\\">ISO 8601 duration format</a>.\",\"rdfs:label\":\"prepTime\"},{\"@id\":\"http://schema.org/recordLabel\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicRelease\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"http://www.w3.org/2002/07/owl#equivalentProperty\":{\"@id\":\"http://purl.org/ontology/mo/label\"},\"rdfs:comment\":\"The label that issued the release.\",\"rdfs:label\":\"recordLabel\"},{\"@id\":\"http://schema.org/agent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Action\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book.\",\"rdfs:label\":\"agent\"},{\"@id\":\"http://schema.org/reservationStatus\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Reservation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ReservationStatusType\"},\"rdfs:comment\":\"The current status of the reservation.\",\"rdfs:label\":\"reservationStatus\"},{\"@id\":\"http://schema.org/namedPosition\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Role\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Text\"}],\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/roleName\"},\"rdfs:comment\":\"A position played, performed or filled by a person or organization, as part of an organization. For example, an athlete in a SportsTeam might play in the position named 'Quarterback'.\",\"rdfs:label\":\"namedPosition\"},{\"@id\":\"http://schema.org/validFor\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Permit\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Duration\"},\"rdfs:comment\":\"The time validity of the permit.\",\"rdfs:label\":\"validFor\"},{\"@id\":\"http://schema.org/EntryPoint\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_ActionCollabClass\"},\"rdfs:comment\":\"An entry point, within some Web-based protocol.\",\"rdfs:label\":\"EntryPoint\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/SaleEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Event type: Sales event.\",\"rdfs:label\":\"SaleEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/FoodEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Event type: Food event.\",\"rdfs:label\":\"FoodEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/DigitalDocumentPermission\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A permission for a particular person or group to access a particular file.\",\"rdfs:label\":\"DigitalDocumentPermission\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/incentiveCompensation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Description of bonus and commission compensation aspects of the job.\",\"rdfs:label\":\"incentiveCompensation\"},{\"@id\":\"http://schema.org/OutletStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An outlet store.\",\"rdfs:label\":\"OutletStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/reviewRating\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Review\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Rating\"},\"rdfs:comment\":\"The rating given in this review. Note that reviews can themselves be rated. The <code>reviewRating</code> applies to rating given by the review. The <a class=\\\"localLink\\\" href=\\\"http://schema.org/aggregateRating\\\">aggregateRating</a> property applies to the review itself, as a creative work.\",\"rdfs:label\":\"reviewRating\"},{\"@id\":\"http://schema.org/jobTitle\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The job title of the person (for example, Financial Manager).\",\"rdfs:label\":\"jobTitle\"},{\"@id\":\"http://schema.org/propertyID\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PropertyValue\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"A commonly used identifier for the characteristic represented by the property, e.g. a manufacturer or a standard code for a property. propertyID can be\\n(1) a prefixed string, mainly meant to be used with standards for product properties; (2) a site-specific, non-prefixed string (e.g. the primary key of the property or the vendor-specific id of the property), or (3)\\na URL indicating the type of the property, either pointing to an external vocabulary, or a Web resource that describes the property (e.g. a glossary entry).\\nStandards bodies should promote a standard prefix for the identifiers of properties from their standards.\",\"rdfs:label\":\"propertyID\"},{\"@id\":\"http://schema.org/appliesToDeliveryMethod\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/PaymentChargeSpecification\"},{\"@id\":\"http://schema.org/DeliveryChargeSpecification\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DeliveryMethod\"},\"rdfs:comment\":\"The delivery method(s) to which the delivery charge or payment charge specification applies.\",\"rdfs:label\":\"appliesToDeliveryMethod\"},{\"@id\":\"http://schema.org/InviteAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of asking someone to attend an event. Reciprocal of RsvpAction.\",\"rdfs:label\":\"InviteAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CommunicateAction\"}},{\"@id\":\"http://schema.org/LowFatDiet\",\"@type\":\"http://schema.org/RestrictedDiet\",\"rdfs:comment\":\"A diet focused on reduced fat and cholesterol intake.\",\"rdfs:label\":\"LowFatDiet\"},{\"@id\":\"http://schema.org/video\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/VideoObject\"},\"rdfs:comment\":\"An embedded video object.\",\"rdfs:label\":\"video\"},{\"@id\":\"http://schema.org/targetProduct\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareSourceCode\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"rdfs:comment\":\"Target Operating System / Product to which the code applies.  If applies to several versions, just the product name can be used.\",\"rdfs:label\":\"targetProduct\"},{\"@id\":\"http://schema.org/episodes\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/RadioSeries\"},{\"@id\":\"http://schema.org/CreativeWorkSeason\"},{\"@id\":\"http://schema.org/TVSeries\"},{\"@id\":\"http://schema.org/VideoGameSeries\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Episode\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/episode\"},\"rdfs:comment\":\"An episode of a TV/radio series or season.\",\"rdfs:label\":\"episodes\"},{\"@id\":\"http://schema.org/course\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ExerciseAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/exerciseCourse\"},\"rdfs:comment\":\"A sub property of location. The course where this action was taken.\",\"rdfs:label\":\"course\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/location\"}},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#GLEIF\",\"@type\":\"http://schema.org/Organization\",\"rdfs:comment\":\"The implementation and use of Legal Entity Identifier (LEI) is supported by Global Legal Entity Identifier Foundation <a href=\\\"https://www.gleif.org\\\">https://www.gleif.org</a>.\",\"rdfs:label\":\"GLEIF\"},{\"@id\":\"http://schema.org/TVEpisode\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A TV episode which can be part of a series or season.\",\"rdfs:label\":\"TVEpisode\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Episode\"}},{\"@id\":\"http://schema.org/MusicGroup\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A musical group, such as a band, an orchestra, or a choir. Can also be a solo musician.\",\"rdfs:label\":\"MusicGroup\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PerformingGroup\"}},{\"@id\":\"http://schema.org/AmusementPark\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An amusement park.\",\"rdfs:label\":\"AmusementPark\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/EntertainmentBusiness\"}},{\"@id\":\"http://schema.org/ContactPointOption\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Enumerated options related to a ContactPoint.\",\"rdfs:label\":\"ContactPointOption\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/doorTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Event\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The time admission will commence.\",\"rdfs:label\":\"doorTime\"},{\"@id\":\"http://schema.org/subOrganization\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/parentOrganization\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"rdfs:comment\":\"A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.\",\"rdfs:label\":\"subOrganization\"},{\"@id\":\"http://schema.org/dateRead\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Message\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The date/time at which the message has been read by the recipient if a single recipient exists.\",\"rdfs:label\":\"dateRead\"},{\"@id\":\"http://schema.org/publisher\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"The publisher of the creative work.\",\"rdfs:label\":\"publisher\"},{\"@id\":\"http://schema.org/workHours\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The typical working hours for this job (e.g. 1st shift, night shift, 8am-5pm).\",\"rdfs:label\":\"workHours\"},{\"@id\":\"http://schema.org/MobilePhoneStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A store that sells mobile phones and related accessories.\",\"rdfs:label\":\"MobilePhoneStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/Casino\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A casino.\",\"rdfs:label\":\"Casino\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/EntertainmentBusiness\"}},{\"@id\":\"http://schema.org/HearingImpairedSupported\",\"@type\":\"http://schema.org/ContactPointOption\",\"rdfs:comment\":\"Uses devices to support users with hearing impairments.\",\"rdfs:label\":\"HearingImpairedSupported\"},{\"@id\":\"http://schema.org/broadcastServiceTier\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BroadcastChannel\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The type of service required to have access to the channel (e.g. Standard or Premium).\",\"rdfs:label\":\"broadcastServiceTier\"},{\"@id\":\"http://schema.org/startTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/FoodEstablishmentReservation\"},{\"@id\":\"http://schema.org/Action\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\\n\\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.\",\"rdfs:label\":\"startTime\"},{\"@id\":\"http://schema.org/SubscribeAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates pushed to.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/FollowAction\\\">FollowAction</a>: Unlike FollowAction, SubscribeAction implies that the subscriber acts as a passive agent being constantly/actively pushed for updates.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/RegisterAction\\\">RegisterAction</a>: Unlike RegisterAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/JoinAction\\\">JoinAction</a>: Unlike JoinAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.</li>\\n</ul>\\n\",\"rdfs:label\":\"SubscribeAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/InteractAction\"}},{\"@id\":\"http://schema.org/isrcCode\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicRecording\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The International Standard Recording Code for the recording.\",\"rdfs:label\":\"isrcCode\"},{\"@id\":\"http://schema.org/hasOfferCatalog\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Service\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/OfferCatalog\"},\"rdfs:comment\":\"Indicates an OfferCatalog listing for this Organization, Person, or Service.\",\"rdfs:label\":\"hasOfferCatalog\"},{\"@id\":\"http://schema.org/additionalType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"rdfs:comment\":\"An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.\",\"rdfs:label\":\"additionalType\",\"rdfs:subPropertyOf\":{\"@id\":\"rdf:type\"}},{\"@id\":\"http://schema.org/valuePattern\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PropertyValueSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Specifies a regular expression for testing literal values according to the HTML spec.\",\"rdfs:label\":\"valuePattern\"},{\"@id\":\"http://schema.org/publication\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/PublicationEvent\"},\"rdfs:comment\":\"A publication event associated with the item.\",\"rdfs:label\":\"publication\"},{\"@id\":\"http://schema.org/underName\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Reservation\"},{\"@id\":\"http://schema.org/Ticket\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"The person or organization the reservation or ticket is for.\",\"rdfs:label\":\"underName\"},{\"@id\":\"http://schema.org/BusinessEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Event type: Business event.\",\"rdfs:label\":\"BusinessEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/broadcastAffiliateOf\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BroadcastService\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"rdfs:comment\":\"The media network(s) whose content is broadcast on this station.\",\"rdfs:label\":\"broadcastAffiliateOf\"},{\"@id\":\"http://schema.org/RiverBodyOfWater\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A river (for example, the broad majestic Shannon).\",\"rdfs:label\":\"RiverBodyOfWater\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/BodyOfWater\"}},{\"@id\":\"http://schema.org/vehicleEngine\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/EngineSpecification\"},\"rdfs:comment\":\"Information about the engine or engines of the vehicle.\",\"rdfs:label\":\"vehicleEngine\"},{\"@id\":\"http://schema.org/GameServer\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Server that provides game interaction in a multiplayer game.\",\"rdfs:label\":\"GameServer\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/DepositAccount\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO\"},\"rdfs:comment\":\"A type of Bank Account with a main purpose of depositing funds to gain interest or other benefits.\",\"rdfs:label\":\"DepositAccount\",\"rdfs:subClassOf\":[{\"@id\":\"http://schema.org/InvestmentOrDeposit\"},{\"@id\":\"http://schema.org/BankAccount\"}]},{\"@id\":\"http://schema.org/DigitalDocumentPermissionType\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A type of permission which can be granted for accessing a digital document.\",\"rdfs:label\":\"DigitalDocumentPermissionType\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/Motel\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A motel.\\n<br /><br />\\nSee also the <a href=\\\"/docs/hotels.html\\\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\",\"rdfs:label\":\"Motel\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LodgingBusiness\"}},{\"@id\":\"http://schema.org/WPAdBlock\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An advertising section of the page.\",\"rdfs:label\":\"WPAdBlock\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/WebPageElement\"}},{\"@id\":\"http://schema.org/text\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The textual content of this CreativeWork.\",\"rdfs:label\":\"text\"},{\"@id\":\"http://schema.org/deathPlace\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"rdfs:comment\":\"The place where the person died.\",\"rdfs:label\":\"deathPlace\"},{\"@id\":\"http://schema.org/name\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The name of the item.\",\"rdfs:label\":\"name\"},{\"@id\":\"http://schema.org/loser\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/WinAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"A sub property of participant. The loser of the action.\",\"rdfs:label\":\"loser\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/participant\"}},{\"@id\":\"http://schema.org/MultiPlayer\",\"@type\":\"http://schema.org/GamePlayMode\",\"rdfs:comment\":\"Play mode: MultiPlayer. Requiring or allowing multiple human players to play simultaneously.\",\"rdfs:label\":\"MultiPlayer\"},{\"@id\":\"http://schema.org/ChildCare\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A Childcare center.\",\"rdfs:label\":\"ChildCare\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/smokingAllowed\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Boolean\"},\"rdfs:comment\":\"Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.\",\"rdfs:label\":\"smokingAllowed\"},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex\",\"@type\":\"http://schema.org/Organization\",\"rdfs:comment\":\"The W3C <a href=\\\"http://www.w3.org/community/schemabibex/\\\">Schema Bib Extend</a> (BibEx) group led the work to improve schema.org for bibliographic information, including terms for periodicals, articles and multi-volume works. The design was inspired in places (e.g. <a class=\\\"localLink\\\" href=\\\"http://schema.org/pageStart\\\">pageStart</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/pageEnd\\\">pageEnd</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/pagination\\\">pagination</a>) by the <a href=\\\"http://bibliontology.com/\\\">Bibliographic Ontology</a>, 'bibo'.\",\"rdfs:label\":\"BibExTerm\"},{\"@id\":\"http://schema.org/globalLocationNumber\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/Organization\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The <a href=\\\"http://www.gs1.org/gln\\\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.\",\"rdfs:label\":\"globalLocationNumber\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/identifier\"}},{\"@id\":\"http://schema.org/vehicleModelDate\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"The release date of a vehicle model (often used to differentiate versions of the same make and model).\",\"rdfs:label\":\"vehicleModelDate\"},{\"@id\":\"http://schema.org/expires\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"Date the content expires and is no longer useful or available. For example a <a class=\\\"localLink\\\" href=\\\"http://schema.org/VideoObject\\\">VideoObject</a> or <a class=\\\"localLink\\\" href=\\\"http://schema.org/NewsArticle\\\">NewsArticle</a> whose availability or relevance is time-limited, or a <a class=\\\"localLink\\\" href=\\\"http://schema.org/ClaimReview\\\">ClaimReview</a> fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date.\",\"rdfs:label\":\"expires\"},{\"@id\":\"http://schema.org/videoFrameSize\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/VideoObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The frame size of the video.\",\"rdfs:label\":\"videoFrameSize\"},{\"@id\":\"http://schema.org/publishedOn\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PublicationEvent\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/BroadcastService\"},\"rdfs:comment\":\"A broadcast service associated with the publication event.\",\"rdfs:label\":\"publishedOn\"},{\"@id\":\"http://schema.org/InternetCafe\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An internet cafe.\",\"rdfs:label\":\"InternetCafe\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/cheatCode\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/VideoGameSeries\"},{\"@id\":\"http://schema.org/VideoGame\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"rdfs:comment\":\"Cheat codes to the game.\",\"rdfs:label\":\"cheatCode\"},{\"@id\":\"http://schema.org/PaymentStatusType\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A specific payment status. For example, PaymentDue, PaymentComplete, etc.\",\"rdfs:label\":\"PaymentStatusType\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/MusicAlbumReleaseType\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"The kind of release which this album is: single, EP or album.\",\"rdfs:label\":\"MusicAlbumReleaseType\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/contributor\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/Event\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"rdfs:comment\":\"A secondary contributor to the CreativeWork or Event.\",\"rdfs:label\":\"contributor\"},{\"@id\":\"http://schema.org/numberOfDoors\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Number\"},{\"@id\":\"http://schema.org/QuantitativeValue\"}],\"rdfs:comment\":\"The number of doors.</p>\\n\\n<p>Typical unit code(s): C62\",\"rdfs:label\":\"numberOfDoors\"},{\"@id\":\"http://schema.org/Pharmacy\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A pharmacy or drugstore.\",\"rdfs:label\":\"Pharmacy\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/MedicalOrganization\"}},{\"@id\":\"http://schema.org/deliveryStatus\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ParcelDelivery\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DeliveryEvent\"},\"rdfs:comment\":\"New entry added as the package passes through each leg of its journey (from shipment to final delivery).\",\"rdfs:label\":\"deliveryStatus\"},{\"@id\":\"http://schema.org/DefenceEstablishment\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A defence establishment, such as an army or navy base.\",\"rdfs:label\":\"DefenceEstablishment\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/GovernmentBuilding\"}},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_WikiDoc\",\"@type\":\"http://schema.org/Organization\",\"rdfs:comment\":\"This class contains information contributed by <a href=\\\"http://wikidoc.org>WikiDoc\\\">http://wikidoc.org>WikiDoc</a>.\",\"rdfs:label\":\"WikiDoc\"},{\"@id\":\"http://schema.org/BreadcrumbList\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A BreadcrumbList is an ItemList consisting of a chain of linked Web pages, typically described using at least their URL and their name, and typically ending with the current page.</p>\\n\\n<p>The <a class=\\\"localLink\\\" href=\\\"http://schema.org/position\\\">position</a> property is used to reconstruct the order of the items in a BreadcrumbList The convention is that a breadcrumb list has an <a class=\\\"localLink\\\" href=\\\"http://schema.org/itemListOrder\\\">itemListOrder</a> of <a class=\\\"localLink\\\" href=\\\"http://schema.org/ItemListOrderAscending\\\">ItemListOrderAscending</a> (lower values listed first), and that the first items in this list correspond to the \\\"top\\\" or beginning of the breadcrumb trail, e.g. with a site or section homepage. The specific values of 'position' are not assigned meaning for a BreadcrumbList, but they should be integers, e.g. beginning with '1' for the first item in the list.\",\"rdfs:label\":\"BreadcrumbList\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ItemList\"}},{\"@id\":\"http://schema.org/Church\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A church.\",\"rdfs:label\":\"Church\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PlaceOfWorship\"}},{\"@id\":\"http://schema.org/LiquorStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A shop that sells alcoholic drinks such as wine, beer, whisky and other spirits.\",\"rdfs:label\":\"LiquorStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/dataFeedElement\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/DataFeed\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Thing\"},{\"@id\":\"http://schema.org/DataFeedItem\"}],\"rdfs:comment\":\"An item within in a data feed. Data feeds may have many elements.\",\"rdfs:label\":\"dataFeedElement\"},{\"@id\":\"http://schema.org/PublicationIssue\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex\"},\"http://www.w3.org/2002/07/owl#equivalentClass\":{\"@id\":\"http://purl.org/ontology/bibo/Issue\"},\"rdfs:comment\":\"A part of a successively published publication such as a periodical or publication volume, often numbered, usually containing a grouping of works such as articles.</p>\\n\\n<p><a href=\\\"http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html\\\">blog post</a>.\",\"rdfs:label\":\"PublicationIssue\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/GameServerStatus\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Status of a game server.\",\"rdfs:label\":\"GameServerStatus\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/Continent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"One of the continents (for example, Europe or Africa).\",\"rdfs:label\":\"Continent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Landform\"}},{\"@id\":\"http://schema.org/coursePrerequisites\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Course\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/AlignmentObject\"},{\"@id\":\"http://schema.org/Course\"}],\"rdfs:comment\":\"Requirements for taking the Course. May be completion of another <a class=\\\"localLink\\\" href=\\\"http://schema.org/Course\\\">Course</a> or a textual description like \\\"permission of instructor\\\". Requirements may be a pre-requisite competency, referenced using <a class=\\\"localLink\\\" href=\\\"http://schema.org/AlignmentObject\\\">AlignmentObject</a>.\",\"rdfs:label\":\"coursePrerequisites\"},{\"@id\":\"http://schema.org/Article\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews\"},\"rdfs:comment\":\"An article, such as a news article or piece of investigative report. Newspapers and magazines have articles of many different types and this is intended to cover them all.</p>\\n\\n<p>See also <a href=\\\"http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html\\\">blog post</a>.\",\"rdfs:label\":\"Article\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/characterAttribute\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/VideoGameSeries\"},{\"@id\":\"http://schema.org/Game\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"rdfs:comment\":\"A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage).\",\"rdfs:label\":\"characterAttribute\"},{\"@id\":\"http://schema.org/albumProductionType\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicAlbum\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MusicAlbumProductionType\"},\"rdfs:comment\":\"Classification of the album by it's type of content: soundtrack, live album, studio album, etc.\",\"rdfs:label\":\"albumProductionType\"},{\"@id\":\"http://schema.org/UserTweets\",\"@type\":\"rdfs:Class\",\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/InteractionCounter\"},\"rdfs:comment\":\"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\\\"localLink\\\" href=\\\"http://schema.org/Action\\\">Action</a>-based vocabulary, alongside types such as <a class=\\\"localLink\\\" href=\\\"http://schema.org/Comment\\\">Comment</a>.\",\"rdfs:label\":\"UserTweets\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/UserInteraction\"}},{\"@id\":\"http://schema.org/yearsInOperation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BusinessAudience\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"The age of the business.\",\"rdfs:label\":\"yearsInOperation\"},{\"@id\":\"http://schema.org/amountOfThisGood\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/TypeAndQuantityNode\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"The quantity of the goods included in the offer.\",\"rdfs:label\":\"amountOfThisGood\"},{\"@id\":\"http://schema.org/datasetTimeInterval\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Dataset\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/temporalCoverage\"},\"rdfs:comment\":\"The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).\",\"rdfs:label\":\"datasetTimeInterval\"},{\"@id\":\"http://schema.org/Enumeration\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Lists or enumerations—for example, a list of cuisines or music genres, etc.\",\"rdfs:label\":\"Enumeration\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/ParkingMap\",\"@type\":\"http://schema.org/MapCategoryType\",\"rdfs:comment\":\"A parking map.\",\"rdfs:label\":\"ParkingMap\"},{\"@id\":\"http://schema.org/checkinTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/LodgingReservation\"},{\"@id\":\"http://schema.org/LodgingBusiness\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The earliest someone may check into a lodging establishment.\",\"rdfs:label\":\"checkinTime\"},{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP-draws\",\"@type\":\"http://schema.org/Organization\",\"rdfs:comment\":\"This term and associated definitions draws upon the work of <a href=\\\"http://thetrustproject.org/\\\">The Trust Project</a>.\",\"rdfs:label\":\"The Trust Project\"},{\"@id\":\"http://schema.org/WebPageElement\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A web page element, like a table or an image.\",\"rdfs:label\":\"WebPageElement\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/VideoGame\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A video game is an electronic game that involves human interaction with a user interface to generate visual feedback on a video device.\",\"rdfs:label\":\"VideoGame\",\"rdfs:subClassOf\":[{\"@id\":\"http://schema.org/Game\"},{\"@id\":\"http://schema.org/SoftwareApplication\"}]},{\"@id\":\"http://schema.org/resultReview\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ReviewAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Review\"},\"rdfs:comment\":\"A sub property of result. The review that resulted in the performing of the action.\",\"rdfs:label\":\"resultReview\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/result\"}},{\"@id\":\"http://schema.org/partOfTVSeries\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/TVClip\"},{\"@id\":\"http://schema.org/TVEpisode\"},{\"@id\":\"http://schema.org/TVSeason\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/TVSeries\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/partOfSeries\"},\"rdfs:comment\":\"The TV series to which this episode or season belongs.\",\"rdfs:label\":\"partOfTVSeries\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/isPartOf\"}},{\"@id\":\"http://schema.org/UserInteraction\",\"@type\":\"rdfs:Class\",\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/InteractionCounter\"},\"rdfs:comment\":\"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\\\"localLink\\\" href=\\\"http://schema.org/Action\\\">Action</a>-based vocabulary, alongside types such as <a class=\\\"localLink\\\" href=\\\"http://schema.org/Comment\\\">Comment</a>.\",\"rdfs:label\":\"UserInteraction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/carrier\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Flight\"},{\"@id\":\"http://schema.org/ParcelDelivery\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/provider\"},\"rdfs:comment\":\"'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights.\",\"rdfs:label\":\"carrier\"},{\"@id\":\"http://schema.org/unsaturatedFatContent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/NutritionInformation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Mass\"},\"rdfs:comment\":\"The number of grams of unsaturated fat.\",\"rdfs:label\":\"unsaturatedFatContent\"},{\"@id\":\"http://schema.org/numberedPosition\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/OrganizationRole\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"A number associated with a role in an organization, for example, the number on an athlete's jersey.\",\"rdfs:label\":\"numberedPosition\"},{\"@id\":\"http://schema.org/billingAddress\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Order\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/PostalAddress\"},\"rdfs:comment\":\"The billing address for the order.\",\"rdfs:label\":\"billingAddress\"},{\"@id\":\"http://schema.org/maximumAttendeeCapacity\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/Event\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"The total number of individuals that may attend an event or venue.\",\"rdfs:label\":\"maximumAttendeeCapacity\"},{\"@id\":\"http://schema.org/Airline\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An organization that provides flights for passengers.\",\"rdfs:label\":\"Airline\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Organization\"}},{\"@id\":\"http://schema.org/birthPlace\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"rdfs:comment\":\"The place where the person was born.\",\"rdfs:label\":\"birthPlace\"},{\"@id\":\"http://schema.org/LiveBlogPosting\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A blog post intended to provide a rolling textual coverage of an ongoing event through continuous updates.\",\"rdfs:label\":\"LiveBlogPosting\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/BlogPosting\"}},{\"@id\":\"http://schema.org/parentService\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BroadcastService\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/BroadcastService\"},\"rdfs:comment\":\"A broadcast service to which the broadcast service may belong to such as regional variations of a national channel.\",\"rdfs:label\":\"parentService\"},{\"@id\":\"http://schema.org/reviews\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/Place\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Review\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/review\"},\"rdfs:comment\":\"Review of the item.\",\"rdfs:label\":\"reviews\"},{\"@id\":\"http://schema.org/typicalAgeRange\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Event\"},{\"@id\":\"http://schema.org/CreativeWork\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The typical expected age range, e.g. '7-9', '11-'.\",\"rdfs:label\":\"typicalAgeRange\"},{\"@id\":\"http://schema.org/bookingAgent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Reservation\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/broker\"},\"rdfs:comment\":\"'bookingAgent' is an out-dated term indicating a 'broker' that serves as a booking agent.\",\"rdfs:label\":\"bookingAgent\"},{\"@id\":\"http://schema.org/codeRepository\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareSourceCode\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"rdfs:comment\":\"Link to the repository where the un-compiled, human readable code and related code is located (SVN, github, CodePlex).\",\"rdfs:label\":\"codeRepository\"},{\"@id\":\"http://schema.org/vehicleConfiguration\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'.\",\"rdfs:label\":\"vehicleConfiguration\"},{\"@id\":\"http://schema.org/BikeStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A bike store.\",\"rdfs:label\":\"BikeStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/BuddhistTemple\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A Buddhist temple.\",\"rdfs:label\":\"BuddhistTemple\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PlaceOfWorship\"}},{\"@id\":\"http://schema.org/endTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Action\"},{\"@id\":\"http://schema.org/FoodEstablishmentReservation\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\\n\\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.\",\"rdfs:label\":\"endTime\"},{\"@id\":\"http://schema.org/MovieSeries\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A series of movies. Included movies can be indicated with the hasPart property.\",\"rdfs:label\":\"MovieSeries\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWorkSeries\"}},{\"@id\":\"http://schema.org/billingPeriod\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Invoice\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Duration\"},\"rdfs:comment\":\"The time interval used to compute the invoice.\",\"rdfs:label\":\"billingPeriod\"},{\"@id\":\"http://schema.org/gender\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/GenderType\"}],\"rdfs:comment\":\"Gender of the person. While http://schema.org/Male and http://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender.\",\"rdfs:label\":\"gender\"},{\"@id\":\"http://schema.org/originAddress\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ParcelDelivery\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/PostalAddress\"},\"rdfs:comment\":\"Shipper's address.\",\"rdfs:label\":\"originAddress\"},{\"@id\":\"http://schema.org/isLiveBroadcast\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BroadcastEvent\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Boolean\"},\"rdfs:comment\":\"True is the broadcast is of a live event.\",\"rdfs:label\":\"isLiveBroadcast\"},{\"@id\":\"http://schema.org/numChildren\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/LodgingReservation\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Integer\"},{\"@id\":\"http://schema.org/QuantitativeValue\"}],\"rdfs:comment\":\"The number of children staying in the unit.\",\"rdfs:label\":\"numChildren\"},{\"@id\":\"http://schema.org/hoursAvailable\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/LocationFeatureSpecification\"},{\"@id\":\"http://schema.org/ContactPoint\"},{\"@id\":\"http://schema.org/Service\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/OpeningHoursSpecification\"},\"rdfs:comment\":\"The hours during which this service or contact is available.\",\"rdfs:label\":\"hoursAvailable\"},{\"@id\":\"http://schema.org/MenuSection\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A sub-grouping of food or drink items in a menu. E.g. courses (such as 'Dinner', 'Breakfast', etc.), specific type of dishes (such as 'Meat', 'Vegan', 'Drinks', etc.), or some other classification made by the menu provider.\",\"rdfs:label\":\"MenuSection\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/iataCode\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Airline\"},{\"@id\":\"http://schema.org/Airport\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"IATA identifier for an airline or airport.\",\"rdfs:label\":\"iataCode\"},{\"@id\":\"http://schema.org/DigitalFormat\",\"@type\":\"http://schema.org/MusicReleaseFormatType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"DigitalFormat.\",\"rdfs:label\":\"DigitalFormat\"},{\"@id\":\"http://schema.org/AutoRental\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A car rental business.\",\"rdfs:label\":\"AutoRental\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AutomotiveBusiness\"}},{\"@id\":\"http://schema.org/ReadPermission\",\"@type\":\"http://schema.org/DigitalDocumentPermissionType\",\"rdfs:comment\":\"Permission to read or view the document.\",\"rdfs:label\":\"ReadPermission\"},{\"@id\":\"http://schema.org/PublicHolidays\",\"@type\":\"http://schema.org/DayOfWeek\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"This stands for any day that is a public holiday; it is a placeholder for all official public holidays in some particular location. While not technically a \\\"day of the week\\\", it can be used with <a class=\\\"localLink\\\" href=\\\"http://schema.org/OpeningHoursSpecification\\\">OpeningHoursSpecification</a>. In the context of an opening hours specification it can be used to indicate opening hours on public holidays, overriding general opening hours for the day of the week on which a public holiday occurs.\",\"rdfs:label\":\"PublicHolidays\"},{\"@id\":\"http://schema.org/AchieveAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of accomplishing something via previous efforts. It is an instantaneous action rather than an ongoing process.\",\"rdfs:label\":\"AchieveAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Action\"}},{\"@id\":\"http://schema.org/CDFormat\",\"@type\":\"http://schema.org/MusicReleaseFormatType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"CDFormat.\",\"rdfs:label\":\"CDFormat\"},{\"@id\":\"http://schema.org/predecessorOf\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ProductModel\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ProductModel\"},\"rdfs:comment\":\"A pointer from a previous, often discontinued variant of the product to its newer variant.\",\"rdfs:label\":\"predecessorOf\"},{\"@id\":\"http://schema.org/HotelRoom\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"rdfs:comment\":\"A hotel room is a single room in a hotel.\\n<br /><br />\\nSee also the <a href=\\\"/docs/hotels.html\\\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\",\"rdfs:label\":\"HotelRoom\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Room\"}},{\"@id\":\"http://schema.org/departurePlatform\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/TrainTrip\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The platform from which the train departs.\",\"rdfs:label\":\"departurePlatform\"},{\"@id\":\"http://schema.org/pickupTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/TaxiReservation\"},{\"@id\":\"http://schema.org/RentalCarReservation\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"When a taxi will pickup a passenger or a rental car can be picked up.\",\"rdfs:label\":\"pickupTime\"},{\"@id\":\"http://schema.org/organizer\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Event\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"An organizer of an Event.\",\"rdfs:label\":\"organizer\"},{\"@id\":\"http://schema.org/parentItem\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Comment\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Question\"},\"rdfs:comment\":\"The parent of a question, answer or item in general.\",\"rdfs:label\":\"parentItem\"},{\"@id\":\"http://schema.org/Zoo\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A zoo.\",\"rdfs:label\":\"Zoo\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/broadcastDisplayName\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BroadcastService\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The name displayed in the channel guide. For many US affiliates, it is the network name.\",\"rdfs:label\":\"broadcastDisplayName\"},{\"@id\":\"http://schema.org/WebSite\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A WebSite is a set of related web pages and other items typically served from a single web domain and accessible via URLs.\",\"rdfs:label\":\"WebSite\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/Movie\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A movie.\",\"rdfs:label\":\"Movie\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/EventReservation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A reservation for an event like a concert, sporting event, or lecture.</p>\\n\\n<p>Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class=\\\"localLink\\\" href=\\\"http://schema.org/Offer\\\">Offer</a>.\",\"rdfs:label\":\"EventReservation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Reservation\"}},{\"@id\":\"http://schema.org/EventPostponed\",\"@type\":\"http://schema.org/EventStatusType\",\"rdfs:comment\":\"The event has been postponed and no new date has been set. The event's previousStartDate should be set.\",\"rdfs:label\":\"EventPostponed\"},{\"@id\":\"http://schema.org/OrganizeAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of manipulating/administering/supervising/controlling one or more objects.\",\"rdfs:label\":\"OrganizeAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Action\"}},{\"@id\":\"http://schema.org/Audience\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Intended audience for an item, i.e. the group for whom the item was created.\",\"rdfs:label\":\"Audience\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/members\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/ProgramMembership\"},{\"@id\":\"http://schema.org/Organization\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/member\"},\"rdfs:comment\":\"A member of this organization.\",\"rdfs:label\":\"members\"},{\"@id\":\"http://schema.org/printColumn\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/NewsArticle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The number of the column in which the NewsArticle appears in the print edition.\",\"rdfs:label\":\"printColumn\"},{\"@id\":\"http://schema.org/EventRescheduled\",\"@type\":\"http://schema.org/EventStatusType\",\"rdfs:comment\":\"The event has been rescheduled. The event's previousStartDate should be set to the old date and the startDate should be set to the event's new date. (If the event has been rescheduled multiple times, the previousStartDate property may be repeated).\",\"rdfs:label\":\"EventRescheduled\"},{\"@id\":\"http://schema.org/Restaurant\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A restaurant.\",\"rdfs:label\":\"Restaurant\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FoodEstablishment\"}},{\"@id\":\"http://schema.org/AgreeAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of expressing a consistency of opinion with the object. An agent agrees to/about an object (a proposition, topic or theme) with participants.\",\"rdfs:label\":\"AgreeAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ReactAction\"}},{\"@id\":\"http://schema.org/Integer\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Data type: Integer.\",\"rdfs:label\":\"Integer\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Number\"}},{\"@id\":\"http://schema.org/UseAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of applying an object to its intended purpose.\",\"rdfs:label\":\"UseAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ConsumeAction\"}},{\"@id\":\"http://schema.org/APIReference\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Reference documentation for application programming interfaces (APIs).\",\"rdfs:label\":\"APIReference\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/TechArticle\"}},{\"@id\":\"http://schema.org/TravelAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of traveling from an fromLocation to a destination by a specified mode of transport, optionally with participants.\",\"rdfs:label\":\"TravelAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/MoveAction\"}},{\"@id\":\"http://schema.org/FilmAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of capturing sound and moving images on film, video, or digitally.\",\"rdfs:label\":\"FilmAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreateAction\"}},{\"@id\":\"http://schema.org/arrivalBusStop\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BusTrip\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/BusStation\"},{\"@id\":\"http://schema.org/BusStop\"}],\"rdfs:comment\":\"The stop or station from which the bus arrives.\",\"rdfs:label\":\"arrivalBusStop\"},{\"@id\":\"http://schema.org/programmingLanguage\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareSourceCode\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/ComputerLanguage\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The computer programming language.\",\"rdfs:label\":\"programmingLanguage\"},{\"@id\":\"http://schema.org/MobileApplication\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A software application designed specifically to work well on a mobile device such as a telephone.\",\"rdfs:label\":\"MobileApplication\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/SoftwareApplication\"}},{\"@id\":\"http://schema.org/Tuesday\",\"@type\":\"http://schema.org/DayOfWeek\",\"http://schema.org/sameAs\":{\"@id\":\"http://www.wikidata.org/entity/Q127\"},\"rdfs:comment\":\"The day of the week between Monday and Wednesday.\",\"rdfs:label\":\"Tuesday\"},{\"@id\":\"http://schema.org/partOfInvoice\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Order\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Invoice\"},\"rdfs:comment\":\"The order is being paid as part of the referenced Invoice.\",\"rdfs:label\":\"partOfInvoice\"},{\"@id\":\"http://schema.org/bccRecipient\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Message\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/ContactPoint\"}],\"rdfs:comment\":\"A sub property of recipient. The recipient blind copied on a message.\",\"rdfs:label\":\"bccRecipient\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/recipient\"}},{\"@id\":\"http://schema.org/SoftwareApplication\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A software application.\",\"rdfs:label\":\"SoftwareApplication\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/fuelType\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/EngineSpecification\"},{\"@id\":\"http://schema.org/Vehicle\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/QualitativeValue\"},{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The type of fuel suitable for the engine or engines of the vehicle. If the vehicle has only one engine, this property can be attached directly to the vehicle.\",\"rdfs:label\":\"fuelType\"},{\"@id\":\"http://schema.org/availability\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/Offer\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ItemAvailability\"},\"rdfs:comment\":\"The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.\",\"rdfs:label\":\"availability\"},{\"@id\":\"http://schema.org/icaoCode\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Airport\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"ICAO identifier for an airport.\",\"rdfs:label\":\"icaoCode\"},{\"@id\":\"http://schema.org/Code\",\"@type\":\"rdfs:Class\",\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/SoftwareSourceCode\"},\"rdfs:comment\":\"Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.\",\"rdfs:label\":\"Code\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/vehicleIdentificationNumber\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles.\",\"rdfs:label\":\"vehicleIdentificationNumber\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/serialNumber\"}},{\"@id\":\"http://schema.org/SportingGoodsStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A sporting goods store.\",\"rdfs:label\":\"SportingGoodsStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/durationOfWarranty\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/WarrantyPromise\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"The duration of the warranty promise. Common unitCode values are ANN for year, MON for months, or DAY for days.\",\"rdfs:label\":\"durationOfWarranty\"},{\"@id\":\"http://schema.org/gameTip\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/VideoGame\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"rdfs:comment\":\"Links to tips, tactics, etc.\",\"rdfs:label\":\"gameTip\"},{\"@id\":\"http://schema.org/partySize\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/TaxiReservation\"},{\"@id\":\"http://schema.org/FoodEstablishmentReservation\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Integer\"},{\"@id\":\"http://schema.org/QuantitativeValue\"}],\"rdfs:comment\":\"Number of people the reservation should accommodate.\",\"rdfs:label\":\"partySize\"},{\"@id\":\"http://schema.org/TextDigitalDocument\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A file composed primarily of text.\",\"rdfs:label\":\"TextDigitalDocument\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/DigitalDocument\"}},{\"@id\":\"http://schema.org/priceSpecification\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/TradeAction\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/PriceSpecification\"},\"rdfs:comment\":\"One or more detailed price specifications, indicating the unit price and delivery or payment charges.\",\"rdfs:label\":\"priceSpecification\"},{\"@id\":\"http://schema.org/providerMobility\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Service\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Indicates the mobility of a provided service (e.g. 'static', 'dynamic').\",\"rdfs:label\":\"providerMobility\"},{\"@id\":\"http://schema.org/DemoAlbum\",\"@type\":\"http://schema.org/MusicAlbumProductionType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"DemoAlbum.\",\"rdfs:label\":\"DemoAlbum\"},{\"@id\":\"http://schema.org/CoOp\",\"@type\":\"http://schema.org/GamePlayMode\",\"rdfs:comment\":\"Play mode: CoOp. Co-operative games, where you play on the same team with friends.\",\"rdfs:label\":\"CoOp\"},{\"@id\":\"http://schema.org/releasedEvent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/PublicationEvent\"},\"rdfs:comment\":\"The place and time the release was issued, expressed as a PublicationEvent.\",\"rdfs:label\":\"releasedEvent\"},{\"@id\":\"http://schema.org/educationalUse\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The purpose of a work in the context of education; for example, 'assignment', 'group work'.\",\"rdfs:label\":\"educationalUse\"},{\"@id\":\"http://schema.org/Waterfall\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A waterfall, like Niagara.\",\"rdfs:label\":\"Waterfall\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/BodyOfWater\"}},{\"@id\":\"http://schema.org/itemReviewed\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Review\"},{\"@id\":\"http://schema.org/AggregateRating\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"rdfs:comment\":\"The item that is being reviewed/rated.\",\"rdfs:label\":\"itemReviewed\"},{\"@id\":\"http://schema.org/availableOnDevice\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Device required to run the application. Used in cases where a specific make/model is required to run the application.\",\"rdfs:label\":\"availableOnDevice\"},{\"@id\":\"http://schema.org/OfficeEquipmentStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An office equipment store.\",\"rdfs:label\":\"OfficeEquipmentStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/attendees\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Event\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/attendee\"},\"rdfs:comment\":\"A person attending the event.\",\"rdfs:label\":\"attendees\"},{\"@id\":\"http://schema.org/stepValue\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PropertyValueSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification.\",\"rdfs:label\":\"stepValue\"},{\"@id\":\"http://schema.org/RightHandDriving\",\"@type\":\"http://schema.org/SteeringPositionValue\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"rdfs:comment\":\"The steering position is on the right side of the vehicle (viewed from the main direction of driving).\",\"rdfs:label\":\"RightHandDriving\"},{\"@id\":\"http://schema.org/currency\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/DatedMoneySpecification\"},{\"@id\":\"http://schema.org/MonetaryAmount\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The currency in which the monetary amount is expressed (in 3-letter <a href=\\\"http://en.wikipedia.org/wiki/ISO_4217\\\">ISO 4217</a> format).\",\"rdfs:label\":\"currency\"},{\"@id\":\"http://schema.org/inventoryLevel\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/SomeProducts\"},{\"@id\":\"http://schema.org/Demand\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"The current approximate inventory level for the item or items.\",\"rdfs:label\":\"inventoryLevel\"},{\"@id\":\"http://schema.org/salaryCurrency\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/EmployeeRole\"},{\"@id\":\"http://schema.org/JobPosting\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The currency (coded using <a href=\\\"http://en.wikipedia.org/wiki/ISO_4217\\\">ISO 4217</a> ) used for the main salary information in this job posting or for this employee.\",\"rdfs:label\":\"salaryCurrency\"},{\"@id\":\"http://schema.org/PaymentComplete\",\"@type\":\"http://schema.org/PaymentStatusType\",\"rdfs:comment\":\"The payment has been received and processed.\",\"rdfs:label\":\"PaymentComplete\"},{\"@id\":\"http://schema.org/PlanAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of planning the execution of an event/task/action/reservation/plan to a future date.\",\"rdfs:label\":\"PlanAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/OrganizeAction\"}},{\"@id\":\"http://schema.org/landlord\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/RentAction\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"A sub property of participant. The owner of the real estate property.\",\"rdfs:label\":\"landlord\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/participant\"}},{\"@id\":\"http://schema.org/confirmationNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Order\"},{\"@id\":\"http://schema.org/Invoice\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A number that confirms the given order or payment has been received.\",\"rdfs:label\":\"confirmationNumber\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/identifier\"}},{\"@id\":\"http://schema.org/alumniOf\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/alumni\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/EducationalOrganization\"},{\"@id\":\"http://schema.org/Organization\"}],\"rdfs:comment\":\"An organization that the person is an alumni of.\",\"rdfs:label\":\"alumniOf\"},{\"@id\":\"http://schema.org/MovieTheater\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A movie theater.\",\"rdfs:label\":\"MovieTheater\",\"rdfs:subClassOf\":[{\"@id\":\"http://schema.org/CivicStructure\"},{\"@id\":\"http://schema.org/EntertainmentBusiness\"}]},{\"@id\":\"http://schema.org/commentText\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/UserComments\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The text of the UserComment.\",\"rdfs:label\":\"commentText\"},{\"@id\":\"http://schema.org/contentLocation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"rdfs:comment\":\"The location depicted or described in the content. For example, the location in a photograph or painting.\",\"rdfs:label\":\"contentLocation\"},{\"@id\":\"http://schema.org/fuelConsumption\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"<p>The amount of fuel consumed for traveling a particular distance or temporal duration with the given vehicle (e.g. liters per 100 km).</p>\\n\\n<ul>\\n<li>Note 1: There are unfortunately no standard unit codes for liters per 100 km.  Use <a class=\\\"localLink\\\" href=\\\"http://schema.org/unitText\\\">unitText</a> to indicate the unit of measurement, e.g. L/100 km.</li>\\n<li>Note 2: There are two ways of indicating the fuel consumption, <a class=\\\"localLink\\\" href=\\\"http://schema.org/fuelConsumption\\\">fuelConsumption</a> (e.g. 8 liters per 100 km) and <a class=\\\"localLink\\\" href=\\\"http://schema.org/fuelEfficiency\\\">fuelEfficiency</a> (e.g. 30 miles per gallon). They are reciprocal.</li>\\n<li>Note 3: Often, the absolute value is useful only when related to driving speed (\\\"at 80 km/h\\\") or usage pattern (\\\"city traffic\\\"). You can use <a class=\\\"localLink\\\" href=\\\"http://schema.org/valueReference\\\">valueReference</a> to link the value for the fuel consumption to another value.</li>\\n</ul>\\n\",\"rdfs:label\":\"fuelConsumption\"},{\"@id\":\"http://schema.org/childMinAge\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ParentAudience\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"Minimal age of the child.\",\"rdfs:label\":\"childMinAge\"},{\"@id\":\"http://schema.org/catalog\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Dataset\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DataCatalog\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/includedInDataCatalog\"},\"rdfs:comment\":\"A data catalog which contains this dataset.\",\"rdfs:label\":\"catalog\"},{\"@id\":\"http://schema.org/schemaVersion\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"Indicates (by URL or string) a particular version of a schema used in some CreativeWork. For example, a document could declare a schemaVersion using an URL such as http://schema.org/version/2.0/ if precise indication of schema version was required by some application.\",\"rdfs:label\":\"schemaVersion\"},{\"@id\":\"http://schema.org/GatedResidenceCommunity\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Residence type: Gated community.\",\"rdfs:label\":\"GatedResidenceCommunity\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Residence\"}},{\"@id\":\"http://schema.org/dateSent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Message\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The date/time at which the message was sent.\",\"rdfs:label\":\"dateSent\"},{\"@id\":\"http://schema.org/Country\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A country.\",\"rdfs:label\":\"Country\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AdministrativeArea\"}},{\"@id\":\"http://schema.org/PlaceOfWorship\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Place of worship, such as a church, synagogue, or mosque.\",\"rdfs:label\":\"PlaceOfWorship\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/HowToTip\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An explanation in the instructions for how to achieve a result. It provides supplementary information about a technique, supply, author's preference, etc. It can explain what could be done, or what should not be done, but doesn't specify what should be done (see HowToDirection).\",\"rdfs:label\":\"HowToTip\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ListItem\"}},{\"@id\":\"http://schema.org/accessibilityFeature\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (<a href=\\\"http://www.w3.org/wiki/WebSchemas/Accessibility\\\">WebSchemas wiki lists possible values</a>).\",\"rdfs:label\":\"accessibilityFeature\"},{\"@id\":\"http://schema.org/dateIssued\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Ticket\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The date the ticket was issued.\",\"rdfs:label\":\"dateIssued\"},{\"@id\":\"http://schema.org/PerformanceRole\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A PerformanceRole is a Role that some entity places with regard to a theatrical performance, e.g. in a Movie, TVSeries etc.\",\"rdfs:label\":\"PerformanceRole\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Role\"}},{\"@id\":\"http://schema.org/UnitPriceSpecification\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"The price asked for a given offer by the respective organization or person.\",\"rdfs:label\":\"UnitPriceSpecification\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PriceSpecification\"}},{\"@id\":\"http://schema.org/aggregateRating\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Service\"},{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/Event\"},{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Brand\"},{\"@id\":\"http://schema.org/Offer\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/AggregateRating\"},\"rdfs:comment\":\"The overall rating, based on a collection of reviews or ratings, of the item.\",\"rdfs:label\":\"aggregateRating\"},{\"@id\":\"http://schema.org/subtitleLanguage\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Movie\"},{\"@id\":\"http://schema.org/ScreeningEvent\"},{\"@id\":\"http://schema.org/TVEpisode\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Language\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"Languages in which subtitles/captions are available, in <a href=\\\"http://tools.ietf.org/html/bcp47\\\">IETF BCP 47 standard format</a>.\",\"rdfs:label\":\"subtitleLanguage\"},{\"@id\":\"http://schema.org/PerformAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of participating in performance arts.\",\"rdfs:label\":\"PerformAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PlayAction\"}},{\"@id\":\"http://schema.org/HinduDiet\",\"@type\":\"http://schema.org/RestrictedDiet\",\"rdfs:comment\":\"A diet conforming to Hindu dietary practices, in particular, beef-free.\",\"rdfs:label\":\"HinduDiet\"},{\"@id\":\"http://schema.org/Mountain\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A mountain, like Mount Whitney or Mount Everest.\",\"rdfs:label\":\"Mountain\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Landform\"}},{\"@id\":\"http://schema.org/alternativeHeadline\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A secondary title of the CreativeWork.\",\"rdfs:label\":\"alternativeHeadline\"},{\"@id\":\"http://schema.org/recipeIngredient\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Recipe\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A single ingredient used in the recipe, e.g. sugar, flour or garlic.\",\"rdfs:label\":\"recipeIngredient\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/supply\"}},{\"@id\":\"http://schema.org/trainName\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/TrainTrip\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The name of the train (e.g. The Orient Express).\",\"rdfs:label\":\"trainName\"},{\"@id\":\"http://schema.org/locationCreated\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"rdfs:comment\":\"The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.\",\"rdfs:label\":\"locationCreated\"},{\"@id\":\"http://schema.org/recipeInstructions\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Recipe\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/ItemList\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"A step in making the recipe, in the form of a single item (document, video, etc.) or an ordered list with HowToStep and/or HowToSection items.\",\"rdfs:label\":\"recipeInstructions\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/steps\"}},{\"@id\":\"http://schema.org/value\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/QuantitativeValue\"},{\"@id\":\"http://schema.org/PropertyValue\"},{\"@id\":\"http://schema.org/MonetaryAmount\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/StructuredValue\"},{\"@id\":\"http://schema.org/Number\"},{\"@id\":\"http://schema.org/Boolean\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"<p>The value of the quantitative value or property value node.</p>\\n\\n<ul>\\n<li>For <a class=\\\"localLink\\\" href=\\\"http://schema.org/QuantitativeValue\\\">QuantitativeValue</a> and <a class=\\\"localLink\\\" href=\\\"http://schema.org/MonetaryAmount\\\">MonetaryAmount</a>, the recommended type for values is 'Number'.</li>\\n<li>For <a class=\\\"localLink\\\" href=\\\"http://schema.org/PropertyValue\\\">PropertyValue</a>, it can be 'Text;', 'Number', 'Boolean', or 'StructuredValue'.</li>\\n</ul>\\n\",\"rdfs:label\":\"value\"},{\"@id\":\"http://schema.org/ReceiveAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of physically/electronically taking delivery of an object thathas been transferred from an origin to a destination. Reciprocal of SendAction.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/SendAction\\\">SendAction</a>: The reciprocal of ReceiveAction.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/TakeAction\\\">TakeAction</a>: Unlike TakeAction, ReceiveAction does not imply that the ownership has been transfered (e.g. I can receive a package, but it does not mean the package is now mine).</li>\\n</ul>\\n\",\"rdfs:label\":\"ReceiveAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/TransferAction\"}},{\"@id\":\"http://schema.org/VideoGameClip\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A short segment/part of a video game.\",\"rdfs:label\":\"VideoGameClip\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Clip\"}},{\"@id\":\"http://schema.org/inAlbum\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicRecording\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MusicAlbum\"},\"rdfs:comment\":\"The album to which this recording belongs.\",\"rdfs:label\":\"inAlbum\"},{\"@id\":\"http://schema.org/itemShipped\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ParcelDelivery\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Product\"},\"rdfs:comment\":\"Item(s) being shipped.\",\"rdfs:label\":\"itemShipped\"},{\"@id\":\"http://schema.org/free\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PublicationEvent\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Boolean\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/isAccessibleForFree\"},\"rdfs:comment\":\"A flag to signal that the item, event, or place is accessible for free.\",\"rdfs:label\":\"free\"},{\"@id\":\"http://schema.org/MusicStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A music store.\",\"rdfs:label\":\"MusicStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/Crematorium\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A crematorium.\",\"rdfs:label\":\"Crematorium\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/contentSize\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MediaObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"File size in (mega/kilo) bytes.\",\"rdfs:label\":\"contentSize\"},{\"@id\":\"http://schema.org/isConsumableFor\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Product\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Product\"},\"rdfs:comment\":\"A pointer to another product (or multiple products) for which this product is a consumable.\",\"rdfs:label\":\"isConsumableFor\"},{\"@id\":\"http://schema.org/accessModeSufficient\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://github.com/schemaorg/schemaorg/issues/1100\"},\"http://schema.org/category\":\"issue-1110\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Expected values include:  auditory, tactile, textual, visual.\",\"rdfs:label\":\"accessModeSufficient\"},{\"@id\":\"http://schema.org/itemListOrder\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ItemList\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/ItemListOrderType\"}],\"rdfs:comment\":\"Type of ordering (e.g. Ascending, Descending, Unordered).\",\"rdfs:label\":\"itemListOrder\"},{\"@id\":\"http://schema.org/QuoteAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An agent quotes/estimates/appraises an object/product/service with a price at a location/store.\",\"rdfs:label\":\"QuoteAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/TradeAction\"}},{\"@id\":\"http://schema.org/artform\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/VisualArtwork\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"e.g. Painting, Drawing, Sculpture, Print, Photograph, Assemblage, Collage, etc.\",\"rdfs:label\":\"artform\"},{\"@id\":\"http://schema.org/temporalCoverage\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/DateTime\"},{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Text\"}],\"http://www.w3.org/2002/07/owl#equivalentProperty\":{\"@id\":\"http://purl.org/dc/terms/temporal\"},\"rdfs:comment\":\"The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in <a href=\\\"https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\\\">ISO 8601 time interval format</a>. In\\n      the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written \\\"2011/2012\\\"). Other forms of content e.g. ScholarlyArticle, Book, TVSeries or TVEpisode may indicate their temporalCoverage in broader terms - textually or via well-known URL.\\n      Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via \\\"1939/1945\\\".\",\"rdfs:label\":\"temporalCoverage\"},{\"@id\":\"http://schema.org/PropertyValue\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.</p>\\n\\n<p>Always use specific schema.org properties when a) they exist and b) you can populate them. Using PropertyValue as a substitute will typically not trigger the same effect as using the original, specific property.\",\"rdfs:label\":\"PropertyValue\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/StructuredValue\"}},{\"@id\":\"http://schema.org/codeSampleType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareSourceCode\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.\",\"rdfs:label\":\"codeSampleType\"},{\"@id\":\"http://schema.org/ListItem\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An list item, e.g. a step in a checklist or how-to description.\",\"rdfs:label\":\"ListItem\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/ContactPage\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Web page type: Contact page.\",\"rdfs:label\":\"ContactPage\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/WebPage\"}},{\"@id\":\"http://schema.org/WebApplication\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Web applications.\",\"rdfs:label\":\"WebApplication\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/SoftwareApplication\"}},{\"@id\":\"http://schema.org/BlogPosting\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A blog post.\",\"rdfs:label\":\"BlogPosting\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/SocialMediaPosting\"}},{\"@id\":\"http://schema.org/eligibleTransactionVolume\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/PriceSpecification\"},{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/Offer\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/PriceSpecification\"},\"rdfs:comment\":\"The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.\",\"rdfs:label\":\"eligibleTransactionVolume\"},{\"@id\":\"http://schema.org/equal\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/QualitativeValue\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QualitativeValue\"},\"rdfs:comment\":\"This ordering relation for qualitative values indicates that the subject is equal to the object.\",\"rdfs:label\":\"equal\"},{\"@id\":\"http://schema.org/LodgingReservation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A reservation for lodging at a hotel, motel, inn, etc.</p>\\n\\n<p>Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.\",\"rdfs:label\":\"LodgingReservation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Reservation\"}},{\"@id\":\"http://schema.org/subEvent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Event\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/superEvent\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Event\"},\"rdfs:comment\":\"An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference.\",\"rdfs:label\":\"subEvent\"},{\"@id\":\"http://schema.org/PresentationDigitalDocument\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A file containing slides or used for a presentation.\",\"rdfs:label\":\"PresentationDigitalDocument\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/DigitalDocument\"}},{\"@id\":\"http://schema.org/blogPost\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Blog\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/BlogPosting\"},\"rdfs:comment\":\"A posting that is part of this blog.\",\"rdfs:label\":\"blogPost\"},{\"@id\":\"http://schema.org/GlutenFreeDiet\",\"@type\":\"http://schema.org/RestrictedDiet\",\"rdfs:comment\":\"A diet exclusive of gluten.\",\"rdfs:label\":\"GlutenFreeDiet\"},{\"@id\":\"http://schema.org/Report\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A Report generated by governmental or non-governmental organization.\",\"rdfs:label\":\"Report\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Article\"}},{\"@id\":\"http://schema.org/accountablePerson\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"Specifies the Person that is legally accountable for the CreativeWork.\",\"rdfs:label\":\"accountablePerson\"},{\"@id\":\"http://schema.org/homeLocation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/ContactPoint\"},{\"@id\":\"http://schema.org/Place\"}],\"rdfs:comment\":\"A contact location for a person's residence.\",\"rdfs:label\":\"homeLocation\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/location\"}},{\"@id\":\"http://schema.org/nutrition\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Recipe\"},{\"@id\":\"http://schema.org/MenuItem\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/NutritionInformation\"},\"rdfs:comment\":\"Nutrition information about the recipe or menu item.\",\"rdfs:label\":\"nutrition\"},{\"@id\":\"http://schema.org/embedUrl\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MediaObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"rdfs:comment\":\"A URL pointing to a player for a specific video. In general, this is the information in the <code>src</code> element of an <code>embed</code> tag and should not be the same as the content of the <code>loc</code> tag.\",\"rdfs:label\":\"embedUrl\"},{\"@id\":\"http://schema.org/area\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BroadcastService\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/serviceArea\"},\"rdfs:comment\":\"The area within which users can expect to reach the broadcast service.\",\"rdfs:label\":\"area\"},{\"@id\":\"http://schema.org/Monday\",\"@type\":\"http://schema.org/DayOfWeek\",\"http://schema.org/sameAs\":{\"@id\":\"http://www.wikidata.org/entity/Q105\"},\"rdfs:comment\":\"The day of the week between Sunday and Tuesday.\",\"rdfs:label\":\"Monday\"},{\"@id\":\"http://schema.org/partOfSeason\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Episode\"},{\"@id\":\"http://schema.org/Clip\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWorkSeason\"},\"rdfs:comment\":\"The season to which this episode belongs.\",\"rdfs:label\":\"partOfSeason\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/isPartOf\"}},{\"@id\":\"http://schema.org/Book\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A book.\",\"rdfs:label\":\"Book\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/interestRate\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/FinancialProduct\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/QuantitativeValue\"},{\"@id\":\"http://schema.org/Number\"}],\"rdfs:comment\":\"The interest rate, charged or paid, applicable to the financial product. Note: This is different from the calculated annualPercentageRate.\",\"rdfs:label\":\"interestRate\"},{\"@id\":\"http://schema.org/partOfOrder\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ParcelDelivery\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Order\"},\"rdfs:comment\":\"The overall order the items in this delivery were included in.\",\"rdfs:label\":\"partOfOrder\"},{\"@id\":\"http://schema.org/totalPrice\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Ticket\"},{\"@id\":\"http://schema.org/Reservation\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Number\"},{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/PriceSpecification\"}],\"rdfs:comment\":\"The total price for the reservation or ticket, including applicable taxes, shipping, etc.\",\"rdfs:label\":\"totalPrice\"},{\"@id\":\"http://schema.org/OfferItemCondition\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A list of possible conditions for the item.\",\"rdfs:label\":\"OfferItemCondition\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/inPlaylist\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicRecording\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MusicPlaylist\"},\"rdfs:comment\":\"The playlist to which this recording belongs.\",\"rdfs:label\":\"inPlaylist\"},{\"@id\":\"http://schema.org/subEvents\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Event\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Event\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/subEvent\"},\"rdfs:comment\":\"Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference.\",\"rdfs:label\":\"subEvents\"},{\"@id\":\"http://schema.org/LocationFeatureSpecification\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"rdfs:comment\":\"Specifies a location feature by providing a structured value representing a feature of an accommodation as a property-value pair of varying degrees of formality.\",\"rdfs:label\":\"LocationFeatureSpecification\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PropertyValue\"}},{\"@id\":\"http://schema.org/identifier\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/PropertyValue\"},{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"}],\"http://www.w3.org/2002/07/owl#equivalentProperty\":{\"@id\":\"http://purl.org/dc/terms/identifier\"},\"rdfs:comment\":\"The identifier property represents any kind of identifier for any kind of <a class=\\\"localLink\\\" href=\\\"http://schema.org/Thing\\\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\\\"/docs/datamodel.html#identifierBg\\\">background notes</a> for more details.\",\"rdfs:label\":\"identifier\"},{\"@id\":\"http://schema.org/MusicRelease\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"A MusicRelease is a specific release of a music album.\",\"rdfs:label\":\"MusicRelease\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/MusicPlaylist\"}},{\"@id\":\"http://schema.org/ReservationConfirmed\",\"@type\":\"http://schema.org/ReservationStatusType\",\"rdfs:comment\":\"The status of a confirmed reservation.\",\"rdfs:label\":\"ReservationConfirmed\"},{\"@id\":\"http://schema.org/availableAtOrFrom\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/Offer\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"rdfs:comment\":\"The place(s) from which the offer can be obtained (e.g. store locations).\",\"rdfs:label\":\"availableAtOrFrom\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/areaServed\"}},{\"@id\":\"http://schema.org/TechArticle\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A technical article - Example: How-to (task) topics, step-by-step, procedural troubleshooting, specifications, etc.\",\"rdfs:label\":\"TechArticle\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Article\"}},{\"@id\":\"http://schema.org/maxPrice\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PriceSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"The highest price if the price is a range.\",\"rdfs:label\":\"maxPrice\"},{\"@id\":\"http://schema.org/countryOfOrigin\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/TVEpisode\"},{\"@id\":\"http://schema.org/Movie\"},{\"@id\":\"http://schema.org/TVSeason\"},{\"@id\":\"http://schema.org/TVSeries\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Country\"},\"rdfs:comment\":\"The country of the principal offices of the production company or individual responsible for the movie or program.\",\"rdfs:label\":\"countryOfOrigin\"},{\"@id\":\"http://schema.org/tickerSymbol\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Corporation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The exchange traded instrument associated with a Corporation object. The tickerSymbol is expressed as an exchange and an instrument name separated by a space character. For the exchange component of the tickerSymbol attribute, we reccommend using the controlled vocaulary of Market Identifier Codes (MIC) specified in ISO15022.\",\"rdfs:label\":\"tickerSymbol\"},{\"@id\":\"http://schema.org/Sculpture\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A piece of sculpture.\",\"rdfs:label\":\"Sculpture\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/scheduledPaymentDate\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Invoice\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"The date the invoice is scheduled to be paid.\",\"rdfs:label\":\"scheduledPaymentDate\"},{\"@id\":\"http://schema.org/lodgingUnitDescription\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/LodgingReservation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A full description of the lodging unit.\",\"rdfs:label\":\"lodgingUnitDescription\"},{\"@id\":\"http://schema.org/duns\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The Dun &amp; Bradstreet DUNS number for identifying an organization or business person.\",\"rdfs:label\":\"duns\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/identifier\"}},{\"@id\":\"http://schema.org/ComputerStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A computer store.\",\"rdfs:label\":\"ComputerStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/jobBenefits\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Description of benefits associated with the job.\",\"rdfs:label\":\"jobBenefits\"},{\"@id\":\"http://schema.org/RadioStation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A radio station.\",\"rdfs:label\":\"RadioStation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/option\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ChooseAction\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Thing\"}],\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/actionOption\"},\"rdfs:comment\":\"A sub property of object. The options subject to this action.\",\"rdfs:label\":\"option\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/object\"}},{\"@id\":\"http://schema.org/SingleRelease\",\"@type\":\"http://schema.org/MusicAlbumReleaseType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"SingleRelease.\",\"rdfs:label\":\"SingleRelease\"},{\"@id\":\"http://schema.org/gameLocation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/VideoGameSeries\"},{\"@id\":\"http://schema.org/Game\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/PostalAddress\"},{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"Real or fictional location of the game (or part of game).\",\"rdfs:label\":\"gameLocation\"},{\"@id\":\"http://schema.org/OrderProblem\",\"@type\":\"http://schema.org/OrderStatus\",\"rdfs:comment\":\"OrderStatus representing that there is a problem with the order.\",\"rdfs:label\":\"OrderProblem\"},{\"@id\":\"http://schema.org/Map\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A map.\",\"rdfs:label\":\"Map\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/hasMenu\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/FoodEstablishment\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Menu\"}],\"rdfs:comment\":\"Either the actual menu as a structured representation, as text, or a URL of the menu.\",\"rdfs:label\":\"hasMenu\"},{\"@id\":\"http://schema.org/taxID\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.\",\"rdfs:label\":\"taxID\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/identifier\"}},{\"@id\":\"http://schema.org/courseMode\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CourseInstance\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"The medium or means of delivery of the course instance or the mode of study, either as a text label (e.g. \\\"online\\\", \\\"onsite\\\" or \\\"blended\\\"; \\\"synchronous\\\" or \\\"asynchronous\\\"; \\\"full-time\\\" or \\\"part-time\\\") or as a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous ).\",\"rdfs:label\":\"courseMode\"},{\"@id\":\"http://schema.org/spatialCoverage\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://www.w3.org/2002/07/owl#equivalentProperty\":{\"@id\":\"http://purl.org/dc/terms/spatial\"},\"rdfs:comment\":\"The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of\\n      contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates\\n      areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York.\",\"rdfs:label\":\"spatialCoverage\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/contentLocation\"}},{\"@id\":\"http://schema.org/GolfCourse\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A golf course.\",\"rdfs:label\":\"GolfCourse\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/SportsActivityLocation\"}},{\"@id\":\"http://schema.org/followee\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/FollowAction\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"rdfs:comment\":\"A sub property of object. The person or organization being followed.\",\"rdfs:label\":\"followee\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/object\"}},{\"@id\":\"http://schema.org/recipe\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CookAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Recipe\"},\"rdfs:comment\":\"A sub property of instrument. The recipe/instructions used to perform the action.\",\"rdfs:label\":\"recipe\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/instrument\"}},{\"@id\":\"http://schema.org/musicBy\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/VideoGameSeries\"},{\"@id\":\"http://schema.org/TVSeries\"},{\"@id\":\"http://schema.org/Movie\"},{\"@id\":\"http://schema.org/Episode\"},{\"@id\":\"http://schema.org/VideoObject\"},{\"@id\":\"http://schema.org/MovieSeries\"},{\"@id\":\"http://schema.org/Clip\"},{\"@id\":\"http://schema.org/VideoGame\"},{\"@id\":\"http://schema.org/RadioSeries\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/MusicGroup\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"The composer of the soundtrack.\",\"rdfs:label\":\"musicBy\"},{\"@id\":\"http://schema.org/lyricist\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicComposition\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"The person who wrote the words.\",\"rdfs:label\":\"lyricist\"},{\"@id\":\"http://schema.org/DepartAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of  departing from a place. An agent departs from an fromLocation for a destination, optionally with participants.\",\"rdfs:label\":\"DepartAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/MoveAction\"}},{\"@id\":\"http://schema.org/TollFree\",\"@type\":\"http://schema.org/ContactPointOption\",\"rdfs:comment\":\"The associated telephone number is toll free.\",\"rdfs:label\":\"TollFree\"},{\"@id\":\"http://schema.org/amount\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/InvestmentOrDeposit\"},{\"@id\":\"http://schema.org/DatedMoneySpecification\"},{\"@id\":\"http://schema.org/LoanOrCredit\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/MonetaryAmount\"},{\"@id\":\"http://schema.org/Number\"}],\"rdfs:comment\":\"The amount of money.\",\"rdfs:label\":\"amount\"},{\"@id\":\"http://schema.org/feesAndCommissionsSpecification\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/FinancialProduct\"},{\"@id\":\"http://schema.org/FinancialService\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"Description of fees, commissions, and other terms applied either to a class of financial product, or by a financial service organization.\",\"rdfs:label\":\"feesAndCommissionsSpecification\"},{\"@id\":\"http://schema.org/reservationFor\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Reservation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"rdfs:comment\":\"The thing -- flight, event, restaurant,etc. being reserved.\",\"rdfs:label\":\"reservationFor\"},{\"@id\":\"http://schema.org/priceCurrency\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Reservation\"},{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/PriceSpecification\"},{\"@id\":\"http://schema.org/Ticket\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The currency (in 3-letter ISO 4217 format) of the price or a price component, when attached to <a class=\\\"localLink\\\" href=\\\"http://schema.org/PriceSpecification\\\">PriceSpecification</a> and its subtypes.\",\"rdfs:label\":\"priceCurrency\"},{\"@id\":\"http://schema.org/Number\",\"@type\":[\"http://schema.org/DataType\",\"rdfs:Class\"],\"rdfs:comment\":\"Data type: Number.\",\"rdfs:label\":\"Number\"},{\"@id\":\"http://schema.org/Comment\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the <a class=\\\"localLink\\\" href=\\\"http://schema.org/text\\\">text</a> property, and its topic via <a class=\\\"localLink\\\" href=\\\"http://schema.org/about\\\">about</a>, properties shared with all CreativeWorks.\",\"rdfs:label\":\"Comment\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/ShoeStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A shoe store.\",\"rdfs:label\":\"ShoeStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/serviceLocation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ServiceChannel\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"rdfs:comment\":\"The location (e.g. civic structure, local business, etc.) where a person can go to access the service.\",\"rdfs:label\":\"serviceLocation\"},{\"@id\":\"http://schema.org/executableLibraryName\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/APIReference\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Library file name e.g., mscorlib.dll, system.web.dll.\",\"rdfs:label\":\"executableLibraryName\"},{\"@id\":\"http://schema.org/trainNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/TrainTrip\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The unique identifier for the train.\",\"rdfs:label\":\"trainNumber\"},{\"@id\":\"http://schema.org/sugarContent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/NutritionInformation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Mass\"},\"rdfs:comment\":\"The number of grams of sugar.\",\"rdfs:label\":\"sugarContent\"},{\"@id\":\"http://schema.org/WPSideBar\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A sidebar section of the page.\",\"rdfs:label\":\"WPSideBar\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/WebPageElement\"}},{\"@id\":\"http://schema.org/HobbyShop\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A store that sells materials useful or necessary for various hobbies.\",\"rdfs:label\":\"HobbyShop\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/catalogNumber\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicRelease\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The catalog number for the release.\",\"rdfs:label\":\"catalogNumber\"},{\"@id\":\"http://schema.org/answerCount\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Question\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"The number of answers this question has received.\",\"rdfs:label\":\"answerCount\"},{\"@id\":\"http://schema.org/seatingType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Seat\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/QualitativeValue\"}],\"rdfs:comment\":\"The type/class of the seat.\",\"rdfs:label\":\"seatingType\"},{\"@id\":\"http://schema.org/FlightReservation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A reservation for air travel.</p>\\n\\n<p>Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class=\\\"localLink\\\" href=\\\"http://schema.org/Offer\\\">Offer</a>.\",\"rdfs:label\":\"FlightReservation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Reservation\"}},{\"@id\":\"http://schema.org/offers\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Event\"},{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/AggregateOffer\"},{\"@id\":\"http://schema.org/MenuItem\"},{\"@id\":\"http://schema.org/Service\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Offer\"},\"rdfs:comment\":\"An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.\",\"rdfs:label\":\"offers\"},{\"@id\":\"http://schema.org/AlignmentObject\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_LRMIClass\"},\"rdfs:comment\":\"An intangible item that describes an alignment between a learning resource and a node in an educational framework.\",\"rdfs:label\":\"AlignmentObject\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/editor\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"Specifies the Person who edited the CreativeWork.\",\"rdfs:label\":\"editor\"},{\"@id\":\"http://schema.org/discussionUrl\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"rdfs:comment\":\"A link to the page containing the comments of the CreativeWork.\",\"rdfs:label\":\"discussionUrl\"},{\"@id\":\"http://schema.org/SellAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of taking money from a buyer in exchange for goods or services rendered. An agent sells an object, product, or service to a buyer for a price. Reciprocal of BuyAction.\",\"rdfs:label\":\"SellAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/TradeAction\"}},{\"@id\":\"http://schema.org/PetStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A pet store.\",\"rdfs:label\":\"PetStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/coverageEndTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/LiveBlogPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The time when the live blog will stop covering the Event. Note that coverage may continue after the Event concludes.\",\"rdfs:label\":\"coverageEndTime\"},{\"@id\":\"http://schema.org/numberOfPreviousOwners\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Number\"},{\"@id\":\"http://schema.org/QuantitativeValue\"}],\"rdfs:comment\":\"The number of owners of the vehicle, including the current one.</p>\\n\\n<p>Typical unit code(s): C62\",\"rdfs:label\":\"numberOfPreviousOwners\"},{\"@id\":\"http://schema.org/OnDemandEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A publication event e.g. catch-up TV or radio podcast, during which a program is available on-demand.\",\"rdfs:label\":\"OnDemandEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PublicationEvent\"}},{\"@id\":\"http://schema.org/artworkSurface\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/VisualArtwork\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"The supporting materials for the artwork, e.g. Canvas, Paper, Wood, Board, etc.\",\"rdfs:label\":\"artworkSurface\"},{\"@id\":\"http://schema.org/HalalDiet\",\"@type\":\"http://schema.org/RestrictedDiet\",\"rdfs:comment\":\"A diet conforming to Islamic dietary practices.\",\"rdfs:label\":\"HalalDiet\"},{\"@id\":\"http://schema.org/issueNumber\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PublicationIssue\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Integer\"}],\"http://www.w3.org/2002/07/owl#equivalentProperty\":{\"@id\":\"http://purl.org/ontology/bibo/issue\"},\"rdfs:comment\":\"Identifies the issue of publication; for example, \\\"iii\\\" or \\\"2\\\".\",\"rdfs:label\":\"issueNumber\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/position\"}},{\"@id\":\"http://schema.org/AutoDealer\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An car dealership.\",\"rdfs:label\":\"AutoDealer\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AutomotiveBusiness\"}},{\"@id\":\"http://schema.org/ChooseAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of expressing a preference from a set of options or a large or unbounded set of choices/options.\",\"rdfs:label\":\"ChooseAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AssessAction\"}},{\"@id\":\"http://schema.org/customer\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Order\"},{\"@id\":\"http://schema.org/Invoice\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"Party placing the order or paying the invoice.\",\"rdfs:label\":\"customer\"},{\"@id\":\"http://schema.org/RestrictedDiet\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A diet restricted to certain foods or preparations for cultural, religious, health or lifestyle reasons.\",\"rdfs:label\":\"RestrictedDiet\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/GovernmentOffice\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A government office&#x2014;for example, an IRS or DMV office.\",\"rdfs:label\":\"GovernmentOffice\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/Place\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Entities that have a somewhat fixed, physical extension.\",\"rdfs:label\":\"Place\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Thing\"}},{\"@id\":\"http://schema.org/QualitativeValue\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"A predefined value for a product characteristic, e.g. the power cord plug type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'.\",\"rdfs:label\":\"QualitativeValue\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/petsAllowed\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/LodgingBusiness\"},{\"@id\":\"http://schema.org/Accommodation\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Boolean\"}],\"rdfs:comment\":\"Indicates whether pets are allowed to enter the accommodation or lodging business. More detailed information can be put in a text value.\",\"rdfs:label\":\"petsAllowed\"},{\"@id\":\"http://schema.org/artEdition\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/VisualArtwork\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Integer\"}],\"rdfs:comment\":\"The number of copies when multiple copies of a piece of artwork are produced - e.g. for a limited edition of 20 prints, 'artEdition' refers to the total number of copies (in this example \\\"20\\\").\",\"rdfs:label\":\"artEdition\"},{\"@id\":\"http://schema.org/award\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/Service\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"An award won by or for this item.\",\"rdfs:label\":\"award\"},{\"@id\":\"http://schema.org/application\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/EntryPoint\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/actionApplication\"},\"rdfs:comment\":\"An application that can complete the request.\",\"rdfs:label\":\"application\"},{\"@id\":\"http://schema.org/streetAddress\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PostalAddress\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The street address. For example, 1600 Amphitheatre Pkwy.\",\"rdfs:label\":\"streetAddress\"},{\"@id\":\"http://schema.org/containsSeason\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/RadioSeries\"},{\"@id\":\"http://schema.org/TVSeries\"},{\"@id\":\"http://schema.org/VideoGameSeries\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWorkSeason\"},\"rdfs:comment\":\"A season that is part of the media series.\",\"rdfs:label\":\"containsSeason\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/hasPart\"}},{\"@id\":\"http://schema.org/category\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Service\"},{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Invoice\"},{\"@id\":\"http://schema.org/Product\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Thing\"}],\"rdfs:comment\":\"A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.\",\"rdfs:label\":\"category\"},{\"@id\":\"http://schema.org/contactOption\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ContactPoint\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ContactPointOption\"},\"rdfs:comment\":\"An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).\",\"rdfs:label\":\"contactOption\"},{\"@id\":\"http://schema.org/SendAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of physically/electronically dispatching an object for transfer from an origin to a destination.Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/ReceiveAction\\\">ReceiveAction</a>: The reciprocal of SendAction.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/GiveAction\\\">GiveAction</a>: Unlike GiveAction, SendAction does not imply the transfer of ownership (e.g. I can send you my laptop, but I'm not necessarily giving it to you).</li>\\n</ul>\\n\",\"rdfs:label\":\"SendAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/TransferAction\"}},{\"@id\":\"http://schema.org/VinylFormat\",\"@type\":\"http://schema.org/MusicReleaseFormatType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"VinylFormat.\",\"rdfs:label\":\"VinylFormat\"},{\"@id\":\"http://schema.org/LeaveAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>An agent leaves an event / group with participants/friends at a location.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/JoinAction\\\">JoinAction</a>: The antonym of LeaveAction.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/UnRegisterAction\\\">UnRegisterAction</a>: Unlike UnRegisterAction, LeaveAction implies leaving a group/team of people rather than a service.</li>\\n</ul>\\n\",\"rdfs:label\":\"LeaveAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/InteractAction\"}},{\"@id\":\"http://schema.org/claimReviewed\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://github.com/schemaorg/schemaorg/issues/1061\"},\"http://schema.org/category\":\"issue-1061\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ClaimReview\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A short summary of the specific claims reviewed in a ClaimReview.\",\"rdfs:label\":\"claimReviewed\"},{\"@id\":\"http://schema.org/GasStation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A gas station.\",\"rdfs:label\":\"GasStation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AutomotiveBusiness\"}},{\"@id\":\"http://schema.org/pageEnd\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Article\"},{\"@id\":\"http://schema.org/PublicationIssue\"},{\"@id\":\"http://schema.org/PublicationVolume\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Integer\"},{\"@id\":\"http://schema.org/Text\"}],\"http://www.w3.org/2002/07/owl#equivalentProperty\":{\"@id\":\"http://purl.org/ontology/bibo/pageEnd\"},\"rdfs:comment\":\"The page on which the work ends; for example \\\"138\\\" or \\\"xvi\\\".\",\"rdfs:label\":\"pageEnd\"},{\"@id\":\"http://schema.org/expectedArrivalFrom\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ParcelDelivery\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The earliest date the package may arrive.\",\"rdfs:label\":\"expectedArrivalFrom\"},{\"@id\":\"http://schema.org/birthDate\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"Date of birth.\",\"rdfs:label\":\"birthDate\"},{\"@id\":\"http://schema.org/AssessAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of forming one's opinion, reaction or sentiment.\",\"rdfs:label\":\"AssessAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Action\"}},{\"@id\":\"http://schema.org/CommentAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of generating a comment about a subject.\",\"rdfs:label\":\"CommentAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CommunicateAction\"}},{\"@id\":\"http://schema.org/ItemListOrderDescending\",\"@type\":\"http://schema.org/ItemListOrderType\",\"rdfs:comment\":\"An ItemList ordered with higher values listed first.\",\"rdfs:label\":\"ItemListOrderDescending\"},{\"@id\":\"http://schema.org/Library\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A library.\",\"rdfs:label\":\"Library\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/TouristInformationCenter\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A tourist information center.\",\"rdfs:label\":\"TouristInformationCenter\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/MusicComposition\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"A musical composition.\",\"rdfs:label\":\"MusicComposition\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/photos\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Photograph\"},{\"@id\":\"http://schema.org/ImageObject\"}],\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/photo\"},\"rdfs:comment\":\"Photographs of this place.\",\"rdfs:label\":\"photos\"},{\"@id\":\"http://schema.org/makesOffer\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/offeredBy\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Offer\"},\"rdfs:comment\":\"A pointer to products or services offered by the organization or person.\",\"rdfs:label\":\"makesOffer\"},{\"@id\":\"http://schema.org/map\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/hasMap\"},\"rdfs:comment\":\"A URL to a map of the place.\",\"rdfs:label\":\"map\"},{\"@id\":\"http://schema.org/ProfessionalService\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Original definition: \\\"provider of professional services.\\\"</p>\\n\\n<p>The general <a class=\\\"localLink\\\" href=\\\"http://schema.org/ProfessionalService\\\">ProfessionalService</a> type for local businesses was deprecated due to confusion with <a class=\\\"localLink\\\" href=\\\"http://schema.org/Service\\\">Service</a>. For reference, the types that it included were: <a class=\\\"localLink\\\" href=\\\"http://schema.org/Dentist\\\">Dentist</a>,\\n        <a class=\\\"localLink\\\" href=\\\"http://schema.org/AccountingService\\\">AccountingService</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/Attorney\\\">Attorney</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/Notary\\\">Notary</a>, as well as types for several kinds of <a class=\\\"localLink\\\" href=\\\"http://schema.org/HomeAndConstructionBusiness\\\">HomeAndConstructionBusiness</a>: <a class=\\\"localLink\\\" href=\\\"http://schema.org/Electrician\\\">Electrician</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/GeneralContractor\\\">GeneralContractor</a>,\\n        <a class=\\\"localLink\\\" href=\\\"http://schema.org/HousePainter\\\">HousePainter</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/Locksmith\\\">Locksmith</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/Plumber\\\">Plumber</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/RoofingContractor\\\">RoofingContractor</a>. <a class=\\\"localLink\\\" href=\\\"http://schema.org/LegalService\\\">LegalService</a> was introduced as a more inclusive supertype of <a class=\\\"localLink\\\" href=\\\"http://schema.org/Attorney\\\">Attorney</a>.\",\"rdfs:label\":\"ProfessionalService\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/instrument\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Action\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"rdfs:comment\":\"The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>.\",\"rdfs:label\":\"instrument\"},{\"@id\":\"http://schema.org/orderQuantity\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/OrderItem\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"The number of the item ordered. If the property is not set, assume the quantity is one.\",\"rdfs:label\":\"orderQuantity\"},{\"@id\":\"http://schema.org/width\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/VisualArtwork\"},{\"@id\":\"http://schema.org/MediaObject\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Distance\"},{\"@id\":\"http://schema.org/QuantitativeValue\"}],\"rdfs:comment\":\"The width of the item.\",\"rdfs:label\":\"width\"},{\"@id\":\"http://schema.org/priceValidUntil\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Offer\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"The date after which the price is no longer available.\",\"rdfs:label\":\"priceValidUntil\"},{\"@id\":\"http://schema.org/givenName\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.\",\"rdfs:label\":\"givenName\"},{\"@id\":\"http://schema.org/SelfStorage\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A self-storage facility.\",\"rdfs:label\":\"SelfStorage\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/ticketNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Ticket\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The unique identifier for the ticket.\",\"rdfs:label\":\"ticketNumber\"},{\"@id\":\"http://schema.org/ScholarlyArticle\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A scholarly article.\",\"rdfs:label\":\"ScholarlyArticle\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Article\"}},{\"@id\":\"http://schema.org/valueMaxLength\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PropertyValueSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"Specifies the allowed range for number of characters in a literal value.\",\"rdfs:label\":\"valueMaxLength\"},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Tourism\",\"@type\":\"http://schema.org/Organization\",\"rdfs:comment\":\"This element is based on the work of the <a href=\\\"https://www.w3.org/community/tourismdata\\\">Tourism Structured Web Data Community Group</a>.\",\"rdfs:label\":\"Tourism\"},{\"@id\":\"http://schema.org/cholesterolContent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/NutritionInformation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Mass\"},\"rdfs:comment\":\"The number of milligrams of cholesterol.\",\"rdfs:label\":\"cholesterolContent\"},{\"@id\":\"http://schema.org/ReservationPending\",\"@type\":\"http://schema.org/ReservationStatusType\",\"rdfs:comment\":\"The status of a reservation when a request has been sent, but not confirmed.\",\"rdfs:label\":\"ReservationPending\"},{\"@id\":\"http://schema.org/GeoShape\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews\"},\"rdfs:comment\":\"The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points.\",\"rdfs:label\":\"GeoShape\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/StructuredValue\"}},{\"@id\":\"http://schema.org/EntertainmentBusiness\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A business providing entertainment.\",\"rdfs:label\":\"EntertainmentBusiness\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/creditedTo\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicRelease\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"The group the release is credited to if different than the byArtist. For example, Red and Blue is credited to \\\"Stefani Germanotta Band\\\", but by Lady Gaga.\",\"rdfs:label\":\"creditedTo\"},{\"@id\":\"http://schema.org/datePosted\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"Publication date for the job posting.\",\"rdfs:label\":\"datePosted\"},{\"@id\":\"http://schema.org/BroadcastChannel\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A unique instance of a BroadcastService on a CableOrSatelliteService lineup.\",\"rdfs:label\":\"BroadcastChannel\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/Florist\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A florist.\",\"rdfs:label\":\"Florist\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/directors\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/VideoObject\"},{\"@id\":\"http://schema.org/VideoGame\"},{\"@id\":\"http://schema.org/Clip\"},{\"@id\":\"http://schema.org/MovieSeries\"},{\"@id\":\"http://schema.org/RadioSeries\"},{\"@id\":\"http://schema.org/TVSeries\"},{\"@id\":\"http://schema.org/VideoGameSeries\"},{\"@id\":\"http://schema.org/Movie\"},{\"@id\":\"http://schema.org/Episode\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/director\"},\"rdfs:comment\":\"A director of e.g. tv, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip.\",\"rdfs:label\":\"directors\"},{\"@id\":\"http://schema.org/runtimePlatform\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareSourceCode\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0).\",\"rdfs:label\":\"runtimePlatform\"},{\"@id\":\"http://schema.org/contactPoints\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ContactPoint\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/contactPoint\"},\"rdfs:comment\":\"A contact point for a person or organization.\",\"rdfs:label\":\"contactPoints\"},{\"@id\":\"http://schema.org/skills\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Skills required to fulfill this role.\",\"rdfs:label\":\"skills\"},{\"@id\":\"http://schema.org/copyrightHolder\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"The party holding the legal copyright to the CreativeWork.\",\"rdfs:label\":\"copyrightHolder\"},{\"@id\":\"http://schema.org/paymentStatus\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Invoice\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/PaymentStatusType\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The status of payment; whether the invoice has been paid or not.\",\"rdfs:label\":\"paymentStatus\"},{\"@id\":\"http://schema.org/characterName\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PerformanceRole\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The name of a character played in some acting or performing role, i.e. in a PerformanceRole.\",\"rdfs:label\":\"characterName\"},{\"@id\":\"http://schema.org/Mass\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Properties that take Mass as values are of the form '&lt;Number&gt; &lt;Mass unit of measure&gt;'. E.g., '7 kg'.\",\"rdfs:label\":\"Mass\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Quantity\"}},{\"@id\":\"http://schema.org/breadcrumb\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/WebPage\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/BreadcrumbList\"}],\"rdfs:comment\":\"A set of links that can help a user understand and navigate a website hierarchy.\",\"rdfs:label\":\"breadcrumb\"},{\"@id\":\"http://schema.org/dependencies\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/TechArticle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Prerequisites needed to fulfill steps in article.\",\"rdfs:label\":\"dependencies\"},{\"@id\":\"http://schema.org/HowToTool\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A tool used (but not consumed) when performing instructions for how to achieve a result.\",\"rdfs:label\":\"HowToTool\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/HowToItem\"}},{\"@id\":\"http://schema.org/CassetteFormat\",\"@type\":\"http://schema.org/MusicReleaseFormatType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"CassetteFormat.\",\"rdfs:label\":\"CassetteFormat\"},{\"@id\":\"http://schema.org/PaymentMethod\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"<p>A payment method is a standardized procedure for transferring the monetary amount for a purchase. Payment methods are characterized by the legal and technical structures used, and by the organization or group carrying out the transaction.</p>\\n\\n<p>Commonly used values:</p>\\n\\n<ul>\\n<li>http://purl.org/goodrelations/v1#ByBankTransferInAdvance</li>\\n<li>http://purl.org/goodrelations/v1#ByInvoice</li>\\n<li>http://purl.org/goodrelations/v1#Cash</li>\\n<li>http://purl.org/goodrelations/v1#CheckInAdvance</li>\\n<li>http://purl.org/goodrelations/v1#COD</li>\\n<li>http://purl.org/goodrelations/v1#DirectDebit</li>\\n<li>http://purl.org/goodrelations/v1#GoogleCheckout</li>\\n<li>http://purl.org/goodrelations/v1#PayPal</li>\\n<li>http://purl.org/goodrelations/v1#PaySwarm</li>\\n</ul>\\n\",\"rdfs:label\":\"PaymentMethod\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/UserPlusOnes\",\"@type\":\"rdfs:Class\",\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/InteractionCounter\"},\"rdfs:comment\":\"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\\\"localLink\\\" href=\\\"http://schema.org/Action\\\">Action</a>-based vocabulary, alongside types such as <a class=\\\"localLink\\\" href=\\\"http://schema.org/Comment\\\">Comment</a>.\",\"rdfs:label\":\"UserPlusOnes\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/UserInteraction\"}},{\"@id\":\"http://schema.org/branchCode\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A short textual code (also called \\\"store code\\\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.</p>\\n\\n<p>For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \\\"3047\\\" is a branchCode for a particular branch.\",\"rdfs:label\":\"branchCode\"},{\"@id\":\"http://schema.org/WebPage\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A web page. Every web page is implicitly assumed to be declared to be of type WebPage, so the various properties about that webpage, such as <code>breadcrumb</code> may be used. We recommend explicit declaration if these properties are specified, but if they are found outside of an itemscope, they will be assumed to be about the page.\",\"rdfs:label\":\"WebPage\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/merchant\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Order\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/seller\"},\"rdfs:comment\":\"'merchant' is an out-dated term for 'seller'.\",\"rdfs:label\":\"merchant\"},{\"@id\":\"http://schema.org/broker\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Service\"},{\"@id\":\"http://schema.org/Reservation\"},{\"@id\":\"http://schema.org/Invoice\"},{\"@id\":\"http://schema.org/Order\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"rdfs:comment\":\"An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.\",\"rdfs:label\":\"broker\"},{\"@id\":\"http://schema.org/Residence\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The place where a person lives.\",\"rdfs:label\":\"Residence\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Place\"}},{\"@id\":\"http://schema.org/UserPageVisits\",\"@type\":\"rdfs:Class\",\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/InteractionCounter\"},\"rdfs:comment\":\"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\\\"localLink\\\" href=\\\"http://schema.org/Action\\\">Action</a>-based vocabulary, alongside types such as <a class=\\\"localLink\\\" href=\\\"http://schema.org/Comment\\\">Comment</a>.\",\"rdfs:label\":\"UserPageVisits\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/UserInteraction\"}},{\"@id\":\"http://schema.org/Mosque\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A mosque.\",\"rdfs:label\":\"Mosque\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PlaceOfWorship\"}},{\"@id\":\"http://schema.org/UsedCondition\",\"@type\":\"http://schema.org/OfferItemCondition\",\"rdfs:comment\":\"Indicates that the item is used.\",\"rdfs:label\":\"UsedCondition\"},{\"@id\":\"http://schema.org/addOn\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Offer\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Offer\"},\"rdfs:comment\":\"An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge).\",\"rdfs:label\":\"addOn\"},{\"@id\":\"http://schema.org/FrontWheelDriveConfiguration\",\"@type\":\"http://schema.org/DriveWheelConfigurationValue\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"rdfs:comment\":\"Front-wheel drive is a transmission layout where the engine drives the front wheels.\",\"rdfs:label\":\"FrontWheelDriveConfiguration\"},{\"@id\":\"http://schema.org/sportsTeam\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ExerciseAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/SportsTeam\"},\"rdfs:comment\":\"A sub property of participant. The sports team that participated on this action.\",\"rdfs:label\":\"sportsTeam\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/participant\"}},{\"@id\":\"http://schema.org/inBroadcastLineup\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BroadcastChannel\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CableOrSatelliteService\"},\"rdfs:comment\":\"The CableOrSatelliteService offering the channel.\",\"rdfs:label\":\"inBroadcastLineup\"},{\"@id\":\"http://schema.org/featureList\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"Features or modules provided by this application (and possibly required by other applications).\",\"rdfs:label\":\"featureList\"},{\"@id\":\"http://schema.org/accessibilityHazard\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 (<a href=\\\"http://www.w3.org/wiki/WebSchemas/Accessibility\\\">WebSchemas wiki lists possible values</a>).\",\"rdfs:label\":\"accessibilityHazard\"},{\"@id\":\"http://schema.org/albumReleaseType\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicAlbum\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MusicAlbumReleaseType\"},\"rdfs:comment\":\"The kind of release which this album is: single, EP or album.\",\"rdfs:label\":\"albumReleaseType\"},{\"@id\":\"http://schema.org/surface\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/VisualArtwork\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Text\"}],\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/artworkSurface\"},\"rdfs:comment\":\"A material used as a surface in some artwork, e.g. Canvas, Paper, Wood, Board, etc.\",\"rdfs:label\":\"surface\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/material\"}},{\"@id\":\"http://schema.org/copyrightYear\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"The year during which the claimed copyright for the CreativeWork was first asserted.\",\"rdfs:label\":\"copyrightYear\"},{\"@id\":\"http://schema.org/sportsEvent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ExerciseAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/SportsEvent\"},\"rdfs:comment\":\"A sub property of location. The sports event where this action occurred.\",\"rdfs:label\":\"sportsEvent\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/location\"}},{\"@id\":\"http://schema.org/ReplyAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of responding to a question/message asked/sent by the object. Related to <a class=\\\"localLink\\\" href=\\\"http://schema.org/AskAction\\\">AskAction</a></p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/AskAction\\\">AskAction</a>: Appears generally as an origin of a ReplyAction.</li>\\n</ul>\\n\",\"rdfs:label\":\"ReplyAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CommunicateAction\"}},{\"@id\":\"http://schema.org/actionPlatform\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/EntryPoint\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.\",\"rdfs:label\":\"actionPlatform\"},{\"@id\":\"http://schema.org/distance\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/TravelAction\"},{\"@id\":\"http://schema.org/ExerciseAction\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Distance\"},\"rdfs:comment\":\"The distance travelled, e.g. exercising or travelling.\",\"rdfs:label\":\"distance\"},{\"@id\":\"http://schema.org/longitude\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/GeoCoordinates\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Number\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The longitude of a location. For example <code>-122.08585</code> (<a href=\\\"https://en.wikipedia.org/wiki/World_Geodetic_System\\\">WGS 84</a>).\",\"rdfs:label\":\"longitude\"},{\"@id\":\"http://schema.org/issn\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/WebSite\"},{\"@id\":\"http://schema.org/CreativeWorkSeries\"},{\"@id\":\"http://schema.org/Dataset\"},{\"@id\":\"http://schema.org/Blog\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"http://www.w3.org/2002/07/owl#equivalentProperty\":{\"@id\":\"http://purl.org/ontology/bibo/issn\"},\"rdfs:comment\":\"The International Standard Serial Number (ISSN) that identifies this serial publication. You can repeat this property to identify different formats of, or the linking ISSN (ISSN-L) for, this serial publication.\",\"rdfs:label\":\"issn\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/identifier\"}},{\"@id\":\"http://schema.org/hasMap\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Map\"}],\"rdfs:comment\":\"A URL to a map of the place.\",\"rdfs:label\":\"hasMap\"},{\"@id\":\"http://schema.org/BusTrip\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A trip on a commercial bus line.\",\"rdfs:label\":\"BusTrip\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/awards\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/CreativeWork\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/award\"},\"rdfs:comment\":\"Awards won by or for this item.\",\"rdfs:label\":\"awards\"},{\"@id\":\"http://schema.org/incentives\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/incentiveCompensation\"},\"rdfs:comment\":\"Description of bonus and commission compensation aspects of the job.\",\"rdfs:label\":\"incentives\"},{\"@id\":\"http://schema.org/printEdition\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/NewsArticle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The edition of the print product in which the NewsArticle appears.\",\"rdfs:label\":\"printEdition\"},{\"@id\":\"http://schema.org/UnRegisterAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of un-registering from a service.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/RegisterAction\\\">RegisterAction</a>: antonym of UnRegisterAction.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/Leave\\\">Leave</a>: Unlike LeaveAction, UnRegisterAction implies that you are unregistering from a service you werer previously registered, rather than leaving a team/group of people.</li>\\n</ul>\\n\",\"rdfs:label\":\"UnRegisterAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/InteractAction\"}},{\"@id\":\"http://schema.org/OfflinePermanently\",\"@type\":\"http://schema.org/GameServerStatus\",\"rdfs:comment\":\"Game server status: OfflinePermanently. Server is offline and not available.\",\"rdfs:label\":\"OfflinePermanently\"},{\"@id\":\"http://schema.org/opponent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ExerciseAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"A sub property of participant. The opponent on this action.\",\"rdfs:label\":\"opponent\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/participant\"}},{\"@id\":\"http://schema.org/releaseOf\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicRelease\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/albumRelease\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MusicAlbum\"},\"rdfs:comment\":\"The album this is a release of.\",\"rdfs:label\":\"releaseOf\"},{\"@id\":\"http://schema.org/LoseAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of being defeated in a competitive activity.\",\"rdfs:label\":\"LoseAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AchieveAction\"}},{\"@id\":\"http://schema.org/participant\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Action\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"rdfs:comment\":\"Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>.\",\"rdfs:label\":\"participant\"},{\"@id\":\"http://schema.org/educationRequirements\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Educational background needed for the position.\",\"rdfs:label\":\"educationRequirements\"},{\"@id\":\"http://schema.org/ShoppingCenter\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A shopping center or mall.\",\"rdfs:label\":\"ShoppingCenter\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/Flight\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An airline flight.\",\"rdfs:label\":\"Flight\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/menu\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/FoodEstablishment\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Menu\"}],\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/hasMenu\"},\"rdfs:comment\":\"Either the actual menu as a structured representation, as text, or a URL of the menu.\",\"rdfs:label\":\"menu\"},{\"@id\":\"http://schema.org/servicePostalAddress\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ServiceChannel\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/PostalAddress\"},\"rdfs:comment\":\"The address for accessing the service by mail.\",\"rdfs:label\":\"servicePostalAddress\"},{\"@id\":\"http://schema.org/HowToStep\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A step in the instructions for how to achieve a result. It is an ordered list with HowToDirection and/or HowToTip items.\",\"rdfs:label\":\"HowToStep\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ItemList\"}},{\"@id\":\"http://schema.org/videoQuality\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/VideoObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The quality of the video.\",\"rdfs:label\":\"videoQuality\"},{\"@id\":\"http://schema.org/OfferCatalog\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An OfferCatalog is an ItemList that contains related Offers and/or further OfferCatalogs that are offeredBy the same provider.\",\"rdfs:label\":\"OfferCatalog\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ItemList\"}},{\"@id\":\"http://schema.org/warranty\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Demand\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/WarrantyPromise\"},\"rdfs:comment\":\"The warranty promise(s) included in the offer.\",\"rdfs:label\":\"warranty\"},{\"@id\":\"http://schema.org/includesObject\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Demand\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/TypeAndQuantityNode\"},\"rdfs:comment\":\"This links to a node or nodes indicating the exact quantity of the products included in the offer.\",\"rdfs:label\":\"includesObject\"},{\"@id\":\"http://schema.org/liveBlogUpdate\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/LiveBlogPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/BlogPosting\"},\"rdfs:comment\":\"An update to the LiveBlog.\",\"rdfs:label\":\"liveBlogUpdate\"},{\"@id\":\"http://schema.org/CreativeWorkSeries\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A CreativeWorkSeries in schema.org is a group of related items, typically but not necessarily of the same kind. CreativeWorkSeries are usually organized into some order, often chronological. Unlike <a class=\\\"localLink\\\" href=\\\"http://schema.org/ItemList\\\">ItemList</a> which is a general purpose data structure for lists of things, the emphasis with CreativeWorkSeries is on published materials (written e.g. books and periodicals, or media such as tv, radio and games).</p>\\n\\n<p>Specific subtypes are available for describing <a class=\\\"localLink\\\" href=\\\"http://schema.org/TVSeries\\\">TVSeries</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/RadioSeries\\\">RadioSeries</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/MovieSeries\\\">MovieSeries</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/BookSeries\\\">BookSeries</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/Periodical\\\">Periodical</a> and <a class=\\\"localLink\\\" href=\\\"http://schema.org/VideoGameSeries\\\">VideoGameSeries</a>. In each case, the <a class=\\\"localLink\\\" href=\\\"http://schema.org/hasPart\\\">hasPart</a> / <a class=\\\"localLink\\\" href=\\\"http://schema.org/isPartOf\\\">isPartOf</a> properties can be used to relate the CreativeWorkSeries to its parts. The general CreativeWorkSeries type serves largely just to organize these more specific and practical subtypes.</p>\\n\\n<p>It is common for properties applicable to an item from the series to be usefully applied to the containing group. Schema.org attempts to anticipate some of these cases, but publishers should be free to apply properties of the series parts to the series as a whole wherever they seem appropriate.\",\"rdfs:label\":\"CreativeWorkSeries\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/eligibleQuantity\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/PriceSpecification\"},{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/Offer\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.\",\"rdfs:label\":\"eligibleQuantity\"},{\"@id\":\"http://schema.org/priceComponent\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CompoundPriceSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/UnitPriceSpecification\"},\"rdfs:comment\":\"This property links to all <a class=\\\"localLink\\\" href=\\\"http://schema.org/UnitPriceSpecification\\\">UnitPriceSpecification</a> nodes that apply in parallel for the <a class=\\\"localLink\\\" href=\\\"http://schema.org/CompoundPriceSpecification\\\">CompoundPriceSpecification</a> node.\",\"rdfs:label\":\"priceComponent\"},{\"@id\":\"http://schema.org/NightClub\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A nightclub or discotheque.\",\"rdfs:label\":\"NightClub\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/EntertainmentBusiness\"}},{\"@id\":\"http://schema.org/ConfirmAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of notifying someone that a future event/action is going to happen as expected.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/CancelAction\\\">CancelAction</a>: The antonym of ConfirmAction.</li>\\n</ul>\\n\",\"rdfs:label\":\"ConfirmAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/InformAction\"}},{\"@id\":\"http://schema.org/ccRecipient\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Message\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/ContactPoint\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"A sub property of recipient. The recipient copied on a message.\",\"rdfs:label\":\"ccRecipient\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/recipient\"}},{\"@id\":\"http://schema.org/significantLink\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/WebPage\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"rdfs:comment\":\"One of the more significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.\",\"rdfs:label\":\"significantLink\"},{\"@id\":\"http://schema.org/applicationSubCategory\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"Subcategory of the application, e.g. 'Arcade Game'.\",\"rdfs:label\":\"applicationSubCategory\"},{\"@id\":\"http://schema.org/PaymentPastDue\",\"@type\":\"http://schema.org/PaymentStatusType\",\"rdfs:comment\":\"The payment is due and considered late.\",\"rdfs:label\":\"PaymentPastDue\"},{\"@id\":\"http://schema.org/recordedAt\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/recordedIn\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Event\"},\"rdfs:comment\":\"The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.\",\"rdfs:label\":\"recordedAt\"},{\"@id\":\"http://schema.org/recordedAs\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicComposition\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/recordingOf\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MusicRecording\"},\"rdfs:comment\":\"An audio recording of the work.\",\"rdfs:label\":\"recordedAs\"},{\"@id\":\"http://schema.org/spatial\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Dataset\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/spatialCoverage\"},\"http://www.w3.org/2002/07/owl#equivalentProperty\":{\"@id\":\"http://purl.org/dc/terms/spatial\"},\"rdfs:comment\":\"The range of spatial applicability of a dataset, e.g. for a dataset of New York weather, the state of New York.\",\"rdfs:label\":\"spatial\"},{\"@id\":\"http://schema.org/FourWheelDriveConfiguration\",\"@type\":\"http://schema.org/DriveWheelConfigurationValue\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"rdfs:comment\":\"Four-wheel drive is a transmission layout where the engine primarily drives two wheels with a part-time four-wheel drive capability.\",\"rdfs:label\":\"FourWheelDriveConfiguration\"},{\"@id\":\"http://schema.org/additionalProperty\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/QuantitativeValue\"},{\"@id\":\"http://schema.org/QualitativeValue\"},{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/Product\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/PropertyValue\"},\"rdfs:comment\":\"A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.</p>\\n\\n<p>Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\",\"rdfs:label\":\"additionalProperty\"},{\"@id\":\"http://schema.org/serviceOutput\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Service\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"rdfs:comment\":\"The tangible thing generated by the service, e.g. a passport, permit, etc.\",\"rdfs:label\":\"serviceOutput\"},{\"@id\":\"http://schema.org/DataFeed\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A single feed providing structured information about one or more entities or topics.\",\"rdfs:label\":\"DataFeed\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Dataset\"}},{\"@id\":\"http://schema.org/State\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A state or province of a country.\",\"rdfs:label\":\"State\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AdministrativeArea\"}},{\"@id\":\"http://schema.org/commentCount\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.\",\"rdfs:label\":\"commentCount\"},{\"@id\":\"http://schema.org/Playground\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A playground.\",\"rdfs:label\":\"Playground\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/relatedLink\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/WebPage\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"rdfs:comment\":\"A link related to this web page, for example to other related web pages.\",\"rdfs:label\":\"relatedLink\"},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\",\"@type\":\"http://schema.org/Organization\",\"rdfs:comment\":\"This element is based on the work of the Automotive Ontology Working Group, see <a href=\\\"http://www.automotive-ontology.org\\\">www.automotive-ontology.org</a> for details. Many class and property definitions are inspired by or based on abstracts from Wikipedia, the free encyclopedia.\",\"rdfs:label\":\"AutomotiveOntologyWGClass\"},{\"@id\":\"http://schema.org/AppendAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of inserting at the end if an ordered collection.\",\"rdfs:label\":\"AppendAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/InsertAction\"}},{\"@id\":\"http://schema.org/replacee\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ReplaceAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"rdfs:comment\":\"A sub property of object. The object that is being replaced.\",\"rdfs:label\":\"replacee\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/object\"}},{\"@id\":\"http://schema.org/InteractionCounter\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A summary of how users have interacted with this CreativeWork. In most cases, authors will use a subtype to specify the specific type of interaction.\",\"rdfs:label\":\"InteractionCounter\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/StructuredValue\"}},{\"@id\":\"http://schema.org/PaymentAutomaticallyApplied\",\"@type\":\"http://schema.org/PaymentStatusType\",\"rdfs:comment\":\"An automatic payment system is in place and will be used.\",\"rdfs:label\":\"PaymentAutomaticallyApplied\"},{\"@id\":\"http://schema.org/replacer\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ReplaceAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"rdfs:comment\":\"A sub property of object. The object that replaces.\",\"rdfs:label\":\"replacer\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/object\"}},{\"@id\":\"http://schema.org/ParkingFacility\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A parking lot or other parking facility.\",\"rdfs:label\":\"ParkingFacility\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/reportNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Report\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The number or other unique designator assigned to a Report by the publishing organization.\",\"rdfs:label\":\"reportNumber\"},{\"@id\":\"http://schema.org/CookAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of producing/preparing food.\",\"rdfs:label\":\"CookAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreateAction\"}},{\"@id\":\"http://schema.org/Male\",\"@type\":\"http://schema.org/GenderType\",\"rdfs:comment\":\"The male gender.\",\"rdfs:label\":\"Male\"},{\"@id\":\"http://schema.org/AuthorizeAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of granting permission to an object.\",\"rdfs:label\":\"AuthorizeAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AllocateAction\"}},{\"@id\":\"http://schema.org/BookSeries\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A series of books. Included books can be indicated with the hasPart property.\",\"rdfs:label\":\"BookSeries\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWorkSeries\"}},{\"@id\":\"http://schema.org/SpokenWordAlbum\",\"@type\":\"http://schema.org/MusicAlbumProductionType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"SpokenWordAlbum.\",\"rdfs:label\":\"SpokenWordAlbum\"},{\"@id\":\"http://schema.org/vendor\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BuyAction\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/seller\"},\"rdfs:comment\":\"'vendor' is an earlier term for 'seller'.\",\"rdfs:label\":\"vendor\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/participant\"}},{\"@id\":\"http://schema.org/UserDownloads\",\"@type\":\"rdfs:Class\",\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/InteractionCounter\"},\"rdfs:comment\":\"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\\\"localLink\\\" href=\\\"http://schema.org/Action\\\">Action</a>-based vocabulary, alongside types such as <a class=\\\"localLink\\\" href=\\\"http://schema.org/Comment\\\">Comment</a>.\",\"rdfs:label\":\"UserDownloads\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/UserInteraction\"}},{\"@id\":\"http://schema.org/PawnShop\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A shop that will buy, or lend money against the security of, personal possessions.\",\"rdfs:label\":\"PawnShop\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/winner\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/LoseAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"A sub property of participant. The winner of the action.\",\"rdfs:label\":\"winner\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/participant\"}},{\"@id\":\"http://schema.org/articleSection\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Article\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc.\",\"rdfs:label\":\"articleSection\"},{\"@id\":\"http://schema.org/AssignAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of allocating an action/event/task to some destination (someone or something).\",\"rdfs:label\":\"AssignAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AllocateAction\"}},{\"@id\":\"http://schema.org/PayAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An agent pays a price to a participant.\",\"rdfs:label\":\"PayAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/TradeAction\"}},{\"@id\":\"http://schema.org/HighSchool\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A high school.\",\"rdfs:label\":\"HighSchool\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/EducationalOrganization\"}},{\"@id\":\"http://schema.org/tool\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/HowTo\"},{\"@id\":\"http://schema.org/HowToDirection\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/HowToTool\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"A sub property of instrument. An object used (but not consumed) when performing instructions or a direction.\",\"rdfs:label\":\"tool\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/instrument\"}},{\"@id\":\"http://schema.org/fileFormat\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"Media type, typically MIME format (see <a href=\\\"http://www.iana.org/assignments/media-types/media-types.xhtml\\\">IANA site</a>) of the content e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry.\",\"rdfs:label\":\"fileFormat\"},{\"@id\":\"http://schema.org/TypeAndQuantityNode\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"A structured value indicating the quantity, unit of measurement, and business function of goods included in a bundle offer.\",\"rdfs:label\":\"TypeAndQuantityNode\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/StructuredValue\"}},{\"@id\":\"http://schema.org/SteeringPositionValue\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"rdfs:comment\":\"A value indicating a steering position.\",\"rdfs:label\":\"SteeringPositionValue\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/QualitativeValue\"}},{\"@id\":\"http://schema.org/AudiobookFormat\",\"@type\":\"http://schema.org/BookFormatType\",\"rdfs:comment\":\"Book format: Audiobook. This is an enumerated value for use with the bookFormat property. There is also a type 'Audiobook' in the bib extension which includes Audiobook specific properties.\",\"rdfs:label\":\"AudiobookFormat\"},{\"@id\":\"http://schema.org/SportsClub\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A sports club.\",\"rdfs:label\":\"SportsClub\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/SportsActivityLocation\"}},{\"@id\":\"http://schema.org/Aquarium\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Aquarium.\",\"rdfs:label\":\"Aquarium\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/OrderDelivered\",\"@type\":\"http://schema.org/OrderStatus\",\"rdfs:comment\":\"OrderStatus representing successful delivery of an order.\",\"rdfs:label\":\"OrderDelivered\"},{\"@id\":\"http://schema.org/validUntil\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Permit\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"The date when the item is no longer valid.\",\"rdfs:label\":\"validUntil\"},{\"@id\":\"http://schema.org/TrainTrip\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A trip on a commercial train line.\",\"rdfs:label\":\"TrainTrip\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/Bridge\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A bridge.\",\"rdfs:label\":\"Bridge\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/TrainStation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A train station.\",\"rdfs:label\":\"TrainStation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/typeOfBed\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BedDetails\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The type of bed to which the BedDetail refers, i.e. the type of bed available in the quantity indicated by quantity.\",\"rdfs:label\":\"typeOfBed\"},{\"@id\":\"http://schema.org/DatedMoneySpecification\",\"@type\":\"rdfs:Class\",\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/MonetaryAmount\"},\"rdfs:comment\":\"A DatedMoneySpecification represents monetary values with optional start and end dates. For example, this could represent an employee's salary over a specific period of time. <strong>Note:</strong> This type has been superseded by <a class=\\\"localLink\\\" href=\\\"http://schema.org/MonetaryAmount\\\">MonetaryAmount</a> use of that type is recommended\",\"rdfs:label\":\"DatedMoneySpecification\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/StructuredValue\"}},{\"@id\":\"http://schema.org/inLanguage\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/CommunicateAction\"},{\"@id\":\"http://schema.org/Event\"},{\"@id\":\"http://schema.org/WriteAction\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Language\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The language of the content or performance or used in an action. Please use one of the language codes from the <a href=\\\"http://tools.ietf.org/html/bcp47\\\">IETF BCP 47 standard</a>. See also <a class=\\\"localLink\\\" href=\\\"http://schema.org/availableLanguage\\\">availableLanguage</a>.\",\"rdfs:label\":\"inLanguage\"},{\"@id\":\"http://schema.org/familyName\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.\",\"rdfs:label\":\"familyName\"},{\"@id\":\"http://schema.org/fuelEfficiency\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"<p>The distance traveled per unit of fuel used; most commonly miles per gallon (mpg) or kilometers per liter (km/L).</p>\\n\\n<ul>\\n<li>Note 1: There are unfortunately no standard unit codes for miles per gallon or kilometers per liter. Use <a class=\\\"localLink\\\" href=\\\"http://schema.org/unitText\\\">unitText</a> to indicate the unit of measurement, e.g. mpg or km/L.</li>\\n<li>Note 2: There are two ways of indicating the fuel consumption, <a class=\\\"localLink\\\" href=\\\"http://schema.org/fuelConsumption\\\">fuelConsumption</a> (e.g. 8 liters per 100 km) and <a class=\\\"localLink\\\" href=\\\"http://schema.org/fuelEfficiency\\\">fuelEfficiency</a> (e.g. 30 miles per gallon). They are reciprocal.</li>\\n<li>Note 3: Often, the absolute value is useful only when related to driving speed (\\\"at 80 km/h\\\") or usage pattern (\\\"city traffic\\\"). You can use <a class=\\\"localLink\\\" href=\\\"http://schema.org/valueReference\\\">valueReference</a> to link the value for the fuel economy to another value.</li>\\n</ul>\\n\",\"rdfs:label\":\"fuelEfficiency\"},{\"@id\":\"http://schema.org/PaymentDue\",\"@type\":\"http://schema.org/PaymentStatusType\",\"rdfs:comment\":\"The payment is due, but still within an acceptable time to be received.\",\"rdfs:label\":\"PaymentDue\"},{\"@id\":\"http://schema.org/track\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/MusicPlaylist\"},{\"@id\":\"http://schema.org/MusicGroup\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/ItemList\"},{\"@id\":\"http://schema.org/MusicRecording\"}],\"rdfs:comment\":\"A music recording (track)&#x2014;usually a single song. If an ItemList is given, the list should contain items of type MusicRecording.\",\"rdfs:label\":\"track\"},{\"@id\":\"http://schema.org/seeks\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Demand\"},\"rdfs:comment\":\"A pointer to products or services sought by the organization or person (demand).\",\"rdfs:label\":\"seeks\"},{\"@id\":\"http://schema.org/member\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/ProgramMembership\"},{\"@id\":\"http://schema.org/Organization\"}],\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/memberOf\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.\",\"rdfs:label\":\"member\"},{\"@id\":\"http://schema.org/touristType\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":[{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Tourism\"},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#IIT-CNR.it\"}],\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/TouristAttraction\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Audience\"}],\"rdfs:comment\":\"Attraction suitable for type(s) of tourist. eg. Children, visitors from a particular country, etc.\",\"rdfs:label\":\"touristType\"},{\"@id\":\"http://schema.org/founders\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/founder\"},\"rdfs:comment\":\"A person who founded this organization.\",\"rdfs:label\":\"founders\"},{\"@id\":\"http://schema.org/Friday\",\"@type\":\"http://schema.org/DayOfWeek\",\"http://schema.org/sameAs\":{\"@id\":\"http://www.wikidata.org/entity/Q130\"},\"rdfs:comment\":\"The day of the week between Thursday and Saturday.\",\"rdfs:label\":\"Friday\"},{\"@id\":\"http://schema.org/suggestedMaxAge\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PeopleAudience\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"Maximal age recommended for viewing content.\",\"rdfs:label\":\"suggestedMaxAge\"},{\"@id\":\"http://schema.org/yearlyRevenue\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BusinessAudience\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"The size of the business in annual revenue.\",\"rdfs:label\":\"yearlyRevenue\"},{\"@id\":\"http://schema.org/episodeNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Episode\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Integer\"}],\"rdfs:comment\":\"Position of the episode within an ordered group of episodes.\",\"rdfs:label\":\"episodeNumber\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/position\"}},{\"@id\":\"http://schema.org/temporal\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Dataset\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/temporalCoverage\"},\"rdfs:comment\":\"The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).\",\"rdfs:label\":\"temporal\"},{\"@id\":\"http://schema.org/ReserveAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>Reserving a concrete object.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/ScheduleAction\\\">ScheduleAction</a></a>: Unlike ScheduleAction, ReserveAction reserves concrete objects (e.g. a table, a hotel) towards a time slot / spatial allocation.</li>\\n</ul>\\n\",\"rdfs:label\":\"ReserveAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PlanAction\"}},{\"@id\":\"http://schema.org/WritePermission\",\"@type\":\"http://schema.org/DigitalDocumentPermissionType\",\"rdfs:comment\":\"Permission to write or edit the document.\",\"rdfs:label\":\"WritePermission\"},{\"@id\":\"http://schema.org/sibling\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"A sibling of the person.\",\"rdfs:label\":\"sibling\"},{\"@id\":\"http://schema.org/boardingGroup\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/FlightReservation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The airline-specific indicator of boarding order / preference.\",\"rdfs:label\":\"boardingGroup\"},{\"@id\":\"http://schema.org/SoftwareSourceCode\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.\",\"rdfs:label\":\"SoftwareSourceCode\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/PaymentService\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO\"},\"rdfs:comment\":\"A Service to transfer funds from a person or organization to a beneficiary person or organization.\",\"rdfs:label\":\"PaymentService\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FinancialProduct\"}},{\"@id\":\"http://schema.org/lesser\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/QualitativeValue\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QualitativeValue\"},\"rdfs:comment\":\"This ordering relation for qualitative values indicates that the subject is lesser than the object.\",\"rdfs:label\":\"lesser\"},{\"@id\":\"http://schema.org/playMode\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/VideoGame\"},{\"@id\":\"http://schema.org/VideoGameSeries\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/GamePlayMode\"},\"rdfs:comment\":\"Indicates whether this game is multi-player, co-op or single-player.  The game can be marked as multi-player, co-op and single-player at the same time.\",\"rdfs:label\":\"playMode\"},{\"@id\":\"http://schema.org/alumni\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/EducationalOrganization\"}],\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/alumniOf\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"Alumni of an organization.\",\"rdfs:label\":\"alumni\"},{\"@id\":\"http://schema.org/RsvpResponseNo\",\"@type\":\"http://schema.org/RsvpResponseType\",\"rdfs:comment\":\"The invitee will not attend.\",\"rdfs:label\":\"RsvpResponseNo\"},{\"@id\":\"http://schema.org/dissolutionDate\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"The date that this organization was dissolved.\",\"rdfs:label\":\"dissolutionDate\"},{\"@id\":\"http://schema.org/InteractAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of interacting with another person or organization.\",\"rdfs:label\":\"InteractAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Action\"}},{\"@id\":\"http://schema.org/requiredMinAge\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PeopleAudience\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"Audiences defined by a person's minimum age.\",\"rdfs:label\":\"requiredMinAge\"},{\"@id\":\"http://schema.org/arrivalStation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/TrainTrip\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/TrainStation\"},\"rdfs:comment\":\"The station where the train trip ends.\",\"rdfs:label\":\"arrivalStation\"},{\"@id\":\"http://schema.org/AutoBodyShop\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Auto body shop.\",\"rdfs:label\":\"AutoBodyShop\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AutomotiveBusiness\"}},{\"@id\":\"http://schema.org/address\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/GeoShape\"},{\"@id\":\"http://schema.org/GeoCoordinates\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/PostalAddress\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"Physical address of the item.\",\"rdfs:label\":\"address\"},{\"@id\":\"http://schema.org/LaserDiscFormat\",\"@type\":\"http://schema.org/MusicReleaseFormatType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"LaserDiscFormat.\",\"rdfs:label\":\"LaserDiscFormat\"},{\"@id\":\"http://schema.org/reviewCount\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/AggregateRating\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"The count of total number of reviews.\",\"rdfs:label\":\"reviewCount\"},{\"@id\":\"http://schema.org/contentUrl\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MediaObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"rdfs:comment\":\"Actual bytes of the media object, for example the image file or video file.\",\"rdfs:label\":\"contentUrl\"},{\"@id\":\"http://schema.org/School\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A school.\",\"rdfs:label\":\"School\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/EducationalOrganization\"}},{\"@id\":\"http://schema.org/TelevisionStation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A television station.\",\"rdfs:label\":\"TelevisionStation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/HomeGoodsStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A home goods store.\",\"rdfs:label\":\"HomeGoodsStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/LakeBodyOfWater\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A lake (for example, Lake Pontrachain).\",\"rdfs:label\":\"LakeBodyOfWater\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/BodyOfWater\"}},{\"@id\":\"http://schema.org/LowLactoseDiet\",\"@type\":\"http://schema.org/RestrictedDiet\",\"rdfs:comment\":\"A diet appropriate for people with lactose intolerance.\",\"rdfs:label\":\"LowLactoseDiet\"},{\"@id\":\"http://schema.org/circle\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/GeoShape\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters.\",\"rdfs:label\":\"circle\"},{\"@id\":\"http://schema.org/BodyOfWater\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A body of water, such as a sea, ocean, or lake.\",\"rdfs:label\":\"BodyOfWater\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Landform\"}},{\"@id\":\"http://schema.org/availableLanguage\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/ServiceChannel\"},{\"@id\":\"http://schema.org/TouristAttraction\"},{\"@id\":\"http://schema.org/LodgingBusiness\"},{\"@id\":\"http://schema.org/ContactPoint\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Language\"}],\"rdfs:comment\":\"A language someone may use with or at the item, service or place. Please use one of the language codes from the <a href=\\\"http://tools.ietf.org/html/bcp47\\\">IETF BCP 47 standard</a>. See also <a class=\\\"localLink\\\" href=\\\"http://schema.org/inLanguage\\\">inLanguage</a>\",\"rdfs:label\":\"availableLanguage\"},{\"@id\":\"http://schema.org/performerIn\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Event\"},\"rdfs:comment\":\"Event that this person is a performer or participant in.\",\"rdfs:label\":\"performerIn\"},{\"@id\":\"http://schema.org/RadioSeries\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"CreativeWorkSeries dedicated to radio broadcast and associated online delivery.\",\"rdfs:label\":\"RadioSeries\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWorkSeries\"}},{\"@id\":\"http://schema.org/MusicVideoObject\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A music video file.\",\"rdfs:label\":\"MusicVideoObject\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/MediaObject\"}},{\"@id\":\"http://schema.org/question\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/AskAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Question\"},\"rdfs:comment\":\"A sub property of object. A question.\",\"rdfs:label\":\"question\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/object\"}},{\"@id\":\"http://schema.org/numberOfItems\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ItemList\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"The number of items in an ItemList. Note that some descriptions might not fully describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems would be for the entire list.\",\"rdfs:label\":\"numberOfItems\"},{\"@id\":\"http://schema.org/responsibilities\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Responsibilities associated with this role.\",\"rdfs:label\":\"responsibilities\"},{\"@id\":\"http://schema.org/isGift\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Order\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Boolean\"},\"rdfs:comment\":\"Was the offer accepted as a gift for someone other than the buyer.\",\"rdfs:label\":\"isGift\"},{\"@id\":\"http://schema.org/Beach\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Beach.\",\"rdfs:label\":\"Beach\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/SpreadsheetDigitalDocument\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A spreadsheet file.\",\"rdfs:label\":\"SpreadsheetDigitalDocument\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/DigitalDocument\"}},{\"@id\":\"http://schema.org/referencesOrder\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Invoice\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Order\"},\"rdfs:comment\":\"The Order(s) related to this Invoice. One or more Orders may be combined into a single Invoice.\",\"rdfs:label\":\"referencesOrder\"},{\"@id\":\"http://schema.org/HowToItem\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An item used as either a tool or supply when performing the instructions for how to to achieve a result.\",\"rdfs:label\":\"HowToItem\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ListItem\"}},{\"@id\":\"http://schema.org/ShareAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of distributing content to people for their amusement or edification.\",\"rdfs:label\":\"ShareAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CommunicateAction\"}},{\"@id\":\"http://schema.org/validFrom\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/MonetaryAmount\"},{\"@id\":\"http://schema.org/OpeningHoursSpecification\"},{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/LocationFeatureSpecification\"},{\"@id\":\"http://schema.org/PriceSpecification\"},{\"@id\":\"http://schema.org/Permit\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The date when the item becomes valid.\",\"rdfs:label\":\"validFrom\"},{\"@id\":\"http://schema.org/box\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/GeoShape\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A box is the area enclosed by the rectangle formed by two points. The first point is the lower corner, the second point is the upper corner. A box is expressed as two points separated by a space character.\",\"rdfs:label\":\"box\"},{\"@id\":\"http://schema.org/sportsActivityLocation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ExerciseAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/SportsActivityLocation\"},\"rdfs:comment\":\"A sub property of location. The sports activity location where this action occurred.\",\"rdfs:label\":\"sportsActivityLocation\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/location\"}},{\"@id\":\"http://schema.org/subReservation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ReservationPackage\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Reservation\"},\"rdfs:comment\":\"The individual reservations included in the package. Typically a repeated property.\",\"rdfs:label\":\"subReservation\"},{\"@id\":\"http://schema.org/WPHeader\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The header section of the page.\",\"rdfs:label\":\"WPHeader\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/WebPageElement\"}},{\"@id\":\"http://schema.org/device\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/availableOnDevice\"},\"rdfs:comment\":\"Device required to run the application. Used in cases where a specific make/model is required to run the application.\",\"rdfs:label\":\"device\"},{\"@id\":\"http://schema.org/advanceBookingRequirement\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Demand\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"The amount of time that is required between accepting the offer and the actual usage of the resource or service.\",\"rdfs:label\":\"advanceBookingRequirement\"},{\"@id\":\"http://schema.org/MarryAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of marrying a person.\",\"rdfs:label\":\"MarryAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/InteractAction\"}},{\"@id\":\"http://schema.org/baseSalary\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/JobPosting\"},{\"@id\":\"http://schema.org/EmployeeRole\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/PriceSpecification\"},{\"@id\":\"http://schema.org/MonetaryAmount\"},{\"@id\":\"http://schema.org/Number\"}],\"rdfs:comment\":\"The base salary of the job or of an employee in an EmployeeRole.\",\"rdfs:label\":\"baseSalary\"},{\"@id\":\"http://schema.org/foodEvent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CookAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/FoodEvent\"},\"rdfs:comment\":\"A sub property of location. The specific food event where the action occurred.\",\"rdfs:label\":\"foodEvent\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/location\"}},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_DatasetClass\",\"@type\":\"http://schema.org/Organization\",\"rdfs:comment\":\"This class is based upon W3C DCAT work, and benefits from collaboration around the DCAT, ADMS and VoID vocabularies. See http://www.w3.org/wiki/WebSchemas/Datasets for full details and mappings.\",\"rdfs:label\":\"DatasetClass\"},{\"@id\":\"http://schema.org/accessibilityAPI\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Indicates that the resource is compatible with the referenced accessibility API (<a href=\\\"http://www.w3.org/wiki/WebSchemas/Accessibility\\\">WebSchemas wiki lists possible values</a>).\",\"rdfs:label\":\"accessibilityAPI\"},{\"@id\":\"http://schema.org/Text\",\"@type\":[\"http://schema.org/DataType\",\"rdfs:Class\"],\"rdfs:comment\":\"Data type: Text.\",\"rdfs:label\":\"Text\"},{\"@id\":\"http://schema.org/boardingPolicy\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Airline\"},{\"@id\":\"http://schema.org/Flight\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/BoardingPolicyType\"},\"rdfs:comment\":\"The type of boarding policy used by the airline (e.g. zone-based or group-based).\",\"rdfs:label\":\"boardingPolicy\"},{\"@id\":\"http://schema.org/Notary\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A notary.\",\"rdfs:label\":\"Notary\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LegalService\"}},{\"@id\":\"http://schema.org/IceCreamShop\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An ice cream shop.\",\"rdfs:label\":\"IceCreamShop\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FoodEstablishment\"}},{\"@id\":\"http://schema.org/honorificPrefix\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.\",\"rdfs:label\":\"honorificPrefix\"},{\"@id\":\"http://schema.org/specialOpeningHoursSpecification\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/OpeningHoursSpecification\"},\"rdfs:comment\":\"The special opening hours of a certain place.</p>\\n\\n<p>Use this to explicitly override general opening hours brought in scope by <a class=\\\"localLink\\\" href=\\\"http://schema.org/openingHoursSpecification\\\">openingHoursSpecification</a> or <a class=\\\"localLink\\\" href=\\\"http://schema.org/openingHours\\\">openingHours</a>.\",\"rdfs:label\":\"specialOpeningHoursSpecification\"},{\"@id\":\"http://schema.org/byArtist\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/MusicAlbum\"},{\"@id\":\"http://schema.org/MusicRecording\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MusicGroup\"},\"rdfs:comment\":\"The artist that performed this album or recording.\",\"rdfs:label\":\"byArtist\"},{\"@id\":\"http://schema.org/ReactAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of responding instinctively and emotionally to an object, expressing a sentiment.\",\"rdfs:label\":\"ReactAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AssessAction\"}},{\"@id\":\"http://schema.org/isAccessoryOrSparePartFor\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Product\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Product\"},\"rdfs:comment\":\"A pointer to another product (or multiple products) for which this product is an accessory or spare part.\",\"rdfs:label\":\"isAccessoryOrSparePartFor\"},{\"@id\":\"http://schema.org/additionalName\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"An additional name for a Person, can be used for a middle name.\",\"rdfs:label\":\"additionalName\"},{\"@id\":\"http://schema.org/passengerSequenceNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/FlightReservation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The passenger's sequence number as assigned by the airline.\",\"rdfs:label\":\"passengerSequenceNumber\"},{\"@id\":\"http://schema.org/addressCountry\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/GeoCoordinates\"},{\"@id\":\"http://schema.org/PostalAddress\"},{\"@id\":\"http://schema.org/GeoShape\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Country\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The country. For example, USA. You can also provide the two-letter <a href=\\\"http://en.wikipedia.org/wiki/ISO_3166-1\\\">ISO 3166-1 alpha-2 country code</a>.\",\"rdfs:label\":\"addressCountry\"},{\"@id\":\"http://schema.org/toLocation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/ExerciseAction\"},{\"@id\":\"http://schema.org/InsertAction\"},{\"@id\":\"http://schema.org/MoveAction\"},{\"@id\":\"http://schema.org/TransferAction\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"rdfs:comment\":\"A sub property of location. The final location of the object or the agent after the action.\",\"rdfs:label\":\"toLocation\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/location\"}},{\"@id\":\"http://schema.org/Message\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A single message from a sender to one or more organizations or people.\",\"rdfs:label\":\"Message\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/InvestmentOrDeposit\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO\"},\"rdfs:comment\":\"A type of financial product that typically requires the client to transfer funds to a financial service in return for potential beneficial financial return.\",\"rdfs:label\":\"InvestmentOrDeposit\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FinancialProduct\"}},{\"@id\":\"http://schema.org/DryCleaningOrLaundry\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A dry-cleaning business.\",\"rdfs:label\":\"DryCleaningOrLaundry\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/interactionStatistic\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/InteractionCounter\"},\"rdfs:comment\":\"The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.\",\"rdfs:label\":\"interactionStatistic\"},{\"@id\":\"http://schema.org/seatSection\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Seat\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The section location of the reserved seat (e.g. Orchestra).\",\"rdfs:label\":\"seatSection\"},{\"@id\":\"http://schema.org/DeactivateAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of stopping or deactivating a device or application (e.g. stopping a timer or turning off a flashlight).\",\"rdfs:label\":\"DeactivateAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ControlAction\"}},{\"@id\":\"http://schema.org/validThrough\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/MonetaryAmount\"},{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/PriceSpecification\"},{\"@id\":\"http://schema.org/OpeningHoursSpecification\"},{\"@id\":\"http://schema.org/LocationFeatureSpecification\"},{\"@id\":\"http://schema.org/JobPosting\"},{\"@id\":\"http://schema.org/Demand\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours.\",\"rdfs:label\":\"validThrough\"},{\"@id\":\"http://schema.org/aircraft\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Flight\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Vehicle\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The kind of aircraft (e.g., \\\"Boeing 747\\\").\",\"rdfs:label\":\"aircraft\"},{\"@id\":\"http://schema.org/recipient\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/SendAction\"},{\"@id\":\"http://schema.org/AuthorizeAction\"},{\"@id\":\"http://schema.org/TipAction\"},{\"@id\":\"http://schema.org/ReturnAction\"},{\"@id\":\"http://schema.org/GiveAction\"},{\"@id\":\"http://schema.org/Message\"},{\"@id\":\"http://schema.org/CommunicateAction\"},{\"@id\":\"http://schema.org/PayAction\"},{\"@id\":\"http://schema.org/DonateAction\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/ContactPoint\"},{\"@id\":\"http://schema.org/Audience\"}],\"rdfs:comment\":\"A sub property of participant. The participant who is at the receiving end of the action.\",\"rdfs:label\":\"recipient\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/participant\"}},{\"@id\":\"http://schema.org/FastFoodRestaurant\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A fast-food restaurant.\",\"rdfs:label\":\"FastFoodRestaurant\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FoodEstablishment\"}},{\"@id\":\"http://schema.org/DataFeedItem\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A single item within a larger data feed.\",\"rdfs:label\":\"DataFeedItem\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/attendee\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Event\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"rdfs:comment\":\"A person or organization attending the event.\",\"rdfs:label\":\"attendee\"},{\"@id\":\"http://schema.org/successorOf\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ProductModel\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ProductModel\"},\"rdfs:comment\":\"A pointer from a newer variant of a product  to its previous, often discontinued predecessor.\",\"rdfs:label\":\"successorOf\"},{\"@id\":\"http://schema.org/collection\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/UpdateAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/targetCollection\"},\"rdfs:comment\":\"A sub property of object. The collection target of the action.\",\"rdfs:label\":\"collection\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/object\"}},{\"@id\":\"http://schema.org/OrderStatus\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Enumerated status values for Order.\",\"rdfs:label\":\"OrderStatus\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/SocialMediaPosting\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A post to a social media platform, including blog posts, tweets, Facebook posts, etc.\",\"rdfs:label\":\"SocialMediaPosting\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Article\"}},{\"@id\":\"http://schema.org/siblings\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/sibling\"},\"rdfs:comment\":\"A sibling of the person.\",\"rdfs:label\":\"siblings\"},{\"@id\":\"http://schema.org/amenityFeature\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/LodgingBusiness\"},{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/Accommodation\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/LocationFeatureSpecification\"},\"rdfs:comment\":\"An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.\",\"rdfs:label\":\"amenityFeature\"},{\"@id\":\"http://schema.org/Park\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A park.\",\"rdfs:label\":\"Park\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/contentRating\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Official rating of a piece of content&#x2014;for example,'MPAA PG-13'.\",\"rdfs:label\":\"contentRating\"},{\"@id\":\"http://schema.org/starRating\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/LodgingBusiness\"},{\"@id\":\"http://schema.org/FoodEstablishment\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Rating\"},\"rdfs:comment\":\"An official rating for a lodging business or food establishment, e.g. from national associations or standards bodies. Use the author property to indicate the rating organization, e.g. as an Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or Hotelstars).\",\"rdfs:label\":\"starRating\"},{\"@id\":\"http://schema.org/applicationCategory\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"Type of software application, e.g. 'Game, Multimedia'.\",\"rdfs:label\":\"applicationCategory\"},{\"@id\":\"http://schema.org/geoRadius\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/GeoCircle\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Distance\"},{\"@id\":\"http://schema.org/Number\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"Indicates the approximate radius of a GeoCircle (metres unless indicated otherwise via Distance notation).\",\"rdfs:label\":\"geoRadius\"},{\"@id\":\"http://schema.org/VoteAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of expressing a preference from a fixed/finite/structured set of choices/options.\",\"rdfs:label\":\"VoteAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ChooseAction\"}},{\"@id\":\"http://schema.org/dropoffLocation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/RentalCarReservation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"rdfs:comment\":\"Where a rental car can be dropped off.\",\"rdfs:label\":\"dropoffLocation\"},{\"@id\":\"http://schema.org/logo\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Brand\"},{\"@id\":\"http://schema.org/Service\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/ImageObject\"}],\"rdfs:comment\":\"An associated logo.\",\"rdfs:label\":\"logo\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/image\"}},{\"@id\":\"http://schema.org/BookFormatType\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The publication format of the book.\",\"rdfs:label\":\"BookFormatType\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/LoanOrCredit\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO\"},\"rdfs:comment\":\"A financial product for the loaning of an amount of money under agreed terms and charges.\",\"rdfs:label\":\"LoanOrCredit\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FinancialProduct\"}},{\"@id\":\"http://schema.org/lastReviewed\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/WebPage\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"Date on which the content on this web page was last reviewed for accuracy and/or completeness.\",\"rdfs:label\":\"lastReviewed\"},{\"@id\":\"http://schema.org/Boolean\",\"@type\":[\"rdfs:Class\",\"http://schema.org/DataType\"],\"rdfs:comment\":\"Boolean: True or False.\",\"rdfs:label\":\"Boolean\"},{\"@id\":\"http://schema.org/ItemListOrderType\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Enumerated for values for itemListOrder for indicating how an ordered ItemList is organized.\",\"rdfs:label\":\"ItemListOrderType\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/athlete\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SportsTeam\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"A person that acts as performing member of a sports team; a player as opposed to a coach.\",\"rdfs:label\":\"athlete\"},{\"@id\":\"http://schema.org/ComedyClub\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A comedy club.\",\"rdfs:label\":\"ComedyClub\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/EntertainmentBusiness\"}},{\"@id\":\"http://schema.org/ServiceChannel\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A means for accessing a service, e.g. a government office location, web site, or phone number.\",\"rdfs:label\":\"ServiceChannel\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/requiredCollateral\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/LoanOrCredit\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Thing\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"Assets required to secure loan or credit repayments. It may take form of third party pledge, goods, financial instruments (cash, securities, etc.)\",\"rdfs:label\":\"requiredCollateral\"},{\"@id\":\"http://schema.org/ExhibitionEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Event type: Exhibition event, e.g. at a museum, library, archive, tradeshow, ...\",\"rdfs:label\":\"ExhibitionEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/isVariantOf\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ProductModel\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ProductModel\"},\"rdfs:comment\":\"A pointer to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive.\",\"rdfs:label\":\"isVariantOf\"},{\"@id\":\"http://schema.org/readonlyValue\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PropertyValueSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Boolean\"},\"rdfs:comment\":\"Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a \\\"hidden\\\" input in an HTML form.\",\"rdfs:label\":\"readonlyValue\"},{\"@id\":\"http://schema.org/numberOfAxles\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Number\"},{\"@id\":\"http://schema.org/QuantitativeValue\"}],\"rdfs:comment\":\"The number of axles.</p>\\n\\n<p>Typical unit code(s): C62\",\"rdfs:label\":\"numberOfAxles\"},{\"@id\":\"http://schema.org/RentAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of giving money in return for temporary use, but not ownership, of an object such as a vehicle or property. For example, an agent rents a property from a landlord in exchange for a periodic payment.\",\"rdfs:label\":\"RentAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/TradeAction\"}},{\"@id\":\"http://schema.org/sharedContent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SocialMediaPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"rdfs:comment\":\"A CreativeWork such as an image, video, or audio clip shared as part of this posting.\",\"rdfs:label\":\"sharedContent\"},{\"@id\":\"http://schema.org/EmployeeRole\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A subclass of OrganizationRole used to describe employee relationships.\",\"rdfs:label\":\"EmployeeRole\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/OrganizationRole\"}},{\"@id\":\"http://schema.org/price\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/PriceSpecification\"},{\"@id\":\"http://schema.org/TradeAction\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Number\"}],\"rdfs:comment\":\"<p>The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.</p>\\n\\n<p>Usage guidelines:</p>\\n\\n<ul>\\n<li>Use the <a class=\\\"localLink\\\" href=\\\"http://schema.org/priceCurrency\\\">priceCurrency</a> property (with <a href=\\\"http://en.wikipedia.org/wiki/ISO_4217#Active_codes\\\">ISO 4217 codes</a> e.g. \\\"USD\\\") instead of\\n  including <a href=\\\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\\\">ambiguous symbols</a> such as '$' in the value.</li>\\n<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>\\n<li>Note that both <a href=\\\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\\\">RDFa</a> and Microdata syntax allow the use of a \\\"content=\\\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>\\n<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>\\n</ul>\\n\",\"rdfs:label\":\"price\"},{\"@id\":\"http://schema.org/EmploymentAgency\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An employment agency.\",\"rdfs:label\":\"EmploymentAgency\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/PrependAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of inserting at the beginning if an ordered collection.\",\"rdfs:label\":\"PrependAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/InsertAction\"}},{\"@id\":\"http://schema.org/hiringOrganization\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"rdfs:comment\":\"Organization offering the job position.\",\"rdfs:label\":\"hiringOrganization\"},{\"@id\":\"http://schema.org/numberOfSeasons\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/VideoGameSeries\"},{\"@id\":\"http://schema.org/RadioSeries\"},{\"@id\":\"http://schema.org/TVSeries\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"The number of seasons in this series.\",\"rdfs:label\":\"numberOfSeasons\"},{\"@id\":\"http://schema.org/FireStation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A fire station. With firemen.\",\"rdfs:label\":\"FireStation\",\"rdfs:subClassOf\":[{\"@id\":\"http://schema.org/EmergencyService\"},{\"@id\":\"http://schema.org/CivicStructure\"}]},{\"@id\":\"http://schema.org/CourseInstance\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An instance of a <a class=\\\"localLink\\\" href=\\\"http://schema.org/Course\\\">Course</a> which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students.\",\"rdfs:label\":\"CourseInstance\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/valueMinLength\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PropertyValueSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"Specifies the minimum allowed range for number of characters in a literal value.\",\"rdfs:label\":\"valueMinLength\"},{\"@id\":\"http://schema.org/Hotel\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"rdfs:comment\":\"A hotel is an establishment that provides lodging paid on a short-term basis (Source: Wikipedia, the free encyclopedia, see http://en.wikipedia.org/wiki/Hotel).\\n<br /><br />\\nSee also the <a href=\\\"/docs/hotels.html\\\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\",\"rdfs:label\":\"Hotel\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LodgingBusiness\"}},{\"@id\":\"http://schema.org/IndividualProduct\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"A single, identifiable product instance (e.g. a laptop with a particular serial number).\",\"rdfs:label\":\"IndividualProduct\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Product\"}},{\"@id\":\"http://schema.org/StructuredValue\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.\",\"rdfs:label\":\"StructuredValue\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/dropoffTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/RentalCarReservation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"When a rental car can be dropped off.\",\"rdfs:label\":\"dropoffTime\"},{\"@id\":\"http://schema.org/workPerformed\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Event\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"rdfs:comment\":\"A work performed in some event, for example a play performed in a TheaterEvent.\",\"rdfs:label\":\"workPerformed\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/workFeatured\"}},{\"@id\":\"http://schema.org/serviceSmsNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ServiceChannel\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ContactPoint\"},\"rdfs:comment\":\"The number to access the service by text message.\",\"rdfs:label\":\"serviceSmsNumber\"},{\"@id\":\"http://schema.org/RadioClip\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A short radio program or a segment/part of a radio program.\",\"rdfs:label\":\"RadioClip\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Clip\"}},{\"@id\":\"http://schema.org/Intangible\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.\",\"rdfs:label\":\"Intangible\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Thing\"}},{\"@id\":\"http://schema.org/ElectronicsStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An electronics store.\",\"rdfs:label\":\"ElectronicsStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/eventStatus\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Event\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/EventStatusType\"},\"rdfs:comment\":\"An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.\",\"rdfs:label\":\"eventStatus\"},{\"@id\":\"http://schema.org/gtin14\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Demand\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The <a href=\\\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-14.aspx\\\">GTIN-14</a> code of the product, or the product to which the offer refers. See <a href=\\\"http://www.gs1.org/barcodes/technical/idkeys/gtin\\\">GS1 GTIN Summary</a> for more details.\",\"rdfs:label\":\"gtin14\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/identifier\"}},{\"@id\":\"http://schema.org/gtin13\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/Product\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The <a href=\\\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-13.aspx\\\">GTIN-13</a> code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See <a href=\\\"http://www.gs1.org/barcodes/technical/idkeys/gtin\\\">GS1 GTIN Summary</a> for more details.\",\"rdfs:label\":\"gtin13\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/identifier\"}},{\"@id\":\"http://schema.org/gtin12\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/Offer\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The <a href=\\\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-12.aspx\\\">GTIN-12</a> code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See <a href=\\\"http://www.gs1.org/barcodes/technical/idkeys/gtin\\\">GS1 GTIN Summary</a> for more details.\",\"rdfs:label\":\"gtin12\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/identifier\"}},{\"@id\":\"http://schema.org/OfflineTemporarily\",\"@type\":\"http://schema.org/GameServerStatus\",\"rdfs:comment\":\"Game server status: OfflineTemporarily. Server is offline now but it can be online soon.\",\"rdfs:label\":\"OfflineTemporarily\"},{\"@id\":\"http://schema.org/employees\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/employee\"},\"rdfs:comment\":\"People working for this organization.\",\"rdfs:label\":\"employees\"},{\"@id\":\"http://schema.org/learningResourceType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.\",\"rdfs:label\":\"learningResourceType\"},{\"@id\":\"http://schema.org/Order\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An order is a confirmation of a transaction (a receipt), which can contain multiple line items, each represented by an Offer that has been accepted by the customer.\",\"rdfs:label\":\"Order\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/suitableForDiet\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Recipe\"},{\"@id\":\"http://schema.org/MenuItem\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/RestrictedDiet\"},\"rdfs:comment\":\"Indicates a dietary restriction or guideline for which this recipe or menu item is suitable, e.g. diabetic, halal etc.\",\"rdfs:label\":\"suitableForDiet\"},{\"@id\":\"http://schema.org/warrantyScope\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/WarrantyPromise\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/WarrantyScope\"},\"rdfs:comment\":\"The scope of the warranty promise.\",\"rdfs:label\":\"warrantyScope\"},{\"@id\":\"http://schema.org/valueReference\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/QualitativeValue\"},{\"@id\":\"http://schema.org/QuantitativeValue\"},{\"@id\":\"http://schema.org/PropertyValue\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Enumeration\"},{\"@id\":\"http://schema.org/PropertyValue\"},{\"@id\":\"http://schema.org/StructuredValue\"},{\"@id\":\"http://schema.org/QuantitativeValue\"},{\"@id\":\"http://schema.org/QualitativeValue\"}],\"rdfs:comment\":\"A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature.\",\"rdfs:label\":\"valueReference\"},{\"@id\":\"http://schema.org/EventScheduled\",\"@type\":\"http://schema.org/EventStatusType\",\"rdfs:comment\":\"The event is taking place or has taken place on the startDate as scheduled. Use of this value is optional, as it is assumed by default.\",\"rdfs:label\":\"EventScheduled\"},{\"@id\":\"http://schema.org/accessMode\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://github.com/schemaorg/schemaorg/issues/1100\"},\"http://schema.org/category\":\"issue-1110\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Expected values include: auditory, tactile, textual, visual, colorDependent, chartOnVisual, chemOnVisual, diagramOnVisual, mathOnVisual, musicOnVisual, textOnVisual.\",\"rdfs:label\":\"accessMode\"},{\"@id\":\"http://schema.org/TVClip\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A short TV program or a segment/part of a TV program.\",\"rdfs:label\":\"TVClip\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Clip\"}},{\"@id\":\"http://schema.org/NailSalon\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A nail salon.\",\"rdfs:label\":\"NailSalon\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/HealthAndBeautyBusiness\"}},{\"@id\":\"http://schema.org/startDate\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Role\"},{\"@id\":\"http://schema.org/DatedMoneySpecification\"},{\"@id\":\"http://schema.org/Event\"},{\"@id\":\"http://schema.org/CreativeWorkSeries\"},{\"@id\":\"http://schema.org/CreativeWorkSeason\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/DateTime\"},{\"@id\":\"http://schema.org/Date\"}],\"rdfs:comment\":\"The start date and time of the item (in <a href=\\\"http://en.wikipedia.org/wiki/ISO_8601\\\">ISO 8601 date format</a>).\",\"rdfs:label\":\"startDate\"},{\"@id\":\"http://schema.org/telephone\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/ContactPoint\"},{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/Person\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The telephone number.\",\"rdfs:label\":\"telephone\"},{\"@id\":\"http://schema.org/realEstateAgent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/RentAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/RealEstateAgent\"},\"rdfs:comment\":\"A sub property of participant. The real estate agent involved in the action.\",\"rdfs:label\":\"realEstateAgent\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/participant\"}},{\"@id\":\"http://schema.org/ContactPoint\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A contact point&#x2014;for example, a Customer Complaints department.\",\"rdfs:label\":\"ContactPoint\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/StructuredValue\"}},{\"@id\":\"http://schema.org/mainContentOfPage\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/WebPage\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/WebPageElement\"},\"rdfs:comment\":\"Indicates if this web page element is the main subject of the page.\",\"rdfs:label\":\"mainContentOfPage\"},{\"@id\":\"http://schema.org/GeneralContractor\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A general contractor.\",\"rdfs:label\":\"GeneralContractor\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/HomeAndConstructionBusiness\"}},{\"@id\":\"http://schema.org/PreSale\",\"@type\":\"http://schema.org/ItemAvailability\",\"rdfs:comment\":\"Indicates that the item is available for ordering and delivery before general availability.\",\"rdfs:label\":\"PreSale\"},{\"@id\":\"http://schema.org/serviceUrl\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ServiceChannel\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"rdfs:comment\":\"The website to access the service.\",\"rdfs:label\":\"serviceUrl\"},{\"@id\":\"http://schema.org/director\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/RadioSeries\"},{\"@id\":\"http://schema.org/Event\"},{\"@id\":\"http://schema.org/VideoGame\"},{\"@id\":\"http://schema.org/CreativeWorkSeason\"},{\"@id\":\"http://schema.org/Episode\"},{\"@id\":\"http://schema.org/TVSeries\"},{\"@id\":\"http://schema.org/Clip\"},{\"@id\":\"http://schema.org/MovieSeries\"},{\"@id\":\"http://schema.org/VideoObject\"},{\"@id\":\"http://schema.org/VideoGameSeries\"},{\"@id\":\"http://schema.org/Movie\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"A director of e.g. tv, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.\",\"rdfs:label\":\"director\"},{\"@id\":\"http://schema.org/InStock\",\"@type\":\"http://schema.org/ItemAvailability\",\"rdfs:comment\":\"Indicates that the item is in stock.\",\"rdfs:label\":\"InStock\"},{\"@id\":\"http://schema.org/transcript\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/VideoObject\"},{\"@id\":\"http://schema.org/AudioObject\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"If this MediaObject is an AudioObject or VideoObject, the transcript of that object.\",\"rdfs:label\":\"transcript\"},{\"@id\":\"http://schema.org/TelevisionChannel\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A unique instance of a television BroadcastService on a CableOrSatelliteService lineup.\",\"rdfs:label\":\"TelevisionChannel\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/BroadcastChannel\"}},{\"@id\":\"http://schema.org/softwareVersion\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Version of the software instance.\",\"rdfs:label\":\"softwareVersion\"},{\"@id\":\"http://schema.org/providesBroadcastService\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BroadcastChannel\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/BroadcastService\"},\"rdfs:comment\":\"The BroadcastService offered on this channel.\",\"rdfs:label\":\"providesBroadcastService\"},{\"@id\":\"http://schema.org/superEvent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Event\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/subEvent\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Event\"},\"rdfs:comment\":\"An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.\",\"rdfs:label\":\"superEvent\"},{\"@id\":\"http://schema.org/material\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/CreativeWork\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Product\"}],\"rdfs:comment\":\"A material that something is made from, e.g. leather, wool, cotton, paper.\",\"rdfs:label\":\"material\"},{\"@id\":\"http://schema.org/GovernmentBuilding\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A government building.\",\"rdfs:label\":\"GovernmentBuilding\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/EmergencyService\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An emergency service, such as a fire station or ER.\",\"rdfs:label\":\"EmergencyService\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/issuedBy\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Ticket\"},{\"@id\":\"http://schema.org/Permit\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"rdfs:comment\":\"The organization issuing the ticket or permit.\",\"rdfs:label\":\"issuedBy\"},{\"@id\":\"http://schema.org/email\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/ContactPoint\"},{\"@id\":\"http://schema.org/Organization\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Email address.\",\"rdfs:label\":\"email\"},{\"@id\":\"http://schema.org/albumRelease\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicAlbum\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/releaseOf\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MusicRelease\"},\"rdfs:comment\":\"A release of this album.\",\"rdfs:label\":\"albumRelease\"},{\"@id\":\"http://schema.org/FinancialService\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Financial services business.\",\"rdfs:label\":\"FinancialService\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/VideoObject\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews\"},\"rdfs:comment\":\"A video file.\",\"rdfs:label\":\"VideoObject\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/MediaObject\"}},{\"@id\":\"http://schema.org/potentialAction\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Action\"},\"rdfs:comment\":\"Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.\",\"rdfs:label\":\"potentialAction\"},{\"@id\":\"http://schema.org/isFamilyFriendly\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Boolean\"},\"rdfs:comment\":\"Indicates whether this content is family friendly.\",\"rdfs:label\":\"isFamilyFriendly\"},{\"@id\":\"http://schema.org/weight\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Product\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"The weight of the product or person.\",\"rdfs:label\":\"weight\"},{\"@id\":\"http://schema.org/Menu\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A structured representation of food or drink items available from a FoodEstablishment.\",\"rdfs:label\":\"Menu\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/Periodical\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex\"},\"http://www.w3.org/2002/07/owl#equivalentClass\":{\"@id\":\"http://purl.org/ontology/bibo/Periodical\"},\"rdfs:comment\":\"A publication in any medium issued in successive parts bearing numerical or chronological designations and intended, such as a magazine, scholarly journal, or newspaper to continue indefinitely.</p>\\n\\n<p>See also <a href=\\\"http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html\\\">blog post</a>.\",\"rdfs:label\":\"Periodical\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWorkSeries\"}},{\"@id\":\"http://schema.org/broadcastOfEvent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BroadcastEvent\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Event\"},\"rdfs:comment\":\"The event being broadcast such as a sporting event or awards ceremony.\",\"rdfs:label\":\"broadcastOfEvent\"},{\"@id\":\"http://schema.org/numberOfBeds\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BedDetails\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"The quantity of the given bed type available in the HotelRoom, Suite, House, or Apartment.\",\"rdfs:label\":\"numberOfBeds\"},{\"@id\":\"http://schema.org/steps\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/HowToSection\"},{\"@id\":\"http://schema.org/HowTo\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/ItemList\"},{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The steps in the form of a single item (text, document, video, etc.) or an ordered list with HowToStep and/or HowToSection items.\",\"rdfs:label\":\"steps\"},{\"@id\":\"http://schema.org/Series\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A Series in schema.org is a group of related items, typically but not necessarily of the same kind.\",\"rdfs:label\":\"Series\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/buyer\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SellAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"A sub property of participant. The participant/person/organization that bought the object.\",\"rdfs:label\":\"buyer\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/participant\"}},{\"@id\":\"http://schema.org/Electrician\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An electrician.\",\"rdfs:label\":\"Electrician\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/HomeAndConstructionBusiness\"}},{\"@id\":\"http://schema.org/depth\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/VisualArtwork\"},{\"@id\":\"http://schema.org/Product\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/QuantitativeValue\"},{\"@id\":\"http://schema.org/Distance\"}],\"rdfs:comment\":\"The depth of the item.\",\"rdfs:label\":\"depth\"},{\"@id\":\"http://schema.org/printSection\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/NewsArticle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"If this NewsArticle appears in print, this field indicates the print section in which the article appeared.\",\"rdfs:label\":\"printSection\"},{\"@id\":\"http://schema.org/WarrantyScope\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"<p>A range of of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.</p>\\n\\n<p>Commonly used values:</p>\\n\\n<ul>\\n<li>http://purl.org/goodrelations/v1#Labor-BringIn</li>\\n<li>http://purl.org/goodrelations/v1#PartsAndLabor-BringIn</li>\\n<li>http://purl.org/goodrelations/v1#PartsAndLabor-PickUp</li>\\n</ul>\\n\",\"rdfs:label\":\"WarrantyScope\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/httpMethod\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/EntryPoint\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP.\",\"rdfs:label\":\"httpMethod\"},{\"@id\":\"http://schema.org/CollectionPage\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Web page type: Collection page.\",\"rdfs:label\":\"CollectionPage\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/WebPage\"}},{\"@id\":\"http://schema.org/PhotographAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of capturing still images of objects using a camera.\",\"rdfs:label\":\"PhotographAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreateAction\"}},{\"@id\":\"http://schema.org/vehicleInteriorType\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The type or material of the interior of the vehicle (e.g. synthetic fabric, leather, wood, etc.). While most interior types are characterized by the material used, an interior type can also be based on vehicle usage or target audience.\",\"rdfs:label\":\"vehicleInteriorType\"},{\"@id\":\"http://schema.org/performTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/HowTo\"},{\"@id\":\"http://schema.org/HowToDirection\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Duration\"},\"rdfs:comment\":\"The length of time it takes to perform instructions or a direction (not including time to prepare the supplies), in <a href=\\\"http://en.wikipedia.org/wiki/ISO_8601\\\">ISO 8601 duration format</a>.\",\"rdfs:label\":\"performTime\"},{\"@id\":\"http://schema.org/HealthAndBeautyBusiness\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Health and beauty.\",\"rdfs:label\":\"HealthAndBeautyBusiness\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/LegislativeBuilding\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A legislative building&#x2014;for example, the state capitol.\",\"rdfs:label\":\"LegislativeBuilding\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/GovernmentBuilding\"}},{\"@id\":\"http://schema.org/exampleOfWork\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/workExample\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"rdfs:comment\":\"A creative work that this work is an example/instance/realization/derivation of.\",\"rdfs:label\":\"exampleOfWork\"},{\"@id\":\"http://schema.org/UserCheckins\",\"@type\":\"rdfs:Class\",\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/InteractionCounter\"},\"rdfs:comment\":\"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\\\"localLink\\\" href=\\\"http://schema.org/Action\\\">Action</a>-based vocabulary, alongside types such as <a class=\\\"localLink\\\" href=\\\"http://schema.org/Comment\\\">Comment</a>.\",\"rdfs:label\":\"UserCheckins\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/UserInteraction\"}},{\"@id\":\"http://schema.org/opens\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/OpeningHoursSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Time\"},\"rdfs:comment\":\"The opening hour of the place or service on the given day(s) of the week.\",\"rdfs:label\":\"opens\"},{\"@id\":\"http://schema.org/version\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Number\"}],\"rdfs:comment\":\"The version of the CreativeWork embodied by a specified resource.\",\"rdfs:label\":\"version\"},{\"@id\":\"http://schema.org/paymentMethod\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Order\"},{\"@id\":\"http://schema.org/Invoice\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/PaymentMethod\"},\"rdfs:comment\":\"The name of the credit card or other method of payment for the order.\",\"rdfs:label\":\"paymentMethod\"},{\"@id\":\"http://schema.org/dateModified\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/DataFeedItem\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/DateTime\"},{\"@id\":\"http://schema.org/Date\"}],\"rdfs:comment\":\"The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.\",\"rdfs:label\":\"dateModified\"},{\"@id\":\"http://schema.org/VideoGameSeries\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A video game series.\",\"rdfs:label\":\"VideoGameSeries\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWorkSeries\"}},{\"@id\":\"http://schema.org/BroadcastService\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A delivery service through which content is provided via broadcast over the air or online.\",\"rdfs:label\":\"BroadcastService\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Service\"}},{\"@id\":\"http://schema.org/associatedArticle\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MediaObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/NewsArticle\"},\"rdfs:comment\":\"A NewsArticle associated with the Media Object.\",\"rdfs:label\":\"associatedArticle\"},{\"@id\":\"http://schema.org/mainEntity\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/mainEntityOfPage\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"rdfs:comment\":\"Indicates the primary entity described in some page or other CreativeWork.\",\"rdfs:label\":\"mainEntity\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/about\"}},{\"@id\":\"http://schema.org/RegisterAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of registering to be a user of a service, product or web page.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/JoinAction\\\">JoinAction</a>: Unlike JoinAction, RegisterAction implies you are registering to be a user of a service, <em>not</em> a group/team of people.</li>\\n<li>[FollowAction]]: Unlike FollowAction, RegisterAction doesn't imply that the agent is expecting to poll for updates from the object.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/SubscribeAction\\\">SubscribeAction</a>: Unlike SubscribeAction, RegisterAction doesn't imply that the agent is expecting updates from the object.</li>\\n</ul>\\n\",\"rdfs:label\":\"RegisterAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/InteractAction\"}},{\"@id\":\"http://schema.org/productionCompany\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Episode\"},{\"@id\":\"http://schema.org/MovieSeries\"},{\"@id\":\"http://schema.org/TVSeries\"},{\"@id\":\"http://schema.org/MediaObject\"},{\"@id\":\"http://schema.org/VideoGameSeries\"},{\"@id\":\"http://schema.org/Movie\"},{\"@id\":\"http://schema.org/RadioSeries\"},{\"@id\":\"http://schema.org/CreativeWorkSeason\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"rdfs:comment\":\"The production company or studio responsible for the item e.g. series, video game, episode etc.\",\"rdfs:label\":\"productionCompany\"},{\"@id\":\"http://schema.org/WearAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of dressing oneself in clothing.\",\"rdfs:label\":\"WearAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/UseAction\"}},{\"@id\":\"http://schema.org/TravelAgency\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A travel agency.\",\"rdfs:label\":\"TravelAgency\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/PerformingGroup\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A performance group, such as a band, an orchestra, or a circus.\",\"rdfs:label\":\"PerformingGroup\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Organization\"}},{\"@id\":\"http://schema.org/Hostel\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A hostel - cheap accommodation, often in shared dormitories.\\n<br /><br />\\nSee also the <a href=\\\"/docs/hotels.html\\\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\",\"rdfs:label\":\"Hostel\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LodgingBusiness\"}},{\"@id\":\"http://schema.org/deliveryMethod\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/OrderAction\"},{\"@id\":\"http://schema.org/SendAction\"},{\"@id\":\"http://schema.org/ReceiveAction\"},{\"@id\":\"http://schema.org/TrackAction\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DeliveryMethod\"},\"rdfs:comment\":\"A sub property of instrument. The method of delivery.\",\"rdfs:label\":\"deliveryMethod\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/instrument\"}},{\"@id\":\"http://schema.org/endorsee\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/EndorseAction\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"rdfs:comment\":\"A sub property of participant. The person/organization being supported.\",\"rdfs:label\":\"endorsee\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/participant\"}},{\"@id\":\"http://schema.org/alignmentType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/AlignmentObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A category of alignment between the learning resource and the framework node. Recommended values include: 'assesses', 'teaches', 'requires', 'textComplexity', 'readingLevel', 'educationalSubject', and 'educationalLevel'.\",\"rdfs:label\":\"alignmentType\"},{\"@id\":\"http://schema.org/assemblyVersion\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/APIReference\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Associated product/technology version. e.g., .NET Framework 4.5.\",\"rdfs:label\":\"assemblyVersion\"},{\"@id\":\"http://schema.org/branchOf\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/LocalBusiness\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/parentOrganization\"},\"rdfs:comment\":\"The larger organization that this local business is a branch of, if any. Not to be confused with (anatomical)<a class=\\\"localLink\\\" href=\\\"http://schema.org/branch\\\">branch</a>.\",\"rdfs:label\":\"branchOf\"},{\"@id\":\"http://schema.org/BankOrCreditUnion\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Bank or credit union.\",\"rdfs:label\":\"BankOrCreditUnion\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FinancialService\"}},{\"@id\":\"http://schema.org/Quantity\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Quantities such as distance, time, mass, weight, etc. Particular instances of say Mass are entities like '3 Kg' or '4 milligrams'.\",\"rdfs:label\":\"Quantity\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/AllWheelDriveConfiguration\",\"@type\":\"http://schema.org/DriveWheelConfigurationValue\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"rdfs:comment\":\"All-wheel Drive is a transmission layout where the engine drives all four wheels.\",\"rdfs:label\":\"AllWheelDriveConfiguration\"},{\"@id\":\"http://schema.org/geo\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/GeoCoordinates\"},{\"@id\":\"http://schema.org/GeoShape\"}],\"rdfs:comment\":\"The geo coordinates of the place.\",\"rdfs:label\":\"geo\"},{\"@id\":\"http://schema.org/VideoGallery\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Web page type: Video gallery page.\",\"rdfs:label\":\"VideoGallery\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CollectionPage\"}},{\"@id\":\"http://schema.org/EducationalAudience\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_LRMIClass\"},\"rdfs:comment\":\"An EducationalAudience.\",\"rdfs:label\":\"EducationalAudience\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Audience\"}},{\"@id\":\"http://schema.org/department\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"rdfs:comment\":\"A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.\",\"rdfs:label\":\"department\"},{\"@id\":\"http://schema.org/targetUrl\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/AlignmentObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"rdfs:comment\":\"The URL of a node in an established educational framework.\",\"rdfs:label\":\"targetUrl\"},{\"@id\":\"http://schema.org/CityHall\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A city hall.\",\"rdfs:label\":\"CityHall\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/GovernmentBuilding\"}},{\"@id\":\"http://schema.org/ReservationCancelled\",\"@type\":\"http://schema.org/ReservationStatusType\",\"rdfs:comment\":\"The status for a previously confirmed reservation that is now cancelled.\",\"rdfs:label\":\"ReservationCancelled\"},{\"@id\":\"http://schema.org/carbohydrateContent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/NutritionInformation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Mass\"},\"rdfs:comment\":\"The number of grams of carbohydrates.\",\"rdfs:label\":\"carbohydrateContent\"},{\"@id\":\"http://schema.org/ComedyEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Event type: Comedy event.\",\"rdfs:label\":\"ComedyEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/isSimilarTo\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Service\"},{\"@id\":\"http://schema.org/Product\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/Service\"}],\"rdfs:comment\":\"A pointer to another, functionally similar product (or multiple products).\",\"rdfs:label\":\"isSimilarTo\"},{\"@id\":\"http://schema.org/DonateAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of providing goods, services, or money without compensation, often for philanthropic reasons.\",\"rdfs:label\":\"DonateAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/TradeAction\"}},{\"@id\":\"http://schema.org/closes\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/OpeningHoursSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Time\"},\"rdfs:comment\":\"The closing hour of the place or service on the given day(s) of the week.\",\"rdfs:label\":\"closes\"},{\"@id\":\"http://schema.org/Brand\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"A brand is a name used by an organization or business person for labeling a product, product group, or similar.\",\"rdfs:label\":\"Brand\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/MovingCompany\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A moving company.\",\"rdfs:label\":\"MovingCompany\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/HomeAndConstructionBusiness\"}},{\"@id\":\"http://schema.org/Question\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_QAStackExchange\"},\"rdfs:comment\":\"A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.\",\"rdfs:label\":\"Question\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/ZoneBoardingPolicy\",\"@type\":\"http://schema.org/BoardingPolicyType\",\"rdfs:comment\":\"The airline boards by zones of the plane.\",\"rdfs:label\":\"ZoneBoardingPolicy\"},{\"@id\":\"http://schema.org/storageRequirements\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"Storage requirements (free space required).\",\"rdfs:label\":\"storageRequirements\"},{\"@id\":\"http://schema.org/BorrowAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of obtaining an object under an agreement to return it at a later date. Reciprocal of LendAction.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/LendAction\\\">LendAction</a>: Reciprocal of BorrowAction.</li>\\n</ul>\\n\",\"rdfs:label\":\"BorrowAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/TransferAction\"}},{\"@id\":\"http://schema.org/GardenStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A garden store.\",\"rdfs:label\":\"GardenStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/estimatedCost\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/HowTo\"},{\"@id\":\"http://schema.org/HowToSupply\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/MonetaryAmount\"}],\"rdfs:comment\":\"The estimated cost of the supply or supplies consumed when performing instructions.\",\"rdfs:label\":\"estimatedCost\"},{\"@id\":\"http://schema.org/contactPoint\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ContactPoint\"},\"rdfs:comment\":\"A contact point for a person or organization.\",\"rdfs:label\":\"contactPoint\"},{\"@id\":\"http://schema.org/genre\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/BroadcastChannel\"},{\"@id\":\"http://schema.org/MusicGroup\"},{\"@id\":\"http://schema.org/CreativeWork\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"Genre of the creative work, broadcast channel or group.\",\"rdfs:label\":\"genre\"},{\"@id\":\"http://schema.org/volumeNumber\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PublicationVolume\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Integer\"},{\"@id\":\"http://schema.org/Text\"}],\"http://www.w3.org/2002/07/owl#equivalentProperty\":{\"@id\":\"http://purl.org/ontology/bibo/volume\"},\"rdfs:comment\":\"Identifies the volume of publication or multi-part work; for example, \\\"iii\\\" or \\\"2\\\".\",\"rdfs:label\":\"volumeNumber\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/position\"}},{\"@id\":\"http://schema.org/requiredGender\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PeopleAudience\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Audiences defined by a person's gender.\",\"rdfs:label\":\"requiredGender\"},{\"@id\":\"http://schema.org/ReviewAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of producing a balanced opinion about the object for an audience. An agent reviews an object with participants resulting in a review.\",\"rdfs:label\":\"ReviewAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AssessAction\"}},{\"@id\":\"http://schema.org/maxValue\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/PropertyValueSpecification\"},{\"@id\":\"http://schema.org/PropertyValue\"},{\"@id\":\"http://schema.org/QuantitativeValue\"},{\"@id\":\"http://schema.org/MonetaryAmount\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"The upper value of some characteristic or property.\",\"rdfs:label\":\"maxValue\"},{\"@id\":\"http://schema.org/UserComments\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/InteractionCounter\"},\"rdfs:comment\":\"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\\\"localLink\\\" href=\\\"http://schema.org/Action\\\">Action</a>-based vocabulary, alongside types such as <a class=\\\"localLink\\\" href=\\\"http://schema.org/Comment\\\">Comment</a>.\",\"rdfs:label\":\"UserComments\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/UserInteraction\"}},{\"@id\":\"http://schema.org/NewCondition\",\"@type\":\"http://schema.org/OfferItemCondition\",\"rdfs:comment\":\"Indicates that the item is new.\",\"rdfs:label\":\"NewCondition\"},{\"@id\":\"http://schema.org/parentOrganization\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/subOrganization\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"rdfs:comment\":\"The larger organization that this organization is a <a class=\\\"localLink\\\" href=\\\"http://schema.org/subOrganization\\\">subOrganization</a> of, if any.\",\"rdfs:label\":\"parentOrganization\"},{\"@id\":\"http://schema.org/PaintAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of producing a painting, typically with paint and canvas as instruments.\",\"rdfs:label\":\"PaintAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreateAction\"}},{\"@id\":\"http://schema.org/Blog\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A blog.\",\"rdfs:label\":\"Blog\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/duration\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/MediaObject\"},{\"@id\":\"http://schema.org/Movie\"},{\"@id\":\"http://schema.org/Event\"},{\"@id\":\"http://schema.org/MusicRecording\"},{\"@id\":\"http://schema.org/MusicRelease\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Duration\"},\"rdfs:comment\":\"The duration of the item (movie, audio recording, event, etc.) in <a href=\\\"http://en.wikipedia.org/wiki/ISO_8601\\\">ISO 8601 date format</a>.\",\"rdfs:label\":\"duration\"},{\"@id\":\"http://schema.org/SportsActivityLocation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A sports location, such as a playing field.\",\"rdfs:label\":\"SportsActivityLocation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/acceptedAnswer\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Question\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Answer\"},\"rdfs:comment\":\"The answer that has been accepted as best, typically on a Question/Answer site. Sites vary in their selection mechanisms, e.g. drawing on community opinion and/or the view of the Question author.\",\"rdfs:label\":\"acceptedAnswer\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/suggestedAnswer\"}},{\"@id\":\"http://schema.org/WarrantyPromise\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"A structured value representing the duration and scope of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.\",\"rdfs:label\":\"WarrantyPromise\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/StructuredValue\"}},{\"@id\":\"http://schema.org/fromLocation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/MoveAction\"},{\"@id\":\"http://schema.org/ExerciseAction\"},{\"@id\":\"http://schema.org/TransferAction\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"rdfs:comment\":\"A sub property of location. The original location of the object or the agent before the action.\",\"rdfs:label\":\"fromLocation\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/location\"}},{\"@id\":\"http://schema.org/Event\",\"@type\":\"rdfs:Class\",\"http://www.w3.org/2002/07/owl#equivalentClass\":{\"@id\":\"http://purl.org/dc/dcmitype/Event\"},\"rdfs:comment\":\"An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the <a class=\\\"localLink\\\" href=\\\"http://schema.org/offers\\\">offers</a> property. Repeated events may be structured as separate Event objects.\",\"rdfs:label\":\"Event\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Thing\"}},{\"@id\":\"http://schema.org/keywords\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.\",\"rdfs:label\":\"keywords\"},{\"@id\":\"http://schema.org/hostingOrganization\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ProgramMembership\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"rdfs:comment\":\"The organization (airline, travelers' club, etc.) the membership is made with.\",\"rdfs:label\":\"hostingOrganization\"},{\"@id\":\"http://schema.org/arrivalTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/TrainTrip\"},{\"@id\":\"http://schema.org/BusTrip\"},{\"@id\":\"http://schema.org/Flight\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The expected arrival time.\",\"rdfs:label\":\"arrivalTime\"},{\"@id\":\"http://schema.org/CompilationAlbum\",\"@type\":\"http://schema.org/MusicAlbumProductionType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"CompilationAlbum.\",\"rdfs:label\":\"CompilationAlbum\"},{\"@id\":\"http://schema.org/StudioAlbum\",\"@type\":\"http://schema.org/MusicAlbumProductionType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"StudioAlbum.\",\"rdfs:label\":\"StudioAlbum\"},{\"@id\":\"http://schema.org/hasDigitalDocumentPermission\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/DigitalDocument\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DigitalDocumentPermission\"},\"rdfs:comment\":\"A permission related to the access to this document (e.g. permission to read or write an electronic document). For a public document, specify a grantee with an Audience with audienceType equal to \\\"public\\\".\",\"rdfs:label\":\"hasDigitalDocumentPermission\"},{\"@id\":\"http://schema.org/programmingModel\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/APIReference\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Indicates whether API is managed or unmanaged.\",\"rdfs:label\":\"programmingModel\"},{\"@id\":\"http://schema.org/colleague\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"A colleague of the person.\",\"rdfs:label\":\"colleague\"},{\"@id\":\"http://schema.org/sender\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/ReceiveAction\"},{\"@id\":\"http://schema.org/Message\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Audience\"},{\"@id\":\"http://schema.org/Organization\"}],\"rdfs:comment\":\"A sub property of participant. The participant who is at the sending end of the action.\",\"rdfs:label\":\"sender\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/participant\"}},{\"@id\":\"http://schema.org/applicationSuite\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The name of the application suite to which the application belongs (e.g. Excel belongs to Office).\",\"rdfs:label\":\"applicationSuite\"},{\"@id\":\"http://schema.org/educationalRole\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/EducationalAudience\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"An educationalRole of an EducationalAudience.\",\"rdfs:label\":\"educationalRole\"},{\"@id\":\"http://schema.org/encodesCreativeWork\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MediaObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"rdfs:comment\":\"The CreativeWork encoded by this media object.\",\"rdfs:label\":\"encodesCreativeWork\"},{\"@id\":\"http://schema.org/seller\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/BuyAction\"},{\"@id\":\"http://schema.org/Order\"},{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Flight\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"rdfs:comment\":\"An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.\",\"rdfs:label\":\"seller\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/participant\"}},{\"@id\":\"http://schema.org/AdultEntertainment\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An adult entertainment establishment.\",\"rdfs:label\":\"AdultEntertainment\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/EntertainmentBusiness\"}},{\"@id\":\"http://schema.org/interactionCount\",\"@type\":\"rdf:Property\",\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/interactionStatistic\"},\"rdfs:comment\":\"This property is deprecated, alongside the UserInteraction types on which it depended.\",\"rdfs:label\":\"interactionCount\"},{\"@id\":\"http://schema.org/author\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/Rating\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.\",\"rdfs:label\":\"author\"},{\"@id\":\"http://schema.org/DriveWheelConfigurationValue\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"rdfs:comment\":\"A value indicating which roadwheels will receive torque.\",\"rdfs:label\":\"DriveWheelConfigurationValue\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/QualitativeValue\"}},{\"@id\":\"http://schema.org/Role\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Represents additional information about a relationship or property. For example a Role can be used to say that a 'member' role linking some SportsTeam to a player occurred during a particular time period. Or that a Person's 'actor' role in a Movie was for some particular characterName. Such properties can be attached to a Role entity, which is then associated with the main entities using ordinary properties like 'member' or 'actor'.</p>\\n\\n<p>See also <a href=\\\"http://blog.schema.org/2014/06/introducing-role.html\\\">blog post</a>.\",\"rdfs:label\":\"Role\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/LowCalorieDiet\",\"@type\":\"http://schema.org/RestrictedDiet\",\"rdfs:comment\":\"A diet focused on reduced calorie intake.\",\"rdfs:label\":\"LowCalorieDiet\"},{\"@id\":\"http://schema.org/RearWheelDriveConfiguration\",\"@type\":\"http://schema.org/DriveWheelConfigurationValue\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"rdfs:comment\":\"Real-wheel drive is a transmission layout where the engine drives the rear wheels.\",\"rdfs:label\":\"RearWheelDriveConfiguration\"},{\"@id\":\"http://schema.org/targetName\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/AlignmentObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The name of a node in an established educational framework.\",\"rdfs:label\":\"targetName\"},{\"@id\":\"http://schema.org/dataset\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/DataCatalog\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/includedInDataCatalog\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Dataset\"},\"rdfs:comment\":\"A dataset contained in this catalog.\",\"rdfs:label\":\"dataset\"},{\"@id\":\"http://schema.org/City\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A city or town.\",\"rdfs:label\":\"City\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AdministrativeArea\"}},{\"@id\":\"http://schema.org/recipeCuisine\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Recipe\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The cuisine of the recipe (for example, French or Ethiopian).\",\"rdfs:label\":\"recipeCuisine\"},{\"@id\":\"http://schema.org/ConsumeAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of ingesting information/resources/food.\",\"rdfs:label\":\"ConsumeAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Action\"}},{\"@id\":\"http://schema.org/ScreeningEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A screening of a movie or other video.\",\"rdfs:label\":\"ScreeningEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/legalName\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The official name of the organization, e.g. the registered company name.\",\"rdfs:label\":\"legalName\"},{\"@id\":\"http://schema.org/LimitedAvailability\",\"@type\":\"http://schema.org/ItemAvailability\",\"rdfs:comment\":\"Indicates that the item has limited availability.\",\"rdfs:label\":\"LimitedAvailability\"},{\"@id\":\"http://schema.org/specialCommitments\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Any special commitments associated with this job posting. Valid entries include VeteranCommit, MilitarySpouseCommit, etc.\",\"rdfs:label\":\"specialCommitments\"},{\"@id\":\"http://schema.org/ticketToken\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Ticket\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"Reference to an asset (e.g., Barcode, QR code image or PDF) usable for entrance.\",\"rdfs:label\":\"ticketToken\"},{\"@id\":\"http://schema.org/ArriveAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of arriving at a place. An agent arrives at a destination from a fromLocation, optionally with participants.\",\"rdfs:label\":\"ArriveAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/MoveAction\"}},{\"@id\":\"http://schema.org/cookTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Recipe\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Duration\"},\"rdfs:comment\":\"The time it takes to actually cook the dish, in <a href=\\\"http://en.wikipedia.org/wiki/ISO_8601\\\">ISO 8601 duration format</a>.\",\"rdfs:label\":\"cookTime\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/performTime\"}},{\"@id\":\"http://schema.org/knownVehicleDamages\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A textual description of known damages, both repaired and unrepaired.\",\"rdfs:label\":\"knownVehicleDamages\"},{\"@id\":\"http://schema.org/occupationalCategory\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Category or categories describing the job. Use BLS O*NET-SOC taxonomy: http://www.onetcenter.org/taxonomy.html. Ideally includes textual label and formal code, with the property repeated for each applicable value.\",\"rdfs:label\":\"occupationalCategory\"},{\"@id\":\"http://schema.org/securityScreening\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/FlightReservation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The type of security screening the passenger is subject to.\",\"rdfs:label\":\"securityScreening\"},{\"@id\":\"http://schema.org/addressRegion\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PostalAddress\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The region. For example, CA.\",\"rdfs:label\":\"addressRegion\"},{\"@id\":\"http://schema.org/EventCancelled\",\"@type\":\"http://schema.org/EventStatusType\",\"rdfs:comment\":\"The event has been cancelled. If the event has multiple startDate values, all are assumed to be cancelled. Either startDate or previousStartDate may be used to specify the event's cancelled date(s).\",\"rdfs:label\":\"EventCancelled\"},{\"@id\":\"http://schema.org/object\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Action\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"rdfs:comment\":\"The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>.\",\"rdfs:label\":\"object\"},{\"@id\":\"http://schema.org/assembly\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/APIReference\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/executableLibraryName\"},\"rdfs:comment\":\"Library file name e.g., mscorlib.dll, system.web.dll.\",\"rdfs:label\":\"assembly\"},{\"@id\":\"http://schema.org/CreateAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of deliberately creating/producing/generating/building a result out of the agent.\",\"rdfs:label\":\"CreateAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Action\"}},{\"@id\":\"http://schema.org/ScheduleAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>Scheduling future actions, events, or tasks.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/ReserveAction\\\">ReserveAction</a>: Unlike ReserveAction, ScheduleAction allocates future actions (e.g. an event, a task, etc) towards a time slot / spatial allocation.</li>\\n</ul>\\n\",\"rdfs:label\":\"ScheduleAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PlanAction\"}},{\"@id\":\"http://schema.org/Dentist\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A dentist.\",\"rdfs:label\":\"Dentist\",\"rdfs:subClassOf\":[{\"@id\":\"http://schema.org/LocalBusiness\"},{\"@id\":\"http://schema.org/MedicalOrganization\"}]},{\"@id\":\"http://schema.org/DiscoverAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of discovering/finding an object.\",\"rdfs:label\":\"DiscoverAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FindAction\"}},{\"@id\":\"http://schema.org/TattooParlor\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A tattoo parlor.\",\"rdfs:label\":\"TattooParlor\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/HealthAndBeautyBusiness\"}},{\"@id\":\"http://schema.org/memoryRequirements\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"Minimum memory requirements.\",\"rdfs:label\":\"memoryRequirements\"},{\"@id\":\"http://schema.org/numberOfAirbags\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Number\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The number or type of airbags in the vehicle.\",\"rdfs:label\":\"numberOfAirbags\"},{\"@id\":\"http://schema.org/Reservoir\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A reservoir of water, typically an artificially created lake, like the Lake Kariba reservoir.\",\"rdfs:label\":\"Reservoir\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/BodyOfWater\"}},{\"@id\":\"http://schema.org/MusicEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Event type: Music event.\",\"rdfs:label\":\"MusicEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/Store\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A retail good store.\",\"rdfs:label\":\"Store\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/MonetaryAmount\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO\"},\"rdfs:comment\":\"A monetary value or range. This type can be used to describe an amount of money such as $50 USD, or a range as in describing a bank account being suitable for a balance between £1,000 and £1,000,000 GBP, or the value of a salary, etc. It is recommended to use <a class=\\\"localLink\\\" href=\\\"http://schema.org/PriceSpecification\\\">PriceSpecification</a> Types to describe the price of an Offer, Invoice, etc.\",\"rdfs:label\":\"MonetaryAmount\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/StructuredValue\"}},{\"@id\":\"http://schema.org/paymentMethodId\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Order\"},{\"@id\":\"http://schema.org/Invoice\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"An identifier for the method of payment used (e.g. the last 4 digits of the credit card).\",\"rdfs:label\":\"paymentMethodId\"},{\"@id\":\"http://schema.org/HairSalon\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A hair salon.\",\"rdfs:label\":\"HairSalon\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/HealthAndBeautyBusiness\"}},{\"@id\":\"http://schema.org/isBasedOnUrl\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/URL\"}],\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/isBasedOn\"},\"rdfs:comment\":\"A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.\",\"rdfs:label\":\"isBasedOnUrl\"},{\"@id\":\"http://schema.org/webCheckinTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Flight\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The time when a passenger can check into the flight online.\",\"rdfs:label\":\"webCheckinTime\"},{\"@id\":\"http://schema.org/DaySpa\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A day spa.\",\"rdfs:label\":\"DaySpa\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/HealthAndBeautyBusiness\"}},{\"@id\":\"http://schema.org/ownedThrough\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/OwnershipInfo\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The date and time of giving up ownership on the product.\",\"rdfs:label\":\"ownedThrough\"},{\"@id\":\"http://schema.org/mealService\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Flight\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Description of the meals that will be provided or available for purchase.\",\"rdfs:label\":\"mealService\"},{\"@id\":\"http://schema.org/EngineSpecification\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"rdfs:comment\":\"Information about the engine of the vehicle. A vehicle can have multiple engines represented by multiple engine specification entities.\",\"rdfs:label\":\"EngineSpecification\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/StructuredValue\"}},{\"@id\":\"http://schema.org/printPage\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/NewsArticle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18).\",\"rdfs:label\":\"printPage\"},{\"@id\":\"http://schema.org/discusses\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/UserComments\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"rdfs:comment\":\"Specifies the CreativeWork associated with the UserComment.\",\"rdfs:label\":\"discusses\"},{\"@id\":\"http://schema.org/messageAttachment\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Message\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"rdfs:comment\":\"A CreativeWork attached to the message.\",\"rdfs:label\":\"messageAttachment\"},{\"@id\":\"http://schema.org/ActivateAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of starting or activating a device or application (e.g. starting a timer or turning on a flashlight).\",\"rdfs:label\":\"ActivateAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ControlAction\"}},{\"@id\":\"http://schema.org/timeRequired\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Duration\"},\"rdfs:comment\":\"Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'P30M', 'P1H25M'.\",\"rdfs:label\":\"timeRequired\"},{\"@id\":\"http://schema.org/numberOfPages\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Book\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"The number of pages in the book.\",\"rdfs:label\":\"numberOfPages\"},{\"@id\":\"http://schema.org/RadioEpisode\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A radio episode which can be part of a series or season.\",\"rdfs:label\":\"RadioEpisode\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Episode\"}},{\"@id\":\"http://schema.org/ElementarySchool\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An elementary school.\",\"rdfs:label\":\"ElementarySchool\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/EducationalOrganization\"}},{\"@id\":\"http://schema.org/translator\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Event\"},{\"@id\":\"http://schema.org/CreativeWork\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.\",\"rdfs:label\":\"translator\"},{\"@id\":\"http://schema.org/discount\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Order\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Number\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"Any discount applied (to an Order).\",\"rdfs:label\":\"discount\"},{\"@id\":\"http://schema.org/ReplaceAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of editing a recipient by replacing an old object with a new object.\",\"rdfs:label\":\"ReplaceAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/UpdateAction\"}},{\"@id\":\"http://schema.org/CreditCard\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":[{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO\"},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"}],\"rdfs:comment\":\"<p>A card payment method of a particular brand or name.  Used to mark up a particular payment method and/or the financial product/service that supplies the card account.</p>\\n\\n<p>Commonly used values:</p>\\n\\n<ul>\\n<li>http://purl.org/goodrelations/v1#AmericanExpress</li>\\n<li>http://purl.org/goodrelations/v1#DinersClub</li>\\n<li>http://purl.org/goodrelations/v1#Discover</li>\\n<li>http://purl.org/goodrelations/v1#JCB</li>\\n<li>http://purl.org/goodrelations/v1#MasterCard</li>\\n<li>http://purl.org/goodrelations/v1#VISA</li>\\n</ul>\\n\",\"rdfs:label\":\"CreditCard\",\"rdfs:subClassOf\":[{\"@id\":\"http://schema.org/PaymentCard\"},{\"@id\":\"http://schema.org/LoanOrCredit\"}]},{\"@id\":\"http://schema.org/OpeningHoursSpecification\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"A structured value providing information about the opening hours of a place or a certain service inside a place.</p>\\n\\n<p>The place is <strong>open</strong> if the <a class=\\\"localLink\\\" href=\\\"http://schema.org/opens\\\">opens</a> property is specified, and <strong>closed</strong> otherwise.</p>\\n\\n<p>If the value for the <a class=\\\"localLink\\\" href=\\\"http://schema.org/closes\\\">closes</a> property is less than the value for the <a class=\\\"localLink\\\" href=\\\"http://schema.org/opens\\\">opens</a> property then the hour range is assumed to span over the next day.\",\"rdfs:label\":\"OpeningHoursSpecification\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/StructuredValue\"}},{\"@id\":\"http://schema.org/valueName\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PropertyValueSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name.\",\"rdfs:label\":\"valueName\"},{\"@id\":\"http://schema.org/ItemListUnordered\",\"@type\":\"http://schema.org/ItemListOrderType\",\"rdfs:comment\":\"An ItemList ordered with no explicit order.\",\"rdfs:label\":\"ItemListUnordered\"},{\"@id\":\"http://schema.org/servicePhone\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ServiceChannel\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ContactPoint\"},\"rdfs:comment\":\"The phone number to use to access the service.\",\"rdfs:label\":\"servicePhone\"},{\"@id\":\"http://schema.org/additionalNumberOfGuests\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/RsvpAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"If responding yes, the number of guests who will attend in addition to the invitee.\",\"rdfs:label\":\"additionalNumberOfGuests\"},{\"@id\":\"http://schema.org/DislikeAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of expressing a negative sentiment about the object. An agent dislikes an object (a proposition, topic or theme) with participants.\",\"rdfs:label\":\"DislikeAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ReactAction\"}},{\"@id\":\"http://schema.org/PlayAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of playing/exercising/training/performing for enjoyment, leisure, recreation, Competition or exercise.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/ListenAction\\\">ListenAction</a>: Unlike ListenAction (which is under ConsumeAction), PlayAction refers to performing for an audience or at an event, rather than consuming music.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/WatchAction\\\">WatchAction</a>: Unlike WatchAction (which is under ConsumeAction), PlayAction refers to showing/displaying for an audience or at an event, rather than consuming visual content.</li>\\n</ul>\\n\",\"rdfs:label\":\"PlayAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Action\"}},{\"@id\":\"http://schema.org/programName\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ProgramMembership\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The program providing the membership.\",\"rdfs:label\":\"programName\"},{\"@id\":\"http://schema.org/deliveryLeadTime\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Demand\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup.\",\"rdfs:label\":\"deliveryLeadTime\"},{\"@id\":\"http://schema.org/issuedThrough\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Permit\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Service\"},\"rdfs:comment\":\"The service through with the permit was granted.\",\"rdfs:label\":\"issuedThrough\"},{\"@id\":\"http://schema.org/TieAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of reaching a draw in a competitive activity.\",\"rdfs:label\":\"TieAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AchieveAction\"}},{\"@id\":\"http://schema.org/minimumPaymentDue\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Invoice\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/PriceSpecification\"},{\"@id\":\"http://schema.org/MonetaryAmount\"}],\"rdfs:comment\":\"The minimum payment required at this time.\",\"rdfs:label\":\"minimumPaymentDue\"},{\"@id\":\"http://schema.org/Corporation\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews\"},\"rdfs:comment\":\"Organization: A business corporation.\",\"rdfs:label\":\"Corporation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Organization\"}},{\"@id\":\"http://schema.org/suggestedGender\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PeopleAudience\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The gender of the person or audience.\",\"rdfs:label\":\"suggestedGender\"},{\"@id\":\"http://schema.org/seatRow\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Seat\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The row location of the reserved seat (e.g., B).\",\"rdfs:label\":\"seatRow\"},{\"@id\":\"http://schema.org/proteinContent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/NutritionInformation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Mass\"},\"rdfs:comment\":\"The number of grams of protein.\",\"rdfs:label\":\"proteinContent\"},{\"@id\":\"http://schema.org/wordCount\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Article\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"The number of words in the text of the Article.\",\"rdfs:label\":\"wordCount\"},{\"@id\":\"http://schema.org/ItemList\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A list of items of any sort&#x2014;for example, Top 10 Movies About Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which are often used only for formatting.\",\"rdfs:label\":\"ItemList\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/DeliveryMethod\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"<p>A delivery method is a standardized procedure for transferring the product or service to the destination of fulfillment chosen by the customer. Delivery methods are characterized by the means of transportation used, and by the organization or group that is the contracting party for the sending organization or person.</p>\\n\\n<p>Commonly used values:</p>\\n\\n<ul>\\n<li>http://purl.org/goodrelations/v1#DeliveryModeDirectDownload</li>\\n<li>http://purl.org/goodrelations/v1#DeliveryModeFreight</li>\\n<li>http://purl.org/goodrelations/v1#DeliveryModeMail</li>\\n<li>http://purl.org/goodrelations/v1#DeliveryModeOwnFleet</li>\\n<li>http://purl.org/goodrelations/v1#DeliveryModePickUp</li>\\n<li>http://purl.org/goodrelations/v1#DHL</li>\\n<li>http://purl.org/goodrelations/v1#FederalExpress</li>\\n<li>http://purl.org/goodrelations/v1#UPS</li>\\n</ul>\\n\",\"rdfs:label\":\"DeliveryMethod\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/Winery\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A winery.\",\"rdfs:label\":\"Winery\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FoodEstablishment\"}},{\"@id\":\"http://schema.org/InformAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of notifying someone of information pertinent to them, with no expectation of a response.\",\"rdfs:label\":\"InformAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CommunicateAction\"}},{\"@id\":\"http://schema.org/paymentAccepted\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/LocalBusiness\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Cash, credit card, etc.\",\"rdfs:label\":\"paymentAccepted\"},{\"@id\":\"http://schema.org/screenshot\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/ImageObject\"}],\"rdfs:comment\":\"A link to a screenshot image of the app.\",\"rdfs:label\":\"screenshot\"},{\"@id\":\"http://schema.org/availabilityEnds\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/Offer\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The end of the availability of the product or service included in the offer.\",\"rdfs:label\":\"availabilityEnds\"},{\"@id\":\"http://schema.org/requiredMaxAge\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PeopleAudience\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"Audiences defined by a person's maximum age.\",\"rdfs:label\":\"requiredMaxAge\"},{\"@id\":\"http://schema.org/ReturnAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of returning to the origin that which was previously received (concrete objects) or taken (ownership).\",\"rdfs:label\":\"ReturnAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/TransferAction\"}},{\"@id\":\"http://schema.org/MeetingRoom\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"rdfs:comment\":\"A meeting room, conference room, or conference hall is a room provided for singular events such as business conferences and meetings (Source: Wikipedia, the free encyclopedia, see <a href=\\\"http://en.wikipedia.org/wiki/Conference_hall\\\">http://en.wikipedia.org/wiki/Conference_hall</a>).\\n<br /><br />\\nSee also the <a href=\\\"/docs/hotels.html\\\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\",\"rdfs:label\":\"MeetingRoom\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Room\"}},{\"@id\":\"http://schema.org/sodiumContent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/NutritionInformation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Mass\"},\"rdfs:comment\":\"The number of milligrams of sodium.\",\"rdfs:label\":\"sodiumContent\"},{\"@id\":\"http://schema.org/model\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Product\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/ProductModel\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.\",\"rdfs:label\":\"model\"},{\"@id\":\"http://schema.org/vehicleSeatingCapacity\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Number\"},{\"@id\":\"http://schema.org/QuantitativeValue\"}],\"rdfs:comment\":\"The number of passengers that can be seated in the vehicle, both in terms of the physical space available, and in terms of limitations set by law.</p>\\n\\n<p>Typical unit code(s): C62 for persons.\",\"rdfs:label\":\"vehicleSeatingCapacity\"},{\"@id\":\"http://schema.org/SeatingMap\",\"@type\":\"http://schema.org/MapCategoryType\",\"rdfs:comment\":\"A seating map.\",\"rdfs:label\":\"SeatingMap\"},{\"@id\":\"http://schema.org/OrderAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An agent orders an object/product/service to be delivered/sent.\",\"rdfs:label\":\"OrderAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/TradeAction\"}},{\"@id\":\"http://schema.org/StadiumOrArena\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A stadium.\",\"rdfs:label\":\"StadiumOrArena\",\"rdfs:subClassOf\":[{\"@id\":\"http://schema.org/CivicStructure\"},{\"@id\":\"http://schema.org/SportsActivityLocation\"}]},{\"@id\":\"http://schema.org/JoinAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>An agent joins an event/group with participants/friends at a location.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/RegisterAction\\\">RegisterAction</a>: Unlike RegisterAction, JoinAction refers to joining a group/team of people.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/SubscribeAction\\\">SubscribeAction</a>: Unlike SubscribeAction, JoinAction does not imply that you'll be receiving updates.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/FollowAction\\\">FollowAction</a>: Unlike FollowAction, JoinAction does not imply that you'll be polling for updates.</li>\\n</ul>\\n\",\"rdfs:label\":\"JoinAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/InteractAction\"}},{\"@id\":\"http://schema.org/OrderInTransit\",\"@type\":\"http://schema.org/OrderStatus\",\"rdfs:comment\":\"OrderStatus representing that an order is in transit.\",\"rdfs:label\":\"OrderInTransit\"},{\"@id\":\"http://schema.org/orderDelivery\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Order\"},{\"@id\":\"http://schema.org/OrderItem\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ParcelDelivery\"},\"rdfs:comment\":\"The delivery of the parcel related to this order or order item.\",\"rdfs:label\":\"orderDelivery\"},{\"@id\":\"http://schema.org/containedInPlace\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/containsPlace\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"rdfs:comment\":\"The basic containment relation between a place and one that contains it.\",\"rdfs:label\":\"containedInPlace\"},{\"@id\":\"http://schema.org/color\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Product\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The color of the product.\",\"rdfs:label\":\"color\"},{\"@id\":\"http://schema.org/DJMixAlbum\",\"@type\":\"http://schema.org/MusicAlbumProductionType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"DJMixAlbum.\",\"rdfs:label\":\"DJMixAlbum\"},{\"@id\":\"http://schema.org/SearchAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of searching for an object.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/FindAction\\\">FindAction</a>: SearchAction generally leads to a FindAction, but not necessarily.</li>\\n</ul>\\n\",\"rdfs:label\":\"SearchAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Action\"}},{\"@id\":\"http://schema.org/HVACBusiness\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A business that provide Heating, Ventilation and Air Conditioning services.\",\"rdfs:label\":\"HVACBusiness\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/HomeAndConstructionBusiness\"}},{\"@id\":\"http://schema.org/TaxiStand\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A taxi stand.\",\"rdfs:label\":\"TaxiStand\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/ProductModel\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"A datasheet or vendor specification of a product (in the sense of a prototypical description).\",\"rdfs:label\":\"ProductModel\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Product\"}},{\"@id\":\"http://schema.org/CatholicChurch\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A Catholic church.\",\"rdfs:label\":\"CatholicChurch\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PlaceOfWorship\"}},{\"@id\":\"http://schema.org/serviceOperator\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/GovernmentService\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"rdfs:comment\":\"The operating organization, if different from the provider.  This enables the representation of services that are provided by an organization, but operated by another organization like a subcontractor.\",\"rdfs:label\":\"serviceOperator\"},{\"@id\":\"http://schema.org/MovieClip\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A short segment/part of a movie.\",\"rdfs:label\":\"MovieClip\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Clip\"}},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\",\"@type\":\"http://schema.org/Organization\",\"rdfs:comment\":\"This class is derived from the GoodRelations Vocabulary for E-Commerce, created by Martin Hepp. GoodRelations is a data model for sharing e-commerce data on the Web that can be expressed in a variety of syntaxes, including RDFa and HTML5 Microdata. More information about GoodRelations can be found at <a href=\\\"http://purl.org/goodrelations/\\\">http://purl.org/goodrelations/</a>.\",\"rdfs:label\":\"GoodRelationsClass\"},{\"@id\":\"http://schema.org/ActionStatusType\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The status of an Action.\",\"rdfs:label\":\"ActionStatusType\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/WriteAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of authoring written creative content.\",\"rdfs:label\":\"WriteAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreateAction\"}},{\"@id\":\"http://schema.org/MusicAlbumProductionType\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"Classification of the album by it's type of content: soundtrack, live album, studio album, etc.\",\"rdfs:label\":\"MusicAlbumProductionType\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/experienceRequirements\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Description of skills and experience needed for the position.\",\"rdfs:label\":\"experienceRequirements\"},{\"@id\":\"http://schema.org/ApplyAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of registering to an organization/service without the guarantee to receive it.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/RegisterAction\\\">RegisterAction</a>: Unlike RegisterAction, ApplyAction has no guarantees that the application will be accepted.</li>\\n</ul>\\n\",\"rdfs:label\":\"ApplyAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/OrganizeAction\"}},{\"@id\":\"http://schema.org/countriesSupported\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.\",\"rdfs:label\":\"countriesSupported\"},{\"@id\":\"http://schema.org/foodEstablishment\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CookAction\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/FoodEstablishment\"},{\"@id\":\"http://schema.org/Place\"}],\"rdfs:comment\":\"A sub property of location. The specific food establishment where the action occurred.\",\"rdfs:label\":\"foodEstablishment\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/location\"}},{\"@id\":\"http://schema.org/parents\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/parent\"},\"rdfs:comment\":\"A parents of the person.\",\"rdfs:label\":\"parents\"},{\"@id\":\"http://schema.org/foundingDate\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"The date that this organization was founded.\",\"rdfs:label\":\"foundingDate\"},{\"@id\":\"http://schema.org/departureGate\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Flight\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Identifier of the flight's departure gate.\",\"rdfs:label\":\"departureGate\"},{\"@id\":\"http://schema.org/isRelatedTo\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/Service\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Service\"},{\"@id\":\"http://schema.org/Product\"}],\"rdfs:comment\":\"A pointer to another, somehow related product (or multiple products).\",\"rdfs:label\":\"isRelatedTo\"},{\"@id\":\"http://schema.org/worstRating\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Rating\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Number\"}],\"rdfs:comment\":\"The lowest value allowed in this rating system. If worstRating is omitted, 1 is assumed.\",\"rdfs:label\":\"worstRating\"},{\"@id\":\"http://schema.org/thumbnailUrl\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"rdfs:comment\":\"A thumbnail image relevant to the Thing.\",\"rdfs:label\":\"thumbnailUrl\"},{\"@id\":\"http://schema.org/availableChannel\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Service\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ServiceChannel\"},\"rdfs:comment\":\"A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).\",\"rdfs:label\":\"availableChannel\"},{\"@id\":\"http://schema.org/hasMenuItem\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/MenuSection\"},{\"@id\":\"http://schema.org/Menu\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MenuItem\"},\"rdfs:comment\":\"A food or drink item contained in a menu or menu section.\",\"rdfs:label\":\"hasMenuItem\"},{\"@id\":\"http://schema.org/cargoVolume\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"The available volume for cargo or luggage. For automobiles, this is usually the trunk volume.</p>\\n\\n<p>Typical unit code(s): LTR for liters, FTQ for cubic foot/feet</p>\\n\\n<p>Note: You can use <a class=\\\"localLink\\\" href=\\\"http://schema.org/minValue\\\">minValue</a> and <a class=\\\"localLink\\\" href=\\\"http://schema.org/maxValue\\\">maxValue</a> to indicate ranges.\",\"rdfs:label\":\"cargoVolume\"},{\"@id\":\"http://schema.org/broadcaster\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BroadcastService\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"rdfs:comment\":\"The organization owning or operating the broadcast service.\",\"rdfs:label\":\"broadcaster\"},{\"@id\":\"http://schema.org/firstPerformance\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicComposition\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Event\"},\"rdfs:comment\":\"The date and place the work was first performed.\",\"rdfs:label\":\"firstPerformance\"},{\"@id\":\"http://schema.org/Locksmith\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A locksmith.\",\"rdfs:label\":\"Locksmith\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/HomeAndConstructionBusiness\"}},{\"@id\":\"http://schema.org/Landform\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A landform or physical feature.  Landform elements include mountains, plains, lakes, rivers, seascape and oceanic waterbody interface features such as bays, peninsulas, seas and so forth, including sub-aqueous terrain features such as submersed mountain ranges, volcanoes, and the great ocean basins.\",\"rdfs:label\":\"Landform\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Place\"}},{\"@id\":\"http://schema.org/Discontinued\",\"@type\":\"http://schema.org/ItemAvailability\",\"rdfs:comment\":\"Indicates that the item has been discontinued.\",\"rdfs:label\":\"Discontinued\"},{\"@id\":\"http://schema.org/seatNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Seat\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The location of the reserved seat (e.g., 27).\",\"rdfs:label\":\"seatNumber\"},{\"@id\":\"http://schema.org/hasPart\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/isPartOf\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"rdfs:comment\":\"Indicates a CreativeWork that is (in some sense) a part of this CreativeWork.\",\"rdfs:label\":\"hasPart\"},{\"@id\":\"http://schema.org/Episode\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A media episode (e.g. TV, radio, video game) which can be part of a series or season.\",\"rdfs:label\":\"Episode\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/OceanBodyOfWater\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An ocean (for example, the Pacific).\",\"rdfs:label\":\"OceanBodyOfWater\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/BodyOfWater\"}},{\"@id\":\"http://schema.org/MedicalOrganization\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A medical organization (physical or not), such as hospital, institution or clinic.\",\"rdfs:label\":\"MedicalOrganization\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Organization\"}},{\"@id\":\"http://schema.org/employee\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"Someone working for this organization.\",\"rdfs:label\":\"employee\"},{\"@id\":\"http://schema.org/warrantyPromise\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/SellAction\"},{\"@id\":\"http://schema.org/BuyAction\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/WarrantyPromise\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/warranty\"},\"rdfs:comment\":\"The warranty promise(s) included in the offer.\",\"rdfs:label\":\"warrantyPromise\"},{\"@id\":\"http://schema.org/contactType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ContactPoint\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.\",\"rdfs:label\":\"contactType\"},{\"@id\":\"http://schema.org/productID\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Product\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The product identifier, such as ISBN. For example: <code>meta itemprop=\\\"productID\\\" content=\\\"isbn:123-456-789\\\"</code>.\",\"rdfs:label\":\"productID\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/identifier\"}},{\"@id\":\"http://schema.org/TrainReservation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A reservation for train travel.</p>\\n\\n<p>Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class=\\\"localLink\\\" href=\\\"http://schema.org/Offer\\\">Offer</a>.\",\"rdfs:label\":\"TrainReservation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Reservation\"}},{\"@id\":\"http://schema.org/passengerPriorityStatus\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/FlightReservation\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/QualitativeValue\"}],\"rdfs:comment\":\"The priority status assigned to a passenger for security or boarding (e.g. FastTrack or Priority).\",\"rdfs:label\":\"passengerPriorityStatus\"},{\"@id\":\"http://schema.org/Online\",\"@type\":\"http://schema.org/GameServerStatus\",\"rdfs:comment\":\"Game server status: Online. Server is available.\",\"rdfs:label\":\"Online\"},{\"@id\":\"http://schema.org/MusicVenue\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A music venue.\",\"rdfs:label\":\"MusicVenue\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/transFatContent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/NutritionInformation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Mass\"},\"rdfs:comment\":\"The number of grams of trans fat.\",\"rdfs:label\":\"transFatContent\"},{\"@id\":\"http://schema.org/comment\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/RsvpAction\"},{\"@id\":\"http://schema.org/CreativeWork\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Comment\"},\"rdfs:comment\":\"Comments, typically from users.\",\"rdfs:label\":\"comment\"},{\"@id\":\"http://schema.org/targetCollection\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/UpdateAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"rdfs:comment\":\"A sub property of object. The collection target of the action.\",\"rdfs:label\":\"targetCollection\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/object\"}},{\"@id\":\"http://schema.org/nonEqual\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/QualitativeValue\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QualitativeValue\"},\"rdfs:comment\":\"This ordering relation for qualitative values indicates that the subject is not equal to the object.\",\"rdfs:label\":\"nonEqual\"},{\"@id\":\"http://schema.org/numberOfEmployees\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/BusinessAudience\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"The number of employees in an organization e.g. business.\",\"rdfs:label\":\"numberOfEmployees\"},{\"@id\":\"http://schema.org/naics\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The North American Industry Classification System (NAICS) code for a particular organization or business person.\",\"rdfs:label\":\"naics\"},{\"@id\":\"http://schema.org/hasPOS\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"rdfs:comment\":\"Points-of-Sales operated by the organization or person.\",\"rdfs:label\":\"hasPOS\"},{\"@id\":\"http://schema.org/Review\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A review of an item - for example, of a restaurant, movie, or store.\",\"rdfs:label\":\"Review\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/dateReceived\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Message\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The date/time the message was received if a single recipient exists.\",\"rdfs:label\":\"dateReceived\"},{\"@id\":\"http://schema.org/previousItem\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ListItem\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ListItem\"},\"rdfs:comment\":\"A link to the ListItem that preceeds the current one.\",\"rdfs:label\":\"previousItem\"},{\"@id\":\"http://schema.org/PostalAddress\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The mailing address.\",\"rdfs:label\":\"PostalAddress\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ContactPoint\"}},{\"@id\":\"http://schema.org/totalTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/HowTo\"},{\"@id\":\"http://schema.org/HowToDirection\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Duration\"},\"rdfs:comment\":\"The total time required to perform instructions or a direction (including time to prepare the supplies), in <a href=\\\"http://en.wikipedia.org/wiki/ISO_8601\\\">ISO 8601 duration format</a>.\",\"rdfs:label\":\"totalTime\"},{\"@id\":\"http://schema.org/parent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"A parent of this person.\",\"rdfs:label\":\"parent\"},{\"@id\":\"http://schema.org/softwareHelp\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"rdfs:comment\":\"Software application help.\",\"rdfs:label\":\"softwareHelp\"},{\"@id\":\"http://schema.org/entertainmentBusiness\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PerformAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/EntertainmentBusiness\"},\"rdfs:comment\":\"A sub property of location. The entertainment business where the action occurred.\",\"rdfs:label\":\"entertainmentBusiness\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/location\"}},{\"@id\":\"http://schema.org/ClaimReview\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://github.com/schemaorg/schemaorg/issues/1061\"},\"http://schema.org/category\":\"issue-1061\",\"rdfs:comment\":\"A fact-checking review of claims made (or reported) in some creative work (referenced via itemReviewed).\",\"rdfs:label\":\"ClaimReview\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Review\"}},{\"@id\":\"http://schema.org/quest\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/VideoGameSeries\"},{\"@id\":\"http://schema.org/Game\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"rdfs:comment\":\"The task that a player-controlled character, or group of characters may complete in order to gain a reward.\",\"rdfs:label\":\"quest\"},{\"@id\":\"http://schema.org/representativeOfPage\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ImageObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Boolean\"},\"rdfs:comment\":\"Indicates whether this image is representative of the content of the page.\",\"rdfs:label\":\"representativeOfPage\"},{\"@id\":\"http://schema.org/CollegeOrUniversity\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A college, university, or other third-level educational institution.\",\"rdfs:label\":\"CollegeOrUniversity\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/EducationalOrganization\"}},{\"@id\":\"http://schema.org/articleBody\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Article\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The actual body of the article.\",\"rdfs:label\":\"articleBody\"},{\"@id\":\"http://schema.org/previousStartDate\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Event\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.\",\"rdfs:label\":\"previousStartDate\"},{\"@id\":\"http://schema.org/orderedItem\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/OrderItem\"},{\"@id\":\"http://schema.org/Order\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/OrderItem\"},{\"@id\":\"http://schema.org/Product\"}],\"rdfs:comment\":\"The item ordered.\",\"rdfs:label\":\"orderedItem\"},{\"@id\":\"http://schema.org/expectedArrivalUntil\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ParcelDelivery\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The latest date the package may arrive.\",\"rdfs:label\":\"expectedArrivalUntil\"},{\"@id\":\"http://schema.org/Clip\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A short TV or radio program or a segment/part of a program.\",\"rdfs:label\":\"Clip\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/Seat\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Used to describe a seat, such as a reserved seat in an event reservation.\",\"rdfs:label\":\"Seat\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/OnlineFull\",\"@type\":\"http://schema.org/GameServerStatus\",\"rdfs:comment\":\"Game server status: OnlineFull. Server is online but unavailable. The maximum number of players has reached.\",\"rdfs:label\":\"OnlineFull\"},{\"@id\":\"http://schema.org/softwareAddOn\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"rdfs:comment\":\"Additional content for a software application.\",\"rdfs:label\":\"softwareAddOn\"},{\"@id\":\"http://schema.org/checkoutTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/LodgingBusiness\"},{\"@id\":\"http://schema.org/LodgingReservation\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The latest someone may check out of a lodging establishment.\",\"rdfs:label\":\"checkoutTime\"},{\"@id\":\"http://schema.org/OnlineOnly\",\"@type\":\"http://schema.org/ItemAvailability\",\"rdfs:comment\":\"Indicates that the item is available only online.\",\"rdfs:label\":\"OnlineOnly\"},{\"@id\":\"http://schema.org/lodgingUnitType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/LodgingReservation\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/QualitativeValue\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"Textual description of the unit type (including suite vs. room, size of bed, etc.).\",\"rdfs:label\":\"lodgingUnitType\"},{\"@id\":\"http://schema.org/modifiedTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Reservation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The date and time the reservation was modified.\",\"rdfs:label\":\"modifiedTime\"},{\"@id\":\"http://schema.org/encodingFormat\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MediaObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"mp3, mpeg4, etc.\",\"rdfs:label\":\"encodingFormat\"},{\"@id\":\"http://schema.org/thumbnail\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/VideoObject\"},{\"@id\":\"http://schema.org/ImageObject\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ImageObject\"},\"rdfs:comment\":\"Thumbnail image for an image or video.\",\"rdfs:label\":\"thumbnail\"},{\"@id\":\"http://schema.org/WantAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of expressing a desire about the object. An agent wants an object.\",\"rdfs:label\":\"WantAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ReactAction\"}},{\"@id\":\"http://schema.org/review\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Brand\"},{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/Event\"},{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Service\"},{\"@id\":\"http://schema.org/Product\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Review\"},\"rdfs:comment\":\"A review of the item.\",\"rdfs:label\":\"review\"},{\"@id\":\"http://schema.org/musicArrangement\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicComposition\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MusicComposition\"},\"rdfs:comment\":\"An arrangement derived from the composition.\",\"rdfs:label\":\"musicArrangement\"},{\"@id\":\"http://schema.org/acceptedOffer\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Order\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Offer\"},\"rdfs:comment\":\"The offer(s) -- e.g., product, quantity and price combinations -- included in the order.\",\"rdfs:label\":\"acceptedOffer\"},{\"@id\":\"http://schema.org/ReadAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of consuming written content.\",\"rdfs:label\":\"ReadAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ConsumeAction\"}},{\"@id\":\"http://schema.org/Specialty\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Any branch of a field in which people typically develop specific expertise, usually after significant study, time, and effort.\",\"rdfs:label\":\"Specialty\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/TaxiService\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A service for a vehicle for hire with a driver for local travel. Fares are usually calculated based on distance traveled.\",\"rdfs:label\":\"TaxiService\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Service\"}},{\"@id\":\"http://schema.org/geographicArea\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Audience\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/AdministrativeArea\"},\"rdfs:comment\":\"The geographic area associated with the audience.\",\"rdfs:label\":\"geographicArea\"},{\"@id\":\"http://schema.org/ratingCount\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/AggregateRating\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"The count of total number of ratings.\",\"rdfs:label\":\"ratingCount\"},{\"@id\":\"http://schema.org/foundingLocation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"rdfs:comment\":\"The place where the Organization was founded.\",\"rdfs:label\":\"foundingLocation\"},{\"@id\":\"http://schema.org/OnSitePickup\",\"@type\":\"http://schema.org/DeliveryMethod\",\"rdfs:comment\":\"A DeliveryMethod in which an item is collected on site, e.g. in a store or at a box office.\",\"rdfs:label\":\"OnSitePickup\"},{\"@id\":\"http://schema.org/FailedActionStatus\",\"@type\":\"http://schema.org/ActionStatusType\",\"rdfs:comment\":\"An action that failed to complete. The action's error property and the HTTP return code contain more information about the failure.\",\"rdfs:label\":\"FailedActionStatus\"},{\"@id\":\"http://schema.org/mainEntityOfPage\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/mainEntity\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/CreativeWork\"}],\"rdfs:comment\":\"Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\\\"/docs/datamodel.html#mainEntityBackground\\\">background notes</a> for details.\",\"rdfs:label\":\"mainEntityOfPage\"},{\"@id\":\"http://schema.org/ItemAvailability\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A list of possible product availability options.\",\"rdfs:label\":\"ItemAvailability\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/publicAccess\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Boolean\"},\"rdfs:comment\":\"A flag to signal that the <a class=\\\"localLink\\\" href=\\\"http://schema.org/Place\\\">Place</a> is open to public visitors.  If this property is omitted there is no assumed default boolean value\",\"rdfs:label\":\"publicAccess\"},{\"@id\":\"http://schema.org/offerCount\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/AggregateOffer\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"The number of offers for the product.\",\"rdfs:label\":\"offerCount\"},{\"@id\":\"http://schema.org/owns\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/OwnershipInfo\"}],\"rdfs:comment\":\"Products owned by the organization or person.\",\"rdfs:label\":\"owns\"},{\"@id\":\"http://schema.org/reviewedBy\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/WebPage\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"People or organizations that have reviewed the content on this web page for accuracy and/or completeness.\",\"rdfs:label\":\"reviewedBy\"},{\"@id\":\"http://schema.org/totalPaymentDue\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Invoice\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/MonetaryAmount\"},{\"@id\":\"http://schema.org/PriceSpecification\"}],\"rdfs:comment\":\"The total amount due.\",\"rdfs:label\":\"totalPaymentDue\"},{\"@id\":\"http://schema.org/illustrator\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Book\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"The illustrator of the book.\",\"rdfs:label\":\"illustrator\"},{\"@id\":\"http://schema.org/ArtGallery\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An art gallery.\",\"rdfs:label\":\"ArtGallery\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/EntertainmentBusiness\"}},{\"@id\":\"http://schema.org/primaryImageOfPage\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/WebPage\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/ImageObject\"},\"rdfs:comment\":\"Indicates the main image on the page.\",\"rdfs:label\":\"primaryImageOfPage\"},{\"@id\":\"http://schema.org/license\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"A license document that applies to this content, typically indicated by URL.\",\"rdfs:label\":\"license\"},{\"@id\":\"http://schema.org/accessibilityControl\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Identifies input methods that are sufficient to fully control the described resource (<a href=\\\"http://www.w3.org/wiki/WebSchemas/Accessibility\\\">WebSchemas wiki lists possible values</a>).\",\"rdfs:label\":\"accessibilityControl\"},{\"@id\":\"http://schema.org/targetPlatform\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/APIReference\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Type of app development: phone, Metro style, desktop, XBox, etc.\",\"rdfs:label\":\"targetPlatform\"},{\"@id\":\"http://schema.org/musicReleaseFormat\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicRelease\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MusicReleaseFormatType\"},\"rdfs:comment\":\"Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.).\",\"rdfs:label\":\"musicReleaseFormat\"},{\"@id\":\"http://schema.org/busNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BusTrip\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The unique identifier for the bus.\",\"rdfs:label\":\"busNumber\"},{\"@id\":\"http://schema.org/description\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"http://www.w3.org/2002/07/owl#equivalentProperty\":{\"@id\":\"http://purl.org/dc/terms/description\"},\"rdfs:comment\":\"A description of the item.\",\"rdfs:label\":\"description\"},{\"@id\":\"http://schema.org/Plumber\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A plumbing service.\",\"rdfs:label\":\"Plumber\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/HomeAndConstructionBusiness\"}},{\"@id\":\"http://schema.org/Preschool\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A preschool.\",\"rdfs:label\":\"Preschool\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/EducationalOrganization\"}},{\"@id\":\"http://schema.org/OrderCancelled\",\"@type\":\"http://schema.org/OrderStatus\",\"rdfs:comment\":\"OrderStatus representing cancellation of an order.\",\"rdfs:label\":\"OrderCancelled\"},{\"@id\":\"http://schema.org/RejectAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of rejecting to/adopting an object.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/AcceptAction\\\">AcceptAction</a>: The antonym of RejectAction.</li>\\n</ul>\\n\",\"rdfs:label\":\"RejectAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AllocateAction\"}},{\"@id\":\"http://schema.org/vehicleTransmission\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/QualitativeValue\"}],\"rdfs:comment\":\"The type of component used for transmitting the power from a rotating power source to the wheels or other relevant component(s) (\\\"gearbox\\\" for cars).\",\"rdfs:label\":\"vehicleTransmission\"},{\"@id\":\"http://schema.org/encodings\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MediaObject\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/encoding\"},\"rdfs:comment\":\"A media object that encodes this CreativeWork.\",\"rdfs:label\":\"encodings\"},{\"@id\":\"http://schema.org/GeoCircle\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A GeoCircle is a GeoShape representing a circular geographic area. As it is a GeoShape\\n          it provides the simple textual property 'circle', but also allows the combination of postalCode alongside geoRadius.\\n          The center of the circle can be indicated via the 'geoMidpoint' property, or more approximately using 'address', 'postalCode'.\",\"rdfs:label\":\"GeoCircle\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/GeoShape\"}},{\"@id\":\"http://schema.org/dateVehicleFirstRegistered\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"The date of the first registration of the vehicle with the respective public authorities.\",\"rdfs:label\":\"dateVehicleFirstRegistered\"},{\"@id\":\"http://schema.org/event\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/InformAction\"},{\"@id\":\"http://schema.org/LeaveAction\"},{\"@id\":\"http://schema.org/JoinAction\"},{\"@id\":\"http://schema.org/PlayAction\"},{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/InviteAction\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Event\"},\"rdfs:comment\":\"Upcoming or past event associated with this place, organization, or action.\",\"rdfs:label\":\"event\"},{\"@id\":\"http://schema.org/sport\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SportsOrganization\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"A type of sport (e.g. Baseball).\",\"rdfs:label\":\"sport\"},{\"@id\":\"http://schema.org/reviewBody\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Review\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The actual body of the review.\",\"rdfs:label\":\"reviewBody\"},{\"@id\":\"http://schema.org/purchaseDate\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Vehicle\"},{\"@id\":\"http://schema.org/Product\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"The date the item e.g. vehicle was purchased by the current owner.\",\"rdfs:label\":\"purchaseDate\"},{\"@id\":\"http://schema.org/BusinessFunction\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"<p>The business function specifies the type of activity or access (i.e., the bundle of rights) offered by the organization or business person through the offer. Typical are sell, rental or lease, maintenance or repair, manufacture / produce, recycle / dispose, engineering / construction, or installation. Proprietary specifications of access rights are also instances of this class.</p>\\n\\n<p>Commonly used values:</p>\\n\\n<ul>\\n<li>http://purl.org/goodrelations/v1#ConstructionInstallation</li>\\n<li>http://purl.org/goodrelations/v1#Dispose</li>\\n<li>http://purl.org/goodrelations/v1#LeaseOut</li>\\n<li>http://purl.org/goodrelations/v1#Maintain</li>\\n<li>http://purl.org/goodrelations/v1#ProvideService</li>\\n<li>http://purl.org/goodrelations/v1#Repair</li>\\n<li>http://purl.org/goodrelations/v1#Sell</li>\\n<li>http://purl.org/goodrelations/v1#Buy</li>\\n</ul>\\n\",\"rdfs:label\":\"BusinessFunction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/departureTerminal\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Flight\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Identifier of the flight's departure terminal.\",\"rdfs:label\":\"departureTerminal\"},{\"@id\":\"http://schema.org/estimatedFlightDuration\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Flight\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Duration\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The estimated time the flight will take.\",\"rdfs:label\":\"estimatedFlightDuration\"},{\"@id\":\"http://schema.org/Female\",\"@type\":\"http://schema.org/GenderType\",\"rdfs:comment\":\"The female gender.\",\"rdfs:label\":\"Female\"},{\"@id\":\"http://schema.org/Energy\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Properties that take Energy as values are of the form '&lt;Number&gt; &lt;Energy unit of measure&gt;'.\",\"rdfs:label\":\"Energy\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Quantity\"}},{\"@id\":\"http://schema.org/FurnitureStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A furniture store.\",\"rdfs:label\":\"FurnitureStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/BusStop\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A bus stop.\",\"rdfs:label\":\"BusStop\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/cookingMethod\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Recipe\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The method of cooking, such as Frying, Steaming, ...\",\"rdfs:label\":\"cookingMethod\"},{\"@id\":\"http://schema.org/businessFunction\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/TypeAndQuantityNode\"},{\"@id\":\"http://schema.org/Demand\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/BusinessFunction\"},\"rdfs:comment\":\"The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.\",\"rdfs:label\":\"businessFunction\"},{\"@id\":\"http://schema.org/bookingTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Reservation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The date and time the reservation was booked.\",\"rdfs:label\":\"bookingTime\"},{\"@id\":\"http://schema.org/MotorcycleRepair\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A motorcycle repair shop.\",\"rdfs:label\":\"MotorcycleRepair\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AutomotiveBusiness\"}},{\"@id\":\"http://schema.org/sampleType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareSourceCode\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/codeSampleType\"},\"rdfs:comment\":\"What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.\",\"rdfs:label\":\"sampleType\"},{\"@id\":\"http://schema.org/OrderPaymentDue\",\"@type\":\"http://schema.org/OrderStatus\",\"rdfs:comment\":\"OrderStatus representing that payment is due on an order.\",\"rdfs:label\":\"OrderPaymentDue\"},{\"@id\":\"http://schema.org/permitAudience\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Permit\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Audience\"},\"rdfs:comment\":\"The target audience for this permit.\",\"rdfs:label\":\"permitAudience\"},{\"@id\":\"http://schema.org/postalCode\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/GeoCoordinates\"},{\"@id\":\"http://schema.org/PostalAddress\"},{\"@id\":\"http://schema.org/GeoShape\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The postal code. For example, 94043.\",\"rdfs:label\":\"postalCode\"},{\"@id\":\"http://schema.org/resultComment\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/CommentAction\"},{\"@id\":\"http://schema.org/ReplyAction\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Comment\"},\"rdfs:comment\":\"A sub property of result. The Comment created or sent as a result of this action.\",\"rdfs:label\":\"resultComment\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/result\"}},{\"@id\":\"http://schema.org/GovernmentPermit\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A permit issued by a government agency.\",\"rdfs:label\":\"GovernmentPermit\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Permit\"}},{\"@id\":\"http://schema.org/InsertAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of adding at a specific location in an ordered collection.\",\"rdfs:label\":\"InsertAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AddAction\"}},{\"@id\":\"http://schema.org/eligibleCustomerType\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Demand\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/BusinessEntityType\"},\"rdfs:comment\":\"The type(s) of customers for which the given offer is valid.\",\"rdfs:label\":\"eligibleCustomerType\"},{\"@id\":\"http://schema.org/containsPlace\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/containedInPlace\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"rdfs:comment\":\"The basic containment relation between a place and another that it contains.\",\"rdfs:label\":\"containsPlace\"},{\"@id\":\"http://schema.org/Resort\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"rdfs:comment\":\"A resort is a place used for relaxation or recreation, attracting visitors for holidays or vacations. Resorts are places, towns or sometimes commercial establishment operated by a single company (Source: Wikipedia, the free encyclopedia, see <a href=\\\"http://en.wikipedia.org/wiki/Resort\\\">http://en.wikipedia.org/wiki/Resort</a>).\\n<br /><br />\\nSee also the <a href=\\\"/docs/hotels.html\\\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\",\"rdfs:label\":\"Resort\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LodgingBusiness\"}},{\"@id\":\"http://schema.org/disambiguatingDescription\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.\",\"rdfs:label\":\"disambiguatingDescription\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/description\"}},{\"@id\":\"http://schema.org/AutoWash\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A car wash business.\",\"rdfs:label\":\"AutoWash\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AutomotiveBusiness\"}},{\"@id\":\"http://schema.org/productSupported\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ContactPoint\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \\\"iPhone\\\") or a general category of products or services (e.g. \\\"smartphones\\\").\",\"rdfs:label\":\"productSupported\"},{\"@id\":\"http://schema.org/userInteractionCount\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/InteractionCounter\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"The number of interactions for the CreativeWork using the WebSite or SoftwareApplication.\",\"rdfs:label\":\"userInteractionCount\"},{\"@id\":\"http://schema.org/Invoice\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A statement of the money due for goods or services; a bill.\",\"rdfs:label\":\"Invoice\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/Table\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A table on a Web page.\",\"rdfs:label\":\"Table\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/WebPageElement\"}},{\"@id\":\"http://schema.org/language\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/WriteAction\"},{\"@id\":\"http://schema.org/CommunicateAction\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Language\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/inLanguage\"},\"rdfs:comment\":\"A sub property of instrument. The language used on this action.\",\"rdfs:label\":\"language\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/instrument\"}},{\"@id\":\"http://schema.org/itemCondition\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/Demand\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/OfferItemCondition\"},\"rdfs:comment\":\"A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.\",\"rdfs:label\":\"itemCondition\"},{\"@id\":\"http://schema.org/elevation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/GeoCoordinates\"},{\"@id\":\"http://schema.org/GeoShape\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Number\"}],\"rdfs:comment\":\"The elevation of a location (<a href=\\\"https://en.wikipedia.org/wiki/World_Geodetic_System\\\">WGS 84</a>).\",\"rdfs:label\":\"elevation\"},{\"@id\":\"http://schema.org/URL\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Data type: URL.\",\"rdfs:label\":\"URL\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Text\"}},{\"@id\":\"http://schema.org/isBasedOn\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.\",\"rdfs:label\":\"isBasedOn\"},{\"@id\":\"http://schema.org/CompoundPriceSpecification\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"A compound price specification is one that bundles multiple prices that all apply in combination for different dimensions of consumption. Use the name property of the attached unit price specification for indicating the dimension of a price component (e.g. \\\"electricity\\\" or \\\"final cleaning\\\").\",\"rdfs:label\":\"CompoundPriceSpecification\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PriceSpecification\"}},{\"@id\":\"http://schema.org/PeopleAudience\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A set of characteristics belonging to people, e.g. who compose an item's target audience.\",\"rdfs:label\":\"PeopleAudience\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Audience\"}},{\"@id\":\"http://schema.org/availableThrough\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/DeliveryEvent\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"After this date, the item will no longer be available for pickup.\",\"rdfs:label\":\"availableThrough\"},{\"@id\":\"http://schema.org/employmentType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Type of employment (e.g. full-time, part-time, contract, temporary, seasonal, internship).\",\"rdfs:label\":\"employmentType\"},{\"@id\":\"http://schema.org/affiliation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"rdfs:comment\":\"An organization that this person is affiliated with. For example, a school/university, a club, or a team.\",\"rdfs:label\":\"affiliation\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/memberOf\"}},{\"@id\":\"http://schema.org/GovernmentOrganization\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A governmental organization or agency.\",\"rdfs:label\":\"GovernmentOrganization\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Organization\"}},{\"@id\":\"http://schema.org/commentTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/UserComments\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Date\"},{\"@id\":\"http://schema.org/DateTime\"}],\"rdfs:comment\":\"The time at which the UserComment was made.\",\"rdfs:label\":\"commentTime\"},{\"@id\":\"http://schema.org/InStoreOnly\",\"@type\":\"http://schema.org/ItemAvailability\",\"rdfs:comment\":\"Indicates that the item is available only at physical locations.\",\"rdfs:label\":\"InStoreOnly\"},{\"@id\":\"http://schema.org/multipleValues\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PropertyValueSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Boolean\"},\"rdfs:comment\":\"Whether multiple values are allowed for the property.  Default is false.\",\"rdfs:label\":\"multipleValues\"},{\"@id\":\"http://schema.org/founder\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"A person who founded this organization.\",\"rdfs:label\":\"founder\"},{\"@id\":\"http://schema.org/creator\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/UserComments\"},{\"@id\":\"http://schema.org/CreativeWork\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.\",\"rdfs:label\":\"creator\"},{\"@id\":\"http://schema.org/FoodEstablishmentReservation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A reservation to dine at a food-related business.Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.\",\"rdfs:label\":\"FoodEstablishmentReservation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Reservation\"}},{\"@id\":\"http://schema.org/fiberContent\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/NutritionInformation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Mass\"},\"rdfs:comment\":\"The number of grams of fiber.\",\"rdfs:label\":\"fiberContent\"},{\"@id\":\"http://schema.org/rsvpResponse\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/RsvpAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/RsvpResponseType\"},\"rdfs:comment\":\"The response (yes, no, maybe) to the RSVP.\",\"rdfs:label\":\"rsvpResponse\"},{\"@id\":\"http://schema.org/PaymentChargeSpecification\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"The costs of settling the payment using a particular payment method.\",\"rdfs:label\":\"PaymentChargeSpecification\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PriceSpecification\"}},{\"@id\":\"http://schema.org/itemOffered\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/Offer\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/Service\"}],\"rdfs:comment\":\"The item being offered.\",\"rdfs:label\":\"itemOffered\"},{\"@id\":\"http://schema.org/suggestedMinAge\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PeopleAudience\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"Minimal age recommended for viewing content.\",\"rdfs:label\":\"suggestedMinAge\"},{\"@id\":\"http://schema.org/Saturday\",\"@type\":\"http://schema.org/DayOfWeek\",\"http://schema.org/sameAs\":{\"@id\":\"http://www.wikidata.org/entity/Q131\"},\"rdfs:comment\":\"The day of the week between Friday and Sunday.\",\"rdfs:label\":\"Saturday\"},{\"@id\":\"http://schema.org/BusReservation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A reservation for bus travel. </p>\\n\\n<p>Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class=\\\"localLink\\\" href=\\\"http://schema.org/Offer\\\">Offer</a>.\",\"rdfs:label\":\"BusReservation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Reservation\"}},{\"@id\":\"http://schema.org/DVDFormat\",\"@type\":\"http://schema.org/MusicReleaseFormatType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"DVDFormat.\",\"rdfs:label\":\"DVDFormat\"},{\"@id\":\"http://schema.org/ticketedSeat\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Ticket\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Seat\"},\"rdfs:comment\":\"The seat associated with the ticket.\",\"rdfs:label\":\"ticketedSeat\"},{\"@id\":\"http://schema.org/Taxi\",\"@type\":\"rdfs:Class\",\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/TaxiService\"},\"rdfs:comment\":\"A taxi.\",\"rdfs:label\":\"Taxi\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Service\"}},{\"@id\":\"http://schema.org/calories\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/NutritionInformation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Energy\"},\"rdfs:comment\":\"The number of calories.\",\"rdfs:label\":\"calories\"},{\"@id\":\"http://schema.org/pickupLocation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/TaxiReservation\"},{\"@id\":\"http://schema.org/RentalCarReservation\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"rdfs:comment\":\"Where a taxi will pick up a passenger or a rental car can be picked up.\",\"rdfs:label\":\"pickupLocation\"},{\"@id\":\"http://schema.org/lowPrice\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/AggregateOffer\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Number\"}],\"rdfs:comment\":\"The lowest price of all offers available.\",\"rdfs:label\":\"lowPrice\"},{\"@id\":\"http://schema.org/serviceType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Service\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The type of service being offered, e.g. veterans' benefits, emergency relief, etc.\",\"rdfs:label\":\"serviceType\"},{\"@id\":\"http://schema.org/GroupBoardingPolicy\",\"@type\":\"http://schema.org/BoardingPolicyType\",\"rdfs:comment\":\"The airline boards by groups based on check-in time, priority, etc.\",\"rdfs:label\":\"GroupBoardingPolicy\"},{\"@id\":\"http://schema.org/Physician\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A doctor's office.\",\"rdfs:label\":\"Physician\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/MedicalOrganization\"}},{\"@id\":\"http://schema.org/RsvpResponseType\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"RsvpResponseType is an enumeration type whose instances represent responding to an RSVP request.\",\"rdfs:label\":\"RsvpResponseType\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/releaseNotes\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"Description of what changed in this version.\",\"rdfs:label\":\"releaseNotes\"},{\"@id\":\"http://schema.org/scheduledTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PlanAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The time the object is scheduled to.\",\"rdfs:label\":\"scheduledTime\"},{\"@id\":\"http://schema.org/carrierRequirements\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MobileApplication\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Specifies specific carrier(s) requirements for the application (e.g. an application may only work on a specific carrier network).\",\"rdfs:label\":\"carrierRequirements\"},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#IIT-CNR.it\",\"@type\":\"http://schema.org/Organization\",\"rdfs:comment\":\"This element is based on work by the Web Applications for the Future Internet Lab, Institute of Informatics and Telematics, Pisa, Italy.\",\"rdfs:label\":\"IITCNRit\"},{\"@id\":\"http://schema.org/flightDistance\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Flight\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Distance\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The distance of the flight.\",\"rdfs:label\":\"flightDistance\"},{\"@id\":\"http://schema.org/OrderItem\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An order item is a line of an order. It includes the quantity and shipping details of a bought offer.\",\"rdfs:label\":\"OrderItem\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/DayOfWeek\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"The day of the week, e.g. used to specify to which day the opening hours of an OpeningHoursSpecification refer.</p>\\n\\n<p>Originally, URLs from <a href=\\\"http://purl.org/goodrelations/v1\\\">GoodRelations</a> were used (for <a class=\\\"localLink\\\" href=\\\"http://schema.org/Monday\\\">Monday</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/Tuesday\\\">Tuesday</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/Wednesday\\\">Wednesday</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/Thursday\\\">Thursday</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/Friday\\\">Friday</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/Saturday\\\">Saturday</a>, <a class=\\\"localLink\\\" href=\\\"http://schema.org/Sunday\\\">Sunday</a> plus a special entry for <a class=\\\"localLink\\\" href=\\\"http://schema.org/PublicHolidays\\\">PublicHolidays</a>); these have now been integrated directly into schema.org.\",\"rdfs:label\":\"DayOfWeek\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/courseCode\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Course\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The identifier for the <a class=\\\"localLink\\\" href=\\\"http://schema.org/Course\\\">Course</a> used by the course <a class=\\\"localLink\\\" href=\\\"http://schema.org/provider\\\">provider</a> (e.g. CS101 or 6.001).\",\"rdfs:label\":\"courseCode\"},{\"@id\":\"http://schema.org/BusinessEntityType\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"<p>A business entity type is a conceptual entity representing the legal form, the size, the main line of business, the position in the value chain, or any combination thereof, of an organization or business person.</p>\\n\\n<p>Commonly used values:</p>\\n\\n<ul>\\n<li>http://purl.org/goodrelations/v1#Business</li>\\n<li>http://purl.org/goodrelations/v1#Enduser</li>\\n<li>http://purl.org/goodrelations/v1#PublicInstitution</li>\\n<li>http://purl.org/goodrelations/v1#Reseller</li>\\n</ul>\\n\",\"rdfs:label\":\"BusinessEntityType\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/polygon\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/GeoShape\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical.\",\"rdfs:label\":\"polygon\"},{\"@id\":\"http://schema.org/TipAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of giving money voluntarily to a beneficiary in recognition of services rendered.\",\"rdfs:label\":\"TipAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/TradeAction\"}},{\"@id\":\"http://schema.org/HowToDirection\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A direction indicating a single action to do in the instructions for how to achieve a result.\",\"rdfs:label\":\"HowToDirection\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ListItem\"}},{\"@id\":\"http://schema.org/offeredBy\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Offer\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/makesOffer\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"A pointer to the organization or person making the offer.\",\"rdfs:label\":\"offeredBy\"},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_LRMIClass\",\"@type\":\"http://schema.org/Organization\",\"rdfs:comment\":\"This class is based on the work of the LRMI project, see lrmi.net for details.\",\"rdfs:label\":\"LRMIClass\"},{\"@id\":\"http://schema.org/Apartment\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"rdfs:comment\":\"An apartment (in American English) or flat (in British English) is a self-contained housing unit (a type of residential real estate) that occupies only part of a building (Source: Wikipedia, the free encyclopedia, see <a href=\\\"http://en.wikipedia.org/wiki/Apartment\\\">http://en.wikipedia.org/wiki/Apartment</a>).\",\"rdfs:label\":\"Apartment\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Accommodation\"}},{\"@id\":\"http://schema.org/NoteDigitalDocument\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A file containing a note, primarily for the author.\",\"rdfs:label\":\"NoteDigitalDocument\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/DigitalDocument\"}},{\"@id\":\"http://schema.org/Service\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A service provided by an organization, e.g. delivery service, print services, etc.\",\"rdfs:label\":\"Service\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/supply\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/HowToDirection\"},{\"@id\":\"http://schema.org/HowTo\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/HowToSupply\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"A sub-property of instrument. A supply consumed when performing instructions or a direction.\",\"rdfs:label\":\"supply\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/instrument\"}},{\"@id\":\"http://schema.org/error\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Action\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"rdfs:comment\":\"For failed actions, more information on the cause of the failure.\",\"rdfs:label\":\"error\"},{\"@id\":\"http://schema.org/Campground\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"rdfs:comment\":\"A camping site, campsite, or campground is a place used for overnight stay in the outdoors. In British English a campsite is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or parks a camper; a campground may contain many campsites (Source: Wikipedia, the free encyclopedia, see <a href=\\\"http://en.wikipedia.org/wiki/Campsite\\\">http://en.wikipedia.org/wiki/Campsite</a>).\\n<br /><br />\\nSee also the <a href=\\\"/docs/hotels.html\\\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\",\"rdfs:label\":\"Campground\",\"rdfs:subClassOf\":[{\"@id\":\"http://schema.org/LodgingBusiness\"},{\"@id\":\"http://schema.org/CivicStructure\"}]},{\"@id\":\"http://schema.org/validIn\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Permit\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/AdministrativeArea\"},\"rdfs:comment\":\"The geographic area where the permit is valid.\",\"rdfs:label\":\"validIn\"},{\"@id\":\"http://schema.org/PaymentDeclined\",\"@type\":\"http://schema.org/PaymentStatusType\",\"rdfs:comment\":\"The payee received the payment, but it was declined for some reason.\",\"rdfs:label\":\"PaymentDeclined\"},{\"@id\":\"http://schema.org/TennisComplex\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A tennis complex.\",\"rdfs:label\":\"TennisComplex\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/SportsActivityLocation\"}},{\"@id\":\"http://schema.org/afterMedia\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/HowToDirection\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MediaObject\"},\"rdfs:comment\":\"A media object representing the circumstances after performing this direction.\",\"rdfs:label\":\"afterMedia\"},{\"@id\":\"http://schema.org/Thing\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The most generic type of item.\",\"rdfs:label\":\"Thing\"},{\"@id\":\"http://schema.org/duringMedia\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/HowToDirection\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MediaObject\"},\"rdfs:comment\":\"A media object representing the circumstances while performing this direction.\",\"rdfs:label\":\"duringMedia\"},{\"@id\":\"http://schema.org/workPresented\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ScreeningEvent\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Movie\"},\"rdfs:comment\":\"The movie presented during this event.\",\"rdfs:label\":\"workPresented\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/workFeatured\"}},{\"@id\":\"http://schema.org/SubwayStation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A subway station.\",\"rdfs:label\":\"SubwayStation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/supportingData\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DataFeed\"},\"rdfs:comment\":\"Supporting data for a SoftwareApplication.\",\"rdfs:label\":\"supportingData\"},{\"@id\":\"http://schema.org/discountCurrency\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Order\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The currency (in 3-letter ISO 4217 format) of the discount.\",\"rdfs:label\":\"discountCurrency\"},{\"@id\":\"http://schema.org/availableFrom\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/DeliveryEvent\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"When the item is available for pickup from the store, locker, etc.\",\"rdfs:label\":\"availableFrom\"},{\"@id\":\"http://schema.org/highPrice\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/AggregateOffer\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Number\"}],\"rdfs:comment\":\"The highest price of all offers available.\",\"rdfs:label\":\"highPrice\"},{\"@id\":\"http://schema.org/VenueMap\",\"@type\":\"http://schema.org/MapCategoryType\",\"rdfs:comment\":\"A venue map (e.g. for malls, auditoriums, museums, etc.).\",\"rdfs:label\":\"VenueMap\"},{\"@id\":\"http://schema.org/publishingPrinciples\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"The publishingPrinciples property indicates (typically via <a class=\\\"localLink\\\" href=\\\"http://schema.org/URL\\\">URL</a>) a document describing the editorial principles of an <a class=\\\"localLink\\\" href=\\\"http://schema.org/Organization\\\">Organization</a> (or individual e.g. a <a class=\\\"localLink\\\" href=\\\"http://schema.org/Person\\\">Person</a> writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a <a class=\\\"localLink\\\" href=\\\"http://schema.org/CreativeWork\\\">CreativeWork</a> (e.g. <a class=\\\"localLink\\\" href=\\\"http://schema.org/NewsArticle\\\">NewsArticle</a>) the principles are those of the party primarily responsible for the creation of the <a class=\\\"localLink\\\" href=\\\"http://schema.org/CreativeWork\\\">CreativeWork</a>.</p>\\n\\n<p>While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a <a class=\\\"localLink\\\" href=\\\"http://schema.org/funder\\\">funder</a>) can be expressed using schema.org terminology.\",\"rdfs:label\":\"publishingPrinciples\"},{\"@id\":\"http://schema.org/sponsor\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Event\"},{\"@id\":\"http://schema.org/CreativeWork\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"rdfs:comment\":\"A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.\",\"rdfs:label\":\"sponsor\"},{\"@id\":\"http://schema.org/producer\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.).\",\"rdfs:label\":\"producer\"},{\"@id\":\"http://schema.org/productionDate\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/Vehicle\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"The date of production of the item, e.g. vehicle.\",\"rdfs:label\":\"productionDate\"},{\"@id\":\"http://schema.org/interactionType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/InteractionCounter\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Action\"},\"rdfs:comment\":\"The Action representing the type of interaction. For up votes, +1s, etc. use <a class=\\\"localLink\\\" href=\\\"http://schema.org/LikeAction\\\">LikeAction</a>. For down votes use <a class=\\\"localLink\\\" href=\\\"http://schema.org/DislikeAction\\\">DislikeAction</a>. Otherwise, use the most specific Action.\",\"rdfs:label\":\"interactionType\"},{\"@id\":\"http://schema.org/Courthouse\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A courthouse.\",\"rdfs:label\":\"Courthouse\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/GovernmentBuilding\"}},{\"@id\":\"http://schema.org/lyrics\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicComposition\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"rdfs:comment\":\"The words in the song.\",\"rdfs:label\":\"lyrics\"},{\"@id\":\"http://schema.org/ReservationStatusType\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Enumerated status values for Reservation.\",\"rdfs:label\":\"ReservationStatusType\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/jobLocation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"rdfs:comment\":\"A (typically single) geographic location associated with the job position.\",\"rdfs:label\":\"jobLocation\"},{\"@id\":\"http://schema.org/arrivalTerminal\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Flight\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Identifier of the flight's arrival terminal.\",\"rdfs:label\":\"arrivalTerminal\"},{\"@id\":\"http://schema.org/mentions\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"rdfs:comment\":\"Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.\",\"rdfs:label\":\"mentions\"},{\"@id\":\"http://schema.org/Researcher\",\"@type\":\"http://schema.org/Audience\",\"rdfs:comment\":\"Researchers.\",\"rdfs:label\":\"Researcher\"},{\"@id\":\"http://schema.org/HardwareStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A hardware store.\",\"rdfs:label\":\"HardwareStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/geoMidpoint\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/GeoCircle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/GeoCoordinates\"},\"rdfs:comment\":\"Indicates the GeoCoordinates at the centre of a GeoShape e.g. GeoCircle.\",\"rdfs:label\":\"geoMidpoint\"},{\"@id\":\"http://schema.org/AskAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of posing a question / favor to someone.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/ReplyAction\\\">ReplyAction</a>: Appears generally as a response to AskAction.</li>\\n</ul>\\n\",\"rdfs:label\":\"AskAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CommunicateAction\"}},{\"@id\":\"http://schema.org/numberOfPlayers\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Game\"},{\"@id\":\"http://schema.org/VideoGameSeries\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"Indicate how many people can play this game (minimum, maximum, or range).\",\"rdfs:label\":\"numberOfPlayers\"},{\"@id\":\"http://schema.org/CommentPermission\",\"@type\":\"http://schema.org/DigitalDocumentPermissionType\",\"rdfs:comment\":\"Permission to add comments to the document.\",\"rdfs:label\":\"CommentPermission\"},{\"@id\":\"http://schema.org/Barcode\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An image of a visual machine-readable code such as a barcode or QR code.\",\"rdfs:label\":\"Barcode\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ImageObject\"}},{\"@id\":\"http://schema.org/dateDeleted\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/DataFeedItem\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The datetime the item was removed from the DataFeed.\",\"rdfs:label\":\"dateDeleted\"},{\"@id\":\"http://schema.org/isicV4\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/Person\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.\",\"rdfs:label\":\"isicV4\"},{\"@id\":\"http://schema.org/VisualArtsEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Event type: Visual arts event.\",\"rdfs:label\":\"VisualArtsEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/TrackAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>An agent tracks an object for updates.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/FollowAction\\\">FollowAction</a>: Unlike FollowAction, TrackAction refers to the interest on the location of innanimates objects.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/SubscribeAction\\\">SubscribeAction</a>: Unlike SubscribeAction, TrackAction refers to  the interest on the location of innanimate objects.</li>\\n</ul>\\n\",\"rdfs:label\":\"TrackAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FindAction\"}},{\"@id\":\"http://schema.org/departureAirport\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Flight\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Airport\"},\"rdfs:comment\":\"The airport where the flight originates.\",\"rdfs:label\":\"departureAirport\"},{\"@id\":\"http://schema.org/numAdults\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/LodgingReservation\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/QuantitativeValue\"},{\"@id\":\"http://schema.org/Integer\"}],\"rdfs:comment\":\"The number of adults staying in the unit.\",\"rdfs:label\":\"numAdults\"},{\"@id\":\"http://schema.org/DanceGroup\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A dance group&#x2014;for example, the Alvin Ailey Dance Theater or Riverdance.\",\"rdfs:label\":\"DanceGroup\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PerformingGroup\"}},{\"@id\":\"http://schema.org/BeautySalon\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Beauty salon.\",\"rdfs:label\":\"BeautySalon\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/HealthAndBeautyBusiness\"}},{\"@id\":\"http://schema.org/valueAddedTaxIncluded\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PriceSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Boolean\"},\"rdfs:comment\":\"Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.\",\"rdfs:label\":\"valueAddedTaxIncluded\"},{\"@id\":\"http://schema.org/acquiredFrom\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/OwnershipInfo\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"rdfs:comment\":\"The organization or person from which the product was acquired.\",\"rdfs:label\":\"acquiredFrom\"},{\"@id\":\"http://schema.org/CommunicateAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of conveying information to another person via a communication medium (instrument) such as speech, email, or telephone conversation.\",\"rdfs:label\":\"CommunicateAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/InteractAction\"}},{\"@id\":\"http://schema.org/MenuItem\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A food or drink item listed in a menu or menu section.\",\"rdfs:label\":\"MenuItem\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/openingHours\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/LocalBusiness\"},{\"@id\":\"http://schema.org/CivicStructure\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"<p>The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.</p>\\n\\n<ul>\\n<li>Days are specified using the following two-letter combinations: <code>Mo</code>, <code>Tu</code>, <code>We</code>, <code>Th</code>, <code>Fr</code>, <code>Sa</code>, <code>Su</code>.</li>\\n<li>Times are specified using 24:00 time. For example, 3pm is specified as <code>15:00</code>. </li>\\n<li>Here is an example: <code>&lt;time itemprop=\\\"openingHours\\\" datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;</code>.</li>\\n<li>If a business is open 7 days a week, then it can be specified as <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all day&lt;/time&gt;</code>.</li>\\n</ul>\\n\",\"rdfs:label\":\"openingHours\"},{\"@id\":\"http://schema.org/CurrencyConversionService\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO\"},\"rdfs:comment\":\"A service to convert funds from one currency to another currency.\",\"rdfs:label\":\"CurrencyConversionService\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FinancialProduct\"}},{\"@id\":\"http://schema.org/RoofingContractor\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A roofing contractor.\",\"rdfs:label\":\"RoofingContractor\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/HomeAndConstructionBusiness\"}},{\"@id\":\"http://schema.org/numTracks\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicPlaylist\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"The number of tracks in this album or playlist.\",\"rdfs:label\":\"numTracks\"},{\"@id\":\"http://schema.org/expectsAcceptanceOf\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ConsumeAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Offer\"},\"rdfs:comment\":\"An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it.\",\"rdfs:label\":\"expectsAcceptanceOf\"},{\"@id\":\"http://schema.org/game\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/GameServer\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/gameServer\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/VideoGame\"},\"rdfs:comment\":\"Video game which is played on this server.\",\"rdfs:label\":\"game\"},{\"@id\":\"http://schema.org/tracks\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/MusicPlaylist\"},{\"@id\":\"http://schema.org/MusicGroup\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MusicRecording\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/track\"},\"rdfs:comment\":\"A music recording (track)&#x2014;usually a single song.\",\"rdfs:label\":\"tracks\"},{\"@id\":\"http://schema.org/GovernmentService\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A service provided by a government organization, e.g. food stamps, veterans benefits, etc.\",\"rdfs:label\":\"GovernmentService\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Service\"}},{\"@id\":\"http://schema.org/DeliveryEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An event involving the delivery of an item.\",\"rdfs:label\":\"DeliveryEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/LowSaltDiet\",\"@type\":\"http://schema.org/RestrictedDiet\",\"rdfs:comment\":\"A diet focused on reduced sodium intake.\",\"rdfs:label\":\"LowSaltDiet\"},{\"@id\":\"http://schema.org/acceptsReservations\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/FoodEstablishment\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/URL\"},{\"@id\":\"http://schema.org/Boolean\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings <code>Yes</code> or <code>No</code>.\",\"rdfs:label\":\"acceptsReservations\"},{\"@id\":\"http://schema.org/lesserOrEqual\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/QualitativeValue\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QualitativeValue\"},\"rdfs:comment\":\"This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.\",\"rdfs:label\":\"lesserOrEqual\"},{\"@id\":\"http://schema.org/requiredQuantity\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/HowToItem\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Number\"},{\"@id\":\"http://schema.org/QuantitativeValue\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The required quantity of the item(s).\",\"rdfs:label\":\"requiredQuantity\"},{\"@id\":\"http://schema.org/location\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Action\"},{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Event\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/PostalAddress\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The location of for example where the event is happening, an organization is located, or where an action takes place.\",\"rdfs:label\":\"location\"},{\"@id\":\"http://schema.org/toRecipient\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Message\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/ContactPoint\"},{\"@id\":\"http://schema.org/Audience\"},{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"A sub property of recipient. The recipient who was directly sent the message.\",\"rdfs:label\":\"toRecipient\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/recipient\"}},{\"@id\":\"http://schema.org/billingIncrement\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/UnitPriceSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Number\"},\"rdfs:comment\":\"This property specifies the minimal quantity and rounding increment that will be the basis for the billing. The unit of measurement is specified by the unitCode property.\",\"rdfs:label\":\"billingIncrement\"},{\"@id\":\"http://schema.org/maps\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/hasMap\"},\"rdfs:comment\":\"A URL to a map of the place.\",\"rdfs:label\":\"maps\"},{\"@id\":\"http://schema.org/currenciesAccepted\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/LocalBusiness\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The currency accepted (in <a href=\\\"http://en.wikipedia.org/wiki/ISO_4217\\\">ISO 4217 currency format</a>).\",\"rdfs:label\":\"currenciesAccepted\"},{\"@id\":\"http://schema.org/encodingType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/EntryPoint\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The supported encoding type(s) for an EntryPoint request.\",\"rdfs:label\":\"encodingType\"},{\"@id\":\"http://schema.org/FollowAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates polled from.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/BefriendAction\\\">BefriendAction</a>: Unlike BefriendAction, FollowAction implies that the connection is <em>not</em> necessarily reciprocal.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/SubscribeAction\\\">SubscribeAction</a>: Unlike SubscribeAction, FollowAction implies that the follower acts as an active agent constantly/actively polling for updates.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/RegisterAction\\\">RegisterAction</a>: Unlike RegisterAction, FollowAction implies that the agent is interested in continuing receiving updates from the object.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/JoinAction\\\">JoinAction</a>: Unlike JoinAction, FollowAction implies that the agent is interested in getting updates from the object.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/TrackAction\\\">TrackAction</a>: Unlike TrackAction, FollowAction refers to the polling of updates of all aspects of animate objects rather than the location of inanimate objects (e.g. you track a package, but you don't follow it).</li>\\n</ul>\\n\",\"rdfs:label\":\"FollowAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/InteractAction\"}},{\"@id\":\"http://schema.org/eligibleDuration\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Demand\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"The duration for which the given offer is valid.\",\"rdfs:label\":\"eligibleDuration\"},{\"@id\":\"http://schema.org/ChildrensEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Event type: Children's event.\",\"rdfs:label\":\"ChildrensEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/exerciseCourse\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ExerciseAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"rdfs:comment\":\"A sub property of location. The course where this action was taken.\",\"rdfs:label\":\"exerciseCourse\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/location\"}},{\"@id\":\"http://schema.org/RVPark\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A place offering space for \\\"Recreational Vehicles\\\", Caravans, mobile homes and the like.\",\"rdfs:label\":\"RVPark\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/TransitMap\",\"@type\":\"http://schema.org/MapCategoryType\",\"rdfs:comment\":\"A transit map.\",\"rdfs:label\":\"TransitMap\"},{\"@id\":\"http://schema.org/DateTime\",\"@type\":[\"rdfs:Class\",\"http://schema.org/DataType\"],\"rdfs:comment\":\"A combination of date and time of day in the form [-]CCYY-MM-DDThh:mm:ss[Z|(+|-)hh:mm] (see Chapter 5.4 of ISO 8601).\",\"rdfs:label\":\"DateTime\"},{\"@id\":\"http://schema.org/ownedFrom\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/OwnershipInfo\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The date and time of obtaining the product.\",\"rdfs:label\":\"ownedFrom\"},{\"@id\":\"http://schema.org/SingleFamilyResidence\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Residence type: Single-family home.\",\"rdfs:label\":\"SingleFamilyResidence\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/House\"}},{\"@id\":\"http://schema.org/caption\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/VideoObject\"},{\"@id\":\"http://schema.org/ImageObject\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The caption for this object.\",\"rdfs:label\":\"caption\"},{\"@id\":\"http://schema.org/CompletedActionStatus\",\"@type\":\"http://schema.org/ActionStatusType\",\"rdfs:comment\":\"An action that has already taken place.\",\"rdfs:label\":\"CompletedActionStatus\"},{\"@id\":\"http://schema.org/ActiveActionStatus\",\"@type\":\"http://schema.org/ActionStatusType\",\"rdfs:comment\":\"An in-progress action (e.g, while watching the movie, or driving to a location).\",\"rdfs:label\":\"ActiveActionStatus\"},{\"@id\":\"http://schema.org/DataCatalog\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_DatasetClass\"},\"http://www.w3.org/2002/07/owl#equivalentClass\":{\"@id\":\"http://www.w3.org/ns/dcat#Catalog\"},\"rdfs:comment\":\"A collection of datasets.\",\"rdfs:label\":\"DataCatalog\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/acceptedPaymentMethod\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Demand\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/LoanOrCredit\"},{\"@id\":\"http://schema.org/PaymentMethod\"}],\"rdfs:comment\":\"The payment method(s) accepted by seller for this offer.\",\"rdfs:label\":\"acceptedPaymentMethod\"},{\"@id\":\"http://schema.org/significantLinks\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/WebPage\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/significantLink\"},\"rdfs:comment\":\"The most significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.\",\"rdfs:label\":\"significantLinks\"},{\"@id\":\"http://schema.org/WholesaleStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A wholesale store.\",\"rdfs:label\":\"WholesaleStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/BroadcastEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An over the air or online broadcast event.\",\"rdfs:label\":\"BroadcastEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PublicationEvent\"}},{\"@id\":\"http://schema.org/servingSize\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/NutritionInformation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The serving size, in terms of the number of volume or mass.\",\"rdfs:label\":\"servingSize\"},{\"@id\":\"http://schema.org/RentalCarReservation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A reservation for a rental car.</p>\\n\\n<p>Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.\",\"rdfs:label\":\"RentalCarReservation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Reservation\"}},{\"@id\":\"http://schema.org/DepartmentStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A department store.\",\"rdfs:label\":\"DepartmentStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/recordedIn\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Event\"},\"http://schema.org/inverseOf\":{\"@id\":\"http://schema.org/recordedAt\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"rdfs:comment\":\"The CreativeWork that captured all or part of this Event.\",\"rdfs:label\":\"recordedIn\"},{\"@id\":\"http://schema.org/brand\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Product\"},{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Service\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Brand\"}],\"rdfs:comment\":\"The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.\",\"rdfs:label\":\"brand\"},{\"@id\":\"http://schema.org/dateCreated\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/DataFeedItem\"},{\"@id\":\"http://schema.org/CreativeWork\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Date\"},{\"@id\":\"http://schema.org/DateTime\"}],\"rdfs:comment\":\"The date on which the CreativeWork was created or the item was added to a DataFeed.\",\"rdfs:label\":\"dateCreated\"},{\"@id\":\"http://schema.org/musicGroupMember\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicGroup\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/member\"},\"rdfs:comment\":\"A member of a music group&#x2014;for example, John, Paul, George, or Ringo.\",\"rdfs:label\":\"musicGroupMember\"},{\"@id\":\"http://schema.org/honorificSuffix\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.\",\"rdfs:label\":\"honorificSuffix\"},{\"@id\":\"http://schema.org/OrganizationRole\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A subclass of Role used to describe roles within organizations.\",\"rdfs:label\":\"OrganizationRole\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Role\"}},{\"@id\":\"http://schema.org/reservationId\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Reservation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A unique identifier for the reservation.\",\"rdfs:label\":\"reservationId\"},{\"@id\":\"http://schema.org/SkiResort\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A ski resort.\",\"rdfs:label\":\"SkiResort\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/SportsActivityLocation\"}},{\"@id\":\"http://schema.org/AutomatedTeller\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"ATM/cash machine.\",\"rdfs:label\":\"AutomatedTeller\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FinancialService\"}},{\"@id\":\"http://schema.org/Canal\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A canal, like the Panama Canal.\",\"rdfs:label\":\"Canal\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/BodyOfWater\"}},{\"@id\":\"http://schema.org/numberOfRooms\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/House\"},{\"@id\":\"http://schema.org/Accommodation\"},{\"@id\":\"http://schema.org/Suite\"},{\"@id\":\"http://schema.org/SingleFamilyResidence\"},{\"@id\":\"http://schema.org/Apartment\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/QuantitativeValue\"},{\"@id\":\"http://schema.org/Number\"}],\"rdfs:comment\":\"The number of rooms (excluding bathrooms and closets) of the acccommodation or lodging business.\\nTypical unit code(s): ROM for room or C62 for no unit. The type of room can be put in the unitText property of the QuantitativeValue.\",\"rdfs:label\":\"numberOfRooms\"},{\"@id\":\"http://schema.org/NGO\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Organization: Non-governmental Organization.\",\"rdfs:label\":\"NGO\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Organization\"}},{\"@id\":\"http://schema.org/TVSeries\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"CreativeWorkSeries dedicated to TV broadcast and associated online delivery.\",\"rdfs:label\":\"TVSeries\",\"rdfs:subClassOf\":[{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/CreativeWorkSeries\"}]},{\"@id\":\"http://schema.org/AdministrativeArea\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A geographical region, typically under the jurisdiction of a particular government.\",\"rdfs:label\":\"AdministrativeArea\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Place\"}},{\"@id\":\"http://schema.org/vatID\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The Value-added Tax ID of the organization or person.\",\"rdfs:label\":\"vatID\"},{\"@id\":\"http://schema.org/departureTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/TrainTrip\"},{\"@id\":\"http://schema.org/BusTrip\"},{\"@id\":\"http://schema.org/Flight\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The expected departure time.\",\"rdfs:label\":\"departureTime\"},{\"@id\":\"http://schema.org/BarOrPub\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A bar or pub.\",\"rdfs:label\":\"BarOrPub\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FoodEstablishment\"}},{\"@id\":\"http://schema.org/Float\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Data type: Floating number.\",\"rdfs:label\":\"Float\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Number\"}},{\"@id\":\"http://schema.org/DataType\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The basic data types such as Integers, Strings, etc.\",\"rdfs:label\":\"DataType\",\"rdfs:subClassOf\":{\"@id\":\"rdfs:Class\"}},{\"@id\":\"http://schema.org/playersOnline\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/GameServer\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"Number of players on the server.\",\"rdfs:label\":\"playersOnline\"},{\"@id\":\"http://schema.org/referenceQuantity\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":[{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsProperties\"}],\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/UnitPriceSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QuantitativeValue\"},\"rdfs:comment\":\"The reference quantity for which a certain price applies, e.g. 1 EUR per 4 kWh of electricity. This property is a replacement for unitOfMeasurement for the advanced cases where the price does not relate to a standard unit.\",\"rdfs:label\":\"referenceQuantity\"},{\"@id\":\"http://schema.org/nationality\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Country\"},\"rdfs:comment\":\"Nationality of the person.\",\"rdfs:label\":\"nationality\"},{\"@id\":\"http://schema.org/SuspendAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of momentarily pausing a device or application (e.g. pause music playback or pause a timer).\",\"rdfs:label\":\"SuspendAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ControlAction\"}},{\"@id\":\"http://schema.org/Distance\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Properties that take Distances as values are of the form '&lt;Number&gt; &lt;Length unit of measure&gt;'. E.g., '7 ft'.\",\"rdfs:label\":\"Distance\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Quantity\"}},{\"@id\":\"http://schema.org/MusicPlaylist\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A collection of music tracks in playlist form.\",\"rdfs:label\":\"MusicPlaylist\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/educationalFramework\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/AlignmentObject\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The framework to which the resource being described is aligned.\",\"rdfs:label\":\"educationalFramework\"},{\"@id\":\"http://schema.org/actors\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Movie\"},{\"@id\":\"http://schema.org/Episode\"},{\"@id\":\"http://schema.org/TVSeries\"},{\"@id\":\"http://schema.org/VideoGame\"},{\"@id\":\"http://schema.org/VideoObject\"},{\"@id\":\"http://schema.org/Clip\"},{\"@id\":\"http://schema.org/VideoGameSeries\"},{\"@id\":\"http://schema.org/RadioSeries\"},{\"@id\":\"http://schema.org/MovieSeries\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/actor\"},\"rdfs:comment\":\"An actor, e.g. in tv, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip.\",\"rdfs:label\":\"actors\"},{\"@id\":\"http://schema.org/title\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The title of the job.\",\"rdfs:label\":\"title\"},{\"@id\":\"http://schema.org/QuantitativeValue\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"A point value or interval for product characteristics and other purposes.\",\"rdfs:label\":\"QuantitativeValue\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/StructuredValue\"}},{\"@id\":\"http://schema.org/unitText\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/PropertyValue\"},{\"@id\":\"http://schema.org/TypeAndQuantityNode\"},{\"@id\":\"http://schema.org/UnitPriceSpecification\"},{\"@id\":\"http://schema.org/QuantitativeValue\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for\\n<a href='unitCode'>unitCode</a>.\",\"rdfs:label\":\"unitText\"},{\"@id\":\"http://schema.org/releaseDate\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Product\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"The release date of a product or product model. This can be used to distinguish the exact variant of a product.\",\"rdfs:label\":\"releaseDate\"},{\"@id\":\"http://schema.org/proficiencyLevel\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/TechArticle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Proficiency needed for this content; expected values: 'Beginner', 'Expert'.\",\"rdfs:label\":\"proficiencyLevel\"},{\"@id\":\"http://schema.org/accountId\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Invoice\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The identifier for the account the payment will be applied to.\",\"rdfs:label\":\"accountId\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/identifier\"}},{\"@id\":\"http://schema.org/BedDetails\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"rdfs:comment\":\"An entity holding detailed information about the available bed types, e.g. the quantity of twin beds for a hotel room. For the single case of just one bed of a certain type, you can use bed directly with a text. See also <a class=\\\"localLink\\\" href=\\\"http://schema.org/BedType\\\">BedType</a> (under development).\",\"rdfs:label\":\"BedDetails\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_QAStackExchange\",\"@type\":\"http://schema.org/Organization\",\"rdfs:comment\":\"The Question/Answer types were <a href=\\\"https://www.w3.org/wiki/WebSchemas/QASchemaResearch\\\">based on</a> the Stack Overflow API.\",\"rdfs:label\":\"Stack Exchange\"},{\"@id\":\"http://schema.org/iswcCode\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicComposition\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The International Standard Musical Work Code for the composition.\",\"rdfs:label\":\"iswcCode\"},{\"@id\":\"http://schema.org/greaterOrEqual\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/QualitativeValue\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/QualitativeValue\"},\"rdfs:comment\":\"This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.\",\"rdfs:label\":\"greaterOrEqual\"},{\"@id\":\"http://schema.org/False\",\"@type\":\"http://schema.org/Boolean\",\"rdfs:comment\":\"The boolean value false.\",\"rdfs:label\":\"False\"},{\"@id\":\"http://schema.org/OwnershipInfo\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass\"},\"rdfs:comment\":\"A structured value providing information about when a certain organization or person owned a certain product.\",\"rdfs:label\":\"OwnershipInfo\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/StructuredValue\"}},{\"@id\":\"http://schema.org/episode\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/VideoGameSeries\"},{\"@id\":\"http://schema.org/TVSeries\"},{\"@id\":\"http://schema.org/CreativeWorkSeason\"},{\"@id\":\"http://schema.org/RadioSeries\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Episode\"},\"rdfs:comment\":\"An episode of a tv, radio or game media within a series or season.\",\"rdfs:label\":\"episode\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/hasPart\"}},{\"@id\":\"http://schema.org/MensClothingStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A men's clothing store.\",\"rdfs:label\":\"MensClothingStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/AcceptAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of committing to/adopting an object.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/RejectAction\\\">RejectAction</a>: The antonym of AcceptAction.</li>\\n</ul>\\n\",\"rdfs:label\":\"AcceptAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/AllocateAction\"}},{\"@id\":\"http://schema.org/ItemPage\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A page devoted to a single item, such as a particular product or hotel.\",\"rdfs:label\":\"ItemPage\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/WebPage\"}},{\"@id\":\"http://schema.org/Language\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in <a href=\\\"https://en.wikipedia.org/wiki/IETF_language_tag\\\">BCP 47</a> can be used via the <a class=\\\"localLink\\\" href=\\\"http://schema.org/alternateName\\\">alternateName</a> property. The Language type previously also covered programming languages such as Scheme and Lisp, which are now best represented using <a class=\\\"localLink\\\" href=\\\"http://schema.org/ComputerLanguage\\\">ComputerLanguage</a>.\",\"rdfs:label\":\"Language\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/leiCode\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":[{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO\"},{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#GLEIF\"}],\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.\",\"rdfs:label\":\"leiCode\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/identifier\"}},{\"@id\":\"http://schema.org/NewsArticle\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":[{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews\"},{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP-draws\"}],\"rdfs:comment\":\"A NewsArticle is an article whose content reports news, or provides background context and supporting materials for understanding the news.</p>\\n\\n<p>A more detailed overview of <a href=\\\"/docs/news.html\\\">schema.org News markup</a> is also available.\",\"rdfs:label\":\"NewsArticle\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Article\"}},{\"@id\":\"http://schema.org/TheaterGroup\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A theater group or company, for example, the Royal Shakespeare Company or Druid Theatre.\",\"rdfs:label\":\"TheaterGroup\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PerformingGroup\"}},{\"@id\":\"http://schema.org/ParcelDelivery\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The delivery of a parcel either via the postal service or a commercial service.\",\"rdfs:label\":\"ParcelDelivery\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/permissionType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/DigitalDocumentPermission\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DigitalDocumentPermissionType\"},\"rdfs:comment\":\"The type of permission granted the person, organization, or audience.\",\"rdfs:label\":\"permissionType\"},{\"@id\":\"http://schema.org/requirements\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"}],\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/softwareRequirements\"},\"rdfs:comment\":\"Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).\",\"rdfs:label\":\"requirements\"},{\"@id\":\"http://schema.org/BoardingPolicyType\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A type of boarding policy used by an airline.\",\"rdfs:label\":\"BoardingPolicyType\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/addressLocality\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PostalAddress\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The locality. For example, Mountain View.\",\"rdfs:label\":\"addressLocality\"},{\"@id\":\"http://schema.org/roleName\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Role\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/URL\"}],\"rdfs:comment\":\"A role played, performed or filled by a person or organization. For example, the team of creators for a comic book might fill the roles named 'inker', 'penciller', and 'letterer'; or an athlete in a SportsTeam might play in the position named 'Quarterback'.\",\"rdfs:label\":\"roleName\"},{\"@id\":\"http://schema.org/composer\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/MusicComposition\"},{\"@id\":\"http://schema.org/Event\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"The person or organization who wrote a composition, or who is the composer of a work performed at some event.\",\"rdfs:label\":\"composer\"},{\"@id\":\"http://schema.org/Answer\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_QAStackExchange\"},\"rdfs:comment\":\"An answer offered to a question; perhaps correct, perhaps opinionated or wrong.\",\"rdfs:label\":\"Answer\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Comment\"}},{\"@id\":\"http://schema.org/Brewery\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Brewery.\",\"rdfs:label\":\"Brewery\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FoodEstablishment\"}},{\"@id\":\"http://schema.org/AllocateAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of organizing tasks/objects/events by associating resources to it.\",\"rdfs:label\":\"AllocateAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/OrganizeAction\"}},{\"@id\":\"http://schema.org/includedDataCatalog\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Dataset\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DataCatalog\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/includedInDataCatalog\"},\"rdfs:comment\":\"A data catalog which contains this dataset (this property was previously 'catalog', preferred name is now 'includedInDataCatalog').\",\"rdfs:label\":\"includedDataCatalog\"},{\"@id\":\"http://schema.org/countriesNotSupported\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.\",\"rdfs:label\":\"countriesNotSupported\"},{\"@id\":\"http://schema.org/Thursday\",\"@type\":\"http://schema.org/DayOfWeek\",\"http://schema.org/sameAs\":{\"@id\":\"http://www.wikidata.org/entity/Q129\"},\"rdfs:comment\":\"The day of the week between Wednesday and Friday.\",\"rdfs:label\":\"Thursday\"},{\"@id\":\"http://schema.org/ParentAudience\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A set of characteristics describing parents, who can be interested in viewing some content.\",\"rdfs:label\":\"ParentAudience\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/PeopleAudience\"}},{\"@id\":\"http://schema.org/Hardcover\",\"@type\":\"http://schema.org/BookFormatType\",\"rdfs:comment\":\"Book format: Hardcover.\",\"rdfs:label\":\"Hardcover\"},{\"@id\":\"http://schema.org/RadioChannel\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A unique instance of a radio BroadcastService on a CableOrSatelliteService lineup.\",\"rdfs:label\":\"RadioChannel\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/BroadcastChannel\"}},{\"@id\":\"http://schema.org/hasCourseInstance\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Course\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/CourseInstance\"},\"rdfs:comment\":\"An offering of the course at a specific time and place or through specific media or mode of study or to a specific section of students.\",\"rdfs:label\":\"hasCourseInstance\"},{\"@id\":\"http://schema.org/Room\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"rdfs:comment\":\"A room is a distinguishable space within a structure, usually separated from other spaces by interior walls. (Source: Wikipedia, the free encyclopedia, see <a href=\\\"http://en.wikipedia.org/wiki/Room\\\">http://en.wikipedia.org/wiki/Room</a>).\\n<br /><br />\\nSee also the <a href=\\\"/docs/hotels.html\\\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\",\"rdfs:label\":\"Room\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Accommodation\"}},{\"@id\":\"http://schema.org/PublicSwimmingPool\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A public swimming pool.\",\"rdfs:label\":\"PublicSwimmingPool\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/SportsActivityLocation\"}},{\"@id\":\"http://schema.org/operatingSystem\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Operating systems supported (Windows 7, OSX 10.6, Android 1.6).\",\"rdfs:label\":\"operatingSystem\"},{\"@id\":\"http://schema.org/suggestedAnswer\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Question\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Answer\"},\"rdfs:comment\":\"An answer (possibly one of several, possibly incorrect) to a Question, e.g. on a Question/Answer site.\",\"rdfs:label\":\"suggestedAnswer\"},{\"@id\":\"http://schema.org/JobPosting\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A listing that describes a job opening in a certain organization.\",\"rdfs:label\":\"JobPosting\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/ComputerLanguage\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"This type covers computer programming languages such as Scheme and Lisp, as well as other language-like computer representations. Natural languages are best represented with the <a class=\\\"localLink\\\" href=\\\"http://schema.org/Language\\\">Language</a> type.\",\"rdfs:label\":\"ComputerLanguage\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/reservedTicket\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Reservation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Ticket\"},\"rdfs:comment\":\"A ticket associated with the reservation.\",\"rdfs:label\":\"reservedTicket\"},{\"@id\":\"http://schema.org/serverStatus\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/GameServer\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/GameServerStatus\"},\"rdfs:comment\":\"Status of a game server.\",\"rdfs:label\":\"serverStatus\"},{\"@id\":\"http://schema.org/lender\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/BorrowAction\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"rdfs:comment\":\"A sub property of participant. The person that lends the object being borrowed.\",\"rdfs:label\":\"lender\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/participant\"}},{\"@id\":\"http://schema.org/Date\",\"@type\":[\"http://schema.org/DataType\",\"rdfs:Class\"],\"rdfs:comment\":\"A date value in <a href=\\\"http://en.wikipedia.org/wiki/ISO_8601\\\">ISO 8601 date format</a>.\",\"rdfs:label\":\"Date\"},{\"@id\":\"http://schema.org/mapType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Map\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MapCategoryType\"},\"rdfs:comment\":\"Indicates the kind of Map, from the MapCategoryType Enumeration.\",\"rdfs:label\":\"mapType\"},{\"@id\":\"http://schema.org/MusicReleaseFormatType\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.).\",\"rdfs:label\":\"MusicReleaseFormatType\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/faxNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Place\"},{\"@id\":\"http://schema.org/ContactPoint\"},{\"@id\":\"http://schema.org/Organization\"},{\"@id\":\"http://schema.org/Person\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The fax number.\",\"rdfs:label\":\"faxNumber\"},{\"@id\":\"http://schema.org/Conversation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"One or more messages between organizations or people on a particular topic. Individual messages can be linked to the conversation with isPartOf or hasPart properties.\",\"rdfs:label\":\"Conversation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/MediaObject\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A media object, such as an image, video, or audio object embedded in a web page or a downloadable dataset i.e. DataDownload. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).\",\"rdfs:label\":\"MediaObject\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/datePublished\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Date\"},\"rdfs:comment\":\"Date of first broadcast/publication.\",\"rdfs:label\":\"datePublished\"},{\"@id\":\"http://schema.org/Cemetery\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A graveyard.\",\"rdfs:label\":\"Cemetery\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/AccountingService\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Accountancy business.</p>\\n\\n<p>As a <a class=\\\"localLink\\\" href=\\\"http://schema.org/LocalBusiness\\\">LocalBusiness</a> it can be described as a <a class=\\\"localLink\\\" href=\\\"http://schema.org/provider\\\">provider</a> of one or more <a class=\\\"localLink\\\" href=\\\"http://schema.org/Service\\\">Service</a>(s).\",\"rdfs:label\":\"AccountingService\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/FinancialService\"}},{\"@id\":\"http://schema.org/CheckInAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of an agent communicating (service provider, social media, etc) their arrival by registering/confirming for a previously reserved service (e.g. flight check in) or at a place (e.g. hotel), possibly resulting in a result (boarding pass, etc).</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/CheckOutAction\\\">CheckOutAction</a>: The antonym of CheckInAction.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/ArriveAction\\\">ArriveAction</a>: Unlike ArriveAction, CheckInAction implies that the agent is informing/confirming the start of a previously reserved service.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/ConfirmAction\\\">ConfirmAction</a>: Unlike ConfirmAction, CheckInAction implies that the agent is informing/confirming the <em>start</em> of a previously reserved service rather than its validity/existence.</li>\\n</ul>\\n\",\"rdfs:label\":\"CheckInAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CommunicateAction\"}},{\"@id\":\"http://schema.org/priceType\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/UnitPriceSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A short text or acronym indicating multiple price specifications for the same offer, e.g. SRP for the suggested retail price or INVOICE for the invoice price, mostly used in the car industry.\",\"rdfs:label\":\"priceType\"},{\"@id\":\"http://schema.org/distribution\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Dataset\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DataDownload\"},\"rdfs:comment\":\"A downloadable form of this dataset, at a specific location, in a specific format.\",\"rdfs:label\":\"distribution\"},{\"@id\":\"http://schema.org/isAccessibleForFree\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Event\"},{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/PublicationEvent\"},{\"@id\":\"http://schema.org/Place\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Boolean\"},\"rdfs:comment\":\"A flag to signal that the item, event, or place is accessible for free.\",\"rdfs:label\":\"isAccessibleForFree\"},{\"@id\":\"http://schema.org/BusinessAudience\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A set of characteristics belonging to businesses, e.g. who compose an item's target audience.\",\"rdfs:label\":\"BusinessAudience\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Audience\"}},{\"@id\":\"http://schema.org/LodgingBusiness\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A lodging business, such as a motel, hotel, or inn.\",\"rdfs:label\":\"LodgingBusiness\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/House\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"rdfs:comment\":\"A house is a building or structure that has the ability to be occupied for habitation by humans or other creatures (Source: Wikipedia, the free encyclopedia, see <a href=\\\"http://en.wikipedia.org/wiki/House\\\">http://en.wikipedia.org/wiki/House</a>).\",\"rdfs:label\":\"House\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Accommodation\"}},{\"@id\":\"http://schema.org/Airport\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An airport.\",\"rdfs:label\":\"Airport\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/SinglePlayer\",\"@type\":\"http://schema.org/GamePlayMode\",\"rdfs:comment\":\"Play mode: SinglePlayer. Which is played by a lone player.\",\"rdfs:label\":\"SinglePlayer\"},{\"@id\":\"http://schema.org/seasonNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWorkSeason\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Integer\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"Position of the season within an ordered group of seasons.\",\"rdfs:label\":\"seasonNumber\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/position\"}},{\"@id\":\"http://schema.org/orderItemNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/OrderItem\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The identifier of the order item.\",\"rdfs:label\":\"orderItemNumber\"},{\"@id\":\"http://schema.org/EventStatusType\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"EventStatusType is an enumeration type whose instances represent several states that an Event may be in.\",\"rdfs:label\":\"EventStatusType\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/Ticket\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Used to describe a ticket to an event, a flight, a bus ride, etc.\",\"rdfs:label\":\"Ticket\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/CreativeWorkSeason\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A media season e.g. tv, radio, video game etc.\",\"rdfs:label\":\"CreativeWorkSeason\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWork\"}},{\"@id\":\"http://schema.org/Reservation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Describes a reservation for travel, dining or an event. Some reservations require tickets. </p>\\n\\n<p>Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, restaurant reservations, flights, or rental cars, use <a class=\\\"localLink\\\" href=\\\"http://schema.org/Offer\\\">Offer</a>.\",\"rdfs:label\":\"Reservation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/pageStart\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/PublicationIssue\"},{\"@id\":\"http://schema.org/PublicationVolume\"},{\"@id\":\"http://schema.org/Article\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Integer\"}],\"http://www.w3.org/2002/07/owl#equivalentProperty\":{\"@id\":\"http://purl.org/ontology/bibo/pageStart\"},\"rdfs:comment\":\"The page on which the work starts; for example \\\"135\\\" or \\\"xiii\\\".\",\"rdfs:label\":\"pageStart\"},{\"@id\":\"http://schema.org/clipNumber\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Clip\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Integer\"}],\"rdfs:comment\":\"Position of the clip within an ordered group of clips.\",\"rdfs:label\":\"clipNumber\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/position\"}},{\"@id\":\"http://schema.org/processingTime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/ServiceChannel\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Duration\"},\"rdfs:comment\":\"Estimated processing time for the service using this channel.\",\"rdfs:label\":\"processingTime\"},{\"@id\":\"http://schema.org/FindAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of finding an object.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/SearchAction\\\">SearchAction</a>: FindAction is generally lead by a SearchAction, but not necessarily.</li>\\n</ul>\\n\",\"rdfs:label\":\"FindAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Action\"}},{\"@id\":\"http://schema.org/RecyclingCenter\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A recycling center.\",\"rdfs:label\":\"RecyclingCenter\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/coach\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SportsTeam\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"A person that acts in a coaching role for a sports team.\",\"rdfs:label\":\"coach\"},{\"@id\":\"http://schema.org/Hospital\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A hospital.\",\"rdfs:label\":\"Hospital\",\"rdfs:subClassOf\":[{\"@id\":\"http://schema.org/MedicalOrganization\"},{\"@id\":\"http://schema.org/EmergencyService\"},{\"@id\":\"http://schema.org/CivicStructure\"}]},{\"@id\":\"http://schema.org/Festival\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Event type: Festival.\",\"rdfs:label\":\"Festival\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/LockerDelivery\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A DeliveryMethod in which an item is made available via locker.\",\"rdfs:label\":\"LockerDelivery\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/DeliveryMethod\"}},{\"@id\":\"http://schema.org/ClothingStore\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A clothing store.\",\"rdfs:label\":\"ClothingStore\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Store\"}},{\"@id\":\"http://schema.org/yield\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/HowTo\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/QuantitativeValue\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"The quantity that results by performing instructions. For example, a paper airplane, 10 personalized candles.\",\"rdfs:label\":\"yield\"},{\"@id\":\"http://schema.org/paymentDueDate\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Invoice\"},{\"@id\":\"http://schema.org/Order\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DateTime\"},\"rdfs:comment\":\"The date that payment is due.\",\"rdfs:label\":\"paymentDueDate\"},{\"@id\":\"http://schema.org/BookmarkAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An agent bookmarks/flags/labels/tags/marks an object.\",\"rdfs:label\":\"BookmarkAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/OrganizeAction\"}},{\"@id\":\"http://schema.org/fileSize\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed.\",\"rdfs:label\":\"fileSize\"},{\"@id\":\"http://schema.org/RadioSeason\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Season dedicated to radio broadcast and associated online delivery.\",\"rdfs:label\":\"RadioSeason\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CreativeWorkSeason\"}},{\"@id\":\"http://schema.org/containedIn\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Place\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/containedInPlace\"},\"rdfs:comment\":\"The basic containment relation between a place and one that contains it.\",\"rdfs:label\":\"containedIn\"},{\"@id\":\"http://schema.org/MixtapeAlbum\",\"@type\":\"http://schema.org/MusicAlbumProductionType\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"rdfs:comment\":\"MixtapeAlbum.\",\"rdfs:label\":\"MixtapeAlbum\"},{\"@id\":\"http://schema.org/dateline\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/NewsArticle\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"A <a href=\\\"https://en.wikipedia.org/wiki/Dateline\\\">dateline</a> is a brief piece of text included in news articles that describes where and when the story was written or filed though the date is often omitted. Sometimes only a placename is provided.\",\"rdfs:label\":\"dateline\"},{\"@id\":\"http://schema.org/headline\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Headline of the article.\",\"rdfs:label\":\"headline\"},{\"@id\":\"http://schema.org/hasMenuSection\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Menu\"},{\"@id\":\"http://schema.org/MenuSection\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MenuSection\"},\"rdfs:comment\":\"A subgrouping of the menu (by dishes, course, serving time period, etc.).\",\"rdfs:label\":\"hasMenuSection\"},{\"@id\":\"http://schema.org/UpdateAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of managing by changing/editing the state of the object.\",\"rdfs:label\":\"UpdateAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Action\"}},{\"@id\":\"http://schema.org/AggregateRating\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The average rating based on multiple ratings or reviews.\",\"rdfs:label\":\"AggregateRating\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Rating\"}},{\"@id\":\"http://schema.org/relatedTo\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"The most generic familial relation.\",\"rdfs:label\":\"relatedTo\"},{\"@id\":\"http://schema.org/competitor\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SportsEvent\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/SportsTeam\"}],\"rdfs:comment\":\"A competitor in a sports event.\",\"rdfs:label\":\"competitor\"},{\"@id\":\"http://schema.org/runtime\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareSourceCode\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/runtimePlatform\"},\"rdfs:comment\":\"Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0).\",\"rdfs:label\":\"runtime\"},{\"@id\":\"http://schema.org/alternateName\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"An alias for the item.\",\"rdfs:label\":\"alternateName\"},{\"@id\":\"http://schema.org/EmailMessage\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"An email message.\",\"rdfs:label\":\"EmailMessage\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Message\"}},{\"@id\":\"http://schema.org/follows\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"The most generic uni-directional social relation.\",\"rdfs:label\":\"follows\"},{\"@id\":\"http://schema.org/Paperback\",\"@type\":\"http://schema.org/BookFormatType\",\"rdfs:comment\":\"Book format: Paperback.\",\"rdfs:label\":\"Paperback\"},{\"@id\":\"http://schema.org/industry\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/JobPosting\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The industry associated with the job position.\",\"rdfs:label\":\"industry\"},{\"@id\":\"http://schema.org/BusStation\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A bus station.\",\"rdfs:label\":\"BusStation\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CivicStructure\"}},{\"@id\":\"http://schema.org/borrower\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/LendAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"A sub property of participant. The person that borrows the object being lent.\",\"rdfs:label\":\"borrower\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/participant\"}},{\"@id\":\"http://schema.org/ingredients\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Recipe\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"http://schema.org/supersededBy\":{\"@id\":\"http://schema.org/recipeIngredient\"},\"rdfs:comment\":\"A single ingredient used in the recipe, e.g. sugar, flour or garlic.\",\"rdfs:label\":\"ingredients\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/supply\"}},{\"@id\":\"http://schema.org/dayOfWeek\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/OpeningHoursSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/DayOfWeek\"},\"rdfs:comment\":\"The day of the week for which these opening hours are valid.\",\"rdfs:label\":\"dayOfWeek\"},{\"@id\":\"http://schema.org/driveWheelConfiguration\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Vehicle\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/DriveWheelConfigurationValue\"}],\"rdfs:comment\":\"The drive wheel configuration, i.e. which roadwheels will receive torque from the vehicle's engine via the drivetrain.\",\"rdfs:label\":\"driveWheelConfiguration\"},{\"@id\":\"http://schema.org/BowlingAlley\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A bowling alley.\",\"rdfs:label\":\"BowlingAlley\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/SportsActivityLocation\"}},{\"@id\":\"http://schema.org/eligibleRegion\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Offer\"},{\"@id\":\"http://schema.org/Demand\"},{\"@id\":\"http://schema.org/DeliveryChargeSpecification\"}],\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/GeoShape\"},{\"@id\":\"http://schema.org/Text\"},{\"@id\":\"http://schema.org/Place\"}],\"rdfs:comment\":\"The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.</p>\\n\\n<p>See also <a class=\\\"localLink\\\" href=\\\"http://schema.org/ineligibleRegion\\\">ineligibleRegion</a>.\",\"rdfs:label\":\"eligibleRegion\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/areaServed\"}},{\"@id\":\"http://schema.org/ItemListOrderAscending\",\"@type\":\"http://schema.org/ItemListOrderType\",\"rdfs:comment\":\"An ItemList ordered with lower values listed first.\",\"rdfs:label\":\"ItemListOrderAscending\"},{\"@id\":\"http://schema.org/ImageGallery\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Web page type: Image gallery page.\",\"rdfs:label\":\"ImageGallery\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/CollectionPage\"}},{\"@id\":\"http://schema.org/downvoteCount\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/Question\"},{\"@id\":\"http://schema.org/Comment\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Integer\"},\"rdfs:comment\":\"The number of downvotes this question, answer or comment has received from the community.\",\"rdfs:label\":\"downvoteCount\"},{\"@id\":\"http://schema.org/valueRequired\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/PropertyValueSpecification\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Boolean\"},\"rdfs:comment\":\"Whether the property must be filled in to complete the action.  Default is false.\",\"rdfs:label\":\"valueRequired\"},{\"@id\":\"http://schema.org/candidate\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/VoteAction\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"A sub property of object. The candidate subject of this action.\",\"rdfs:label\":\"candidate\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/object\"}},{\"@id\":\"http://schema.org/Offer\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"rdfs:comment\":\"An offer to transfer some rights to an item or to provide a service — for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.</p>\\n\\n<p>For <a href=\\\"http://www.gs1.org/barcodes/technical/idkeys/gtin\\\">GTIN</a>-related fields, see <a href=\\\"http://www.gs1.org/barcodes/support/check_digit_calculator\\\">Check Digit calculator</a> and <a href=\\\"http://www.gs1us.org/resources/standards/gtin-validation-guide\\\">validation guide</a> from <a href=\\\"http://www.gs1.org/\\\">GS1</a>.\",\"rdfs:label\":\"Offer\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Intangible\"}},{\"@id\":\"http://schema.org/DataDownload\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_DatasetClass\"},\"http://www.w3.org/2002/07/owl#equivalentClass\":{\"@id\":\"http://www.w3.org/ns/dcat#Distribution\"},\"rdfs:comment\":\"A dataset in downloadable form.\",\"rdfs:label\":\"DataDownload\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/MediaObject\"}},{\"@id\":\"http://schema.org/Product\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms\"},\"rdfs:comment\":\"Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.\",\"rdfs:label\":\"Product\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Thing\"}},{\"@id\":\"http://schema.org/accessCode\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/DeliveryEvent\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Password, PIN, or access code needed for delivery (e.g. from a locker).\",\"rdfs:label\":\"accessCode\"},{\"@id\":\"http://schema.org/CampingPitch\",\"@type\":\"rdfs:Class\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"rdfs:comment\":\"A camping pitch is an individual place for overnight stay in the outdoors, typically being part of a larger camping site.\\n<br /><br />\\nSee also the <a href=\\\"/docs/hotels.html\\\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\",\"rdfs:label\":\"CampingPitch\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Accommodation\"}},{\"@id\":\"http://schema.org/CivicStructure\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A public structure, such as a town hall or concert hall.\",\"rdfs:label\":\"CivicStructure\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Place\"}},{\"@id\":\"http://schema.org/homeTeam\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SportsEvent\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/SportsTeam\"},{\"@id\":\"http://schema.org/Person\"}],\"rdfs:comment\":\"The home team in a sports event.\",\"rdfs:label\":\"homeTeam\",\"rdfs:subPropertyOf\":{\"@id\":\"http://schema.org/competitor\"}},{\"@id\":\"http://schema.org/GeoCoordinates\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The geographic coordinates of a place or event.\",\"rdfs:label\":\"GeoCoordinates\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/StructuredValue\"}},{\"@id\":\"http://schema.org/performer\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Event\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/Person\"},{\"@id\":\"http://schema.org/Organization\"}],\"rdfs:comment\":\"A performer at the event&#x2014;for example, a presenter, musician, musical group or actor.\",\"rdfs:label\":\"performer\"},{\"@id\":\"http://schema.org/MiddleSchool\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A middle school (typically for children aged around 11-14, although this varies somewhat).\",\"rdfs:label\":\"MiddleSchool\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/EducationalOrganization\"}},{\"@id\":\"http://schema.org/AutomotiveBusiness\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Car repair, sales, or parts.\",\"rdfs:label\":\"AutomotiveBusiness\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/LocalBusiness\"}},{\"@id\":\"http://schema.org/permittedUsage\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Accommodation\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Indications regarding the permitted usage of the accommodation.\",\"rdfs:label\":\"permittedUsage\"},{\"@id\":\"http://schema.org/item\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":[{\"@id\":\"http://schema.org/DataFeedItem\"},{\"@id\":\"http://schema.org/ListItem\"}],\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Thing\"},\"rdfs:comment\":\"An entity represented by an entry in a list or data feed (e.g. an 'artist' in a list of 'artists')’.\",\"rdfs:label\":\"item\"},{\"@id\":\"http://schema.org/LiteraryEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Event type: Literary event.\",\"rdfs:label\":\"LiteraryEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/Pond\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"A pond.\",\"rdfs:label\":\"Pond\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/BodyOfWater\"}},{\"@id\":\"http://schema.org/discountCode\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Order\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"Code used to redeem a discount.\",\"rdfs:label\":\"discountCode\"},{\"@id\":\"http://schema.org/SocialEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Event type: Social event.\",\"rdfs:label\":\"SocialEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/knows\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Person\"},\"rdfs:comment\":\"The most generic bi-directional social/work relation.\",\"rdfs:label\":\"knows\"},{\"@id\":\"http://schema.org/contentType\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/EntryPoint\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The supported content type(s) for an EntryPoint response.\",\"rdfs:label\":\"contentType\"},{\"@id\":\"http://schema.org/EatAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"The act of swallowing solid objects.\",\"rdfs:label\":\"EatAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/ConsumeAction\"}},{\"@id\":\"http://schema.org/ReservationHold\",\"@type\":\"http://schema.org/ReservationStatusType\",\"rdfs:comment\":\"The status of a reservation on hold pending an update like credit card number or flight changes.\",\"rdfs:label\":\"ReservationHold\"},{\"@id\":\"http://schema.org/specialty\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/WebPage\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Specialty\"},\"rdfs:comment\":\"One of the domain specialities to which this web page's content applies.\",\"rdfs:label\":\"specialty\"},{\"@id\":\"http://schema.org/TheaterEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Event type: Theater performance.\",\"rdfs:label\":\"TheaterEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/TakeAction\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"<p>The act of gaining ownership of an object from an origin. Reciprocal of GiveAction.</p>\\n\\n<p>Related actions:</p>\\n\\n<ul>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/GiveAction\\\">GiveAction</a>: The reciprocal of TakeAction.</li>\\n<li><a class=\\\"localLink\\\" href=\\\"http://schema.org/ReceiveAction\\\">ReceiveAction</a>: Unlike ReceiveAction, TakeAction implies that ownership has been transfered.</li>\\n</ul>\\n\",\"rdfs:label\":\"TakeAction\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/TransferAction\"}},{\"@id\":\"http://schema.org/album\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicGroup\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/MusicAlbum\"},\"rdfs:comment\":\"A music album.\",\"rdfs:label\":\"album\"},{\"@id\":\"http://schema.org/replyToUrl\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/UserComments\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"rdfs:comment\":\"The URL at which a reply may be posted to the specified UserComment.\",\"rdfs:label\":\"replyToUrl\"},{\"@id\":\"http://schema.org/worksFor\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/Person\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Organization\"},\"rdfs:comment\":\"Organizations that the person works for.\",\"rdfs:label\":\"worksFor\"},{\"@id\":\"http://schema.org/musicalKey\",\"@type\":\"rdf:Property\",\"http://purl.org/dc/terms/source\":{\"@id\":\"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ\"},\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/MusicComposition\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/Text\"},\"rdfs:comment\":\"The key, mode, or scale this composition uses.\",\"rdfs:label\":\"musicalKey\"},{\"@id\":\"http://schema.org/SportsEvent\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Event type: Sports event.\",\"rdfs:label\":\"SportsEvent\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Event\"}},{\"@id\":\"http://schema.org/GamePlayMode\",\"@type\":\"rdfs:Class\",\"rdfs:comment\":\"Indicates whether this game is multi-player, co-op or single-player.\",\"rdfs:label\":\"GamePlayMode\",\"rdfs:subClassOf\":{\"@id\":\"http://schema.org/Enumeration\"}},{\"@id\":\"http://schema.org/installUrl\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/SoftwareApplication\"},\"http://schema.org/rangeIncludes\":{\"@id\":\"http://schema.org/URL\"},\"rdfs:comment\":\"URL at which the app may be installed, if different from the URL of the item.\",\"rdfs:label\":\"installUrl\"},{\"@id\":\"http://schema.org/citation\",\"@type\":\"rdf:Property\",\"http://schema.org/domainIncludes\":{\"@id\":\"http://schema.org/CreativeWork\"},\"http://schema.org/rangeIncludes\":[{\"@id\":\"http://schema.org/CreativeWork\"},{\"@id\":\"http://schema.org/Text\"}],\"rdfs:comment\":\"A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.\",\"rdfs:label\":\"citation\"}],\"@id\":\"http://schema.org/#3.3\"};\n\n//# sourceURL=webpack:///./src/schema/schema.json?");

/***/ }),

/***/ 0:
/*!*************************************!*\
  !*** rdf-canonize-native (ignored) ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///rdf-canonize-native_(ignored)?");

/***/ }),

/***/ 1:
/*!************************!*\
  !*** xmldom (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///xmldom_(ignored)?");

/***/ }),

/***/ 2:
/*!*************************!*\
  !*** request (ignored) ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///request_(ignored)?");

/***/ }),

/***/ 3:
/*!**********************!*\
  !*** http (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///http_(ignored)?");

/***/ })

/******/ });